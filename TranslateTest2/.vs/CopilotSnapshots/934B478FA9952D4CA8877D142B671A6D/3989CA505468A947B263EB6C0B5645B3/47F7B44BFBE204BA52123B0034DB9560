using System;
using System.Collections.Generic;
using Terraria;
using Terraria.ID;
using Terraria.Localization;
using Terraria.ModLoader;

namespace TranslateTest2.Prefixes
{
    public class Vengeful : ModPrefix
    {
        public static float ExtraTagDamage = 0.03f;

        // Fix Vengeful Category to match original SummonerPrefix - should be PrefixCategory.Magic (3) not Melee
        public override PrefixCategory Category => PrefixCategory.Melee;

        public override float RollChance(Item item) => 1f;

        public override bool CanRoll(Item item) => item.shoot > ProjectileID.None && ProjectileID.Sets.IsAWhip[item.shoot];

        public override void SetStats(
            ref float damageMult,
            ref float knockbackMult,
            ref float useTimeMult,
            ref float scaleMult,
            ref float shootSpeedMult,
            ref float manaMult,
            ref int critBonus)
        {
        }

        public override void ModifyValue(ref float valueMult) => valueMult *= 1.2f;

        public override void Apply(Item item)
        {
            int num = (int)Math.Ceiling(item.damage * ExtraTagDamage);
            if (num <= 0)
                return;
            item.global().CanGiveTag = true;
            if (item.global().wTag == null)
                item.global().wTag = new WhipTag("vengeful", 0);
            item.global().wTag.TagDamage += num;
        }

        public override IEnumerable<TooltipLine> GetTooltipLines(Item item)
        {
            // AdditionalTooltipシステムを使用してローカリゼーション対応
            string tooltipText;
            var key = $"Mods.TranslateTest2.Prefix{Name}Descr";
            
            try
            {
                tooltipText = Language.GetTextValue(key);
                TranslateTest2.Instance?.Logger?.Debug($"Vengeful Direct Key: {key} -> \"{tooltipText}\"");
                
                if (string.IsNullOrEmpty(tooltipText) || tooltipText == key)
                {
                    tooltipText = AdditionalTooltip.Value;
                    TranslateTest2.Instance?.Logger?.Debug($"Vengeful Using fallback: \"{tooltipText}\"");
                }
            }
            catch (Exception ex)
            {
                tooltipText = AdditionalTooltip.Value;
                TranslateTest2.Instance?.Logger?.Debug($"Vengeful Exception fallback: {ex.Message}");
            }

            var tl = new TooltipLine(Mod, "PrefixDescription", tooltipText)
            {
                IsModifier = true,
                IsModifierBad = false
            };

            // プレースホルダー置換
            int tagDamage = (int)Math.Ceiling(item.damage * ExtraTagDamage);
            float percentOfWeapon = ExtraTagDamage * 100f;
            
            tl.Text = tl.Text.Replace("{A}", $"{tagDamage}")
                           .Replace("{B}", $"{percentOfWeapon:0}");

            yield return tl;
        }

        /// <summary>
        /// 元のSummonerPrefix方式: ローカリゼーションからツールチップテキストを取得
        /// </summary>
        public LocalizedText AdditionalTooltip
        {
            get
            {
                var key = Mod.GetLocalizationKey($"Prefix{Name}Descr");
                return Language.GetOrRegister(key, () => "Whip tag: +{A} damage ({B}% of weapon damage)");
            }
        }

        public override void SetStaticDefaults()
        {
            _ = AdditionalTooltip;
        }
    }
}