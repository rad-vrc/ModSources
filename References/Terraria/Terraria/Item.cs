using System;
using System.Collections.Generic;
using System.IO;
using Microsoft.Xna.Framework;
using Terraria.Audio;
using Terraria.DataStructures;
using Terraria.Enums;
using Terraria.GameContent;
using Terraria.GameContent.Achievements;
using Terraria.GameContent.Events;
using Terraria.GameContent.Items;
using Terraria.GameContent.Prefixes;
using Terraria.GameContent.UI;
using Terraria.Graphics.Shaders;
using Terraria.ID;
using Terraria.UI;
using Terraria.Utilities;

namespace Terraria
{
	// Token: 0x0200003C RID: 60
	public class Item : Entity
	{
		// Token: 0x170000C8 RID: 200
		// (get) Token: 0x060005EE RID: 1518 RVA: 0x0026292E File Offset: 0x00260B2E
		public string Name
		{
			get
			{
				return this._nameOverride ?? Lang.GetItemNameValue(this.type);
			}
		}

		// Token: 0x170000C9 RID: 201
		// (get) Token: 0x060005EF RID: 1519 RVA: 0x00262948 File Offset: 0x00260B48
		public string HoverName
		{
			get
			{
				string text = this.AffixName();
				if (this.stack > 1)
				{
					text = string.Concat(new object[]
					{
						text,
						" (",
						this.stack,
						")"
					});
				}
				return text;
			}
		}

		// Token: 0x060005F0 RID: 1520 RVA: 0x00262994 File Offset: 0x00260B94
		public static void StartCachingType(int t)
		{
			if (Item.cachedItemSpawnsByType[t] == -1)
			{
				Item.cachedItemSpawnsByType[t] = 0;
			}
		}

		// Token: 0x060005F1 RID: 1521 RVA: 0x002629A8 File Offset: 0x00260BA8
		public static void DropCache(IEntitySource reason, Vector2 pos, Vector2 spread, int t, bool stopCaching = true)
		{
			if (Item.cachedItemSpawnsByType[t] == -1)
			{
				return;
			}
			int i = Item.cachedItemSpawnsByType[t];
			Item.cachedItemSpawnsByType[t] = (stopCaching ? -1 : 0);
			Item item = new Item();
			item.SetDefaults(t);
			while (i > 0)
			{
				int num = item.maxStack;
				if (i < num)
				{
					num = i;
				}
				Item.NewItem(reason, (int)pos.X, (int)pos.Y, (int)spread.X, (int)spread.Y, t, num, false, 0, false, false);
				i -= num;
			}
		}

		// Token: 0x060005F2 RID: 1522 RVA: 0x0006A9F2 File Offset: 0x00068BF2
		public IEntitySource GetNPCSource_FromThis()
		{
			return new EntitySource_Parent(this);
		}

		// Token: 0x060005F3 RID: 1523 RVA: 0x0024FD76 File Offset: 0x0024DF76
		public IEntitySource GetItemSource_Misc(int itemSourceId)
		{
			return new EntitySource_ByItemSourceId(this, itemSourceId);
		}

		// Token: 0x170000CA RID: 202
		// (get) Token: 0x060005F4 RID: 1524 RVA: 0x00262A24 File Offset: 0x00260C24
		public bool PaintOrCoating
		{
			get
			{
				return this.paint > 0 || this.paintCoating > 0;
			}
		}

		// Token: 0x170000CB RID: 203
		// (get) Token: 0x060005F5 RID: 1525 RVA: 0x0003266D File Offset: 0x0003086D
		public bool FitsAccessoryVanitySlot
		{
			get
			{
				return true;
			}
		}

		// Token: 0x170000CC RID: 204
		// (get) Token: 0x060005F6 RID: 1526 RVA: 0x00262A3A File Offset: 0x00260C3A
		public int OriginalRarity
		{
			get
			{
				return ContentSamples.ItemsByType[this.type].rare;
			}
		}

		// Token: 0x170000CD RID: 205
		// (get) Token: 0x060005F7 RID: 1527 RVA: 0x00262A51 File Offset: 0x00260C51
		public int OriginalDamage
		{
			get
			{
				return ContentSamples.ItemsByType[this.type].damage;
			}
		}

		// Token: 0x170000CE RID: 206
		// (get) Token: 0x060005F8 RID: 1528 RVA: 0x00262A68 File Offset: 0x00260C68
		public int OriginalDefense
		{
			get
			{
				return ContentSamples.ItemsByType[this.type].defense;
			}
		}

		// Token: 0x170000CF RID: 207
		// (get) Token: 0x060005F9 RID: 1529 RVA: 0x00262A7F File Offset: 0x00260C7F
		// (set) Token: 0x060005FA RID: 1530 RVA: 0x00262A87 File Offset: 0x00260C87
		public ItemVariant Variant { get; private set; }

		// Token: 0x060005FB RID: 1531 RVA: 0x00262A90 File Offset: 0x00260C90
		public override string ToString()
		{
			return string.Format("{{Name: \"{0}\" NetID: {1} Stack: {2}", this.Name, this.netID, this.stack);
		}

		// Token: 0x060005FC RID: 1532 RVA: 0x00262AB8 File Offset: 0x00260CB8
		private bool CanHavePrefixes()
		{
			return this.type != 0 && this.maxStack == 1 && (this.damage > 0 || this.accessory);
		}

		// Token: 0x060005FD RID: 1533 RVA: 0x00262AE0 File Offset: 0x00260CE0
		public bool Prefix(int prefixWeWant)
		{
			if (!WorldGen.gen && Main.rand == null)
			{
				Main.rand = new UnifiedRandom();
			}
			if (prefixWeWant == 0)
			{
				return false;
			}
			if (!this.CanHavePrefixes())
			{
				return false;
			}
			UnifiedRandom unifiedRandom = WorldGen.gen ? WorldGen.genRand : Main.rand;
			int num = prefixWeWant;
			float num2 = 1f;
			float num3 = 1f;
			float num4 = 1f;
			float num5 = 1f;
			float num6 = 1f;
			float num7 = 1f;
			int num8 = 0;
			bool flag = true;
			while (flag)
			{
				flag = false;
				if (num == -1 && unifiedRandom.Next(4) == 0)
				{
					num = 0;
				}
				if (prefixWeWant < -1)
				{
					num = -1;
				}
				if ((num == -1 || num == -2 || num == -3) && !this.RollAPrefix(unifiedRandom, ref num))
				{
					return false;
				}
				if (prefixWeWant == -3)
				{
					return true;
				}
				if (prefixWeWant == -1 && PrefixID.Sets.ReducedNaturalChance[num] && unifiedRandom.Next(3) != 0)
				{
					num = 0;
				}
				if (!this.TryGetPrefixStatMultipliersForItem(num, out num2, out num3, out num4, out num5, out num6, out num7, out num8))
				{
					flag = true;
					num = -1;
				}
				if (prefixWeWant == -2 && num == 0)
				{
					num = -1;
					flag = true;
				}
			}
			this.damage = (int)Math.Round((double)((float)this.damage * num2));
			this.useAnimation = (int)Math.Round((double)((float)this.useAnimation * num4));
			this.useTime = (int)Math.Round((double)((float)this.useTime * num4));
			this.reuseDelay = (int)Math.Round((double)((float)this.reuseDelay * num4));
			this.mana = (int)Math.Round((double)((float)this.mana * num7));
			this.knockBack *= num3;
			this.scale *= num5;
			this.shootSpeed *= num6;
			this.crit += num8;
			float num9 = 1f * num2 * (2f - num4) * (2f - num7) * num5 * num3 * num6 * (1f + (float)num8 * 0.02f);
			if (num == 62 || num == 69 || num == 73 || num == 77)
			{
				num9 *= 1.05f;
			}
			if (num == 63 || num == 70 || num == 74 || num == 78 || num == 67)
			{
				num9 *= 1.1f;
			}
			if (num == 64 || num == 71 || num == 75 || num == 79 || num == 66)
			{
				num9 *= 1.15f;
			}
			if (num == 65 || num == 72 || num == 76 || num == 80 || num == 68)
			{
				num9 *= 1.2f;
			}
			if ((double)num9 >= 1.2)
			{
				this.rare += 2;
			}
			else if ((double)num9 >= 1.05)
			{
				this.rare++;
			}
			else if ((double)num9 <= 0.8)
			{
				this.rare -= 2;
			}
			else if ((double)num9 <= 0.95)
			{
				this.rare--;
			}
			if (this.rare > -11)
			{
				if (this.rare < -1)
				{
					this.rare = -1;
				}
				if (this.rare > 11)
				{
					this.rare = 11;
				}
			}
			num9 *= num9;
			this.value = (int)((float)this.value * num9);
			this.prefix = (byte)num;
			return true;
		}

		// Token: 0x060005FE RID: 1534 RVA: 0x00262E08 File Offset: 0x00261008
		public bool CanRollPrefix(int prefix)
		{
			if (!this.CanHavePrefixes())
			{
				return false;
			}
			int[] rollablePrefixes = this.GetRollablePrefixes();
			if (rollablePrefixes == null)
			{
				return false;
			}
			for (int i = 0; i < rollablePrefixes.Length; i++)
			{
				if (rollablePrefixes[i] == prefix)
				{
					return true;
				}
			}
			return false;
		}

		// Token: 0x060005FF RID: 1535 RVA: 0x00262E44 File Offset: 0x00261044
		public bool CanApplyPrefix(int prefix)
		{
			if (!this.CanRollPrefix(prefix))
			{
				return false;
			}
			float num = 1f;
			float num2 = 1f;
			float num3 = 1f;
			float num4 = 1f;
			float num5 = 1f;
			float num6 = 1f;
			int num7 = 0;
			return this.TryGetPrefixStatMultipliersForItem(prefix, out num, out num2, out num3, out num4, out num5, out num6, out num7);
		}

		// Token: 0x06000600 RID: 1536 RVA: 0x00262E9C File Offset: 0x0026109C
		private bool TryGetPrefixStatMultipliersForItem(int rolledPrefix, out float dmg, out float kb, out float spd, out float size, out float shtspd, out float mcst, out int crt)
		{
			dmg = 1f;
			kb = 1f;
			spd = 1f;
			size = 1f;
			shtspd = 1f;
			mcst = 1f;
			crt = 0;
			if (rolledPrefix == 1)
			{
				size = 1.12f;
			}
			else if (rolledPrefix == 2)
			{
				size = 1.18f;
			}
			else if (rolledPrefix == 3)
			{
				dmg = 1.05f;
				crt = 2;
				size = 1.05f;
			}
			else if (rolledPrefix == 4)
			{
				dmg = 1.1f;
				size = 1.1f;
				kb = 1.1f;
			}
			else if (rolledPrefix == 5)
			{
				dmg = 1.15f;
			}
			else if (rolledPrefix == 6)
			{
				dmg = 1.1f;
			}
			else if (rolledPrefix == 81)
			{
				kb = 1.15f;
				dmg = 1.15f;
				crt = 5;
				spd = 0.9f;
				size = 1.1f;
			}
			else if (rolledPrefix == 7)
			{
				size = 0.82f;
			}
			else if (rolledPrefix == 8)
			{
				kb = 0.85f;
				dmg = 0.85f;
				size = 0.87f;
			}
			else if (rolledPrefix == 9)
			{
				size = 0.9f;
			}
			else if (rolledPrefix == 10)
			{
				dmg = 0.85f;
			}
			else if (rolledPrefix == 11)
			{
				spd = 1.1f;
				kb = 0.9f;
				size = 0.9f;
			}
			else if (rolledPrefix == 12)
			{
				kb = 1.1f;
				dmg = 1.05f;
				size = 1.1f;
				spd = 1.15f;
			}
			else if (rolledPrefix == 13)
			{
				kb = 0.8f;
				dmg = 0.9f;
				size = 1.1f;
			}
			else if (rolledPrefix == 14)
			{
				kb = 1.15f;
				spd = 1.1f;
			}
			else if (rolledPrefix == 15)
			{
				kb = 0.9f;
				spd = 0.85f;
			}
			else if (rolledPrefix == 16)
			{
				dmg = 1.1f;
				crt = 3;
			}
			else if (rolledPrefix == 17)
			{
				spd = 0.85f;
				shtspd = 1.1f;
			}
			else if (rolledPrefix == 18)
			{
				spd = 0.9f;
				shtspd = 1.15f;
			}
			else if (rolledPrefix == 19)
			{
				kb = 1.15f;
				shtspd = 1.05f;
			}
			else if (rolledPrefix == 20)
			{
				kb = 1.05f;
				shtspd = 1.05f;
				dmg = 1.1f;
				spd = 0.95f;
				crt = 2;
			}
			else if (rolledPrefix == 21)
			{
				kb = 1.15f;
				dmg = 1.1f;
			}
			else if (rolledPrefix == 82)
			{
				kb = 1.15f;
				dmg = 1.15f;
				crt = 5;
				spd = 0.9f;
				shtspd = 1.1f;
			}
			else if (rolledPrefix == 22)
			{
				kb = 0.9f;
				shtspd = 0.9f;
				dmg = 0.85f;
			}
			else if (rolledPrefix == 23)
			{
				spd = 1.15f;
				shtspd = 0.9f;
			}
			else if (rolledPrefix == 24)
			{
				spd = 1.1f;
				kb = 0.8f;
			}
			else if (rolledPrefix == 25)
			{
				spd = 1.1f;
				dmg = 1.15f;
				crt = 1;
			}
			else if (rolledPrefix == 58)
			{
				spd = 0.85f;
				dmg = 0.85f;
			}
			else if (rolledPrefix == 26)
			{
				mcst = 0.85f;
				dmg = 1.1f;
			}
			else if (rolledPrefix == 27)
			{
				mcst = 0.85f;
			}
			else if (rolledPrefix == 28)
			{
				mcst = 0.85f;
				dmg = 1.15f;
				kb = 1.05f;
			}
			else if (rolledPrefix == 83)
			{
				kb = 1.15f;
				dmg = 1.15f;
				crt = 5;
				spd = 0.9f;
				mcst = 0.9f;
			}
			else if (rolledPrefix == 29)
			{
				mcst = 1.1f;
			}
			else if (rolledPrefix == 30)
			{
				mcst = 1.2f;
				dmg = 0.9f;
			}
			else if (rolledPrefix == 31)
			{
				kb = 0.9f;
				dmg = 0.9f;
			}
			else if (rolledPrefix == 32)
			{
				mcst = 1.15f;
				dmg = 1.1f;
			}
			else if (rolledPrefix == 33)
			{
				mcst = 1.1f;
				kb = 1.1f;
				spd = 0.9f;
			}
			else if (rolledPrefix == 34)
			{
				mcst = 0.9f;
				kb = 1.1f;
				spd = 1.1f;
				dmg = 1.1f;
			}
			else if (rolledPrefix == 35)
			{
				mcst = 1.2f;
				dmg = 1.15f;
				kb = 1.15f;
			}
			else if (rolledPrefix == 52)
			{
				mcst = 0.9f;
				dmg = 0.9f;
				spd = 0.9f;
			}
			else if (rolledPrefix == 84)
			{
				kb = 1.17f;
				dmg = 1.17f;
				crt = 8;
			}
			else if (rolledPrefix == 36)
			{
				crt = 3;
			}
			else if (rolledPrefix == 37)
			{
				dmg = 1.1f;
				crt = 3;
				kb = 1.1f;
			}
			else if (rolledPrefix == 38)
			{
				kb = 1.15f;
			}
			else if (rolledPrefix == 53)
			{
				dmg = 1.1f;
			}
			else if (rolledPrefix == 54)
			{
				kb = 1.15f;
			}
			else if (rolledPrefix == 55)
			{
				kb = 1.15f;
				dmg = 1.05f;
			}
			else if (rolledPrefix == 59)
			{
				kb = 1.15f;
				dmg = 1.15f;
				crt = 5;
			}
			else if (rolledPrefix == 60)
			{
				dmg = 1.15f;
				crt = 5;
			}
			else if (rolledPrefix == 61)
			{
				crt = 5;
			}
			else if (rolledPrefix == 39)
			{
				dmg = 0.7f;
				kb = 0.8f;
			}
			else if (rolledPrefix == 40)
			{
				dmg = 0.85f;
			}
			else if (rolledPrefix == 56)
			{
				kb = 0.8f;
			}
			else if (rolledPrefix == 41)
			{
				kb = 0.85f;
				dmg = 0.9f;
			}
			else if (rolledPrefix == 57)
			{
				kb = 0.9f;
				dmg = 1.18f;
			}
			else if (rolledPrefix == 42)
			{
				spd = 0.9f;
			}
			else if (rolledPrefix == 43)
			{
				dmg = 1.1f;
				spd = 0.9f;
			}
			else if (rolledPrefix == 44)
			{
				spd = 0.9f;
				crt = 3;
			}
			else if (rolledPrefix == 45)
			{
				spd = 0.95f;
			}
			else if (rolledPrefix == 46)
			{
				crt = 3;
				spd = 0.94f;
				dmg = 1.07f;
			}
			else if (rolledPrefix == 47)
			{
				spd = 1.15f;
			}
			else if (rolledPrefix == 48)
			{
				spd = 1.2f;
			}
			else if (rolledPrefix == 49)
			{
				spd = 1.08f;
			}
			else if (rolledPrefix == 50)
			{
				dmg = 0.8f;
				spd = 1.15f;
			}
			else if (rolledPrefix == 51)
			{
				kb = 0.9f;
				spd = 0.9f;
				dmg = 1.05f;
				crt = 2;
			}
			return (dmg == 1f || Math.Round((double)((float)this.damage * dmg)) != (double)this.damage) && (spd == 1f || Math.Round((double)((float)this.useAnimation * spd)) != (double)this.useAnimation) && (mcst == 1f || Math.Round((double)((float)this.mana * mcst)) != (double)this.mana) && (kb == 1f || this.knockBack != 0f);
		}

		// Token: 0x06000601 RID: 1537 RVA: 0x002635BC File Offset: 0x002617BC
		public int[] GetRollablePrefixes()
		{
			int num = this.type;
			if (PrefixLegacy.ItemSets.SwordsHammersAxesPicks[this.type])
			{
				return PrefixLegacy.Prefixes.PrefixesForSwords;
			}
			if (PrefixLegacy.ItemSets.SpearsMacesChainsawsDrillsPunchCannon[this.type])
			{
				return PrefixLegacy.Prefixes.PrefixesForSpears;
			}
			if (PrefixLegacy.ItemSets.GunsBows[this.type])
			{
				return PrefixLegacy.Prefixes.PrefixesForGunsBows;
			}
			if (PrefixLegacy.ItemSets.MagicAndSummon[this.type])
			{
				return PrefixLegacy.Prefixes.PrefixesForMagicAndSummons;
			}
			if (PrefixLegacy.ItemSets.BoomerangsChakrams[this.type])
			{
				return PrefixLegacy.Prefixes.PrefixesForBoomeransAndChakrums;
			}
			if (PrefixLegacy.ItemSets.ItemsThatCanHaveLegendary2[this.type])
			{
				return PrefixLegacy.Prefixes.PrefixesForBoomeransAndChakrums_TerrarianYoyo;
			}
			if (this.IsAPrefixableAccessory())
			{
				return PrefixLegacy.Prefixes.PrefixesForAccessories;
			}
			return null;
		}

		// Token: 0x06000602 RID: 1538 RVA: 0x00263658 File Offset: 0x00261858
		private bool RollAPrefix(UnifiedRandom random, ref int rolledPrefix)
		{
			int[] rollablePrefixes = this.GetRollablePrefixes();
			if (rollablePrefixes == null)
			{
				return false;
			}
			rolledPrefix = rollablePrefixes[random.Next(rollablePrefixes.Length)];
			return true;
		}

		// Token: 0x06000603 RID: 1539 RVA: 0x0026367F File Offset: 0x0026187F
		public bool IsAPrefixableAccessory()
		{
			return this.accessory && !this.vanity && ItemID.Sets.CanGetPrefixes[this.type];
		}

		// Token: 0x06000604 RID: 1540 RVA: 0x002636A0 File Offset: 0x002618A0
		public string AffixName()
		{
			if (this.prefix < 0 || (int)this.prefix >= Lang.prefix.Length)
			{
				return this.Name;
			}
			string text = Lang.prefix[(int)this.prefix].Value;
			if (text == "")
			{
				return this.Name;
			}
			if (text.StartsWith("("))
			{
				return this.Name + " " + text;
			}
			return text + " " + this.Name;
		}

		// Token: 0x06000605 RID: 1541 RVA: 0x00263722 File Offset: 0x00261922
		public void RebuildTooltip()
		{
			if (this.type < 0)
			{
				return;
			}
			this.ToolTip = Lang.GetTooltip(this.netID);
		}

		// Token: 0x06000606 RID: 1542 RVA: 0x0000EF06 File Offset: 0x0000D106
		public Rectangle getRect()
		{
			return new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
		}

		// Token: 0x06000607 RID: 1543 RVA: 0x00263740 File Offset: 0x00261940
		public bool checkMat()
		{
			if (this.type >= 71 && this.type <= 74)
			{
				this.material = false;
				return false;
			}
			int num = this.type;
			if (num <= 4076)
			{
				if (num <= 853)
				{
					if (num <= 529)
					{
						if (num != 408 && num != 529)
						{
							goto IL_134;
						}
					}
					else if (num - 541 > 2 && num - 852 > 1)
					{
						goto IL_134;
					}
				}
				else if (num <= 3272)
				{
					if (num != 1151 && num != 3272)
					{
						goto IL_134;
					}
				}
				else if (num - 3274 > 1 && num != 3338)
				{
					if (num != 4076)
					{
						goto IL_134;
					}
					goto IL_12B;
				}
			}
			else if (num <= 4286)
			{
				if (num <= 4261)
				{
					if (num == 4131)
					{
						goto IL_12B;
					}
					if (num != 4261)
					{
						goto IL_134;
					}
				}
				else if (num != 4282 && num != 4286)
				{
					goto IL_134;
				}
			}
			else if (num <= 4295)
			{
				if (num != 4290 && num != 4295)
				{
					goto IL_134;
				}
			}
			else if (num - 5277 > 1)
			{
				if (num == 5325)
				{
					goto IL_12B;
				}
				if (num - 5453 > 1)
				{
					goto IL_134;
				}
			}
			this.material = true;
			return true;
			IL_12B:
			this.material = false;
			return false;
			IL_134:
			for (int i = 0; i < Recipe.numRecipes; i++)
			{
				int num2 = 0;
				while (Main.recipe[i].requiredItem[num2].type > 0)
				{
					if (this.netID == Main.recipe[i].requiredItem[num2].netID)
					{
						this.material = true;
						return true;
					}
					num2++;
				}
			}
			this.material = false;
			return false;
		}

		// Token: 0x06000608 RID: 1544 RVA: 0x002638DC File Offset: 0x00261ADC
		public void netDefaults(int type)
		{
			if (type < 0)
			{
				if (type == -1)
				{
					this.SetDefaults(3521);
					return;
				}
				if (type == -2)
				{
					this.SetDefaults(3520);
					return;
				}
				if (type == -3)
				{
					this.SetDefaults(3519);
					return;
				}
				if (type == -4)
				{
					this.SetDefaults(3518);
					return;
				}
				if (type == -5)
				{
					this.SetDefaults(3517);
					return;
				}
				if (type == -6)
				{
					this.SetDefaults(3516);
					return;
				}
				if (type == -7)
				{
					this.SetDefaults(3515);
					return;
				}
				if (type == -8)
				{
					this.SetDefaults(3514);
					return;
				}
				if (type == -9)
				{
					this.SetDefaults(3513);
					return;
				}
				if (type == -10)
				{
					this.SetDefaults(3512);
					return;
				}
				if (type == -11)
				{
					this.SetDefaults(3511);
					return;
				}
				if (type == -12)
				{
					this.SetDefaults(3510);
					return;
				}
				if (type == -13)
				{
					this.SetDefaults(3509);
					return;
				}
				if (type == -14)
				{
					this.SetDefaults(3508);
					return;
				}
				if (type == -15)
				{
					this.SetDefaults(3507);
					return;
				}
				if (type == -16)
				{
					this.SetDefaults(3506);
					return;
				}
				if (type == -17)
				{
					this.SetDefaults(3505);
					return;
				}
				if (type == -18)
				{
					this.SetDefaults(3504);
					return;
				}
				if (type == -19)
				{
					this.SetDefaults(3764);
					return;
				}
				if (type == -20)
				{
					this.SetDefaults(3765);
					return;
				}
				if (type == -21)
				{
					this.SetDefaults(3766);
					return;
				}
				if (type == -22)
				{
					this.SetDefaults(3767);
					return;
				}
				if (type == -23)
				{
					this.SetDefaults(3768);
					return;
				}
				if (type == -24)
				{
					this.SetDefaults(3769);
					return;
				}
				if (type == -25)
				{
					this.SetDefaults(3503);
					return;
				}
				if (type == -26)
				{
					this.SetDefaults(3502);
					return;
				}
				if (type == -27)
				{
					this.SetDefaults(3501);
					return;
				}
				if (type == -28)
				{
					this.SetDefaults(3500);
					return;
				}
				if (type == -29)
				{
					this.SetDefaults(3499);
					return;
				}
				if (type == -30)
				{
					this.SetDefaults(3498);
					return;
				}
				if (type == -31)
				{
					this.SetDefaults(3497);
					return;
				}
				if (type == -32)
				{
					this.SetDefaults(3496);
					return;
				}
				if (type == -33)
				{
					this.SetDefaults(3495);
					return;
				}
				if (type == -34)
				{
					this.SetDefaults(3494);
					return;
				}
				if (type == -35)
				{
					this.SetDefaults(3493);
					return;
				}
				if (type == -36)
				{
					this.SetDefaults(3492);
					return;
				}
				if (type == -37)
				{
					this.SetDefaults(3491);
					return;
				}
				if (type == -38)
				{
					this.SetDefaults(3490);
					return;
				}
				if (type == -39)
				{
					this.SetDefaults(3489);
					return;
				}
				if (type == -40)
				{
					this.SetDefaults(3488);
					return;
				}
				if (type == -41)
				{
					this.SetDefaults(3487);
					return;
				}
				if (type == -42)
				{
					this.SetDefaults(3486);
					return;
				}
				if (type == -43)
				{
					this.SetDefaults(3485);
					return;
				}
				if (type == -44)
				{
					this.SetDefaults(3484);
					return;
				}
				if (type == -45)
				{
					this.SetDefaults(3483);
					return;
				}
				if (type == -46)
				{
					this.SetDefaults(3482);
					return;
				}
				if (type == -47)
				{
					this.SetDefaults(3481);
					return;
				}
				if (type == -48)
				{
					this.SetDefaults(3480);
					return;
				}
			}
			else
			{
				this.SetDefaults(type);
			}
		}

		// Token: 0x06000609 RID: 1545 RVA: 0x00263C28 File Offset: 0x00261E28
		public static int BannerToItem(int banner)
		{
			int result;
			if (banner == 289)
			{
				result = 5352;
			}
			else if (banner >= 276)
			{
				result = 4965 + banner - 276;
			}
			else if (banner >= 274)
			{
				result = 4687 + banner - 274;
			}
			else if (banner == 273)
			{
				result = 4602;
			}
			else if (banner >= 267)
			{
				result = 4541 + banner - 267;
			}
			else if (banner >= 257)
			{
				result = 3837 + banner - 257;
			}
			else if (banner >= 252)
			{
				result = 3789 + banner - 252;
			}
			else if (banner == 251)
			{
				result = 3780;
			}
			else if (banner >= 249)
			{
				result = 3593 + banner - 249;
			}
			else if (banner >= 186)
			{
				result = 3390 + banner - 186;
			}
			else if (banner >= 88)
			{
				result = 2897 + banner - 88;
			}
			else
			{
				result = 1615 + banner - 1;
			}
			return result;
		}

		// Token: 0x0600060A RID: 1546 RVA: 0x00263D3C File Offset: 0x00261F3C
		public static int NPCtoBanner(int i)
		{
			switch (i)
			{
			case -10:
				return 131;
			case -9:
				return 183;
			case -8:
				return 159;
			case -7:
				return 155;
			case -6:
				return 90;
			case -5:
			case 16:
				return 146;
			case -4:
				return 151;
			case -3:
				return 119;
			case -2:
			case 121:
				return 167;
			case -1:
			case 81:
				return 99;
			case 1:
			case 302:
			case 333:
			case 334:
			case 335:
			case 336:
				return 69;
			case 2:
			case 190:
			case 191:
			case 192:
			case 193:
			case 194:
			case 317:
			case 318:
				return 25;
			case 3:
			case 132:
			case 186:
			case 187:
			case 188:
			case 189:
			case 200:
			case 319:
			case 320:
			case 321:
			case 331:
			case 332:
			case 430:
			case 432:
			case 433:
			case 434:
			case 435:
			case 436:
			case 590:
			case 591:
			case 632:
				return 87;
			case 6:
				return 27;
			case 7:
			case 8:
			case 9:
				return 104;
			case 10:
			case 11:
			case 12:
			case 95:
			case 96:
			case 97:
				return 84;
			case 21:
			case 201:
			case 202:
			case 203:
			case 322:
			case 323:
			case 324:
			case 449:
			case 450:
			case 451:
			case 452:
				return 67;
			case 23:
				return 55;
			case 24:
			case 25:
				return 50;
			case 26:
				return 40;
			case 27:
				return 38;
			case 28:
				return 42;
			case 29:
			case 30:
				return 39;
			case 31:
			case 294:
			case 295:
			case 296:
				return 247;
			case 32:
			case 33:
				return 68;
			case 34:
				return 102;
			case 39:
			case 40:
			case 41:
				return 13;
			case 42:
			case 231:
			case 232:
			case 233:
			case 234:
			case 235:
				return 47;
			case 43:
				return 54;
			case 44:
				return 178;
			case 45:
			case 665:
				return 177;
			case 46:
			case 303:
			case 337:
			case 540:
				return 14;
			case 47:
				return 18;
			case 48:
				return 44;
			case 49:
				return 7;
			case 51:
				return 130;
			case 52:
				return 106;
			case 53:
				return 176;
			case 55:
			case 230:
				return 43;
			case 56:
				return 168;
			case 57:
				return 19;
			case 58:
				return 61;
			case 59:
				return 135;
			case 60:
				return 45;
			case 61:
				return 79;
			case 62:
			case 66:
				return 24;
			case 63:
				return 51;
			case 64:
				return 243;
			case 65:
				return 66;
			case 67:
				return 20;
			case 69:
				return 4;
			case 71:
				return 107;
			case 73:
				return 41;
			case 74:
				return 8;
			case 75:
				return 63;
			case 77:
				return 6;
			case 78:
				return 57;
			case 79:
				return 245;
			case 80:
				return 246;
			case 82:
				return 85;
			case 83:
				return 23;
			case 84:
				return 28;
			case 85:
			case 629:
				return 16;
			case 86:
				return 77;
			case 87:
			case 88:
			case 89:
			case 90:
			case 91:
			case 92:
				return 86;
			case 93:
				return 114;
			case 94:
			case 112:
				return 100;
			case 98:
			case 99:
			case 100:
				return 83;
			case 101:
				return 96;
			case 102:
				return 1;
			case 103:
				return 244;
			case 104:
				return 81;
			case 109:
			case 378:
				return 17;
			case 110:
				return 164;
			case 111:
				return 118;
			case 120:
				return 15;
			case 122:
				return 37;
			case 133:
				return 288;
			case 137:
				return 128;
			case 138:
				return 129;
			case 140:
				return 153;
			case 141:
				return 75;
			case 143:
				return 170;
			case 144:
				return 145;
			case 145:
				return 169;
			case 147:
				return 126;
			case 148:
			case 149:
				return 150;
			case 150:
				return 124;
			case 151:
				return 134;
			case 152:
				return 116;
			case 153:
				return 74;
			case 154:
				return 248;
			case 155:
				return 82;
			case 156:
				return 242;
			case 157:
				return 5;
			case 158:
			case 159:
				return 78;
			case 161:
			case 431:
				return 29;
			case 162:
				return 34;
			case 163:
			case 238:
				return 9;
			case 164:
			case 165:
				return 71;
			case 166:
				return 73;
			case 167:
				return 179;
			case 168:
				return 98;
			case 169:
				return 48;
			case 170:
			case 171:
			case 180:
				return 60;
			case 172:
				return 160;
			case 173:
				return 21;
			case 174:
				return 46;
			case 175:
				return 88;
			case 176:
				return 287;
			case 177:
				return 26;
			case 179:
				return 22;
			case 181:
				return 30;
			case 182:
				return 31;
			case 183:
				return 101;
			case 184:
				return 171;
			case 185:
				return 70;
			case 195:
			case 196:
				return 80;
			case 197:
				return 89;
			case 198:
			case 199:
				return 53;
			case 204:
				return 172;
			case 205:
				return 56;
			case 206:
				return 49;
			case 212:
				return 62;
			case 213:
				return 239;
			case 214:
				return 238;
			case 215:
				return 240;
			case 216:
				return 237;
			case 217:
				return 97;
			case 218:
				return 103;
			case 219:
				return 133;
			case 220:
				return 250;
			case 221:
				return 174;
			case 223:
				return 64;
			case 224:
				return 32;
			case 225:
				return 76;
			case 226:
				return 33;
			case 236:
			case 237:
				return 52;
			case 239:
			case 240:
				return 12;
			case 241:
				return 10;
			case 242:
				return 11;
			case 243:
				return 125;
			case 244:
				return 157;
			case 250:
				return 2;
			case 251:
				return 111;
			case 252:
				return 59;
			case 253:
				return 65;
			case 254:
			case 255:
				return 72;
			case 256:
				return 36;
			case 257:
				return 3;
			case 258:
				return 58;
			case 259:
			case 260:
			case 261:
				return 35;
			case 268:
				return 127;
			case 269:
			case 270:
			case 271:
			case 272:
				return 161;
			case 273:
			case 274:
			case 275:
			case 276:
				return 91;
			case 277:
			case 278:
			case 279:
			case 280:
				return 121;
			case 281:
			case 282:
				return 156;
			case 283:
			case 284:
				return 147;
			case 285:
			case 286:
				return 105;
			case 287:
				return 95;
			case 288:
				return 108;
			case 289:
				return 115;
			case 290:
				return 149;
			case 291:
				return 166;
			case 292:
				return 175;
			case 293:
				return 165;
			case 301:
				return 158;
			case 304:
				return 123;
			case 305:
			case 306:
			case 307:
			case 308:
			case 309:
			case 310:
			case 311:
			case 312:
			case 313:
			case 314:
				return 162;
			case 315:
				return 120;
			case 316:
				return 113;
			case 326:
				return 173;
			case 329:
				return 122;
			case 330:
				return 152;
			case 338:
			case 339:
			case 340:
				return 185;
			case 341:
				return 154;
			case 342:
				return 117;
			case 343:
				return 184;
			case 347:
				return 110;
			case 348:
			case 349:
				return 148;
			case 350:
				return 109;
			case 351:
				return 132;
			case 352:
				return 112;
			case 379:
				return 92;
			case 380:
				return 180;
			case 381:
				return 136;
			case 382:
				return 142;
			case 383:
			case 384:
				return 141;
			case 385:
				return 140;
			case 386:
				return 138;
			case 387:
				return 144;
			case 388:
				return 137;
			case 389:
				return 139;
			case 390:
				return 143;
			case 391:
				return 163;
			case 402:
			case 403:
			case 404:
				return 217;
			case 405:
				return 221;
			case 406:
				return 220;
			case 407:
			case 408:
				return 218;
			case 409:
			case 410:
				return 219;
			case 411:
				return 216;
			case 412:
			case 413:
			case 414:
				return 224;
			case 415:
			case 516:
				return 226;
			case 416:
			case 518:
				return 225;
			case 417:
				return 223;
			case 418:
				return 222;
			case 419:
				return 227;
			case 420:
				return 230;
			case 421:
				return 229;
			case 423:
				return 231;
			case 424:
				return 228;
			case 425:
				return 236;
			case 426:
				return 233;
			case 427:
				return 234;
			case 428:
				return 232;
			case 429:
				return 235;
			case 438:
				return 93;
			case 460:
				return 196;
			case 461:
				return 191;
			case 462:
				return 190;
			case 463:
				return 199;
			case 464:
				return 281;
			case 465:
				return 282;
			case 466:
				return 197;
			case 467:
				return 198;
			case 468:
				return 192;
			case 469:
				return 195;
			case 470:
				return 283;
			case 471:
			case 472:
				return 186;
			case 473:
				return 284;
			case 474:
				return 285;
			case 475:
				return 286;
			case 477:
			case 478:
			case 479:
				return 193;
			case 480:
				return 201;
			case 481:
				return 202;
			case 482:
				return 204;
			case 483:
				return 203;
			case 489:
				return 205;
			case 490:
				return 206;
			case 494:
			case 495:
				return 189;
			case 496:
			case 497:
				return 188;
			case 498:
			case 499:
			case 500:
			case 501:
			case 502:
			case 503:
			case 504:
			case 505:
			case 506:
				return 187;
			case 508:
			case 580:
				return 210;
			case 509:
			case 581:
				return 209;
			case 510:
			case 511:
			case 512:
				return 208;
			case 513:
			case 514:
			case 515:
				return 207;
			case 520:
				return 241;
			case 524:
			case 525:
			case 526:
			case 527:
				return 211;
			case 528:
			case 529:
				return 212;
			case 530:
			case 531:
				return 215;
			case 532:
				return 214;
			case 533:
				return 213;
			case 536:
				return 267;
			case 537:
				return 249;
			case 541:
				return 251;
			case 542:
				return 252;
			case 543:
				return 253;
			case 544:
				return 254;
			case 545:
				return 255;
			case 546:
				return 256;
			case 552:
			case 553:
			case 554:
				return 258;
			case 555:
			case 556:
			case 557:
				return 257;
			case 558:
			case 559:
			case 560:
				return 264;
			case 561:
			case 562:
			case 563:
				return 265;
			case 566:
			case 567:
				return 259;
			case 568:
			case 569:
				return 263;
			case 570:
			case 571:
				return 260;
			case 572:
			case 573:
				return 262;
			case 574:
			case 575:
				return 261;
			case 578:
				return 266;
			case 582:
				return 280;
			case 586:
				return 268;
			case 587:
				return 269;
			case 618:
				return 273;
			case 619:
				return 270;
			case 620:
				return 272;
			case 621:
			case 622:
			case 623:
				return 271;
			case 624:
				return 275;
			case 628:
				return 274;
			case 630:
				return 277;
			case 631:
				return 276;
			case 634:
				return 279;
			case 635:
				return 278;
			case 676:
				return 289;
			}
			return 0;
		}

		// Token: 0x0600060B RID: 1547 RVA: 0x00264D3C File Offset: 0x00262F3C
		public static int BannerToNPC(int i)
		{
			switch (i)
			{
			case 1:
				return 102;
			case 2:
				return 250;
			case 3:
				return 257;
			case 4:
				return 69;
			case 5:
				return 157;
			case 6:
				return 77;
			case 7:
				return 49;
			case 8:
				return 74;
			case 9:
				return 163;
			case 10:
				return 241;
			case 11:
				return 242;
			case 12:
				return 239;
			case 13:
				return 39;
			case 14:
				return 46;
			case 15:
				return 120;
			case 16:
				return 85;
			case 17:
				return 109;
			case 18:
				return 47;
			case 19:
				return 57;
			case 20:
				return 67;
			case 21:
				return 173;
			case 22:
				return 179;
			case 23:
				return 83;
			case 24:
				return 62;
			case 25:
				return 2;
			case 26:
				return 177;
			case 27:
				return 6;
			case 28:
				return 84;
			case 29:
				return 161;
			case 30:
				return 181;
			case 31:
				return 182;
			case 32:
				return 224;
			case 33:
				return 226;
			case 34:
				return 162;
			case 35:
				return 259;
			case 36:
				return 256;
			case 37:
				return 122;
			case 38:
				return 27;
			case 39:
				return 29;
			case 40:
				return 26;
			case 41:
				return 73;
			case 42:
				return 28;
			case 43:
				return 55;
			case 44:
				return 48;
			case 45:
				return 60;
			case 46:
				return 174;
			case 47:
				return 42;
			case 48:
				return 169;
			case 49:
				return 206;
			case 50:
				return 24;
			case 51:
				return 63;
			case 52:
				return 236;
			case 53:
				return 199;
			case 54:
				return 43;
			case 55:
				return 23;
			case 56:
				return 205;
			case 57:
				return 78;
			case 58:
				return 258;
			case 59:
				return 252;
			case 60:
				return 170;
			case 61:
				return 58;
			case 62:
				return 212;
			case 63:
				return 75;
			case 64:
				return 223;
			case 65:
				return 253;
			case 66:
				return 65;
			case 67:
				return 21;
			case 68:
				return 32;
			case 69:
				return 1;
			case 70:
				return 185;
			case 71:
				return 164;
			case 72:
				return 254;
			case 73:
				return 166;
			case 74:
				return 153;
			case 75:
				return 141;
			case 76:
				return 225;
			case 77:
				return 86;
			case 78:
				return 158;
			case 79:
				return 61;
			case 80:
				return 196;
			case 81:
				return 104;
			case 82:
				return 155;
			case 83:
				return 98;
			case 84:
				return 10;
			case 85:
				return 82;
			case 86:
				return 87;
			case 87:
				return 3;
			case 88:
				return 175;
			case 89:
				return 197;
			case 90:
				return -6;
			case 91:
				return 273;
			case 92:
				return 379;
			case 93:
				return 438;
			case 95:
				return 287;
			case 96:
				return 101;
			case 97:
				return 217;
			case 98:
				return 168;
			case 99:
				return 81;
			case 100:
				return 94;
			case 101:
				return 183;
			case 102:
				return 34;
			case 103:
				return 218;
			case 104:
				return 7;
			case 105:
				return 285;
			case 106:
				return 52;
			case 107:
				return 71;
			case 108:
				return 288;
			case 109:
				return 350;
			case 110:
				return 347;
			case 111:
				return 251;
			case 112:
				return 352;
			case 113:
				return 316;
			case 114:
				return 93;
			case 115:
				return 289;
			case 116:
				return 152;
			case 117:
				return 342;
			case 118:
				return 111;
			case 119:
				return -3;
			case 120:
				return 315;
			case 121:
				return 277;
			case 122:
				return 329;
			case 123:
				return 304;
			case 124:
				return 150;
			case 125:
				return 243;
			case 126:
				return 147;
			case 127:
				return 268;
			case 128:
				return 137;
			case 129:
				return 138;
			case 130:
				return 51;
			case 131:
				return -10;
			case 132:
				return 351;
			case 133:
				return 219;
			case 134:
				return 151;
			case 135:
				return 59;
			case 136:
				return 381;
			case 137:
				return 388;
			case 138:
				return 386;
			case 139:
				return 389;
			case 140:
				return 385;
			case 141:
				return 383;
			case 142:
				return 382;
			case 143:
				return 390;
			case 144:
				return 387;
			case 145:
				return 144;
			case 146:
				return 16;
			case 147:
				return 283;
			case 148:
				return 348;
			case 149:
				return 290;
			case 150:
				return 148;
			case 151:
				return -4;
			case 152:
				return 330;
			case 153:
				return 140;
			case 154:
				return 341;
			case 155:
				return -7;
			case 156:
				return 281;
			case 157:
				return 244;
			case 158:
				return 301;
			case 159:
				return -8;
			case 160:
				return 172;
			case 161:
				return 269;
			case 162:
				return 305;
			case 163:
				return 391;
			case 164:
				return 110;
			case 165:
				return 293;
			case 166:
				return 291;
			case 167:
				return 121;
			case 168:
				return 56;
			case 169:
				return 145;
			case 170:
				return 143;
			case 171:
				return 184;
			case 172:
				return 204;
			case 173:
				return 326;
			case 174:
				return 221;
			case 175:
				return 292;
			case 176:
				return 53;
			case 177:
				return 45;
			case 178:
				return 44;
			case 179:
				return 167;
			case 180:
				return 380;
			case 183:
				return -9;
			case 184:
				return 343;
			case 185:
				return 338;
			case 186:
				return 471;
			case 187:
				return 498;
			case 188:
				return 496;
			case 189:
				return 494;
			case 190:
				return 462;
			case 191:
				return 461;
			case 192:
				return 468;
			case 193:
				return 477;
			case 195:
				return 469;
			case 196:
				return 460;
			case 197:
				return 466;
			case 198:
				return 467;
			case 199:
				return 463;
			case 201:
				return 480;
			case 202:
				return 481;
			case 203:
				return 483;
			case 204:
				return 482;
			case 205:
				return 489;
			case 206:
				return 490;
			case 207:
				return 513;
			case 208:
				return 510;
			case 209:
				return 581;
			case 210:
				return 580;
			case 211:
				return 524;
			case 212:
				return 529;
			case 213:
				return 533;
			case 214:
				return 532;
			case 215:
				return 530;
			case 216:
				return 411;
			case 217:
				return 402;
			case 218:
				return 407;
			case 219:
				return 409;
			case 220:
				return 406;
			case 221:
				return 405;
			case 222:
				return 418;
			case 223:
				return 417;
			case 224:
				return 412;
			case 225:
				return 416;
			case 226:
				return 415;
			case 227:
				return 419;
			case 228:
				return 424;
			case 229:
				return 421;
			case 230:
				return 420;
			case 231:
				return 423;
			case 232:
				return 428;
			case 233:
				return 426;
			case 234:
				return 427;
			case 235:
				return 429;
			case 236:
				return 425;
			case 237:
				return 216;
			case 238:
				return 214;
			case 239:
				return 213;
			case 240:
				return 215;
			case 241:
				return 520;
			case 242:
				return 156;
			case 243:
				return 64;
			case 244:
				return 103;
			case 245:
				return 79;
			case 246:
				return 80;
			case 247:
				return 31;
			case 248:
				return 154;
			case 249:
				return 537;
			case 250:
				return 220;
			case 251:
				return 541;
			case 252:
				return 542;
			case 253:
				return 543;
			case 254:
				return 544;
			case 255:
				return 545;
			case 256:
				return 546;
			case 257:
				return 555;
			case 258:
				return 552;
			case 259:
				return 566;
			case 260:
				return 570;
			case 261:
				return 574;
			case 262:
				return 572;
			case 263:
				return 568;
			case 264:
				return 558;
			case 265:
				return 561;
			case 266:
				return 578;
			case 267:
				return 536;
			case 268:
				return 586;
			case 269:
				return 587;
			case 270:
				return 619;
			case 271:
				return 621;
			case 272:
				return 620;
			case 273:
				return 618;
			case 274:
				return 628;
			case 275:
				return 624;
			case 276:
				return 631;
			case 277:
				return 630;
			case 278:
				return 635;
			case 279:
				return 634;
			case 280:
				return 582;
			case 281:
				return 464;
			case 282:
				return 465;
			case 283:
				return 470;
			case 284:
				return 473;
			case 285:
				return 474;
			case 286:
				return 475;
			case 287:
				return 176;
			case 288:
				return 133;
			case 289:
				return 676;
			}
			return 0;
		}

		// Token: 0x0600060C RID: 1548 RVA: 0x00265798 File Offset: 0x00263998
		public bool FitsAmmoSlot()
		{
			return ((this.type == 0 || this.ammo > 0 || this.bait > 0 || this.type == 530 || this.type == 849 || this.PaintOrCoating) && !this.notAmmo) || this.type == 353;
		}

		// Token: 0x0600060D RID: 1549 RVA: 0x002657F8 File Offset: 0x002639F8
		public bool CanFillEmptyAmmoSlot()
		{
			return this.bait <= 0 && !this.PaintOrCoating && this.type != 353 && this.type != 849 && this.type != 169 && this.type != 75 && this.type != 23 && this.type != 408 && this.type != 370 && this.type != 1246 && !this.notAmmo;
		}

		// Token: 0x0600060E RID: 1550 RVA: 0x00265884 File Offset: 0x00263A84
		public void SetDefaults1(int type)
		{
			if (type == 1)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 20;
				this.useTime = 13;
				this.autoReuse = true;
				this.width = 24;
				this.height = 28;
				this.damage = 5;
				this.pick = 40;
				this.UseSound = SoundID.Item1;
				this.knockBack = 2f;
				this.value = 2000;
				this.melee = true;
			}
			else if (type == 2)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 0;
				this.width = 12;
				this.height = 12;
			}
			else if (type == 3)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 1;
				this.width = 12;
				this.height = 12;
			}
			else if (type == 4)
			{
				this.useStyle = 1;
				this.useTurn = false;
				this.useAnimation = 20;
				this.useTime = 20;
				this.width = 24;
				this.height = 28;
				this.damage = 12;
				this.knockBack = 5.5f;
				this.UseSound = SoundID.Item1;
				this.scale = 1f;
				this.value = 1800;
				this.melee = true;
			}
			else if (type == 5)
			{
				this.useStyle = 2;
				this.UseSound = SoundID.Item2;
				this.useTurn = false;
				this.useAnimation = 17;
				this.useTime = 17;
				this.width = 16;
				this.height = 18;
				this.healLife = 15;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.potion = true;
				this.value = Item.sellPrice(0, 0, 2, 50);
			}
			else if (type == 6)
			{
				this.autoReuse = false;
				this.useStyle = 13;
				this.useAnimation = 12;
				this.useTime = 12;
				this.width = 50;
				this.height = 18;
				this.shoot = 940;
				this.UseSound = SoundID.Item1;
				this.damage = 8;
				this.knockBack = 4f;
				this.shootSpeed = 2.1f;
				this.noMelee = true;
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 2, 80));
				this.melee = true;
				this.noUseGraphic = true;
			}
			else if (type == 7)
			{
				this.autoReuse = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 30;
				this.useTime = 20;
				this.hammer = 40;
				this.width = 24;
				this.height = 28;
				this.damage = 7;
				this.knockBack = 5.5f;
				this.scale = 1f;
				this.UseSound = SoundID.Item1;
				this.value = 1600;
				this.melee = true;
			}
			else if (type == 8)
			{
				this.flame = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.holdStyle = 1;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 4;
				this.width = 10;
				this.height = 12;
				this.value = 50;
			}
			else if (type == 9)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 30;
				this.width = 8;
				this.height = 10;
			}
			else if (type == 10)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 27;
				this.knockBack = 4.5f;
				this.useTime = 19;
				this.autoReuse = true;
				this.width = 24;
				this.height = 28;
				this.damage = 5;
				this.axe = 9;
				this.scale = 1f;
				this.UseSound = SoundID.Item1;
				this.value = 1600;
				this.melee = true;
			}
			else if (type == 11)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 6;
				this.width = 12;
				this.height = 12;
				this.value = 500;
			}
			else if (type == 12)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 7;
				this.width = 12;
				this.height = 12;
				this.value = 250;
			}
			else if (type == 13)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 8;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 3, 0);
			}
			else if (type == 14)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 9;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 1, 50);
			}
			else if (type == 15)
			{
				this.width = 24;
				this.height = 28;
				this.accessory = true;
				this.value = 1000;
				this.waistSlot = 2;
			}
			else if (type == 16)
			{
				this.width = 24;
				this.height = 28;
				this.accessory = true;
				this.value = 5000;
				this.waistSlot = 7;
			}
			else if (type == 17)
			{
				this.width = 24;
				this.height = 28;
				this.accessory = true;
				this.rare = 1;
				this.value = 10000;
				this.waistSlot = 3;
			}
			else if (type == 18)
			{
				this.width = 24;
				this.height = 18;
				this.accessory = true;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 25, 0);
			}
			else if (type == 19)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 6000;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 6;
			}
			else if (type == 20)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 750;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 0;
			}
			else if (type == 21)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 3000;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 4;
			}
			else if (type == 22)
			{
				this.color = new Color(160, 145, 130, 110);
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 1500;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 2;
			}
			else if (type == 23)
			{
				this.width = 10;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				this.alpha = 175;
				this.ammo = AmmoID.Gel;
				this.color = new Color(0, 80, 255, 100);
				this.value = 5;
				this.consumable = true;
			}
			else if (type == 24)
			{
				this.useStyle = 1;
				this.useTurn = false;
				this.useTime = 20;
				this.useAnimation = 20;
				this.width = 24;
				this.height = 28;
				this.damage = 7;
				this.knockBack = 5f;
				this.scale = 1f;
				this.UseSound = SoundID.Item1;
				this.value = 100;
				this.melee = true;
			}
			else if (type == 25)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.width = 14;
				this.height = 28;
				this.value = 200;
			}
			else if (type == 26)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 1;
				this.width = 12;
				this.height = 12;
			}
			else if (type == 27)
			{
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.autoReuse = true;
				this.createTile = 20;
				this.width = 18;
				this.height = 18;
				this.value = 10;
			}
			else if (type == 28)
			{
				this.UseSound = SoundID.Item3;
				this.healLife = 50;
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.potion = true;
				this.value = 300;
			}
			else if (type == 29)
			{
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 18;
				this.height = 18;
				this.useStyle = 4;
				this.useTime = 30;
				this.UseSound = SoundID.Item4;
				this.useAnimation = 30;
				this.rare = 2;
				this.value = 75000;
			}
			else if (type == 30)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 16;
				this.width = 12;
				this.height = 12;
			}
			else if (type == 31)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 13;
				this.width = 16;
				this.height = 24;
				this.value = 20;
			}
			else if (type == 32)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 14;
				this.width = 26;
				this.height = 20;
				this.value = 300;
			}
			else if (type == 33)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 17;
				this.width = 26;
				this.height = 24;
				this.value = 300;
			}
			else if (type == 34)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 15;
				this.width = 12;
				this.height = 30;
				this.value = 150;
			}
			else if (type == 35)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 16;
				this.width = 28;
				this.height = 14;
				this.value = 5000;
			}
			else if (type == 36)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 18;
				this.width = 28;
				this.height = 14;
				this.value = 150;
			}
			else if (type == 37)
			{
				this.width = 28;
				this.height = 12;
				this.defense = 1;
				this.headSlot = 10;
				this.value = 1000;
			}
			else if (type == 38)
			{
				this.width = 12;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 500;
			}
			else if (type == 39)
			{
				this.useStyle = 5;
				this.useAnimation = 30;
				this.useTime = 30;
				this.width = 12;
				this.height = 28;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = SoundID.Item5;
				this.damage = 4;
				this.shootSpeed = 6.1f;
				this.noMelee = true;
				this.value = 100;
				this.ranged = true;
			}
			else if (type == 40)
			{
				this.shootSpeed = 3f;
				this.shoot = 1;
				this.damage = 5;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 2f;
				this.value = 5;
				this.ranged = true;
			}
			else if (type == 41)
			{
				this.shootSpeed = 3.5f;
				this.shoot = 2;
				this.damage = 7;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 2f;
				this.value = 10;
				this.ranged = true;
			}
			else if (type == 42)
			{
				this.useStyle = 1;
				this.shootSpeed = 9f;
				this.shoot = 3;
				this.damage = 10;
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 15;
				this.useTime = 15;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = 15;
				this.ranged = true;
			}
			else if (type == 43)
			{
				this.useStyle = 4;
				this.width = 22;
				this.height = 14;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 1;
			}
			else if (type == 44)
			{
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 25;
				this.width = 12;
				this.height = 28;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = SoundID.Item5;
				this.damage = 14;
				this.shootSpeed = 6.7f;
				this.knockBack = 1f;
				this.alpha = 30;
				this.rare = 1;
				this.noMelee = true;
				this.value = 18000;
				this.ranged = true;
			}
			else if (type == 45)
			{
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 30;
				this.knockBack = 6f;
				this.useTime = 15;
				this.width = 24;
				this.height = 28;
				this.damage = 20;
				this.axe = 15;
				this.scale = 1f;
				this.UseSound = SoundID.Item1;
				this.rare = 1;
				this.value = 13500;
				this.melee = true;
			}
			else if (type == 46)
			{
				this.useStyle = 1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.knockBack = 5f;
				this.width = 24;
				this.height = 28;
				this.damage = 16;
				this.scale = 1f;
				this.UseSound = SoundID.Item1;
				this.rare = 1;
				this.value = 13500;
				this.melee = true;
				this.shoot = 974;
				this.glowMask = 328;
			}
			else if (type == 47)
			{
				this.shootSpeed = 3.4f;
				this.shoot = 4;
				this.damage = 12;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 3f;
				this.alpha = 30;
				this.rare = 1;
				this.value = 40;
				this.ranged = true;
			}
			else if (type == 48)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 21;
				this.width = 26;
				this.height = 22;
				this.value = 500;
			}
			else if (type == 49)
			{
				this.width = 22;
				this.height = 22;
				this.accessory = true;
				this.lifeRegen = 2;
				this.rare = 1;
				this.value = 50000;
				this.handOnSlot = 2;
			}
			else if (type == 50)
			{
				this.useTurn = true;
				this.width = 20;
				this.height = 20;
				this.useStyle = 4;
				this.useTime = 90;
				this.UseSound = SoundID.Item6;
				this.useAnimation = 90;
				this.rare = 1;
				this.value = 50000;
			}
			else if (type == 51)
			{
				this.shootSpeed = 0.5f;
				this.shoot = 5;
				this.damage = 10;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 4f;
				this.rare = 1;
				this.value = 100;
				this.ranged = true;
			}
			else if (type == 52)
			{
				type = 52;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 1;
			}
			else if (type == 53)
			{
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 1;
				this.value = 50000;
				this.waistSlot = 1;
			}
			else if (type == 54)
			{
				this.width = 28;
				this.height = 24;
				this.accessory = true;
				this.rare = 1;
				this.value = 50000;
				this.shoeSlot = 6;
			}
			else if (type == 55)
			{
				this.noMelee = true;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 6;
				this.damage = 17;
				this.knockBack = 8f;
				this.width = 14;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.noUseGraphic = true;
				this.rare = 1;
				this.value = 50000;
				this.melee = true;
			}
			else if (type == 56)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 22;
				this.width = 12;
				this.height = 12;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 10, 0);
			}
			else if (type == 57)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 30, 0);
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 8;
			}
			else if (type == 58)
			{
				this.width = 12;
				this.height = 12;
			}
			else if (type == 59)
			{
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 23;
				this.width = 14;
				this.height = 14;
				this.value = 500;
				this.autoReuse = true;
			}
			else if (type == 60)
			{
				this.width = 16;
				this.height = 18;
				this.maxStack = Item.CommonMaxStack;
				this.value = 50;
			}
			else if (type == 61)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 25;
				this.width = 12;
				this.height = 12;
			}
			else if (type == 62)
			{
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 2;
				this.width = 14;
				this.height = 14;
				this.value = 20;
				this.autoReuse = true;
			}
			else if (type == 63)
			{
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.autoReuse = true;
				this.createTile = 27;
				this.width = 26;
				this.height = 26;
				this.value = Item.buyPrice(0, 0, 50, 0);
			}
			else if (type == 64)
			{
				this.mana = 10;
				this.damage = 10;
				this.useStyle = 1;
				this.shootSpeed = 32f;
				this.shoot = 7;
				this.width = 26;
				this.height = 28;
				this.useAnimation = 28;
				this.useTime = 28;
				this.rare = 1;
				this.noMelee = true;
				this.knockBack = 1f;
				this.value = this.shadowOrbPrice;
				this.magic = true;
			}
			else if (type == 65)
			{
				this.knockBack = 5f;
				this.alpha = 100;
				this.color = new Color(150, 150, 150, 0);
				this.damage = 25;
				this.useStyle = 1;
				this.scale = 1f;
				this.shootSpeed = 25f;
				this.shoot = 9;
				this.width = 14;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 20;
				this.useTime = 40;
				this.rare = 2;
				this.value = 50000;
				this.melee = true;
			}
			else if (type == 66)
			{
				this.useStyle = 1;
				this.shootSpeed = 4f;
				this.shoot = 10;
				this.width = 16;
				this.height = 24;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 15;
				this.useTime = 15;
				this.noMelee = true;
				this.value = 75;
			}
			else if (type == 67)
			{
				this.damage = 0;
				this.useStyle = 1;
				this.shootSpeed = 4f;
				this.shoot = 11;
				this.width = 16;
				this.height = 24;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 15;
				this.useTime = 15;
				this.noMelee = true;
				this.value = 100;
			}
			else if (type == 68)
			{
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10;
			}
			else if (type == 69)
			{
				this.width = 8;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 100;
			}
			else if (type == 70)
			{
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 1;
			}
			else if (type == 71)
			{
				this.width = 10;
				this.height = 10;
				this.maxStack = 100;
				this.value = 5;
				this.ammo = AmmoID.Coin;
				this.shoot = 158;
				this.notAmmo = true;
				this.damage = 25;
				this.shootSpeed = 1f;
				this.ranged = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 330;
				this.noMelee = true;
			}
			else if (type == 72)
			{
				this.width = 10;
				this.height = 12;
				this.maxStack = 100;
				this.value = 500;
				this.ammo = AmmoID.Coin;
				this.notAmmo = true;
				this.damage = 50;
				this.shoot = 159;
				this.shootSpeed = 2f;
				this.ranged = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 331;
				this.noMelee = true;
			}
			else if (type == 73)
			{
				this.width = 10;
				this.height = 14;
				this.maxStack = 100;
				this.value = 50000;
				this.ammo = AmmoID.Coin;
				this.notAmmo = true;
				this.damage = 100;
				this.shoot = 160;
				this.shootSpeed = 3f;
				this.ranged = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 332;
				this.noMelee = true;
			}
			else if (type == 74)
			{
				this.width = 12;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.value = 5000000;
				this.ammo = AmmoID.Coin;
				this.notAmmo = true;
				this.damage = 200;
				this.shoot = 161;
				this.shootSpeed = 4f;
				this.ranged = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 333;
				this.noMelee = true;
			}
			else if (type == 75)
			{
				this.width = 18;
				this.height = 18;
				this.maxStack = Item.CommonMaxStack;
				this.alpha = 75;
				this.ammo = AmmoID.FallenStar;
				this.value = Item.sellPrice(0, 0, 5, 0);
				this.useStyle = 4;
				this.UseSound = SoundID.Item4;
				this.useTurn = false;
				this.useAnimation = 17;
				this.useTime = 17;
				this.consumable = true;
				this.rare = 1;
			}
			else if (type == 76)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.legSlot = 1;
				this.value = 1000;
			}
			else if (type == 77)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 2;
				this.legSlot = 2;
				this.value = 4000;
			}
			else if (type == 78)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 3;
				this.legSlot = 3;
				this.value = 10000;
			}
			else if (type == 79)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 4;
				this.legSlot = 4;
				this.value = 20000;
			}
			else if (type == 80)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 2;
				this.bodySlot = 1;
				this.value = 1250;
			}
			else if (type == 81)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 3;
				this.bodySlot = 2;
				this.value = 5000;
			}
			else if (type == 82)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 4;
				this.bodySlot = 3;
				this.value = 12500;
			}
			else if (type == 83)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 5;
				this.bodySlot = 4;
				this.value = 25000;
			}
			else if (type == 84)
			{
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 11.5f;
				this.shoot = 13;
				this.width = 18;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = 20000;
			}
			else if (type == 85)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 8;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 214;
				this.width = 12;
				this.height = 12;
				this.value = 200;
				this.tileBoost += 3;
			}
			else if (type == 86)
			{
				this.width = 14;
				this.height = 18;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 1;
				this.value = 500;
				this.MakeUsableWithChlorophyteExtractinator();
			}
			else if (type == 87)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 29;
				this.width = 20;
				this.height = 12;
				this.value = 10000;
			}
			else if (type == 88)
			{
				this.width = 22;
				this.height = 16;
				this.defense = 2;
				this.headSlot = 11;
				this.rare = 1;
				this.value = Item.buyPrice(0, 4, 0, 0);
			}
			else if (type == 89)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.headSlot = 1;
				this.value = 750;
			}
			else if (type == 90)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 2;
				this.headSlot = 2;
				this.value = 3000;
			}
			else if (type == 91)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 3;
				this.headSlot = 3;
				this.value = 7500;
			}
			else if (type == 92)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 4;
				this.headSlot = 4;
				this.value = 15000;
			}
			else if (type == 93)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 4;
				this.width = 12;
				this.height = 12;
			}
			else if (type == 94)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 19;
				this.width = 8;
				this.height = 10;
			}
			else if (type == 95)
			{
				this.useStyle = 5;
				this.useAnimation = 16;
				this.useTime = 16;
				this.width = 24;
				this.height = 28;
				this.shoot = 14;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = SoundID.Item11;
				this.damage = 13;
				this.shootSpeed = 5f;
				this.noMelee = true;
				this.value = 50000;
				this.knockBack = 1f;
				this.scale = 0.9f;
				this.rare = 1;
				this.ranged = true;
			}
			else if (type == 96)
			{
				this.useStyle = 5;
				this.autoReuse = false;
				this.useAnimation = 32;
				this.useTime = 32;
				this.width = 44;
				this.height = 14;
				this.shoot = 10;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = SoundID.Item11;
				this.damage = 31;
				this.shootSpeed = 9f;
				this.noMelee = true;
				this.value = this.shadowOrbPrice;
				this.knockBack = 5.25f;
				this.rare = 1;
				this.ranged = true;
				this.crit = 7;
			}
			else if (type == 97)
			{
				this.shootSpeed = 4f;
				this.shoot = 14;
				this.damage = 7;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Bullet;
				this.knockBack = 2f;
				this.value = 7;
				this.ranged = true;
			}
			else if (type == 98)
			{
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 8;
				this.useTime = 8;
				this.width = 50;
				this.height = 18;
				this.shoot = 10;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = SoundID.Item11;
				this.damage = 6;
				this.shootSpeed = 7f;
				this.noMelee = true;
				this.value = 350000;
				this.rare = 2;
				this.ranged = true;
			}
			else if (type == 99)
			{
				this.useStyle = 5;
				this.useAnimation = 28;
				this.useTime = 28;
				this.width = 12;
				this.height = 28;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = SoundID.Item5;
				this.damage = 8;
				this.shootSpeed = 6.6f;
				this.noMelee = true;
				this.value = 1400;
				this.ranged = true;
			}
			else if (type == 100)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.legSlot = 5;
				this.rare = 1;
				this.value = 22500;
			}
			else if (type == 101)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 7;
				this.bodySlot = 5;
				this.rare = 1;
				this.value = 30000;
			}
			else if (type == 102)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.headSlot = 5;
				this.rare = 1;
				this.value = 37500;
			}
			else if (type == 103)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 20;
				this.useTime = 15;
				this.autoReuse = true;
				this.width = 24;
				this.height = 28;
				this.damage = 9;
				this.pick = 65;
				this.UseSound = SoundID.Item1;
				this.knockBack = 3f;
				this.rare = 1;
				this.value = 18000;
				this.scale = 1f;
				this.melee = true;
			}
			else if (type == 104)
			{
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 45;
				this.useTime = 19;
				this.hammer = 55;
				this.width = 24;
				this.height = 28;
				this.damage = 24;
				this.knockBack = 6f;
				this.scale = 1f;
				this.UseSound = SoundID.Item1;
				this.rare = 1;
				this.value = 15000;
				this.melee = true;
			}
			else if (type == 105)
			{
				this.flame = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 33;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 3, 0);
				this.holdStyle = 1;
			}
			else if (type == 106)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 34;
				this.width = 26;
				this.height = 26;
				this.value = 3000;
			}
			else if (type == 107)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 34;
				this.placeStyle = 1;
				this.width = 26;
				this.height = 26;
				this.value = 12000;
			}
			else if (type == 108)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 34;
				this.placeStyle = 2;
				this.width = 26;
				this.height = 26;
				this.value = 24000;
			}
			else if (type == 109)
			{
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 18;
				this.height = 18;
				this.useStyle = 4;
				this.useTime = 30;
				this.UseSound = SoundID.Item29;
				this.useAnimation = 30;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 25, 0);
			}
			else if (type == 110)
			{
				this.UseSound = SoundID.Item3;
				this.healMana = 50;
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.value = Item.buyPrice(0, 0, 1, 0);
			}
			else if (type == 111)
			{
				this.width = 22;
				this.height = 22;
				this.accessory = true;
				this.rare = 1;
				this.value = this.shadowOrbPrice;
				this.handOnSlot = 3;
			}
			else if (type == 112)
			{
				this.mana = 12;
				this.damage = 48;
				this.useStyle = 1;
				this.shootSpeed = 7.5f;
				this.shoot = 15;
				this.width = 26;
				this.height = 28;
				this.UseSound = SoundID.Item20;
				this.useAnimation = 16;
				this.useTime = 16;
				this.rare = 3;
				this.noMelee = true;
				this.knockBack = 5.5f;
				this.value = this.hellPrice;
				this.magic = true;
				if (this.Variant == ItemVariants.StrongerVariant)
				{
					this.rare = 6;
					this.value = 500000;
					this.damage = 85;
					this.useAnimation = 12;
					this.useTime = 12;
				}
			}
			else if (type == 113)
			{
				this.mana = 14;
				this.channel = true;
				this.damage = 35;
				this.useStyle = 1;
				this.shootSpeed = 6f;
				this.shoot = 16;
				this.width = 26;
				this.height = 28;
				this.UseSound = SoundID.Item9;
				this.useAnimation = 22;
				this.useTime = 22;
				this.rare = 2;
				this.noMelee = true;
				this.knockBack = 7.5f;
				this.value = this.dungeonPrice;
				this.magic = true;
			}
			else if (type == 114)
			{
				this.channel = true;
				this.knockBack = 5f;
				this.useStyle = 1;
				this.shoot = 17;
				this.width = 26;
				this.height = 28;
				this.UseSound = SoundID.Item8;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 5, 0, 0);
			}
			else if (type == 115)
			{
				this.channel = true;
				this.damage = 0;
				this.useStyle = 4;
				this.shoot = 18;
				this.width = 24;
				this.height = 24;
				this.UseSound = SoundID.Item8;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = this.shadowOrbPrice;
				this.buffType = 19;
			}
			else if (type == 116)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 37;
				this.width = 12;
				this.height = 12;
				this.value = 1000;
			}
			else if (type == 117)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 1;
				this.value = 7000;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 9;
			}
			else if (type == 118)
			{
				this.maxStack = Item.CommonMaxStack;
				this.width = 18;
				this.height = 18;
				this.value = 1000;
			}
			else if (type == 119)
			{
				this.noMelee = true;
				this.useStyle = 1;
				this.shootSpeed = 14f;
				this.shoot = 19;
				this.damage = 49;
				this.knockBack = 8f;
				this.width = 14;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.noUseGraphic = true;
				this.rare = 3;
				this.value = 100000;
				this.melee = true;
			}
			else if (type == 120)
			{
				this.useStyle = 5;
				this.useAnimation = 22;
				this.useTime = 22;
				this.width = 14;
				this.height = 32;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = SoundID.Item5;
				this.damage = 31;
				this.shootSpeed = 8f;
				this.knockBack = 2f;
				this.alpha = 30;
				this.rare = 3;
				this.noMelee = true;
				this.scale = 1.1f;
				this.value = 27000;
				this.ranged = true;
			}
			else if (type == 121)
			{
				this.useStyle = 1;
				this.useTime = 40;
				this.useAnimation = 40;
				this.knockBack = 6.5f;
				this.width = 24;
				this.height = 28;
				this.damage = 40;
				this.scale = 1f;
				this.UseSound = SoundID.Item1;
				this.rare = 3;
				this.value = 27000;
				this.melee = true;
			}
			if (type == 122)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 23;
				this.useTime = 18;
				this.autoReuse = true;
				this.width = 24;
				this.height = 28;
				this.damage = 12;
				this.pick = 100;
				this.scale = 1f;
				this.UseSound = SoundID.Item1;
				this.knockBack = 2f;
				this.rare = 3;
				this.value = 27000;
				this.melee = true;
				return;
			}
			if (type == 123)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 5;
				this.headSlot = 6;
				this.rare = 1;
				this.value = 45000;
				return;
			}
			if (type == 124)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.bodySlot = 6;
				this.rare = 1;
				this.value = 30000;
				return;
			}
			if (type == 125)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 5;
				this.legSlot = 6;
				this.rare = 1;
				this.value = 30000;
				return;
			}
			if (type == 126)
			{
				this.UseSound = SoundID.Item3;
				this.healLife = 20;
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.potion = true;
				this.value = 20;
				return;
			}
			if (type == 127)
			{
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 17;
				this.useTime = 17;
				this.width = 24;
				this.height = 28;
				this.shoot = 20;
				this.mana = 6;
				this.UseSound = SoundID.Item157;
				this.knockBack = 0.75f;
				this.damage = 17;
				this.shootSpeed = 10f;
				this.noMelee = true;
				this.scale = 0.8f;
				this.rare = 1;
				this.magic = true;
				this.value = 20000;
				return;
			}
			if (type == 128)
			{
				this.width = 28;
				this.height = 24;
				this.accessory = true;
				this.rare = 3;
				this.value = 50000;
				this.shoeSlot = 12;
				return;
			}
			if (type == 129)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 38;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 130)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 5;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 131)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 39;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 132)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 6;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 133)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 40;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 134)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 41;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 135)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 17;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 136)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 42;
				this.width = 12;
				this.height = 28;
				this.value = Item.sellPrice(0, 0, 0, 30);
				return;
			}
			if (type == 137)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 43;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 138)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 18;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 139)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 44;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 140)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 19;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 141)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 45;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 142)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 10;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 143)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 46;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 144)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 11;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 145)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 47;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 146)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 12;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 147)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 48;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 148)
			{
				this.flame = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 49;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.holdStyle = 1;
				this.rare = 1;
				return;
			}
			if (type == 149)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 50;
				this.width = 24;
				this.height = 28;
				this.value = Item.sellPrice(0, 0, 3, 0);
				return;
			}
			if (type == 150)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 51;
				this.width = 20;
				this.height = 24;
				this.alpha = 100;
				return;
			}
			if (type == 151)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.headSlot = 7;
				this.rare = 2;
				this.value = 45000;
				return;
			}
			if (type == 152)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 7;
				this.bodySlot = 7;
				this.rare = 2;
				this.value = 30000;
				return;
			}
			if (type == 153)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.legSlot = 7;
				this.rare = 2;
				this.value = 30000;
				return;
			}
			if (type == 154)
			{
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 14;
				this.value = 50;
				this.useAnimation = 12;
				this.useTime = 12;
				this.useStyle = 1;
				this.UseSound = SoundID.Item1;
				this.shootSpeed = 8f;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.damage = 20;
				this.knockBack = 2.3f;
				this.shoot = 21;
				this.ranged = true;
				return;
			}
			if (type == 155)
			{
				this.autoReuse = true;
				this.useTurn = true;
				this.useStyle = 1;
				this.useTime = 18;
				this.useAnimation = 18;
				this.width = 40;
				this.height = 40;
				this.damage = 24;
				this.scale = 1f;
				this.UseSound = SoundID.Item1;
				this.rare = 2;
				this.value = this.dungeonPrice;
				this.knockBack = 3f;
				this.melee = true;
				return;
			}
			if (type == 156)
			{
				this.width = 24;
				this.height = 28;
				this.rare = 2;
				this.value = this.dungeonPrice;
				this.accessory = true;
				this.defense = 1;
				this.shieldSlot = 1;
				return;
			}
			if (type == 157)
			{
				this.mana = 7;
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 16;
				this.useTime = 8;
				this.knockBack = 7f;
				this.width = 38;
				this.height = 10;
				this.damage = 27;
				this.scale = 1f;
				this.shoot = 22;
				this.shootSpeed = 12.5f;
				this.UseSound = SoundID.Item13;
				this.noMelee = true;
				this.rare = 2;
				this.value = this.dungeonPrice;
				this.magic = true;
				if (this.Variant == ItemVariants.StrongerVariant)
				{
					this.value = Item.sellPrice(0, 5, 0, 0);
					this.rare = 8;
					this.damage = 90;
					this.useAnimation = 10;
					this.useTime = 5;
					return;
				}
			}
			else
			{
				if (type == 158)
				{
					this.width = 20;
					this.height = 22;
					this.rare = 1;
					this.value = 27000;
					this.accessory = true;
					return;
				}
				if (type == 159)
				{
					this.width = 14;
					this.height = 28;
					this.rare = 1;
					this.value = Item.sellPrice(0, 1, 50, 0);
					this.accessory = true;
					this.balloonSlot = 8;
					return;
				}
				if (type == 160)
				{
					this.autoReuse = true;
					this.noMelee = true;
					this.useStyle = 5;
					this.useAnimation = 30;
					this.useTime = 30;
					this.knockBack = 6f;
					this.width = 30;
					this.height = 10;
					this.damage = 25;
					this.scale = 1.1f;
					this.shoot = 23;
					this.shootSpeed = 11f;
					this.UseSound = SoundID.Item10;
					this.rare = 2;
					this.value = 27000;
					this.ranged = true;
					return;
				}
				if (type == 161)
				{
					this.useStyle = 1;
					this.shootSpeed = 5f;
					this.shoot = 24;
					this.knockBack = 1f;
					this.damage = 16;
					this.width = 10;
					this.height = 10;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.UseSound = SoundID.Item1;
					this.useAnimation = 15;
					this.useTime = 15;
					this.noUseGraphic = true;
					this.noMelee = true;
					this.value = 80;
					this.ranged = true;
					return;
				}
				if (type == 162)
				{
					this.useStyle = 5;
					this.useAnimation = 45;
					this.useTime = 45;
					this.knockBack = 5.5f;
					this.width = 30;
					this.height = 10;
					this.damage = 15;
					this.scale = 1.1f;
					this.noUseGraphic = true;
					this.shoot = 25;
					this.shootSpeed = 12f;
					this.UseSound = SoundID.Item1;
					this.rare = 1;
					this.value = this.shadowOrbPrice;
					this.melee = true;
					this.channel = true;
					this.noMelee = true;
					return;
				}
				if (type == 163)
				{
					this.noMelee = true;
					this.useStyle = 5;
					this.useAnimation = 45;
					this.useTime = 45;
					this.knockBack = 6f;
					this.width = 30;
					this.height = 10;
					this.damage = 27;
					this.scale = 1.1f;
					this.noUseGraphic = true;
					this.shoot = 26;
					this.shootSpeed = 12f;
					this.UseSound = SoundID.Item1;
					this.rare = 2;
					this.value = this.dungeonPrice;
					this.melee = true;
					this.channel = true;
					return;
				}
				if (type == 164)
				{
					this.autoReuse = false;
					this.useStyle = 5;
					this.useAnimation = 15;
					this.useTime = 15;
					this.width = 24;
					this.height = 24;
					this.shoot = 14;
					this.knockBack = 3f;
					this.useAmmo = AmmoID.Bullet;
					this.UseSound = SoundID.Item41;
					this.damage = 26;
					this.shootSpeed = 10f;
					this.noMelee = true;
					this.value = this.dungeonPrice;
					this.scale = 0.85f;
					this.rare = 2;
					this.ranged = true;
					return;
				}
				if (type == 165)
				{
					this.autoReuse = true;
					this.rare = 2;
					this.mana = 10;
					this.UseSound = SoundID.Item21;
					this.noMelee = true;
					this.useStyle = 5;
					this.damage = 19;
					this.useAnimation = 17;
					this.useTime = 17;
					this.width = 24;
					this.height = 28;
					this.shoot = 27;
					this.scale = 0.9f;
					this.shootSpeed = 4.5f;
					this.knockBack = 5f;
					this.magic = true;
					this.value = Item.sellPrice(0, 1, 50, 0);
					return;
				}
				if (type == 166)
				{
					this.useStyle = 1;
					this.shootSpeed = 5f;
					this.shoot = 28;
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.UseSound = SoundID.Item1;
					this.useAnimation = 25;
					this.useTime = 25;
					this.noUseGraphic = true;
					this.noMelee = true;
					this.value = Item.buyPrice(0, 0, 3, 0);
					this.damage = 0;
					return;
				}
				if (type == 167)
				{
					this.useStyle = 1;
					this.shootSpeed = 4f;
					this.shoot = 29;
					this.width = 8;
					this.height = 28;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.UseSound = SoundID.Item1;
					this.useAnimation = 40;
					this.useTime = 40;
					this.noUseGraphic = true;
					this.noMelee = true;
					this.value = Item.buyPrice(0, 0, 20, 0);
					this.rare = 1;
					return;
				}
				if (type == 168)
				{
					this.useStyle = 5;
					this.shootSpeed = 5.5f;
					this.shoot = 30;
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.UseSound = SoundID.Item1;
					this.useAnimation = 45;
					this.useTime = 45;
					this.noUseGraphic = true;
					this.noMelee = true;
					this.value = 75;
					this.damage = 60;
					this.knockBack = 8f;
					this.ranged = true;
					return;
				}
				if (type == 169)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 53;
					this.width = 12;
					this.height = 12;
					this.ammo = AmmoID.Sand;
					this.notAmmo = true;
					return;
				}
				if (type == 170)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 54;
					this.width = 12;
					this.height = 12;
					return;
				}
				if (type == 171)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 55;
					this.width = 28;
					this.height = 28;
					return;
				}
				if (type == 172)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 57;
					this.width = 12;
					this.height = 12;
					return;
				}
				if (type == 173)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 56;
					this.width = 12;
					this.height = 12;
					return;
				}
				if (type == 174)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 58;
					this.width = 12;
					this.height = 12;
					this.rare = 2;
					this.value = Item.sellPrice(0, 0, 2, 50);
					return;
				}
				if (type == 175)
				{
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.rare = 2;
					this.value = 20000;
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.consumable = true;
					this.createTile = 239;
					this.placeStyle = 10;
					return;
				}
				if (type == 176)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 59;
					this.width = 12;
					this.height = 12;
					return;
				}
				if (type == 181)
				{
					this.createTile = 178;
					this.placeStyle = 0;
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.alpha = 50;
					this.width = 10;
					this.height = 14;
					this.value = 1875;
					return;
				}
				if (type == 180)
				{
					this.createTile = 178;
					this.placeStyle = 1;
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.alpha = 50;
					this.width = 10;
					this.height = 14;
					this.value = 3750;
					return;
				}
				if (type == 177)
				{
					this.createTile = 178;
					this.placeStyle = 2;
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.alpha = 50;
					this.width = 10;
					this.height = 14;
					this.value = 5625;
					return;
				}
				if (type == 179)
				{
					this.createTile = 178;
					this.placeStyle = 3;
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.alpha = 50;
					this.width = 10;
					this.height = 14;
					this.value = 7500;
					return;
				}
				if (type == 178)
				{
					this.createTile = 178;
					this.placeStyle = 4;
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.alpha = 50;
					this.width = 10;
					this.height = 14;
					this.value = 11250;
					return;
				}
				if (type == 182)
				{
					this.createTile = 178;
					this.placeStyle = 5;
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.alpha = 50;
					this.width = 10;
					this.height = 14;
					this.value = 15000;
					return;
				}
				if (type == 183)
				{
					this.width = 16;
					this.height = 18;
					this.value = 50;
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 190;
					return;
				}
				if (type == 184)
				{
					this.width = 12;
					this.height = 12;
					return;
				}
				if (type == 185)
				{
					this.noUseGraphic = true;
					this.damage = 0;
					this.knockBack = 7f;
					this.useStyle = 5;
					this.shootSpeed = 13f;
					this.shoot = 32;
					this.width = 18;
					this.height = 28;
					this.UseSound = SoundID.Item1;
					this.useAnimation = 20;
					this.useTime = 20;
					this.rare = 3;
					this.noMelee = true;
					this.value = 20000;
					return;
				}
				if (type == 186)
				{
					this.width = 44;
					this.height = 44;
					this.rare = 1;
					this.value = 10000;
					this.holdStyle = 2;
					this.useStyle = 1;
					this.useAnimation = 27;
					this.useTime = 19;
					this.knockBack = 4f;
					this.damage = 10;
					this.UseSound = SoundID.Item1;
					this.melee = true;
					return;
				}
				if (type == 187)
				{
					this.width = 28;
					this.height = 28;
					this.rare = 1;
					this.value = 10000;
					this.accessory = true;
					this.shoeSlot = 1;
					return;
				}
				if (type == 188)
				{
					this.UseSound = SoundID.Item3;
					this.healLife = 100;
					this.useStyle = 9;
					this.useTurn = true;
					this.useAnimation = 17;
					this.useTime = 17;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.width = 14;
					this.height = 24;
					this.rare = 1;
					this.potion = true;
					this.value = 1000;
					return;
				}
				if (type == 189)
				{
					this.UseSound = SoundID.Item3;
					this.healMana = 100;
					this.useStyle = 9;
					this.useTurn = true;
					this.useAnimation = 17;
					this.useTime = 17;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.width = 14;
					this.height = 24;
					this.rare = 1;
					this.value = Item.buyPrice(0, 0, 2, 50);
					return;
				}
				if (type == 190)
				{
					this.useStyle = 1;
					this.useAnimation = 20;
					this.useTime = 20;
					this.shoot = 976;
					this.shootSpeed = 20f;
					this.knockBack = 4.5f;
					this.width = 40;
					this.height = 40;
					this.damage = 18;
					this.scale = 1f;
					this.UseSound = SoundID.Item1;
					this.rare = 3;
					this.value = 27000;
					this.melee = true;
					this.shootsEveryUse = true;
					return;
				}
				if (type == 191)
				{
					this.noMelee = true;
					this.useStyle = 1;
					this.shootSpeed = 14f;
					this.shoot = 33;
					this.damage = 25;
					this.knockBack = 8f;
					this.width = 14;
					this.height = 28;
					this.UseSound = SoundID.Item1;
					this.useAnimation = 15;
					this.useTime = 15;
					this.noUseGraphic = true;
					this.rare = 3;
					this.value = 50000;
					this.melee = true;
					return;
				}
				if (type == 192)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 75;
					this.width = 12;
					this.height = 12;
					return;
				}
				if (type == 193)
				{
					this.width = 20;
					this.height = 22;
					this.rare = 2;
					this.value = 27000;
					this.accessory = true;
					this.faceSlot = 12;
					this.defense = 1;
					return;
				}
				if (type == 194)
				{
					this.autoReuse = true;
					this.useTurn = true;
					this.useStyle = 1;
					this.useAnimation = 15;
					this.useTime = 10;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 70;
					this.width = 14;
					this.height = 14;
					this.value = 150;
					return;
				}
				if (type == 195)
				{
					this.autoReuse = true;
					this.useTurn = true;
					this.useStyle = 1;
					this.useAnimation = 15;
					this.useTime = 10;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 60;
					this.width = 14;
					this.height = 14;
					this.value = 150;
					return;
				}
				if (type == 196)
				{
					this.autoReuse = true;
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 37;
					this.useTime = 25;
					this.hammer = 25;
					this.width = 24;
					this.height = 28;
					this.damage = 2;
					this.knockBack = 5.5f;
					this.scale = 1f;
					this.UseSound = SoundID.Item1;
					this.tileBoost = -1;
					this.value = 50;
					this.melee = true;
					return;
				}
				if (type == 197)
				{
					this.autoReuse = true;
					this.useStyle = 5;
					this.useAnimation = 12;
					this.useTime = 12;
					this.width = 50;
					this.height = 18;
					this.shoot = 955;
					this.useAmmo = AmmoID.FallenStar;
					this.UseSound = SoundID.Item9;
					this.knockBack = 3f;
					this.damage = 55;
					this.shootSpeed = 14f;
					this.noMelee = true;
					this.value = 500000;
					this.rare = 2;
					this.ranged = true;
					if (this.Variant == ItemVariants.RebalancedVariant)
					{
						this.damage = (int)((double)this.damage * 0.9);
						this.useTime = (int)((double)this.useTime * 1.1);
						return;
					}
				}
				else
				{
					if (type == 198)
					{
						this.useStyle = 1;
						this.useTime = 18;
						this.useAnimation = 18;
						this.knockBack = 3f;
						this.width = 40;
						this.height = 40;
						this.damage = 26;
						this.scale = 1f;
						this.UseSound = SoundID.Item15;
						this.rare = 1;
						this.value = 27000;
						this.melee = true;
						return;
					}
					if (type == 199)
					{
						this.useStyle = 1;
						this.useTime = 18;
						this.useAnimation = 18;
						this.knockBack = 3f;
						this.width = 40;
						this.height = 40;
						this.damage = 26;
						this.scale = 1f;
						this.UseSound = SoundID.Item15;
						this.rare = 1;
						this.value = 27000;
						this.melee = true;
						return;
					}
					if (type == 200)
					{
						this.useStyle = 1;
						this.useTime = 18;
						this.useAnimation = 18;
						this.knockBack = 3f;
						this.width = 40;
						this.height = 40;
						this.damage = 26;
						this.scale = 1f;
						this.UseSound = SoundID.Item15;
						this.rare = 1;
						this.value = 27000;
						this.melee = true;
						return;
					}
					if (type == 201)
					{
						this.useStyle = 1;
						this.useTime = 18;
						this.useAnimation = 18;
						this.knockBack = 3f;
						this.width = 40;
						this.height = 40;
						this.damage = 26;
						this.scale = 1f;
						this.UseSound = SoundID.Item15;
						this.rare = 1;
						this.value = 27000;
						this.melee = true;
						return;
					}
					if (type == 202)
					{
						this.useStyle = 1;
						this.useTime = 18;
						this.useAnimation = 18;
						this.knockBack = 3f;
						this.width = 40;
						this.height = 40;
						this.damage = 26;
						this.scale = 1f;
						this.UseSound = SoundID.Item15;
						this.rare = 1;
						this.value = 27000;
						this.melee = true;
						return;
					}
					if (type == 203)
					{
						this.useStyle = 1;
						this.useTime = 18;
						this.useAnimation = 18;
						this.knockBack = 3f;
						this.width = 40;
						this.height = 40;
						this.damage = 26;
						this.scale = 1f;
						this.UseSound = SoundID.Item15;
						this.rare = 1;
						this.value = 27000;
						this.melee = true;
						return;
					}
					if (type == 204)
					{
						this.useTurn = true;
						this.autoReuse = true;
						this.useStyle = 1;
						this.useAnimation = 30;
						this.useTime = 16;
						this.hammer = 60;
						this.axe = 20;
						this.width = 24;
						this.height = 28;
						this.damage = 20;
						this.knockBack = 7f;
						this.scale = 1f;
						this.UseSound = SoundID.Item1;
						this.rare = 1;
						this.value = 15000;
						this.melee = true;
						return;
					}
					if (type == 205)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.width = 20;
						this.height = 20;
						this.headSlot = 13;
						this.defense = 1;
						this.maxStack = Item.CommonMaxStack;
						this.autoReuse = true;
						return;
					}
					if (type == 206)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.width = 20;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.autoReuse = true;
						return;
					}
					if (type == 207)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.width = 20;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.autoReuse = true;
						return;
					}
					if (type == 208)
					{
						this.width = 20;
						this.height = 20;
						this.value = 100;
						this.faceSlot = 8;
						this.accessory = true;
						this.vanity = true;
						return;
					}
					if (type == 209)
					{
						this.width = 16;
						this.height = 18;
						this.maxStack = Item.CommonMaxStack;
						this.value = 200;
						return;
					}
					if (type == 210)
					{
						this.width = 14;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.value = 1000;
						return;
					}
					if (type == 211)
					{
						this.width = 20;
						this.height = 20;
						this.accessory = true;
						this.rare = 3;
						this.value = 50000;
						this.handOnSlot = 5;
						this.handOffSlot = 9;
						return;
					}
					if (type == 212)
					{
						this.width = 20;
						this.height = 20;
						this.accessory = true;
						this.rare = 3;
						this.value = 50000;
						return;
					}
					if (type == 213)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 25;
						this.useTime = 13;
						this.autoReuse = true;
						this.width = 24;
						this.height = 28;
						this.damage = 7;
						this.createTile = 2;
						this.UseSound = SoundID.Item1;
						this.knockBack = 3f;
						this.rare = 3;
						this.SetShopValues(ItemRarityColor.Orange3, Item.sellPrice(0, 0, 50, 0));
						this.melee = true;
						return;
					}
					if (type == 214)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 76;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 215)
					{
						this.width = 18;
						this.height = 18;
						this.useTurn = true;
						this.useTime = 30;
						this.useAnimation = 30;
						this.noUseGraphic = true;
						this.useStyle = 10;
						this.UseSound = SoundID.Item16;
						this.rare = 2;
						this.value = 100;
						return;
					}
					if (type == 216)
					{
						this.width = 20;
						this.height = 20;
						this.rare = 1;
						this.value = Item.sellPrice(0, 0, 20, 0);
						this.accessory = true;
						this.defense = 1;
						this.handOffSlot = 7;
						this.handOnSlot = 12;
						return;
					}
					if (type == 217)
					{
						this.useTurn = true;
						this.autoReuse = true;
						this.useStyle = 1;
						this.useAnimation = 27;
						this.useTime = 14;
						this.hammer = 70;
						this.axe = 30;
						this.width = 24;
						this.height = 28;
						this.damage = 20;
						this.knockBack = 7f;
						this.scale = 1f;
						this.UseSound = SoundID.Item1;
						this.rare = 3;
						this.value = 27000;
						this.melee = true;
						return;
					}
					if (type == 218)
					{
						this.mana = 21;
						this.channel = true;
						this.damage = 32;
						this.useStyle = 1;
						this.shootSpeed = 6f;
						this.shoot = 34;
						this.width = 26;
						this.height = 28;
						this.UseSound = SoundID.Item20;
						this.useAnimation = 30;
						this.useTime = 30;
						this.rare = 3;
						this.noMelee = true;
						this.knockBack = 6.5f;
						this.value = this.hellPrice;
						this.magic = true;
						return;
					}
					if (type == 219)
					{
						this.autoReuse = false;
						this.useStyle = 5;
						this.useAnimation = 14;
						this.useTime = 14;
						this.width = 24;
						this.height = 22;
						this.shoot = 14;
						this.knockBack = 2f;
						this.useAmmo = AmmoID.Bullet;
						this.UseSound = SoundID.Item41;
						this.damage = 30;
						this.shootSpeed = 13f;
						this.noMelee = true;
						this.value = Item.sellPrice(0, 3, 50, 0);
						this.scale = 0.85f;
						this.rare = 3;
						this.ranged = true;
						return;
					}
					if (type == 220)
					{
						this.noMelee = true;
						this.useStyle = 5;
						this.useAnimation = 45;
						this.useTime = 45;
						this.knockBack = 6.75f;
						this.width = 30;
						this.height = 10;
						this.damage = 32;
						this.crit = 7;
						this.scale = 1.1f;
						this.noUseGraphic = true;
						this.shoot = 35;
						this.shootSpeed = 12f;
						this.UseSound = SoundID.Item1;
						this.rare = 3;
						this.value = this.hellPrice;
						this.melee = true;
						this.channel = true;
						return;
					}
					if (type == 221)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 77;
						this.width = 26;
						this.height = 24;
						this.value = 3000;
						return;
					}
					if (type == 222)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 78;
						this.width = 14;
						this.height = 14;
						this.value = 100;
						return;
					}
					if (type == 223)
					{
						this.width = 20;
						this.height = 22;
						this.rare = 3;
						this.value = 27000;
						this.accessory = true;
						this.faceSlot = 1;
						return;
					}
					if (type == 224)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 79;
						this.width = 28;
						this.height = 20;
						this.value = 2000;
						return;
					}
					if (type == 225)
					{
						this.maxStack = Item.CommonMaxStack;
						this.width = 22;
						this.height = 22;
						this.value = 1000;
						return;
					}
					if (type == 226 || type == 227)
					{
						this.type = 227;
						this.UseSound = SoundID.Item3;
						this.healLife = 90;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.potion = true;
						this.value = 1500;
						this.rare = 1;
						return;
					}
					if (type == 228)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 5;
						this.headSlot = 8;
						this.rare = 3;
						this.value = 45000;
						return;
					}
					if (type == 229)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 6;
						this.bodySlot = 8;
						this.rare = 3;
						this.value = 30000;
						return;
					}
					if (type == 230)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 6;
						this.legSlot = 8;
						this.rare = 3;
						this.value = 30000;
						return;
					}
					if (type == 231)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 8;
						this.headSlot = 9;
						this.rare = 3;
						this.value = 45000;
						return;
					}
					if (type == 232)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 9;
						this.bodySlot = 9;
						this.rare = 3;
						this.value = 30000;
						return;
					}
					if (type == 233)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 8;
						this.legSlot = 9;
						this.rare = 3;
						this.value = 30000;
						return;
					}
					if (type == 234)
					{
						this.shootSpeed = 3f;
						this.shoot = 36;
						this.damage = 8;
						this.width = 8;
						this.height = 8;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.ammo = AmmoID.Bullet;
						this.knockBack = 1f;
						this.value = 8;
						this.rare = 1;
						this.ranged = true;
						return;
					}
					if (type == 235)
					{
						this.useStyle = 1;
						this.shootSpeed = 5f;
						this.shoot = 37;
						this.width = 20;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.UseSound = SoundID.Item1;
						this.useAnimation = 25;
						this.useTime = 25;
						this.noUseGraphic = true;
						this.noMelee = true;
						this.value = 500;
						this.damage = 0;
						return;
					}
					if (type == 236)
					{
						this.width = 12;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.value = 5000;
						return;
					}
					if (type == 237)
					{
						this.width = 28;
						this.height = 12;
						this.headSlot = 12;
						this.rare = 2;
						this.value = 10000;
						this.vanity = true;
						return;
					}
					if (type == 238)
					{
						this.width = 28;
						this.height = 20;
						this.headSlot = 14;
						this.rare = 2;
						this.value = 10000;
						this.defense = 4;
						return;
					}
					if (type == 239)
					{
						this.width = 18;
						this.height = 18;
						this.headSlot = 15;
						this.value = 10000;
						this.vanity = true;
						return;
					}
					if (type == 240)
					{
						this.width = 18;
						this.height = 18;
						this.bodySlot = 10;
						this.value = 5000;
						this.vanity = true;
						return;
					}
					if (type == 241)
					{
						this.width = 18;
						this.height = 18;
						this.legSlot = 10;
						this.value = 5000;
						this.vanity = true;
						return;
					}
					if (type == 242)
					{
						this.width = 18;
						this.height = 18;
						this.headSlot = 16;
						this.value = 10000;
						this.vanity = true;
						return;
					}
					if (type == 243)
					{
						this.width = 18;
						this.height = 18;
						this.headSlot = 17;
						this.value = 20000;
						this.vanity = true;
						return;
					}
					if (type == 244)
					{
						this.width = 18;
						this.height = 12;
						this.headSlot = 18;
						this.value = 10000;
						this.vanity = true;
						return;
					}
					if (type == 245)
					{
						this.width = 18;
						this.height = 18;
						this.bodySlot = 11;
						this.value = 250000;
						this.vanity = true;
						return;
					}
					if (type == 246)
					{
						this.width = 18;
						this.height = 18;
						this.legSlot = 11;
						this.value = 250000;
						this.vanity = true;
						return;
					}
					if (type == 247)
					{
						this.width = 18;
						this.height = 12;
						this.headSlot = 19;
						this.value = 10000;
						this.vanity = true;
						return;
					}
					if (type == 248)
					{
						this.width = 18;
						this.height = 18;
						this.bodySlot = 12;
						this.value = 5000;
						this.vanity = true;
						return;
					}
					if (type == 249)
					{
						this.width = 18;
						this.height = 18;
						this.legSlot = 12;
						this.value = 5000;
						this.vanity = true;
						return;
					}
					if (type == 250)
					{
						this.width = 18;
						this.height = 18;
						this.headSlot = 20;
						this.value = 10000;
						this.vanity = true;
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 282;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 251)
					{
						this.width = 18;
						this.height = 12;
						this.headSlot = 21;
						this.value = 10000;
						this.vanity = true;
						return;
					}
					if (type == 252)
					{
						this.width = 18;
						this.height = 18;
						this.bodySlot = 13;
						this.value = 5000;
						this.vanity = true;
						return;
					}
					if (type == 253)
					{
						this.width = 18;
						this.height = 18;
						this.legSlot = 13;
						this.value = 5000;
						this.vanity = true;
						return;
					}
					if (type == 254)
					{
						this.maxStack = Item.CommonMaxStack;
						this.width = 12;
						this.height = 20;
						this.value = 10000;
						return;
					}
					if (type == 255)
					{
						this.maxStack = Item.CommonMaxStack;
						this.width = 12;
						this.height = 20;
						this.value = 2000;
						return;
					}
					if (type == 256)
					{
						this.width = 18;
						this.height = 12;
						this.headSlot = 22;
						this.value = 10000;
						this.defense = 2;
						this.rare = 1;
						return;
					}
					if (type == 257)
					{
						this.width = 18;
						this.height = 18;
						this.bodySlot = 14;
						this.value = 5000;
						this.defense = 4;
						this.rare = 1;
						return;
					}
					if (type == 258)
					{
						this.width = 18;
						this.height = 18;
						this.legSlot = 14;
						this.value = 5000;
						this.defense = 3;
						this.rare = 1;
						return;
					}
					if (type == 259)
					{
						this.width = 18;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.value = 50;
						return;
					}
					if (type == 260)
					{
						this.width = 18;
						this.height = 14;
						this.headSlot = 24;
						this.value = 1000;
						this.vanity = true;
						return;
					}
					if (type == 261)
					{
						this.useStyle = 1;
						this.autoReuse = true;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 12;
						this.height = 12;
						this.noUseGraphic = true;
						this.makeNPC = 55;
						return;
					}
					if (type == 262)
					{
						this.width = 18;
						this.height = 14;
						this.bodySlot = 15;
						this.value = 2000;
						this.vanity = true;
						return;
					}
					if (type == 263)
					{
						this.width = 18;
						this.height = 18;
						this.headSlot = 25;
						this.value = 10000;
						this.vanity = true;
						return;
					}
					if (type == 264)
					{
						this.width = 18;
						this.height = 18;
						this.headSlot = 26;
						this.value = 10000;
						this.vanity = true;
						return;
					}
					if (type == 265)
					{
						this.shootSpeed = 6.5f;
						this.shoot = 41;
						this.damage = 13;
						this.width = 10;
						this.height = 28;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.ammo = AmmoID.Arrow;
						this.knockBack = 8f;
						this.value = 100;
						this.rare = 2;
						this.ranged = true;
						return;
					}
					if (type == 266)
					{
						this.useStyle = 5;
						this.useAnimation = 16;
						this.useTime = 16;
						this.autoReuse = true;
						this.width = 40;
						this.height = 20;
						this.shoot = 42;
						this.useAmmo = AmmoID.Sand;
						this.UseSound = SoundID.Item11;
						this.damage = 30;
						this.shootSpeed = 12f;
						this.noMelee = true;
						this.knockBack = 5f;
						this.value = 10000;
						this.rare = 2;
						this.ranged = true;
						return;
					}
					if (type == 267)
					{
						this.accessory = true;
						this.width = 14;
						this.height = 26;
						this.value = 1000;
						this.maxStack = Item.CommonMaxStack;
						return;
					}
					if (type == 268)
					{
						this.headSlot = 27;
						this.defense = 2;
						this.width = 20;
						this.height = 20;
						this.value = 1000;
						this.rare = 2;
						return;
					}
					if (type == 269)
					{
						this.bodySlot = 0;
						this.width = 20;
						this.height = 20;
						this.value = 10000;
						this.color = Main.player[Main.myPlayer].shirtColor;
						this.vanity = true;
						return;
					}
					if (type == 270)
					{
						this.legSlot = 0;
						this.width = 20;
						this.height = 20;
						this.value = 10000;
						this.color = Main.player[Main.myPlayer].pantsColor;
						this.vanity = true;
						return;
					}
					if (type == 271)
					{
						this.headSlot = 0;
						this.width = 20;
						this.height = 20;
						this.value = 10000;
						this.color = Main.player[Main.myPlayer].hairColor;
						this.vanity = true;
						return;
					}
					if (type == 272)
					{
						this.mana = 14;
						this.damage = 35;
						this.useStyle = 5;
						this.shootSpeed = 0.2f;
						this.shoot = 45;
						this.width = 26;
						this.height = 28;
						this.UseSound = SoundID.Item8;
						this.useAnimation = 20;
						this.useTime = 20;
						this.rare = 3;
						this.noMelee = true;
						this.knockBack = 5f;
						this.scale = 0.9f;
						this.value = Item.sellPrice(0, 1, 50, 0);
						this.magic = true;
						return;
					}
					if (type == 273)
					{
						this.useStyle = 1;
						this.useAnimation = 25;
						this.useTime = 25;
						this.autoReuse = true;
						this.knockBack = 4.5f;
						this.width = 40;
						this.height = 40;
						this.damage = 40;
						this.scale = 1f;
						this.UseSound = SoundID.Item1;
						this.rare = 3;
						this.value = Item.sellPrice(0, 4, 0, 0);
						this.melee = true;
						this.shoot = 972;
						this.shootSpeed = 5f;
						this.noMelee = true;
						this.shootsEveryUse = true;
						return;
					}
					if (type == 274)
					{
						this.useStyle = 5;
						this.useAnimation = 22;
						this.useTime = 22;
						this.shootSpeed = 6f;
						this.knockBack = 5f;
						this.width = 40;
						this.height = 40;
						this.damage = 34;
						this.scale = 1.1f;
						this.UseSound = SoundID.Item1;
						this.shoot = 46;
						this.rare = 3;
						this.value = this.hellPrice;
						this.noMelee = true;
						this.noUseGraphic = true;
						this.melee = true;
						return;
					}
					if (type == 275)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 81;
						this.width = 20;
						this.height = 22;
						this.value = Item.sellPrice(0, 0, 2, 0);
						return;
					}
					if (type == 276)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 188;
						this.width = 12;
						this.height = 12;
						this.value = 10;
						return;
					}
					if (type == 277)
					{
						this.useStyle = 5;
						this.useAnimation = 31;
						this.useTime = 31;
						this.shootSpeed = 4f;
						this.knockBack = 6f;
						this.width = 40;
						this.height = 40;
						this.damage = 14;
						this.scale = 1.1f;
						this.UseSound = SoundID.Item1;
						this.shoot = 47;
						this.rare = 1;
						this.value = 10000;
						this.noMelee = true;
						this.noUseGraphic = true;
						this.melee = true;
						return;
					}
					if (type == 278)
					{
						this.shootSpeed = 4.5f;
						this.shoot = 981;
						this.damage = 9;
						this.width = 8;
						this.height = 8;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.ammo = AmmoID.Bullet;
						this.knockBack = 3f;
						this.value = 15;
						this.ranged = true;
						return;
					}
					if (type == 279)
					{
						this.useStyle = 1;
						this.shootSpeed = 10f;
						this.shoot = 48;
						this.damage = 12;
						this.width = 18;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.UseSound = SoundID.Item1;
						this.useAnimation = 15;
						this.useTime = 15;
						this.noUseGraphic = true;
						this.noMelee = true;
						this.value = 50;
						this.knockBack = 2f;
						this.ranged = true;
						return;
					}
					if (type == 280)
					{
						this.useStyle = 5;
						this.useAnimation = 31;
						this.useTime = 31;
						this.shootSpeed = 3.7f;
						this.knockBack = 6.5f;
						this.width = 32;
						this.height = 32;
						this.damage = 8;
						this.scale = 1f;
						this.UseSound = SoundID.Item1;
						this.shoot = 49;
						this.value = 1000;
						this.noMelee = true;
						this.noUseGraphic = true;
						this.melee = true;
						return;
					}
					if (type == 281)
					{
						this.useStyle = 5;
						this.autoReuse = true;
						this.useAnimation = 25;
						this.useTime = 25;
						this.width = 38;
						this.height = 6;
						this.shoot = 10;
						this.useAmmo = AmmoID.Dart;
						this.UseSound = SoundID.Item63;
						this.damage = 9;
						this.shootSpeed = 11f;
						this.noMelee = true;
						this.value = 10000;
						this.knockBack = 3.5f;
						this.ranged = true;
						return;
					}
					if (type == 282)
					{
						this.color = new Color(255, 255, 255, 0);
						this.useStyle = 1;
						this.shootSpeed = 6f;
						this.shoot = 50;
						this.width = 12;
						this.height = 12;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.UseSound = SoundID.Item1;
						this.useAnimation = 15;
						this.useTime = 15;
						this.noMelee = true;
						this.value = 10;
						this.holdStyle = 1;
						return;
					}
					if (type == 283)
					{
						this.shoot = 51;
						this.width = 8;
						this.height = 8;
						this.maxStack = Item.CommonMaxStack;
						this.ammo = AmmoID.Dart;
						this.damage = 4;
						this.ranged = true;
						this.consumable = true;
						return;
					}
					if (type == 284)
					{
						this.noMelee = true;
						this.useStyle = 1;
						this.shootSpeed = 6.5f;
						this.shoot = 52;
						this.damage = 10;
						this.knockBack = 5f;
						this.width = 14;
						this.height = 28;
						this.UseSound = SoundID.Item1;
						this.useAnimation = 20;
						this.useTime = 20;
						this.noUseGraphic = true;
						this.value = 10000;
						this.rare = 1;
						this.melee = true;
						return;
					}
					if (type == 285)
					{
						this.width = 24;
						this.height = 8;
						this.accessory = true;
						this.value = Item.sellPrice(0, 0, 50, 0);
						this.rare = 1;
						return;
					}
					if (type == 286)
					{
						this.color = new Color(255, 255, 255, 0);
						this.useStyle = 1;
						this.shootSpeed = 6f;
						this.shoot = 53;
						this.width = 12;
						this.height = 12;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.UseSound = SoundID.Item1;
						this.useAnimation = 15;
						this.useTime = 15;
						this.noMelee = true;
						this.value = 20;
						this.holdStyle = 1;
						return;
					}
					if (type == 287)
					{
						this.crit = 4;
						this.useStyle = 1;
						this.shootSpeed = 12f;
						this.shoot = 54;
						this.damage = 14;
						this.autoReuse = true;
						this.width = 18;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.UseSound = SoundID.Item1;
						this.useAnimation = 15;
						this.useTime = 15;
						this.noUseGraphic = true;
						this.noMelee = true;
						this.value = 60;
						this.knockBack = 2.4f;
						this.ranged = true;
						return;
					}
					if (type == 288)
					{
						this.UseSound = SoundID.Item3;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.buffType = 1;
						this.buffTime = 21600;
						this.value = 1000;
						this.rare = 1;
						return;
					}
					if (type == 289)
					{
						this.UseSound = SoundID.Item3;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.buffType = 2;
						this.buffTime = 28800;
						this.value = 1000;
						this.rare = 1;
						return;
					}
					if (type == 290)
					{
						this.UseSound = SoundID.Item3;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.buffType = 3;
						this.buffTime = 28800;
						this.value = 1000;
						this.rare = 1;
						return;
					}
					if (type == 291)
					{
						this.UseSound = SoundID.Item3;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.buffType = 4;
						this.buffTime = 14400;
						this.value = 1000;
						this.rare = 1;
						return;
					}
					if (type == 292)
					{
						this.UseSound = SoundID.Item3;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.buffType = 5;
						this.buffTime = 28800;
						this.value = 1000;
						this.rare = 1;
						return;
					}
					if (type == 293)
					{
						this.UseSound = SoundID.Item3;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.buffType = 6;
						this.buffTime = 28800;
						this.value = 1000;
						this.rare = 1;
						return;
					}
					if (type == 294)
					{
						this.UseSound = SoundID.Item3;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.buffType = 7;
						this.buffTime = 14400;
						this.value = 1000;
						this.rare = 1;
						return;
					}
					if (type == 295)
					{
						this.UseSound = SoundID.Item3;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.buffType = 8;
						this.buffTime = 36000;
						this.value = 1000;
						this.rare = 1;
						return;
					}
					if (type == 296)
					{
						this.UseSound = SoundID.Item3;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.buffType = 9;
						this.buffTime = 18000;
						this.value = 1000;
						this.rare = 1;
						return;
					}
					if (type == 297)
					{
						this.UseSound = SoundID.Item3;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.buffType = 10;
						this.buffTime = 10800;
						this.value = 1000;
						this.rare = 1;
						return;
					}
					if (type == 298)
					{
						this.UseSound = SoundID.Item3;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.buffType = 11;
						this.buffTime = 36000;
						this.value = 1000;
						this.rare = 1;
						return;
					}
					if (type == 299)
					{
						this.UseSound = SoundID.Item3;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.buffType = 12;
						this.buffTime = 36000;
						this.value = 1000;
						this.rare = 1;
						return;
					}
					if (type == 300)
					{
						this.UseSound = SoundID.Item3;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.buffType = 13;
						this.buffTime = 25200;
						this.value = 1000;
						this.rare = 1;
						return;
					}
					if (type == 301)
					{
						this.UseSound = SoundID.Item3;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.buffType = 14;
						this.buffTime = 28800;
						this.value = 1000;
						this.rare = 1;
						return;
					}
					if (type == 302)
					{
						this.UseSound = SoundID.Item3;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.buffType = 15;
						this.buffTime = 36000;
						this.value = 1000;
						this.rare = 1;
						return;
					}
					if (type == 303)
					{
						this.UseSound = SoundID.Item3;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.buffType = 16;
						this.buffTime = 28800;
						this.value = 1000;
						this.rare = 1;
						return;
					}
					if (type == 304)
					{
						this.UseSound = SoundID.Item3;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.buffType = 17;
						this.buffTime = 28800;
						this.value = 1000;
						this.rare = 1;
						return;
					}
					if (type == 305)
					{
						this.UseSound = SoundID.Item3;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.buffType = 18;
						this.buffTime = 10800;
						this.value = 1000;
						this.rare = 1;
						return;
					}
					if (type == 306)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 21;
						this.placeStyle = 1;
						this.width = 26;
						this.height = 22;
						this.value = 5000;
						return;
					}
					if (type == 307)
					{
						this.autoReuse = true;
						this.useTurn = true;
						this.useStyle = 1;
						this.useAnimation = 15;
						this.useTime = 10;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 82;
						this.placeStyle = 0;
						this.width = 12;
						this.height = 14;
						this.value = 80;
						return;
					}
					if (type == 308)
					{
						this.autoReuse = true;
						this.useTurn = true;
						this.useStyle = 1;
						this.useAnimation = 15;
						this.useTime = 10;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 82;
						this.placeStyle = 1;
						this.width = 12;
						this.height = 14;
						this.value = 80;
						return;
					}
					if (type == 309)
					{
						this.autoReuse = true;
						this.useTurn = true;
						this.useStyle = 1;
						this.useAnimation = 15;
						this.useTime = 10;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 82;
						this.placeStyle = 2;
						this.width = 12;
						this.height = 14;
						this.value = 80;
						return;
					}
					if (type == 310)
					{
						this.autoReuse = true;
						this.useTurn = true;
						this.useStyle = 1;
						this.useAnimation = 15;
						this.useTime = 10;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 82;
						this.placeStyle = 3;
						this.width = 12;
						this.height = 14;
						this.value = 80;
						return;
					}
					if (type == 311)
					{
						this.autoReuse = true;
						this.useTurn = true;
						this.useStyle = 1;
						this.useAnimation = 15;
						this.useTime = 10;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 82;
						this.placeStyle = 4;
						this.width = 12;
						this.height = 14;
						this.value = 80;
						return;
					}
					if (type == 312)
					{
						this.autoReuse = true;
						this.useTurn = true;
						this.useStyle = 1;
						this.useAnimation = 15;
						this.useTime = 10;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 82;
						this.placeStyle = 5;
						this.width = 12;
						this.height = 14;
						this.value = 80;
						return;
					}
					if (type == 313)
					{
						this.maxStack = Item.CommonMaxStack;
						this.width = 12;
						this.height = 14;
						this.value = 100;
						return;
					}
					if (type == 314)
					{
						this.maxStack = Item.CommonMaxStack;
						this.width = 12;
						this.height = 14;
						this.value = 100;
						return;
					}
					if (type == 315)
					{
						this.maxStack = Item.CommonMaxStack;
						this.width = 12;
						this.height = 14;
						this.value = 100;
						return;
					}
					if (type == 316)
					{
						this.maxStack = Item.CommonMaxStack;
						this.width = 12;
						this.height = 14;
						this.value = 100;
						return;
					}
					if (type == 317)
					{
						this.maxStack = Item.CommonMaxStack;
						this.width = 12;
						this.height = 14;
						this.value = 100;
						return;
					}
					if (type == 318)
					{
						this.maxStack = Item.CommonMaxStack;
						this.width = 12;
						this.height = 14;
						this.value = 100;
						return;
					}
					if (type == 319)
					{
						this.maxStack = Item.CommonMaxStack;
						this.width = 16;
						this.height = 14;
						this.value = 200;
						this.color = new Color(123, 167, 163, 255);
						return;
					}
					if (type == 320)
					{
						this.maxStack = Item.CommonMaxStack;
						this.width = 16;
						this.height = 14;
						this.value = 50;
						return;
					}
					if (type == 321)
					{
						this.useTurn = true;
						this.useStyle = 1;
						this.useAnimation = 15;
						this.useTime = 10;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 85;
						this.width = 20;
						this.height = 20;
						return;
					}
					if (type == 322)
					{
						this.headSlot = 28;
						this.width = 20;
						this.height = 20;
						this.value = 20000;
						this.vanity = true;
						return;
					}
					if (type == 323)
					{
						this.width = 10;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.value = 50;
						return;
					}
					if (type == 324)
					{
						this.width = 10;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.value = 200000;
						return;
					}
					if (type == 325)
					{
						this.width = 18;
						this.height = 18;
						this.bodySlot = 16;
						this.value = 200000;
						this.vanity = true;
						return;
					}
					if (type == 326)
					{
						this.width = 18;
						this.height = 18;
						this.legSlot = 15;
						this.value = 200000;
						this.vanity = true;
						return;
					}
					if (type == 327)
					{
						this.width = 14;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						return;
					}
					if (type == 328)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 21;
						this.placeStyle = 3;
						this.width = 26;
						this.height = 22;
						this.value = 5000;
						return;
					}
					if (type == 329)
					{
						this.width = 14;
						this.height = 20;
						this.maxStack = 1;
						this.value = this.dungeonPrice;
						return;
					}
					if (type == 330)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 7;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createWall = 20;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 331)
					{
						this.width = 18;
						this.height = 16;
						this.maxStack = Item.CommonMaxStack;
						this.value = 100;
						return;
					}
					if (type == 332)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 86;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						return;
					}
					if (type == 333)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 87;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						return;
					}
					if (type == 334)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 88;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						return;
					}
					if (type == 335)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 89;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						return;
					}
					if (type == 336)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 90;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						return;
					}
					if (type == 337)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 91;
						this.placeStyle = 0;
						this.width = 10;
						this.height = 24;
						this.value = 500;
						return;
					}
					if (type == 338)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 91;
						this.placeStyle = 1;
						this.width = 10;
						this.height = 24;
						this.value = 500;
						return;
					}
					if (type == 339)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 91;
						this.placeStyle = 2;
						this.width = 10;
						this.height = 24;
						this.value = 500;
						return;
					}
					if (type == 340)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 91;
						this.placeStyle = 3;
						this.width = 10;
						this.height = 24;
						this.value = 500;
						return;
					}
					if (type == 341)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 92;
						this.width = 10;
						this.height = 24;
						this.value = 500;
						return;
					}
					if (type == 342)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 93;
						this.width = 10;
						this.height = 24;
						this.value = 500;
						return;
					}
					if (type == 343)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 21;
						this.placeStyle = 5;
						this.width = 20;
						this.height = 20;
						this.value = 500;
						return;
					}
					if (type == 344)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 95;
						this.width = 20;
						this.height = 20;
						this.value = 500;
						return;
					}
					if (type == 345)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 96;
						this.width = 20;
						this.height = 20;
						this.value = 500;
						return;
					}
					if (type == 346)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 97;
						this.width = 20;
						this.height = 20;
						this.value = 200000;
						return;
					}
					if (type == 347)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 98;
						this.width = 20;
						this.height = 20;
						this.value = 500;
						return;
					}
					if (type == 348)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 21;
						this.placeStyle = 6;
						this.width = 20;
						this.height = 20;
						this.value = 1000;
						return;
					}
					if (type == 349)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 100;
						this.width = 20;
						this.height = 20;
						this.value = 1500;
						return;
					}
					if (type == 350)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 13;
						this.placeStyle = 3;
						this.width = 16;
						this.height = 24;
						this.value = 70;
						return;
					}
					if (type == 351)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 13;
						this.placeStyle = 4;
						this.width = 16;
						this.height = 24;
						this.value = 20;
						return;
					}
					if (type == 352)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 94;
						this.width = 24;
						this.height = 24;
						this.value = 600;
						return;
					}
					if (type == 354)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 101;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						return;
					}
					if (type == 355)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 102;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						return;
					}
					if (type == 356)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 103;
						this.width = 16;
						this.height = 24;
						this.value = 20;
						return;
					}
					if (type == 358)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 15;
						this.placeStyle = 1;
						this.width = 12;
						this.height = 30;
						this.value = 150;
						return;
					}
					if (type == 359)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 104;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						return;
					}
					if (type == 360)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						return;
					}
					if (type == 361)
					{
						this.useStyle = 4;
						this.consumable = true;
						this.useAnimation = 45;
						this.useTime = 45;
						this.width = 28;
						this.height = 28;
						this.maxStack = Item.CommonMaxStack;
						return;
					}
					if (type == 362)
					{
						this.maxStack = Item.CommonMaxStack;
						this.width = 24;
						this.height = 24;
						this.value = 30;
						return;
					}
					if (type == 363)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 106;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						return;
					}
					if (type == 364)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 107;
						this.width = 12;
						this.height = 12;
						this.value = 3500;
						this.rare = 3;
						return;
					}
					if (type == 365)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 108;
						this.width = 12;
						this.height = 12;
						this.value = 5500;
						this.rare = 3;
						return;
					}
					if (type == 366)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 111;
						this.width = 12;
						this.height = 12;
						this.value = 7500;
						this.rare = 3;
						return;
					}
					if (type == 367)
					{
						this.useTurn = true;
						this.autoReuse = true;
						this.useStyle = 1;
						this.useAnimation = 27;
						this.useTime = 14;
						this.hammer = 80;
						this.width = 24;
						this.height = 28;
						this.damage = 26;
						this.knockBack = 7.5f;
						this.scale = 1f;
						this.UseSound = SoundID.Item1;
						this.rare = 4;
						this.value = 39000;
						this.melee = true;
						return;
					}
					if (type == 368)
					{
						this.autoReuse = true;
						this.useStyle = 1;
						this.useAnimation = 20;
						this.useTime = 20;
						this.knockBack = 4.5f;
						this.width = 40;
						this.height = 40;
						this.damage = 72;
						this.scale = 1f;
						this.UseSound = SoundID.Item1;
						this.rare = 5;
						this.value = 230000;
						this.melee = true;
						this.shoot = 982;
						this.noMelee = true;
						this.shootsEveryUse = true;
						return;
					}
					if (type == 369)
					{
						this.autoReuse = true;
						this.useTurn = true;
						this.useStyle = 1;
						this.useAnimation = 15;
						this.useTime = 10;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 109;
						this.width = 14;
						this.height = 14;
						this.value = 2000;
						this.rare = 3;
						return;
					}
					if (type == 370)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 112;
						this.width = 12;
						this.height = 12;
						this.ammo = AmmoID.Sand;
						this.notAmmo = true;
						return;
					}
					if (type == 371)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 3;
						this.headSlot = 29;
						this.rare = 4;
						this.value = 75000;
						return;
					}
					if (type == 372)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 14;
						this.headSlot = 30;
						this.rare = 4;
						this.value = 75000;
						return;
					}
					if (type == 373)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 5;
						this.headSlot = 31;
						this.rare = 4;
						this.value = 75000;
						return;
					}
					if (type == 374)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 10;
						this.bodySlot = 17;
						this.rare = 4;
						this.value = 60000;
						return;
					}
					if (type == 375)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 8;
						this.legSlot = 16;
						this.rare = 4;
						this.value = 45000;
						return;
					}
					if (type == 376)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 3;
						this.headSlot = 32;
						this.rare = 4;
						this.value = 112500;
						return;
					}
					if (type == 377)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 16;
						this.headSlot = 33;
						this.rare = 4;
						this.value = 112500;
						return;
					}
					if (type == 378)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 6;
						this.headSlot = 34;
						this.rare = 4;
						this.value = 112500;
						return;
					}
					if (type == 379)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 12;
						this.bodySlot = 18;
						this.rare = 4;
						this.value = 90000;
						return;
					}
					if (type == 380)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 9;
						this.legSlot = 17;
						this.rare = 4;
						this.value = 67500;
						return;
					}
					if (type == 381)
					{
						this.width = 20;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.value = 10500;
						this.rare = 3;
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.consumable = true;
						this.createTile = 239;
						this.placeStyle = 11;
						return;
					}
					if (type == 382)
					{
						this.width = 20;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.value = 22000;
						this.rare = 3;
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.consumable = true;
						this.createTile = 239;
						this.placeStyle = 13;
						return;
					}
					if (type == 383)
					{
						this.useStyle = 5;
						this.useAnimation = 25;
						this.useTime = 13;
						this.shootSpeed = 40f;
						this.knockBack = 2.75f;
						this.width = 20;
						this.height = 12;
						this.damage = 23;
						this.axe = 14;
						this.UseSound = SoundID.Item23;
						this.shoot = 57;
						this.rare = 4;
						this.value = 54000;
						this.noMelee = true;
						this.noUseGraphic = true;
						this.melee = true;
						this.channel = true;
						return;
					}
					if (type == 384)
					{
						this.useStyle = 5;
						this.useAnimation = 25;
						this.useTime = 10;
						this.shootSpeed = 40f;
						this.knockBack = 3f;
						this.width = 20;
						this.height = 12;
						this.damage = 29;
						this.axe = 17;
						this.UseSound = SoundID.Item23;
						this.shoot = 58;
						this.rare = 4;
						this.value = 81000;
						this.noMelee = true;
						this.noUseGraphic = true;
						this.melee = true;
						this.channel = true;
						return;
					}
					if (type == 385)
					{
						this.useStyle = 5;
						this.useAnimation = 25;
						this.useTime = 13;
						this.shootSpeed = 32f;
						this.knockBack = 0.5f;
						this.width = 20;
						this.height = 12;
						this.damage = 10;
						this.pick = 110;
						this.UseSound = SoundID.Item23;
						this.shoot = 59;
						this.rare = 4;
						this.value = 54000;
						this.noMelee = true;
						this.noUseGraphic = true;
						this.melee = true;
						this.channel = true;
						return;
					}
					if (type == 386)
					{
						this.useStyle = 5;
						this.useAnimation = 25;
						this.useTime = 10;
						this.shootSpeed = 32f;
						this.knockBack = 0.5f;
						this.width = 20;
						this.height = 12;
						this.damage = 15;
						this.pick = 150;
						this.UseSound = SoundID.Item23;
						this.shoot = 60;
						this.rare = 4;
						this.value = 81000;
						this.noMelee = true;
						this.noUseGraphic = true;
						this.melee = true;
						this.channel = true;
						return;
					}
					if (type == 387)
					{
						this.useStyle = 5;
						this.useAnimation = 25;
						this.useTime = 8;
						this.shootSpeed = 40f;
						this.knockBack = 4.5f;
						this.width = 20;
						this.height = 12;
						this.damage = 33;
						this.axe = 20;
						this.UseSound = SoundID.Item23;
						this.shoot = 61;
						this.rare = 4;
						this.value = 108000;
						this.noMelee = true;
						this.noUseGraphic = true;
						this.melee = true;
						this.channel = true;
						return;
					}
					if (type == 388)
					{
						this.useStyle = 5;
						this.useAnimation = 25;
						this.useTime = 8;
						this.shootSpeed = 32f;
						this.knockBack = 0.5f;
						this.width = 20;
						this.height = 12;
						this.damage = 20;
						this.pick = 180;
						this.UseSound = SoundID.Item23;
						this.shoot = 62;
						this.rare = 4;
						this.value = 108000;
						this.noMelee = true;
						this.noUseGraphic = true;
						this.melee = true;
						this.channel = true;
						return;
					}
					if (type == 389)
					{
						this.noMelee = true;
						this.useStyle = 5;
						this.useAnimation = 45;
						this.useTime = 45;
						this.knockBack = 6f;
						this.width = 30;
						this.height = 10;
						this.damage = 50;
						this.scale = 1.1f;
						this.noUseGraphic = true;
						this.shoot = 63;
						this.shootSpeed = 15f;
						this.UseSound = SoundID.Item1;
						this.rare = 5;
						this.value = 144000;
						this.melee = true;
						this.channel = true;
						return;
					}
					if (type == 390)
					{
						this.useStyle = 5;
						this.useAnimation = 26;
						this.useTime = 26;
						this.shootSpeed = 4.5f;
						this.knockBack = 5f;
						this.width = 40;
						this.height = 40;
						this.damage = 45;
						this.scale = 1.1f;
						this.UseSound = SoundID.Item1;
						this.shoot = 64;
						this.rare = 4;
						this.value = 67500;
						this.noMelee = true;
						this.noUseGraphic = true;
						this.melee = true;
						return;
					}
					if (type == 391)
					{
						this.width = 20;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.value = 30000;
						this.rare = 3;
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.consumable = true;
						this.createTile = 239;
						this.placeStyle = 15;
						return;
					}
					if (type == 392)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 7;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createWall = 21;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 393)
					{
						this.width = 24;
						this.height = 28;
						this.rare = 1;
						this.value = Item.sellPrice(0, 0, 25, 0);
						this.accessory = true;
						return;
					}
					if (type == 394)
					{
						this.width = 24;
						this.height = 28;
						this.rare = 4;
						this.value = 100000;
						this.accessory = true;
						this.faceSlot = 4;
						return;
					}
					if (type == 395)
					{
						this.width = 24;
						this.height = 28;
						this.rare = 3;
						this.value = Item.sellPrice(0, 3, 0, 0);
						this.accessory = true;
						return;
					}
					if (type == 396)
					{
						this.width = 24;
						this.height = 28;
						this.rare = 4;
						this.value = Item.buyPrice(0, 6, 0, 0);
						this.accessory = true;
						return;
					}
					if (type == 397)
					{
						this.width = 24;
						this.height = 28;
						this.rare = 4;
						this.value = 100000;
						this.accessory = true;
						this.defense = 2;
						this.shieldSlot = 3;
						return;
					}
					if (type == 398)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 114;
						this.width = 26;
						this.height = 20;
						this.value = 100000;
						return;
					}
					if (type == 399)
					{
						this.width = 14;
						this.height = 28;
						this.rare = 4;
						this.value = 150000;
						this.accessory = true;
						this.balloonSlot = 4;
						return;
					}
					if (type == 400)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 4;
						this.headSlot = 35;
						this.rare = 4;
						this.value = 150000;
						return;
					}
					if (type == 401)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 22;
						this.headSlot = 36;
						this.rare = 4;
						this.value = 150000;
						return;
					}
					if (type == 402)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 8;
						this.headSlot = 37;
						this.rare = 4;
						this.value = 150000;
						return;
					}
					if (type == 403)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 16;
						this.bodySlot = 19;
						this.rare = 4;
						this.value = 120000;
						return;
					}
					if (type == 404)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 12;
						this.legSlot = 18;
						this.rare = 4;
						this.value = 90000;
						return;
					}
					if (type == 405)
					{
						this.width = 28;
						this.height = 24;
						this.accessory = true;
						this.rare = 4;
						this.value = 100000;
						this.shoeSlot = 13;
						return;
					}
					if (type == 406)
					{
						this.useStyle = 5;
						this.useAnimation = 25;
						this.useTime = 25;
						this.shootSpeed = 5f;
						this.knockBack = 6f;
						this.width = 40;
						this.height = 40;
						this.damage = 49;
						this.scale = 1.1f;
						this.UseSound = SoundID.Item1;
						this.shoot = 66;
						this.rare = 4;
						this.value = 90000;
						this.noMelee = true;
						this.noUseGraphic = true;
						this.melee = true;
						return;
					}
					if (type == 407)
					{
						this.width = 28;
						this.height = 24;
						this.accessory = true;
						this.rare = 3;
						this.value = 100000;
						this.waistSlot = 5;
						return;
					}
					if (type == 408)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 116;
						this.width = 12;
						this.height = 12;
						this.ammo = AmmoID.Sand;
						this.notAmmo = true;
						return;
					}
					if (type == 409)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 117;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 410)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 1;
						this.bodySlot = 20;
						this.value = 5000;
						this.rare = 1;
						return;
					}
					if (type == 411)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 1;
						this.legSlot = 19;
						this.value = 5000;
						this.rare = 1;
						return;
					}
					if (type == 412)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 118;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 413)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 119;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 414)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 120;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 415)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 121;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 416)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 122;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 417)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 7;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createWall = 22;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 418)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 7;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createWall = 23;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 419)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 7;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createWall = 24;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 420)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 7;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createWall = 25;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 421)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 7;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createWall = 26;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 422)
					{
						this.useStyle = 1;
						this.shootSpeed = 9f;
						this.rare = 3;
						this.damage = 20;
						this.shoot = 69;
						this.width = 18;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.knockBack = 3f;
						this.UseSound = SoundID.Item1;
						this.useAnimation = 15;
						this.useTime = 15;
						this.noUseGraphic = true;
						this.noMelee = true;
						this.value = 200;
						return;
					}
					if (type == 423)
					{
						this.useStyle = 1;
						this.shootSpeed = 9f;
						this.rare = 3;
						this.damage = 20;
						this.shoot = 70;
						this.width = 18;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.knockBack = 3f;
						this.UseSound = SoundID.Item1;
						this.useAnimation = 15;
						this.useTime = 15;
						this.noUseGraphic = true;
						this.noMelee = true;
						this.value = 100;
						return;
					}
					if (type == 424)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 123;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 425)
					{
						this.channel = true;
						this.damage = 0;
						this.useStyle = 1;
						this.width = 24;
						this.height = 24;
						this.UseSound = SoundID.Item25;
						this.useAnimation = 20;
						this.useTime = 20;
						this.rare = 5;
						this.noMelee = true;
						this.value = (this.value = 250000);
						this.buffType = 27;
						return;
					}
					if (type == 426)
					{
						this.useStyle = 1;
						this.useTime = 35;
						this.useAnimation = 35;
						this.knockBack = 8f;
						this.width = 60;
						this.height = 70;
						this.damage = 70;
						this.scale = 1f;
						this.UseSound = SoundID.Item1;
						this.rare = 4;
						this.value = 150000;
						this.melee = true;
						return;
					}
					if (type == 427)
					{
						this.flame = true;
						this.noWet = true;
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.holdStyle = 1;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 4;
						this.placeStyle = 1;
						this.width = 10;
						this.height = 12;
						this.value = 200;
						return;
					}
					if (type == 428)
					{
						this.flame = true;
						this.noWet = true;
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.holdStyle = 1;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 4;
						this.placeStyle = 2;
						this.width = 10;
						this.height = 12;
						this.value = 200;
						return;
					}
					if (type == 429)
					{
						this.flame = true;
						this.noWet = true;
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.holdStyle = 1;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 4;
						this.placeStyle = 3;
						this.width = 10;
						this.height = 12;
						this.value = 200;
						return;
					}
					if (type == 430)
					{
						this.flame = true;
						this.noWet = true;
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.holdStyle = 1;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 4;
						this.placeStyle = 4;
						this.width = 10;
						this.height = 12;
						this.value = 200;
						return;
					}
					if (type == 431)
					{
						this.flame = true;
						this.noWet = true;
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.holdStyle = 1;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 4;
						this.placeStyle = 5;
						this.width = 10;
						this.height = 12;
						this.value = 500;
						return;
					}
					if (type == 432)
					{
						this.flame = true;
						this.noWet = true;
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.holdStyle = 1;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 4;
						this.placeStyle = 6;
						this.width = 10;
						this.height = 12;
						this.value = 200;
						return;
					}
					if (type == 433)
					{
						this.flame = true;
						this.noWet = true;
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.holdStyle = 1;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 4;
						this.placeStyle = 7;
						this.width = 10;
						this.height = 12;
						this.value = 300;
						return;
					}
					if (type == 434)
					{
						this.autoReuse = true;
						this.useStyle = 5;
						this.useAnimation = 12;
						this.useTime = 4;
						this.reuseDelay = 14;
						this.width = 50;
						this.height = 18;
						this.shoot = 10;
						this.useAmmo = AmmoID.Bullet;
						this.UseSound = SoundID.Item31;
						this.damage = 17;
						this.shootSpeed = 7.75f;
						this.noMelee = true;
						this.value = 150000;
						this.rare = 4;
						this.ranged = true;
						return;
					}
					if (type == 435)
					{
						this.useStyle = 5;
						this.autoReuse = true;
						this.useAnimation = 23;
						this.useTime = 23;
						this.width = 50;
						this.height = 18;
						this.shoot = 1;
						this.useAmmo = AmmoID.Arrow;
						this.UseSound = SoundID.Item5;
						this.damage = 35;
						this.shootSpeed = 9f;
						this.noMelee = true;
						this.value = 60000;
						this.ranged = true;
						this.rare = 4;
						this.knockBack = 1.5f;
						return;
					}
					if (type == 436)
					{
						this.useStyle = 5;
						this.autoReuse = true;
						this.useAnimation = 20;
						this.useTime = 20;
						this.width = 50;
						this.height = 18;
						this.shoot = 1;
						this.useAmmo = AmmoID.Arrow;
						this.UseSound = SoundID.Item5;
						this.damage = 39;
						this.shootSpeed = 9.5f;
						this.noMelee = true;
						this.value = 90000;
						this.ranged = true;
						this.rare = 4;
						this.knockBack = 2f;
						return;
					}
					if (type == 437)
					{
						this.noUseGraphic = true;
						this.damage = 0;
						this.knockBack = 7f;
						this.useStyle = 5;
						this.shootSpeed = 14f;
						this.shoot = 73;
						this.width = 18;
						this.height = 28;
						this.UseSound = SoundID.Item1;
						this.useAnimation = 20;
						this.useTime = 20;
						this.rare = 4;
						this.noMelee = true;
						this.value = Item.buyPrice(0, 15, 0, 0);
						return;
					}
					if (type == 438)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 2;
						return;
					}
					if (type == 439)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 3;
						return;
					}
					if (type == 440)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 4;
						return;
					}
					if (type == 441)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 5;
						return;
					}
					if (type == 442)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 6;
						return;
					}
					if (type == 443)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 7;
						return;
					}
					if (type == 444)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 8;
						return;
					}
					if (type == 445)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 9;
						return;
					}
					if (type == 446)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 10;
						return;
					}
					if (type == 447)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 11;
						return;
					}
					if (type == 448)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 12;
						return;
					}
					if (type == 449)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 13;
						return;
					}
					if (type == 450)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 14;
						return;
					}
					if (type == 451)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 15;
						return;
					}
					if (type == 452)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 16;
						return;
					}
					if (type == 453)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 17;
						return;
					}
					if (type == 454)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 18;
						return;
					}
					if (type == 455)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 19;
						return;
					}
					if (type == 456)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 20;
						return;
					}
					if (type == 457)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 21;
						return;
					}
					if (type == 458)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 22;
						return;
					}
					if (type == 459)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 23;
						return;
					}
					if (type == 460)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 24;
						return;
					}
					if (type == 461)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 25;
						return;
					}
					if (type == 462)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 26;
						return;
					}
					if (type == 463)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 27;
						return;
					}
					if (type == 464)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 28;
						return;
					}
					if (type == 465)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 29;
						return;
					}
					if (type == 466)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 30;
						return;
					}
					if (type == 467)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 31;
						return;
					}
					if (type == 468)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 32;
						return;
					}
					if (type == 469)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 33;
						return;
					}
					if (type == 470)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 349;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						return;
					}
					if (type == 471)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 35;
						return;
					}
					if (type == 472)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 36;
						return;
					}
					if (type == 473)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 37;
						return;
					}
					if (type == 474)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 38;
						return;
					}
					if (type == 475)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 39;
						return;
					}
					if (type == 476)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 40;
						return;
					}
					if (type == 477)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 41;
						return;
					}
					if (type == 478)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 105;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 42;
						return;
					}
					if (type == 479)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 7;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createWall = 27;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 480)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 124;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 481)
					{
						this.useStyle = 5;
						this.autoReuse = true;
						this.useAnimation = 18;
						this.useTime = 18;
						this.width = 50;
						this.height = 18;
						this.shoot = 1;
						this.useAmmo = AmmoID.Arrow;
						this.UseSound = SoundID.Item5;
						this.damage = 42;
						this.shootSpeed = 10f;
						this.noMelee = true;
						this.value = 120000;
						this.ranged = true;
						this.rare = 4;
						this.knockBack = 2.5f;
						return;
					}
					if (type == 482)
					{
						this.autoReuse = true;
						this.useStyle = 1;
						this.useAnimation = 21;
						this.useTime = 21;
						this.knockBack = 6f;
						this.width = 40;
						this.height = 40;
						this.damage = 61;
						this.scale = 1f;
						this.UseSound = SoundID.Item1;
						this.rare = 4;
						this.value = 138000;
						this.melee = true;
						return;
					}
					if (type == 483)
					{
						this.useTurn = true;
						this.autoReuse = true;
						this.useStyle = 1;
						this.useAnimation = 19;
						this.useTime = 19;
						this.knockBack = 5f;
						this.width = 40;
						this.height = 40;
						this.damage = 40;
						this.scale = 1f;
						this.UseSound = SoundID.Item1;
						this.rare = 4;
						this.value = 69000;
						this.melee = true;
						return;
					}
					if (type == 484)
					{
						this.autoReuse = true;
						this.useStyle = 1;
						this.useAnimation = 20;
						this.useTime = 20;
						this.knockBack = 6f;
						this.width = 40;
						this.height = 40;
						this.damage = 50;
						this.scale = 1f;
						this.UseSound = SoundID.Item1;
						this.rare = 4;
						this.value = 103500;
						this.melee = true;
						return;
					}
					if (type == 485)
					{
						this.rare = 4;
						this.width = 24;
						this.height = 28;
						this.accessory = true;
						this.value = 150000;
						this.hasVanityEffects = true;
						return;
					}
					if (type == 486)
					{
						this.autoReuse = true;
						this.useStyle = 13;
						this.useAnimation = 20;
						this.useTime = 5;
						this.width = 40;
						this.height = 18;
						this.shoot = 842;
						this.UseSound = SoundID.Item1;
						this.damage = 12;
						this.shootSpeed = 2.4f;
						this.noMelee = true;
						this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 10, 0));
						this.melee = true;
						this.knockBack = 0.5f;
						this.noUseGraphic = true;
						return;
					}
					if (type == 487)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 125;
						this.width = 22;
						this.height = 22;
						this.value = 100000;
						this.rare = 3;
						return;
					}
					if (type == 488)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 126;
						this.width = 22;
						this.height = 26;
						this.value = 10000;
						return;
					}
					if (type == 489)
					{
						this.width = 24;
						this.height = 24;
						this.accessory = true;
						this.value = 100000;
						this.rare = 4;
						return;
					}
					if (type == 491)
					{
						this.width = 24;
						this.height = 24;
						this.accessory = true;
						this.value = 100000;
						this.rare = 4;
						return;
					}
					if (type == 490)
					{
						this.width = 24;
						this.height = 24;
						this.accessory = true;
						this.value = 100000;
						this.rare = 4;
						return;
					}
					if (type == 492)
					{
						this.width = 24;
						this.height = 8;
						this.accessory = true;
						this.value = 400000;
						this.rare = 5;
						this.wingSlot = 1;
						return;
					}
					if (type == 493)
					{
						this.width = 24;
						this.height = 8;
						this.accessory = true;
						this.value = 400000;
						this.rare = 5;
						this.wingSlot = 2;
						return;
					}
					if (type == 494)
					{
						this.rare = 5;
						this.useStyle = 5;
						this.useAnimation = 12;
						this.useTime = 12;
						this.width = 12;
						this.height = 28;
						this.shoot = 76;
						this.holdStyle = 3;
						this.autoReuse = true;
						this.damage = 42;
						this.shootSpeed = 4.5f;
						this.noMelee = true;
						this.knockBack = 2f;
						this.value = 200000;
						this.mana = 5;
						this.magic = true;
						return;
					}
					if (type == 495)
					{
						this.rare = 5;
						this.mana = 21;
						this.channel = true;
						this.damage = 50;
						this.useStyle = 1;
						this.shootSpeed = 6f;
						this.shoot = 79;
						this.width = 26;
						this.height = 28;
						this.UseSound = SoundID.Item28;
						this.useAnimation = 25;
						this.useTime = 25;
						this.noMelee = true;
						this.knockBack = 6f;
						this.value = 200000;
						this.magic = true;
						return;
					}
					if (type == 496)
					{
						this.rare = 4;
						this.mana = 6;
						this.damage = 28;
						this.useStyle = 1;
						this.shootSpeed = 12f;
						this.shoot = 80;
						this.width = 26;
						this.height = 28;
						this.UseSound = SoundID.Item28;
						this.useAnimation = 9;
						this.useTime = 9;
						this.rare = 4;
						this.autoReuse = true;
						this.noMelee = true;
						this.knockBack = 0f;
						this.value = Item.buyPrice(0, 50, 0, 0);
						this.magic = true;
						this.knockBack = 2f;
						return;
					}
					if (type == 497)
					{
						this.width = 24;
						this.height = 28;
						this.accessory = true;
						this.value = this.eclipsePrice;
						this.rare = 5;
						this.hasVanityEffects = true;
						return;
					}
					if (type == 498)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 128;
						this.width = 12;
						this.height = 12;
						this.createTile = 470;
						this.placeStyle = 0;
						return;
					}
					if (type == 499)
					{
						this.UseSound = SoundID.Item3;
						this.healLife = 150;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.rare = 3;
						this.potion = true;
						this.value = 5000;
						return;
					}
					if (type == 500)
					{
						this.UseSound = SoundID.Item3;
						this.healMana = 200;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.rare = 3;
						this.value = Item.buyPrice(0, 0, 5, 0);
						return;
					}
					if (type == 501)
					{
						this.width = 16;
						this.height = 14;
						this.maxStack = Item.CommonMaxStack;
						this.value = 500;
						this.rare = 1;
						return;
					}
					if (type == 502)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 129;
						this.width = 24;
						this.height = 24;
						this.value = 8000;
						this.rare = 1;
						return;
					}
					if (type == 503)
					{
						this.width = 18;
						this.height = 18;
						this.headSlot = 40;
						this.value = 20000;
						this.vanity = true;
						this.rare = 2;
						return;
					}
					if (type == 504)
					{
						this.width = 18;
						this.height = 18;
						this.bodySlot = 23;
						this.value = 10000;
						this.vanity = true;
						this.rare = 2;
						return;
					}
					if (type == 505)
					{
						this.width = 18;
						this.height = 18;
						this.legSlot = 22;
						this.value = 10000;
						this.vanity = true;
						this.rare = 2;
						return;
					}
					if (type == 506)
					{
						this.useStyle = 5;
						this.autoReuse = true;
						this.useAnimation = 30;
						this.useTime = 6;
						this.width = 50;
						this.height = 18;
						this.shoot = 85;
						this.useAmmo = AmmoID.Gel;
						this.UseSound = SoundID.Item34;
						this.damage = 35;
						this.knockBack = 0.3f;
						this.shootSpeed = 7f;
						this.noMelee = true;
						this.value = 500000;
						this.rare = 5;
						this.ranged = true;
						return;
					}
					if (type == 507)
					{
						this.rare = 3;
						this.useStyle = 1;
						this.useAnimation = 12;
						this.useTime = 12;
						this.width = 12;
						this.height = 28;
						this.autoReuse = true;
						this.noMelee = true;
						this.value = 10000;
						return;
					}
					if (type == 508)
					{
						this.rare = 3;
						this.useStyle = 5;
						this.useAnimation = 12;
						this.useTime = 12;
						this.width = 12;
						this.height = 28;
						this.autoReuse = true;
						this.noMelee = true;
						this.value = 10000;
						return;
					}
					if (type == 509)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 5;
						this.autoReuse = true;
						this.width = 24;
						this.height = 28;
						this.rare = 1;
						this.value = 20000;
						this.mech = true;
						this.tileBoost = 20;
						return;
					}
					if (type == 510)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 5;
						this.autoReuse = true;
						this.width = 24;
						this.height = 28;
						this.rare = 1;
						this.value = 20000;
						this.mech = true;
						this.tileBoost = 20;
						return;
					}
					if (type == 511)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 130;
						this.width = 12;
						this.height = 12;
						this.value = 1000;
						this.mech = true;
						return;
					}
					if (type == 512)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 131;
						this.width = 12;
						this.height = 12;
						this.value = 1000;
						this.mech = true;
						return;
					}
					if (type == 513)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 132;
						this.width = 24;
						this.height = 24;
						this.value = 3000;
						this.mech = true;
						return;
					}
					if (type == 514)
					{
						this.autoReuse = true;
						this.useStyle = 5;
						this.useAnimation = 12;
						this.useTime = 12;
						this.width = 36;
						this.height = 22;
						this.shoot = 88;
						this.mana = 8;
						this.UseSound = SoundID.Item12;
						this.knockBack = 2.5f;
						this.damage = 29;
						this.shootSpeed = 17f;
						this.noMelee = true;
						this.rare = 4;
						this.magic = true;
						this.value = 150000;
						return;
					}
					if (type == 515)
					{
						this.shootSpeed = 5f;
						this.shoot = 89;
						this.damage = 9;
						this.width = 8;
						this.height = 8;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.ammo = AmmoID.Bullet;
						this.knockBack = 1f;
						this.value = 30;
						this.ranged = true;
						this.rare = 3;
						return;
					}
					if (type == 516)
					{
						this.shootSpeed = 3.5f;
						this.shoot = 91;
						this.damage = 13;
						this.width = 10;
						this.height = 28;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.ammo = AmmoID.Arrow;
						this.knockBack = 2f;
						this.value = 80;
						this.ranged = true;
						this.rare = 3;
						return;
					}
					if (type == 517)
					{
						this.useStyle = 1;
						this.shootSpeed = 12f;
						this.shoot = 93;
						this.damage = 35;
						this.width = 18;
						this.height = 20;
						this.mana = 6;
						this.autoReuse = true;
						this.UseSound = SoundID.Item1;
						this.useAnimation = 8;
						this.useTime = 8;
						this.noUseGraphic = true;
						this.noMelee = true;
						this.value = Item.sellPrice(0, 5, 0, 0);
						this.knockBack = 3.75f;
						this.magic = true;
						this.rare = 4;
						if (this.Variant == ItemVariants.WeakerVariant)
						{
							this.value = 5000;
							this.rare = 1;
							this.damage = 14;
							this.useAnimation = 15;
							this.useTime = 15;
							this.mana = 5;
							this.autoReuse = false;
							return;
						}
					}
					else
					{
						if (type == 518)
						{
							this.autoReuse = true;
							this.rare = 4;
							this.mana = 5;
							this.UseSound = SoundID.Item9;
							this.noMelee = true;
							this.useStyle = 5;
							this.damage = 32;
							this.useAnimation = 7;
							this.useTime = 7;
							this.width = 24;
							this.height = 28;
							this.shoot = 94;
							this.scale = 0.9f;
							this.shootSpeed = 16f;
							this.knockBack = 5f;
							this.magic = true;
							this.value = Item.sellPrice(0, 4, 0, 0);
							return;
						}
						if (type == 519)
						{
							this.autoReuse = true;
							this.rare = 4;
							this.mana = 9;
							this.UseSound = SoundID.Item20;
							this.noMelee = true;
							this.useStyle = 5;
							this.damage = 55;
							this.useAnimation = 15;
							this.useTime = 15;
							this.width = 24;
							this.height = 28;
							this.shoot = 95;
							this.scale = 0.9f;
							this.shootSpeed = 10f;
							this.knockBack = 6.5f;
							this.magic = true;
							this.value = Item.sellPrice(0, 4, 0, 0);
							return;
						}
						if (type == 520)
						{
							this.width = 18;
							this.height = 18;
							this.maxStack = Item.CommonMaxStack;
							this.value = 1000;
							this.rare = 3;
							return;
						}
						if (type == 521)
						{
							this.width = 18;
							this.height = 18;
							this.maxStack = Item.CommonMaxStack;
							this.value = 1000;
							this.rare = 3;
							return;
						}
						if (type == 522)
						{
							this.width = 12;
							this.height = 14;
							this.maxStack = Item.CommonMaxStack;
							this.value = 4000;
							this.rare = 3;
							return;
						}
						if (type == 523)
						{
							this.flame = true;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.holdStyle = 1;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 4;
							this.placeStyle = 8;
							this.width = 10;
							this.height = 12;
							this.value = 150;
							this.rare = 1;
							return;
						}
						if (type == 524)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 133;
							this.width = 44;
							this.height = 30;
							this.value = 50000;
							this.rare = 3;
							return;
						}
						if (type == 525)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 134;
							this.width = 28;
							this.height = 14;
							this.value = 25000;
							this.rare = 3;
							return;
						}
						if (type == 526)
						{
							this.width = 14;
							this.height = 14;
							this.maxStack = Item.CommonMaxStack;
							this.value = 15000;
							this.rare = 1;
							return;
						}
						if (type == 527)
						{
							this.width = 14;
							this.height = 14;
							this.maxStack = Item.CommonMaxStack;
							this.value = 4500;
							this.rare = 2;
							return;
						}
						if (type == 528)
						{
							this.width = 14;
							this.height = 14;
							this.maxStack = Item.CommonMaxStack;
							this.value = 4500;
							this.rare = 2;
							return;
						}
						if (type == 529)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 135;
							this.width = 12;
							this.height = 12;
							this.placeStyle = 0;
							this.mech = true;
							this.value = 5000;
							this.mech = true;
							return;
						}
						if (type == 530)
						{
							this.width = 12;
							this.height = 18;
							this.maxStack = Item.CommonMaxStack;
							this.value = 500;
							this.mech = true;
							return;
						}
						if (type == 531)
						{
							this.width = 12;
							this.height = 18;
							this.maxStack = Item.CommonMaxStack;
							this.value = 50000;
							this.rare = 1;
							return;
						}
						if (type == 532)
						{
							this.width = 20;
							this.height = 24;
							this.value = 100000;
							this.accessory = true;
							this.rare = 4;
							this.backSlot = 2;
							return;
						}
						if (type == 533)
						{
							this.useStyle = 5;
							this.autoReuse = true;
							this.useAnimation = 7;
							this.useTime = 7;
							this.width = 50;
							this.height = 18;
							this.shoot = 10;
							this.useAmmo = AmmoID.Bullet;
							this.UseSound = SoundID.Item11;
							this.damage = 25;
							this.shootSpeed = 10f;
							this.noMelee = true;
							this.value = Item.buyPrice(0, 35, 0, 0);
							this.rare = 5;
							this.knockBack = 1f;
							this.ranged = true;
							return;
						}
						if (type == 534)
						{
							this.knockBack = 6.5f;
							this.useStyle = 5;
							this.useAnimation = 45;
							this.useTime = 45;
							this.width = 50;
							this.height = 14;
							this.shoot = 10;
							this.useAmmo = AmmoID.Bullet;
							this.UseSound = SoundID.Item36;
							this.damage = 24;
							this.shootSpeed = 7f;
							this.noMelee = true;
							this.value = 250000;
							this.rare = 4;
							this.ranged = true;
							return;
						}
						if (type == 535)
						{
							this.width = 12;
							this.height = 18;
							this.value = 100000;
							this.accessory = true;
							this.rare = 4;
							return;
						}
						if (type == 536)
						{
							this.width = 12;
							this.height = 18;
							this.value = 100000;
							this.rare = 4;
							this.accessory = true;
							this.handOnSlot = 15;
							this.handOffSlot = 8;
							return;
						}
						if (type == 537)
						{
							this.useStyle = 5;
							this.useAnimation = 28;
							this.useTime = 28;
							this.shootSpeed = 4.3f;
							this.knockBack = 4f;
							this.width = 40;
							this.height = 40;
							this.damage = 44;
							this.scale = 1.1f;
							this.UseSound = SoundID.Item1;
							this.shoot = 97;
							this.rare = 4;
							this.value = 45000;
							this.noMelee = true;
							this.noUseGraphic = true;
							this.melee = true;
							return;
						}
						if (type == 538)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 136;
							this.width = 12;
							this.height = 12;
							this.value = 2000;
							this.mech = true;
							return;
						}
						if (type == 539)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 137;
							this.width = 12;
							this.height = 12;
							this.value = 10000;
							this.mech = true;
							return;
						}
						if (type == 540)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 138;
							this.width = 12;
							this.height = 12;
							this.mech = true;
							return;
						}
						if (type == 541)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 135;
							this.width = 12;
							this.height = 12;
							this.placeStyle = 1;
							this.mech = true;
							this.value = 5000;
							return;
						}
						if (type == 542)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 135;
							this.width = 12;
							this.height = 12;
							this.placeStyle = 2;
							this.mech = true;
							this.value = 5000;
							return;
						}
						if (type == 543)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 135;
							this.width = 12;
							this.height = 12;
							this.placeStyle = 3;
							this.mech = true;
							this.value = 5000;
							return;
						}
						if (type == 544)
						{
							this.width = 22;
							this.height = 14;
							if (this.Variant != ItemVariants.DisabledBossSummonVariant)
							{
								this.useStyle = 4;
								this.consumable = true;
								this.useAnimation = 45;
								this.useTime = 45;
							}
							this.maxStack = Item.CommonMaxStack;
							this.rare = 3;
							return;
						}
						if (type == 545)
						{
							this.shootSpeed = 4f;
							this.shoot = 103;
							this.damage = 17;
							this.width = 10;
							this.height = 28;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.ammo = AmmoID.Arrow;
							this.knockBack = 3f;
							this.value = 40;
							this.ranged = true;
							this.rare = 3;
							return;
						}
						if (type == 546)
						{
							this.shootSpeed = 5f;
							this.shoot = 104;
							this.damage = 12;
							this.width = 8;
							this.height = 8;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.ammo = AmmoID.Bullet;
							this.knockBack = 4f;
							this.value = 30;
							this.rare = 1;
							this.ranged = true;
							this.rare = 3;
							return;
						}
						if (type == 547)
						{
							this.width = 18;
							this.height = 18;
							this.maxStack = Item.CommonMaxStack;
							this.value = 40000;
							this.rare = 5;
							return;
						}
						if (type == 548)
						{
							this.width = 18;
							this.height = 18;
							this.maxStack = Item.CommonMaxStack;
							this.value = 40000;
							this.rare = 5;
							return;
						}
						if (type == 549)
						{
							this.width = 18;
							this.height = 18;
							this.maxStack = Item.CommonMaxStack;
							this.value = 40000;
							this.rare = 5;
							return;
						}
						if (type == 550)
						{
							this.useStyle = 5;
							this.useAnimation = 22;
							this.useTime = 22;
							this.shootSpeed = 5.6f;
							this.knockBack = 6.4f;
							this.width = 40;
							this.height = 40;
							this.damage = 61;
							this.scale = 1.1f;
							this.UseSound = SoundID.Item1;
							this.shoot = 105;
							this.rare = 5;
							this.value = 230000;
							this.noMelee = true;
							this.noUseGraphic = true;
							this.melee = true;
							return;
						}
						if (type == 551)
						{
							this.width = 18;
							this.height = 18;
							this.defense = 15;
							this.bodySlot = 24;
							this.rare = 5;
							this.value = 200000;
							return;
						}
						if (type == 552)
						{
							this.width = 18;
							this.height = 18;
							this.defense = 11;
							this.legSlot = 23;
							this.rare = 5;
							this.value = 150000;
							return;
						}
						if (type == 553)
						{
							this.width = 18;
							this.height = 18;
							this.defense = 9;
							this.headSlot = 41;
							this.rare = 5;
							this.value = 250000;
							return;
						}
						if (type == 558)
						{
							this.width = 18;
							this.height = 18;
							this.defense = 5;
							this.headSlot = 42;
							this.rare = 5;
							this.value = 250000;
							return;
						}
						if (type == 559)
						{
							this.width = 18;
							this.height = 18;
							this.defense = 24;
							this.headSlot = 43;
							this.rare = 5;
							this.value = 250000;
							return;
						}
						if (type == 554)
						{
							this.width = 20;
							this.height = 24;
							this.value = Item.buyPrice(0, 10, 0, 0);
							this.accessory = true;
							this.rare = 4;
							this.neckSlot = 2;
							return;
						}
						if (type == 555)
						{
							this.width = 20;
							this.height = 24;
							this.value = 50000;
							this.accessory = true;
							this.rare = 4;
							this.waistSlot = 6;
							return;
						}
						if (type == 556)
						{
							this.width = 22;
							this.height = 14;
							if (this.Variant != ItemVariants.DisabledBossSummonVariant)
							{
								this.useStyle = 4;
								this.consumable = true;
								this.useAnimation = 45;
								this.useTime = 45;
							}
							this.maxStack = Item.CommonMaxStack;
							this.rare = 3;
							return;
						}
						if (type == 557)
						{
							this.width = 22;
							this.height = 14;
							if (this.Variant != ItemVariants.DisabledBossSummonVariant)
							{
								this.useStyle = 4;
								this.consumable = true;
								this.useAnimation = 45;
								this.useTime = 45;
							}
							this.maxStack = Item.CommonMaxStack;
							this.rare = 3;
							return;
						}
						if (type == 560)
						{
							this.useStyle = 4;
							this.width = 22;
							this.height = 14;
							this.consumable = true;
							this.useAnimation = 45;
							this.useTime = 45;
							this.maxStack = Item.CommonMaxStack;
							this.rare = 1;
							return;
						}
						if (type == 561)
						{
							this.melee = true;
							this.autoReuse = true;
							this.noMelee = true;
							this.useStyle = 1;
							this.shootSpeed = 16f;
							this.shoot = 106;
							this.damage = 60;
							this.knockBack = 8f;
							this.width = 24;
							this.height = 24;
							this.UseSound = SoundID.Item1;
							this.useAnimation = 14;
							this.useTime = 14;
							this.noUseGraphic = true;
							this.rare = 5;
							this.value = Item.sellPrice(0, 15, 0, 0);
							return;
						}
						if (type == 562)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.consumable = true;
							this.createTile = 139;
							this.placeStyle = 0;
							this.width = 24;
							this.height = 24;
							this.rare = 4;
							this.value = 100000;
							this.accessory = true;
							this.hasVanityEffects = true;
							return;
						}
						if (type == 563)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.consumable = true;
							this.createTile = 139;
							this.placeStyle = 1;
							this.width = 24;
							this.height = 24;
							this.rare = 4;
							this.value = 100000;
							this.accessory = true;
							this.hasVanityEffects = true;
							return;
						}
						if (type == 564)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.consumable = true;
							this.createTile = 139;
							this.placeStyle = 2;
							this.width = 24;
							this.height = 24;
							this.rare = 4;
							this.value = 100000;
							this.accessory = true;
							this.hasVanityEffects = true;
							return;
						}
						if (type == 565)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.consumable = true;
							this.createTile = 139;
							this.placeStyle = 3;
							this.width = 24;
							this.height = 24;
							this.rare = 4;
							this.value = 100000;
							this.accessory = true;
							this.hasVanityEffects = true;
							return;
						}
						if (type == 566)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.consumable = true;
							this.createTile = 139;
							this.placeStyle = 4;
							this.width = 24;
							this.height = 24;
							this.rare = 4;
							this.value = 100000;
							this.accessory = true;
							this.hasVanityEffects = true;
							return;
						}
						if (type == 567)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.consumable = true;
							this.createTile = 139;
							this.placeStyle = 5;
							this.width = 24;
							this.height = 24;
							this.rare = 4;
							this.value = 100000;
							this.accessory = true;
							this.hasVanityEffects = true;
							return;
						}
						if (type == 568)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.consumable = true;
							this.createTile = 139;
							this.placeStyle = 6;
							this.width = 24;
							this.height = 24;
							this.rare = 4;
							this.value = 100000;
							this.accessory = true;
							this.hasVanityEffects = true;
							return;
						}
						if (type == 569)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.consumable = true;
							this.createTile = 139;
							this.placeStyle = 7;
							this.width = 24;
							this.height = 24;
							this.rare = 4;
							this.value = 100000;
							this.accessory = true;
							this.hasVanityEffects = true;
							return;
						}
						if (type == 570)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.consumable = true;
							this.createTile = 139;
							this.placeStyle = 8;
							this.width = 24;
							this.height = 24;
							this.rare = 4;
							this.value = 100000;
							this.accessory = true;
							this.hasVanityEffects = true;
							return;
						}
						if (type == 571)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.consumable = true;
							this.createTile = 139;
							this.placeStyle = 9;
							this.width = 24;
							this.height = 24;
							this.rare = 4;
							this.value = 100000;
							this.accessory = true;
							this.hasVanityEffects = true;
							return;
						}
						if (type == 572)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.consumable = true;
							this.createTile = 139;
							this.placeStyle = 10;
							this.width = 24;
							this.height = 24;
							this.rare = 4;
							this.value = 100000;
							this.accessory = true;
							this.hasVanityEffects = true;
							return;
						}
						if (type == 573)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.consumable = true;
							this.createTile = 139;
							this.placeStyle = 11;
							this.width = 24;
							this.height = 24;
							this.rare = 4;
							this.value = 100000;
							this.accessory = true;
							this.hasVanityEffects = true;
							return;
						}
						if (type == 574)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.consumable = true;
							this.createTile = 139;
							this.placeStyle = 12;
							this.width = 24;
							this.height = 24;
							this.rare = 4;
							this.value = 100000;
							this.accessory = true;
							this.hasVanityEffects = true;
							return;
						}
						if (type == 575)
						{
							this.width = 18;
							this.height = 18;
							this.maxStack = Item.CommonMaxStack;
							this.value = 1000;
							this.rare = 3;
							return;
						}
						if (type == 576)
						{
							this.width = 24;
							this.height = 24;
							this.rare = 3;
							this.value = 100000;
							this.accessory = true;
							return;
						}
						if (type == 577)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 140;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 578)
						{
							this.useStyle = 5;
							this.autoReuse = true;
							this.useAnimation = 17;
							this.useTime = 17;
							this.width = 50;
							this.height = 18;
							this.shoot = 1;
							this.useAmmo = AmmoID.Arrow;
							this.UseSound = SoundID.Item5;
							this.damage = 50;
							this.shootSpeed = 11f;
							this.noMelee = true;
							this.value = 200000;
							this.ranged = true;
							this.rare = 4;
							this.knockBack = 2.5f;
							return;
						}
						if (type == 579)
						{
							this.useStyle = 5;
							this.useAnimation = 25;
							this.useTime = 7;
							this.shootSpeed = 36f;
							this.knockBack = 4.75f;
							this.width = 20;
							this.height = 12;
							this.damage = 35;
							this.pick = 200;
							this.axe = 22;
							this.UseSound = SoundID.Item23;
							this.shoot = 107;
							this.rare = 4;
							this.value = 220000;
							this.noMelee = true;
							this.noUseGraphic = true;
							this.melee = true;
							this.channel = true;
							return;
						}
						if (type == 580)
						{
							this.mech = true;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 141;
							this.width = 12;
							this.height = 12;
							this.value = Item.sellPrice(0, 0, 10, 0);
							return;
						}
						if (type == 581)
						{
							this.mech = true;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 142;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 582)
						{
							this.mech = true;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 143;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 583)
						{
							this.mech = true;
							this.noWet = true;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 144;
							this.placeStyle = 0;
							this.width = 10;
							this.height = 12;
							this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 1, 0, 0));
							return;
						}
						if (type == 584)
						{
							this.mech = true;
							this.noWet = true;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 144;
							this.placeStyle = 1;
							this.width = 10;
							this.height = 12;
							this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 1, 0, 0));
							return;
						}
						if (type == 585)
						{
							this.mech = true;
							this.noWet = true;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 144;
							this.placeStyle = 2;
							this.width = 10;
							this.height = 12;
							this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 1, 0, 0));
							return;
						}
						if (type == 586)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 145;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 587)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 29;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 588)
						{
							this.width = 18;
							this.height = 12;
							this.headSlot = 44;
							this.value = 150000;
							this.vanity = true;
							return;
						}
						if (type == 589)
						{
							this.width = 18;
							this.height = 18;
							this.bodySlot = 25;
							this.value = 150000;
							this.vanity = true;
							return;
						}
						if (type == 590)
						{
							this.width = 18;
							this.height = 18;
							this.legSlot = 24;
							this.value = 150000;
							this.vanity = true;
							return;
						}
						if (type == 591)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 146;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 592)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 30;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 593)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 147;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 594)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 148;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 595)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 31;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 596)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 149;
							this.placeStyle = 0;
							this.width = 12;
							this.height = 12;
							this.value = 500;
							return;
						}
						if (type == 597)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 149;
							this.placeStyle = 1;
							this.width = 12;
							this.height = 12;
							this.value = 500;
							return;
						}
						if (type == 598)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 149;
							this.placeStyle = 2;
							this.width = 12;
							this.height = 12;
							this.value = 500;
							return;
						}
						if (type == 599)
						{
							this.width = 12;
							this.height = 12;
							this.rare = 1;
							return;
						}
						if (type == 600)
						{
							this.width = 12;
							this.height = 12;
							this.rare = 1;
							return;
						}
						if (type == 601)
						{
							this.width = 12;
							this.height = 12;
							this.rare = 1;
							return;
						}
						if (type == 602)
						{
							this.useStyle = 4;
							this.consumable = true;
							this.useAnimation = 45;
							this.useTime = 45;
							this.width = 28;
							this.height = 28;
							this.rare = 2;
							this.maxStack = Item.CommonMaxStack;
							return;
						}
						if (type == 603)
						{
							this.damage = 0;
							this.useStyle = 1;
							this.shoot = 111;
							this.width = 16;
							this.height = 30;
							this.UseSound = SoundID.Item2;
							this.useAnimation = 20;
							this.useTime = 20;
							this.rare = 3;
							this.noMelee = true;
							this.value = 0;
							this.buffType = 40;
							return;
						}
						if (type == 604)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 150;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 605)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 32;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 606)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 33;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 607)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 151;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 608)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 34;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 609)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 152;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 610)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 35;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 611)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 153;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 612)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 154;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 613)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 155;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 614)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 156;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 615)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 36;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 616)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 37;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 617)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 38;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 618)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 39;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 619)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 157;
							this.width = 8;
							this.height = 10;
							return;
						}
						if (type == 620)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 158;
							this.width = 8;
							this.height = 10;
							return;
						}
						if (type == 621)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 159;
							this.width = 8;
							this.height = 10;
							return;
						}
						if (type == 622)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 41;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 623)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 42;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 624)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 43;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 625)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 21;
							this.placeStyle = 7;
							this.width = 26;
							this.height = 22;
							this.value = 500;
							return;
						}
						if (type == 626)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 21;
							this.placeStyle = 8;
							this.width = 26;
							this.height = 22;
							this.value = 500;
							return;
						}
						if (type == 627)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 21;
							this.placeStyle = 9;
							this.width = 26;
							this.height = 22;
							this.value = 500;
							return;
						}
						if (type == 628)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 15;
							this.placeStyle = 2;
							this.width = 12;
							this.height = 30;
							this.value = 150;
							return;
						}
						if (type == 629)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 15;
							this.placeStyle = 3;
							this.width = 12;
							this.height = 30;
							this.value = 150;
							return;
						}
						if (type == 630)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 15;
							this.placeStyle = 4;
							this.width = 12;
							this.height = 30;
							this.value = 150;
							return;
						}
						if (type == 631)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 19;
							this.placeStyle = 1;
							this.width = 8;
							this.height = 10;
							return;
						}
						if (type == 632)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 19;
							this.placeStyle = 2;
							this.width = 8;
							this.height = 10;
							return;
						}
						if (type == 633)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 19;
							this.placeStyle = 3;
							this.width = 8;
							this.height = 10;
							return;
						}
						if (type == 634)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 19;
							this.placeStyle = 4;
							this.width = 8;
							this.height = 10;
							return;
						}
						if (type == 635)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 18;
							this.placeStyle = 1;
							this.width = 28;
							this.height = 14;
							this.value = 150;
							return;
						}
						if (type == 636)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 18;
							this.placeStyle = 2;
							this.width = 28;
							this.height = 14;
							this.value = 150;
							return;
						}
						if (type == 637)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 18;
							this.placeStyle = 3;
							this.width = 28;
							this.height = 14;
							this.value = 150;
							return;
						}
						if (type == 638)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 14;
							this.placeStyle = 1;
							this.width = 26;
							this.height = 20;
							this.value = 300;
							return;
						}
						if (type == 639)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 14;
							this.placeStyle = 2;
							this.width = 26;
							this.height = 20;
							this.value = 300;
							return;
						}
						if (type == 640)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 14;
							this.placeStyle = 3;
							this.width = 26;
							this.height = 20;
							this.value = 300;
							return;
						}
						if (type == 641)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 87;
							this.placeStyle = 1;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							return;
						}
						if (type == 642)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 87;
							this.placeStyle = 2;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							return;
						}
						if (type == 643)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 87;
							this.placeStyle = 3;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							return;
						}
						if (type == 644)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 79;
							this.placeStyle = 1;
							this.width = 28;
							this.height = 20;
							this.value = 2000;
							return;
						}
						if (type == 645)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 79;
							this.placeStyle = 2;
							this.width = 28;
							this.height = 20;
							this.value = 2000;
							return;
						}
						if (type == 646)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 79;
							this.placeStyle = 3;
							this.width = 28;
							this.height = 20;
							this.value = 2000;
							return;
						}
						if (type == 647)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 88;
							this.placeStyle = 1;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							return;
						}
						if (type == 648)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 88;
							this.placeStyle = 2;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							return;
						}
						if (type == 649)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 88;
							this.placeStyle = 3;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							return;
						}
						if (type == 650)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 10;
							this.placeStyle = 1;
							this.width = 14;
							this.height = 28;
							this.value = 200;
							return;
						}
						if (type == 651)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 10;
							this.placeStyle = 2;
							this.width = 14;
							this.height = 28;
							this.value = 200;
							return;
						}
						if (type == 652)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 10;
							this.placeStyle = 3;
							this.width = 14;
							this.height = 28;
							this.value = 200;
							return;
						}
						if (type == 653)
						{
							this.useStyle = 1;
							this.useTurn = false;
							this.useAnimation = 19;
							this.useTime = 19;
							this.width = 24;
							this.height = 28;
							this.damage = 11;
							this.knockBack = 6f;
							this.UseSound = SoundID.Item1;
							this.scale = 1f;
							this.value = 100;
							this.melee = true;
							return;
						}
						if (type == 654)
						{
							this.autoReuse = true;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 30;
							this.useTime = 20;
							this.hammer = 40;
							this.width = 24;
							this.height = 28;
							this.damage = 7;
							this.knockBack = 5.5f;
							this.scale = 1f;
							this.UseSound = SoundID.Item1;
							this.value = 50;
							this.melee = true;
							return;
						}
						if (type == 655)
						{
							this.useStyle = 5;
							this.useAnimation = 28;
							this.useTime = 28;
							this.width = 12;
							this.height = 28;
							this.shoot = 1;
							this.useAmmo = AmmoID.Arrow;
							this.UseSound = SoundID.Item5;
							this.damage = 8;
							this.shootSpeed = 6.6f;
							this.noMelee = true;
							this.value = 100;
							this.ranged = true;
							return;
						}
						if (type == 656)
						{
							this.useStyle = 1;
							this.useTurn = false;
							this.useAnimation = 19;
							this.useTime = 19;
							this.width = 24;
							this.height = 28;
							this.damage = 8;
							this.knockBack = 6f;
							this.UseSound = SoundID.Item1;
							this.scale = 1f;
							this.value = 100;
							this.melee = true;
							return;
						}
						if (type == 657)
						{
							this.autoReuse = true;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 33;
							this.useTime = 23;
							this.hammer = 35;
							this.width = 24;
							this.height = 28;
							this.damage = 4;
							this.knockBack = 5.5f;
							this.scale = 1f;
							this.UseSound = SoundID.Item1;
							this.value = 50;
							this.melee = true;
							return;
						}
						if (type == 658)
						{
							this.useStyle = 5;
							this.useAnimation = 29;
							this.useTime = 29;
							this.width = 12;
							this.height = 28;
							this.shoot = 1;
							this.useAmmo = AmmoID.Arrow;
							this.UseSound = SoundID.Item5;
							this.damage = 6;
							this.shootSpeed = 6.6f;
							this.noMelee = true;
							this.value = 100;
							this.ranged = true;
							return;
						}
						if (type == 659)
						{
							this.useStyle = 1;
							this.useTurn = false;
							this.useAnimation = 15;
							this.useTime = 15;
							this.width = 24;
							this.height = 28;
							this.damage = 30;
							this.knockBack = 7f;
							this.UseSound = SoundID.Item1;
							this.scale = 1f;
							this.value = 100;
							this.melee = true;
							this.autoReuse = true;
							return;
						}
						if (type == 660)
						{
							this.autoReuse = true;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 29;
							this.useTime = 19;
							this.hammer = 55;
							this.width = 24;
							this.height = 28;
							this.damage = 10;
							this.knockBack = 5.5f;
							this.scale = 1f;
							this.UseSound = SoundID.Item1;
							this.value = 50;
							this.melee = true;
							return;
						}
						if (type == 661)
						{
							this.useStyle = 5;
							this.useAnimation = 20;
							this.useTime = 20;
							this.width = 12;
							this.height = 28;
							this.shoot = 1;
							this.useAmmo = AmmoID.Arrow;
							this.UseSound = SoundID.Item5;
							this.damage = 12;
							this.shootSpeed = 7f;
							this.noMelee = true;
							this.value = 100;
							this.ranged = true;
							return;
						}
						if (type == 662)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 160;
							this.width = 12;
							this.height = 12;
							this.rare = 1;
							return;
						}
						if (type == 663)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 44;
							this.width = 12;
							this.height = 12;
							this.rare = 1;
							return;
						}
						if (type == 664)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 161;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 665)
						{
							this.width = 24;
							this.height = 8;
							this.accessory = true;
							this.rare = 9;
							this.wingSlot = 3;
							this.value = 400000;
							return;
						}
						if (type == 666)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 45;
							this.rare = 9;
							this.vanity = true;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 667)
						{
							this.width = 18;
							this.height = 18;
							this.bodySlot = 26;
							this.rare = 9;
							this.vanity = true;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 668)
						{
							this.width = 18;
							this.height = 18;
							this.legSlot = 25;
							this.rare = 9;
							this.vanity = true;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 669)
						{
							this.damage = 0;
							this.useStyle = 1;
							this.shoot = 112;
							this.width = 16;
							this.height = 30;
							this.UseSound = SoundID.Item2;
							this.useAnimation = 20;
							this.useTime = 20;
							this.rare = 3;
							this.noMelee = true;
							this.buffType = 41;
							this.value = Item.sellPrice(0, 2, 0, 0);
							return;
						}
						if (type == 670)
						{
							this.crit = 2;
							this.noMelee = true;
							this.useStyle = 1;
							this.shootSpeed = 11.5f;
							this.shoot = 113;
							this.damage = 21;
							this.knockBack = 8.5f;
							this.width = 14;
							this.height = 28;
							this.UseSound = SoundID.Item1;
							this.useAnimation = 20;
							this.useTime = 20;
							this.noUseGraphic = true;
							this.rare = 1;
							this.value = 50000;
							this.melee = true;
							return;
						}
						if (type == 671)
						{
							this.crit = 16;
							this.autoReuse = true;
							this.useStyle = 1;
							this.useAnimation = 20;
							this.useTime = 20;
							this.knockBack = 6.5f;
							this.width = 40;
							this.height = 40;
							this.damage = 105;
							this.scale = 1f;
							this.UseSound = SoundID.Item1;
							this.rare = 8;
							this.value = Item.buyPrice(0, 20, 0, 0);
							this.melee = true;
							if (this.Variant == ItemVariants.WeakerVariant)
							{
								this.rare = 1;
								this.value = Item.buyPrice(0, 10, 0, 0);
								this.damage = 15;
								return;
							}
						}
						else
						{
							if (type == 672)
							{
								this.useStyle = 1;
								this.useTime = 16;
								this.useAnimation = 16;
								this.knockBack = 4f;
								this.width = 24;
								this.height = 28;
								this.damage = 53;
								this.scale = 1.1f;
								this.UseSound = SoundID.Item1;
								this.rare = 4;
								this.value = 180000;
								this.melee = true;
								this.autoReuse = true;
								this.useTurn = true;
								return;
							}
							if (type == 673)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 18;
								this.placeStyle = 23;
								this.width = 28;
								this.height = 14;
								this.value = 150;
								return;
							}
							if (type == 674)
							{
								this.useStyle = 1;
								this.useAnimation = 18;
								this.useTime = 18;
								this.autoReuse = true;
								this.shoot = 983;
								this.shootSpeed = 11f;
								this.knockBack = 4.5f;
								this.width = 40;
								this.height = 40;
								this.damage = 72;
								this.scale = 1f;
								this.UseSound = SoundID.Item1;
								this.rare = 8;
								this.value = Item.sellPrice(0, 10, 0, 0);
								this.melee = true;
								this.noMelee = true;
								this.shootsEveryUse = true;
								return;
							}
							if (type == 675)
							{
								this.useStyle = 1;
								this.useAnimation = 32;
								this.useTime = 32;
								this.autoReuse = true;
								this.shoot = 973;
								this.shootSpeed = 14f;
								this.knockBack = 4.75f;
								this.width = 40;
								this.height = 40;
								this.damage = 70;
								this.scale = 1f;
								this.UseSound = SoundID.Item1;
								this.rare = 8;
								this.value = Item.sellPrice(0, 10, 0, 0);
								this.melee = true;
								this.noMelee = true;
								this.shootsEveryUse = true;
								return;
							}
							if (type == 676)
							{
								this.autoReuse = true;
								this.useStyle = 1;
								this.useAnimation = 23;
								this.useTime = 30;
								this.knockBack = 4.5f;
								this.width = 24;
								this.height = 28;
								this.damage = 49;
								this.scale = 1f;
								this.UseSound = SoundID.Item1;
								this.rare = 5;
								this.shoot = 119;
								this.shootSpeed = 12f;
								this.value = 250000;
								this.melee = true;
								return;
							}
							if (type == 677)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 14;
								this.placeStyle = 28;
								this.width = 26;
								this.height = 20;
								this.value = 300;
								return;
							}
							if (type == 678)
							{
								this.UseSound = SoundID.Item3;
								this.useStyle = 9;
								this.useTurn = true;
								this.useAnimation = 17;
								this.useTime = 17;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.width = 14;
								this.height = 24;
								this.rare = 4;
								return;
							}
							if (type == 679)
							{
								this.autoReuse = true;
								this.knockBack = 7f;
								this.useStyle = 5;
								this.useAnimation = 34;
								this.useTime = 34;
								this.width = 50;
								this.height = 14;
								this.shoot = 10;
								this.useAmmo = AmmoID.Bullet;
								this.UseSound = SoundID.Item38;
								this.damage = 29;
								this.shootSpeed = 6f;
								this.noMelee = true;
								this.value = Item.buyPrice(0, 40, 0, 0);
								this.rare = 8;
								this.ranged = true;
								return;
							}
							if (type == 680)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 21;
								this.placeStyle = 10;
								this.width = 26;
								this.height = 22;
								this.value = 5000;
								return;
							}
							if (type == 681)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 21;
								this.placeStyle = 11;
								this.width = 26;
								this.height = 22;
								this.value = 5000;
								return;
							}
							if (type == 682)
							{
								this.useStyle = 5;
								this.useAnimation = 19;
								this.useTime = 19;
								this.width = 14;
								this.height = 32;
								this.shoot = 1;
								this.autoReuse = true;
								this.useAmmo = AmmoID.Arrow;
								this.UseSound = SoundID.Item5;
								this.damage = 53;
								this.shootSpeed = 11f;
								this.knockBack = 4.7f;
								this.rare = 5;
								this.crit = 5;
								this.noMelee = true;
								this.scale = 1.1f;
								this.value = 27000;
								this.ranged = true;
								return;
							}
							if (type == 683)
							{
								this.autoReuse = true;
								this.rare = 6;
								this.mana = 19;
								this.UseSound = SoundID.Item20;
								this.noMelee = true;
								this.useStyle = 5;
								this.damage = 88;
								this.useAnimation = 17;
								this.useTime = 17;
								this.width = 30;
								this.height = 30;
								this.shoot = 114;
								this.shootSpeed = 13f;
								this.knockBack = 6.5f;
								this.magic = true;
								this.value = 500000;
								if (this.Variant == ItemVariants.WeakerVariant)
								{
									this.value = this.hellPrice;
									this.rare = 3;
									this.damage = 42;
									this.mana = 9;
									return;
								}
							}
							else
							{
								if (type == 684)
								{
									this.width = 18;
									this.height = 18;
									this.defense = 10;
									this.headSlot = 46;
									this.rare = 5;
									this.value = 250000;
									return;
								}
								if (type == 685)
								{
									this.width = 18;
									this.height = 18;
									this.defense = 20;
									this.bodySlot = 27;
									this.rare = 5;
									this.value = 200000;
									return;
								}
								if (type == 686)
								{
									this.width = 18;
									this.height = 18;
									this.defense = 13;
									this.legSlot = 26;
									this.rare = 5;
									this.value = 150000;
									return;
								}
								if (type == 687)
								{
									this.width = 18;
									this.height = 18;
									this.defense = 2;
									this.headSlot = 47;
									this.value = 1125;
									return;
								}
								if (type == 688)
								{
									this.width = 18;
									this.height = 18;
									this.defense = 2;
									this.bodySlot = 28;
									this.value = 1875;
									return;
								}
								if (type == 689)
								{
									this.width = 18;
									this.height = 18;
									this.defense = 1;
									this.legSlot = 27;
									this.value = 1500;
									return;
								}
								if (type == 690)
								{
									this.width = 18;
									this.height = 18;
									this.defense = 3;
									this.headSlot = 48;
									this.value = 4500;
									return;
								}
								if (type == 691)
								{
									this.width = 18;
									this.height = 18;
									this.defense = 3;
									this.bodySlot = 29;
									this.value = 7500;
									return;
								}
								if (type == 692)
								{
									this.width = 18;
									this.height = 18;
									this.defense = 2;
									this.legSlot = 28;
									this.value = 6000;
									return;
								}
								if (type == 693)
								{
									this.width = 18;
									this.height = 18;
									this.defense = 4;
									this.headSlot = 49;
									this.value = 11250;
									return;
								}
								if (type == 694)
								{
									this.width = 18;
									this.height = 18;
									this.defense = 5;
									this.bodySlot = 30;
									this.value = 18750;
									return;
								}
								if (type == 695)
								{
									this.width = 18;
									this.height = 18;
									this.defense = 3;
									this.legSlot = 29;
									this.value = 15000;
									return;
								}
								if (type == 696)
								{
									this.width = 18;
									this.height = 18;
									this.defense = 5;
									this.headSlot = 50;
									this.value = 22500;
									return;
								}
								if (type == 697)
								{
									this.width = 18;
									this.height = 18;
									this.defense = 6;
									this.bodySlot = 31;
									this.value = 37500;
									return;
								}
								if (type == 698)
								{
									this.width = 18;
									this.height = 18;
									this.defense = 5;
									this.legSlot = 30;
									this.value = 30000;
									return;
								}
								if (type == 699)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 166;
									this.width = 12;
									this.height = 12;
									this.value = 375;
									return;
								}
								if (type == 700)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 167;
									this.width = 12;
									this.height = 12;
									this.value = 750;
									return;
								}
								if (type == 701)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 168;
									this.width = 12;
									this.height = 12;
									this.value = Item.sellPrice(0, 0, 2, 25);
									return;
								}
								if (type == 702)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 169;
									this.width = 12;
									this.height = 12;
									this.value = Item.sellPrice(0, 0, 4, 50);
									return;
								}
								if (type == 703)
								{
									this.width = 20;
									this.height = 20;
									this.maxStack = Item.CommonMaxStack;
									this.value = 1125;
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.consumable = true;
									this.createTile = 239;
									this.placeStyle = 1;
									return;
								}
								if (type == 704)
								{
									this.width = 20;
									this.height = 20;
									this.maxStack = Item.CommonMaxStack;
									this.value = 2250;
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.consumable = true;
									this.createTile = 239;
									this.placeStyle = 3;
									return;
								}
								if (type == 705)
								{
									this.width = 20;
									this.height = 20;
									this.maxStack = Item.CommonMaxStack;
									this.value = 4500;
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.consumable = true;
									this.createTile = 239;
									this.placeStyle = 5;
									return;
								}
								if (type == 706)
								{
									this.width = 20;
									this.height = 20;
									this.maxStack = Item.CommonMaxStack;
									this.value = 9000;
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.consumable = true;
									this.createTile = 239;
									this.placeStyle = 7;
									return;
								}
								if (type == 707)
								{
									this.width = 24;
									this.height = 28;
									this.accessory = true;
									this.value = 1500;
									this.waistSlot = 8;
									return;
								}
								if (type == 708)
								{
									this.width = 24;
									this.height = 28;
									this.accessory = true;
									this.value = 7500;
									this.waistSlot = 9;
									return;
								}
								if (type == 709)
								{
									this.width = 24;
									this.height = 28;
									this.accessory = true;
									this.rare = 1;
									this.value = 15000;
									this.waistSlot = 4;
									return;
								}
								if (type == 710)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 34;
									this.placeStyle = 3;
									this.width = 26;
									this.height = 26;
									this.value = 4500;
									return;
								}
								if (type == 711)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 34;
									this.placeStyle = 4;
									this.width = 26;
									this.height = 26;
									this.value = 18000;
									return;
								}
								if (type == 712)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 34;
									this.placeStyle = 5;
									this.width = 26;
									this.height = 26;
									this.value = 36000;
									return;
								}
								if (type == 713)
								{
									this.flame = true;
									this.noWet = true;
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 174;
									this.width = 8;
									this.height = 18;
									this.value = Item.sellPrice(0, 0, 3, 0);
									this.holdStyle = 1;
									return;
								}
								if (type == 714)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 173;
									this.width = 20;
									this.height = 20;
									this.value = Item.buyPrice(0, 0, 15, 0);
									return;
								}
								if (type == 715)
								{
									this.width = 18;
									this.height = 18;
									this.headSlot = 51;
									this.value = 15000;
									this.vanity = true;
									return;
								}
								if (type == 716)
								{
									this.placeStyle = 1;
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 16;
									this.width = 28;
									this.height = 14;
									this.value = 7500;
									return;
								}
								if (type == 717)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 175;
									this.width = 12;
									this.height = 12;
									return;
								}
								if (type == 718)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 176;
									this.width = 12;
									this.height = 12;
									return;
								}
								if (type == 719)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 177;
									this.width = 12;
									this.height = 12;
									return;
								}
								if (type == 720)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 7;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createWall = 45;
									this.width = 12;
									this.height = 12;
									return;
								}
								if (type == 721)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 7;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createWall = 46;
									this.width = 12;
									this.height = 12;
									return;
								}
								if (type == 722)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 7;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createWall = 47;
									this.width = 12;
									this.height = 12;
									return;
								}
								if (type == 723)
								{
									this.rare = 4;
									this.UseSound = SoundID.Item1;
									this.useStyle = 1;
									this.damage = 52;
									this.scale = 1f;
									this.useAnimation = 20;
									this.useTime = 35;
									this.autoReuse = true;
									this.width = 30;
									this.height = 30;
									this.shoot = 116;
									this.shootSpeed = 11f;
									this.knockBack = 6.5f;
									this.melee = true;
									this.value = Item.sellPrice(0, 3, 0, 0);
									return;
								}
								if (type == 724)
								{
									this.autoReuse = true;
									this.crit = 2;
									this.rare = 1;
									this.UseSound = SoundID.Item1;
									this.useStyle = 1;
									this.damage = 17;
									this.useAnimation = 20;
									this.useTime = 55;
									this.width = 30;
									this.height = 30;
									this.shoot = 118;
									this.shootSpeed = 9.5f;
									this.knockBack = 4.75f;
									this.melee = true;
									this.value = 20000;
									return;
								}
								if (type == 725)
								{
									this.useStyle = 5;
									this.useAnimation = 14;
									this.useTime = 14;
									this.width = 12;
									this.height = 28;
									this.shoot = 1;
									this.useAmmo = AmmoID.Arrow;
									this.UseSound = SoundID.Item5;
									this.damage = 39;
									this.shootSpeed = 10f;
									this.knockBack = 4.5f;
									this.alpha = 30;
									this.rare = 5;
									this.noMelee = true;
									this.value = Item.sellPrice(0, 5, 0, 0);
									this.ranged = true;
									this.autoReuse = true;
									if (this.Variant == ItemVariants.WeakerVariant)
									{
										this.value = 100000;
										this.rare = 1;
										this.damage = 8;
										this.useAnimation = 17;
										this.useTime = 17;
										return;
									}
								}
								else
								{
									if (type == 726)
									{
										this.autoReuse = true;
										this.rare = 5;
										this.mana = 12;
										this.UseSound = SoundID.Item20;
										this.useStyle = 5;
										this.damage = 46;
										this.useAnimation = 12;
										this.useTime = 12;
										this.width = 30;
										this.height = 30;
										this.shoot = 359;
										this.shootSpeed = 16f;
										this.knockBack = 5f;
										this.magic = true;
										this.value = Item.sellPrice(0, 4, 0, 0);
										this.noMelee = true;
										return;
									}
									if (type == 727)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 1;
										this.headSlot = 52;
										return;
									}
									if (type == 728)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 1;
										this.bodySlot = 32;
										return;
									}
									if (type == 729)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 0;
										this.legSlot = 31;
										return;
									}
									if (type == 730)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 1;
										this.headSlot = 53;
										return;
									}
									if (type == 731)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 2;
										this.bodySlot = 33;
										return;
									}
									if (type == 732)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 1;
										this.legSlot = 32;
										return;
									}
									if (type == 733)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 1;
										this.headSlot = 54;
										return;
									}
									if (type == 734)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 1;
										this.bodySlot = 34;
										return;
									}
									if (type == 735)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 1;
										this.legSlot = 33;
										return;
									}
									if (type == 736)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 2;
										this.headSlot = 55;
										return;
									}
									if (type == 737)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 3;
										this.bodySlot = 35;
										return;
									}
									if (type == 738)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 2;
										this.legSlot = 34;
										return;
									}
									if (type == 739)
									{
										this.mana = 5;
										this.UseSound = SoundID.Item43;
										this.useStyle = 5;
										this.damage = 15;
										this.useAnimation = 37;
										this.useTime = 37;
										this.width = 40;
										this.height = 40;
										this.shoot = 121;
										this.shootSpeed = 6f;
										this.knockBack = 3.25f;
										this.value = 2000;
										this.magic = true;
										this.noMelee = true;
										return;
									}
									if (type == 740)
									{
										this.mana = 5;
										this.UseSound = SoundID.Item43;
										this.useStyle = 5;
										this.damage = 16;
										this.useAnimation = 36;
										this.useTime = 36;
										this.width = 40;
										this.height = 40;
										this.shoot = 122;
										this.shootSpeed = 6.5f;
										this.knockBack = 3.5f;
										this.value = 3000;
										this.magic = true;
										this.noMelee = true;
										return;
									}
									if (type == 741)
									{
										this.mana = 6;
										this.UseSound = SoundID.Item43;
										this.useStyle = 5;
										this.damage = 18;
										this.useAnimation = 34;
										this.useTime = 34;
										this.width = 40;
										this.height = 40;
										this.shoot = 123;
										this.shootSpeed = 7.5f;
										this.knockBack = 4f;
										this.value = 10000;
										this.magic = true;
										this.autoReuse = true;
										this.rare = 1;
										this.noMelee = true;
										return;
									}
									if (type == 742)
									{
										this.mana = 6;
										this.UseSound = SoundID.Item43;
										this.useStyle = 5;
										this.damage = 19;
										this.useAnimation = 32;
										this.useTime = 32;
										this.width = 40;
										this.height = 40;
										this.shoot = 124;
										this.shootSpeed = 8f;
										this.knockBack = 4.25f;
										this.magic = true;
										this.autoReuse = true;
										this.value = 15000;
										this.rare = 1;
										this.noMelee = true;
										return;
									}
									if (type == 743)
									{
										this.mana = 7;
										this.UseSound = SoundID.Item43;
										this.useStyle = 5;
										this.damage = 21;
										this.useAnimation = 28;
										this.useTime = 28;
										this.width = 40;
										this.height = 40;
										this.shoot = 125;
										this.shootSpeed = 9f;
										this.knockBack = 4.75f;
										this.magic = true;
										this.autoReuse = true;
										this.value = 20000;
										this.rare = 1;
										this.noMelee = true;
										return;
									}
									if (type == 744)
									{
										this.mana = 8;
										this.UseSound = SoundID.Item43;
										this.useStyle = 5;
										this.damage = 23;
										this.useAnimation = 26;
										this.useTime = 26;
										this.width = 40;
										this.height = 40;
										this.shoot = 126;
										this.shootSpeed = 9.5f;
										this.knockBack = 5.5f;
										this.magic = true;
										this.autoReuse = true;
										this.value = 30000;
										this.rare = 2;
										this.noMelee = true;
										return;
									}
									if (type == 745)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 66;
										this.width = 12;
										this.height = 12;
										this.value = 10;
										return;
									}
									if (type == 746)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 67;
										this.width = 12;
										this.height = 12;
										this.value = 10;
										return;
									}
									if (type == 747)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 68;
										this.width = 12;
										this.height = 12;
										this.value = 10;
										return;
									}
									if (type == 748)
									{
										this.width = 24;
										this.height = 8;
										this.accessory = true;
										this.value = 400000;
										this.rare = 5;
										this.wingSlot = 4;
										return;
									}
									if (type == 749)
									{
										this.width = 24;
										this.height = 8;
										this.accessory = true;
										this.value = 400000;
										this.rare = 5;
										this.wingSlot = 5;
										return;
									}
									if (type == 750)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 72;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 751)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 189;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 752)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 73;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 753)
									{
										this.damage = 0;
										this.useStyle = 1;
										this.shoot = 127;
										this.width = 16;
										this.height = 30;
										this.UseSound = SoundID.Item2;
										this.useAnimation = 20;
										this.useTime = 20;
										this.rare = 3;
										this.noMelee = true;
										this.value = Item.sellPrice(0, 2, 0, 0);
										this.buffType = 42;
										return;
									}
									if (type == 754)
									{
										this.width = 28;
										this.height = 20;
										this.headSlot = 56;
										this.rare = 5;
										this.value = 50000;
										this.vanity = true;
										return;
									}
									if (type == 755)
									{
										this.width = 18;
										this.height = 14;
										this.bodySlot = 36;
										this.value = 50000;
										this.vanity = true;
										this.rare = 5;
										return;
									}
									if (type == 756)
									{
										this.rare = 7;
										this.useStyle = 5;
										this.useAnimation = 40;
										this.useTime = 40;
										this.shootSpeed = 5.5f;
										this.knockBack = 6.2f;
										this.width = 32;
										this.height = 32;
										this.damage = 60;
										this.scale = 1f;
										this.UseSound = SoundID.Item1;
										this.shoot = 130;
										this.value = Item.buyPrice(0, 70, 0, 0);
										this.noMelee = true;
										this.noUseGraphic = true;
										this.melee = true;
										return;
									}
									if (type == 757)
									{
										this.rare = 8;
										this.UseSound = SoundID.Item1;
										this.useStyle = 1;
										this.damage = 85;
										this.useAnimation = 18;
										this.useTime = 18;
										this.width = 30;
										this.height = 30;
										this.shoot = 985;
										this.scale = 1f;
										this.shootSpeed = 12f;
										this.knockBack = 6.5f;
										this.melee = true;
										this.value = Item.sellPrice(0, 20, 0, 0);
										this.autoReuse = true;
										this.noMelee = true;
										this.shootsEveryUse = true;
										return;
									}
									if (type == 758)
									{
										this.useStyle = 5;
										this.autoReuse = true;
										this.useAnimation = 20;
										this.useTime = 20;
										this.useAmmo = AmmoID.Rocket;
										this.width = 50;
										this.height = 20;
										this.shoot = 133;
										this.UseSound = SoundID.Item61;
										this.damage = 60;
										this.shootSpeed = 10f;
										this.noMelee = true;
										this.value = Item.buyPrice(0, 35, 0, 0);
										this.knockBack = 4f;
										this.rare = 8;
										this.ranged = true;
										return;
									}
									if (type == 759)
									{
										this.useStyle = 5;
										this.autoReuse = true;
										this.useAnimation = 30;
										this.useTime = 30;
										this.useAmmo = AmmoID.Rocket;
										this.width = 50;
										this.height = 20;
										this.shoot = 134;
										this.UseSound = SoundID.Item11;
										this.damage = 55;
										this.shootSpeed = 5f;
										this.noMelee = true;
										this.value = Item.buyPrice(0, 40, 0, 0);
										this.knockBack = 4f;
										this.rare = 8;
										this.ranged = true;
										return;
									}
									if (type == 760)
									{
										this.useStyle = 5;
										this.autoReuse = true;
										this.useAnimation = 50;
										this.useTime = 50;
										this.useAmmo = AmmoID.Rocket;
										this.width = 50;
										this.height = 20;
										this.shoot = 135;
										this.UseSound = SoundID.Item11;
										this.damage = 80;
										this.shootSpeed = 12f;
										this.noMelee = true;
										this.value = Item.buyPrice(0, 35, 0, 0);
										this.knockBack = 4f;
										this.rare = 8;
										this.ranged = true;
										return;
									}
									if (type == 761)
									{
										this.width = 24;
										this.height = 8;
										this.accessory = true;
										this.value = 400000;
										this.rare = 5;
										this.wingSlot = 6;
										return;
									}
									if (type == 762)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 193;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 763)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 195;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 764)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 74;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 765)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 196;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 766)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 194;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 767)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 197;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 768)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 75;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 769)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 76;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 770)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 77;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 771)
									{
										this.shoot = 0;
										this.damage = 40;
										this.width = 20;
										this.height = 14;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.ammo = AmmoID.Rocket;
										this.knockBack = 4f;
										this.value = Item.buyPrice(0, 0, 0, 50);
										this.ranged = true;
										return;
									}
									if (type == 772)
									{
										this.shoot = 3;
										this.damage = 40;
										this.width = 20;
										this.height = 14;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.ammo = AmmoID.Rocket;
										this.knockBack = 4f;
										this.value = Item.buyPrice(0, 0, 2, 50);
										this.ranged = true;
										this.rare = 1;
										return;
									}
									if (type == 773)
									{
										this.shoot = 6;
										this.damage = 65;
										this.width = 20;
										this.height = 14;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.ammo = AmmoID.Rocket;
										this.knockBack = 6f;
										this.value = Item.buyPrice(0, 0, 1, 0);
										this.ranged = true;
										this.rare = 1;
										return;
									}
									if (type == 774)
									{
										this.shoot = 9;
										this.damage = 65;
										this.width = 20;
										this.height = 14;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.ammo = AmmoID.Rocket;
										this.knockBack = 6f;
										this.value = (this.value = Item.buyPrice(0, 0, 5, 0));
										this.ranged = true;
										this.rare = 2;
										return;
									}
									if (type == 775)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 198;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 776)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.autoReuse = true;
										this.useAnimation = 25;
										this.useTime = 13;
										this.knockBack = 5f;
										this.width = 20;
										this.height = 12;
										this.damage = 10;
										this.pick = 110;
										this.UseSound = SoundID.Item1;
										this.rare = 4;
										this.value = 54000;
										this.melee = true;
										this.scale = 1f;
										return;
									}
									if (type == 777)
									{
										this.useStyle = 1;
										this.useAnimation = 25;
										this.useTime = 10;
										this.knockBack = 5f;
										this.useTurn = true;
										this.autoReuse = true;
										this.width = 20;
										this.height = 12;
										this.damage = 15;
										this.pick = 150;
										this.UseSound = SoundID.Item1;
										this.rare = 4;
										this.value = 81000;
										this.melee = true;
										this.scale = 1f;
										return;
									}
									if (type == 778)
									{
										this.useStyle = 1;
										this.useAnimation = 25;
										this.useTime = 8;
										this.knockBack = 5f;
										this.useTurn = true;
										this.autoReuse = true;
										this.width = 20;
										this.height = 12;
										this.damage = 20;
										this.pick = 180;
										this.UseSound = SoundID.Item1;
										this.rare = 4;
										this.value = 108000;
										this.melee = true;
										this.scale = 1f;
										return;
									}
									if (type == 779)
									{
										this.useStyle = 5;
										this.autoReuse = true;
										this.useAnimation = 30;
										this.useTime = 5;
										this.width = 50;
										this.height = 18;
										this.shoot = 145;
										this.useAmmo = AmmoID.Solution;
										this.UseSound = SoundID.Item34;
										this.knockBack = 0.3f;
										this.shootSpeed = 7f;
										this.noMelee = true;
										this.value = Item.buyPrice(2, 0, 0, 0);
										this.rare = 5;
										return;
									}
									if (type == 780)
									{
										this.shoot = 0;
										this.ammo = AmmoID.Solution;
										this.width = 10;
										this.height = 12;
										this.value = Item.buyPrice(0, 0, 15, 0);
										this.rare = 3;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										return;
									}
									if (type == 781)
									{
										this.shoot = 1;
										this.ammo = AmmoID.Solution;
										this.width = 10;
										this.height = 12;
										this.value = Item.buyPrice(0, 0, 15, 0);
										this.rare = 3;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										return;
									}
									if (type == 782)
									{
										this.shoot = 2;
										this.ammo = AmmoID.Solution;
										this.width = 10;
										this.height = 12;
										this.value = Item.buyPrice(0, 0, 15, 0);
										this.rare = 3;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										return;
									}
									if (type == 783)
									{
										this.shoot = 3;
										this.ammo = AmmoID.Solution;
										this.width = 10;
										this.height = 12;
										this.value = Item.buyPrice(0, 0, 15, 0);
										this.rare = 3;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										return;
									}
									if (type == 784)
									{
										this.shoot = 4;
										this.ammo = AmmoID.Solution;
										this.width = 10;
										this.height = 12;
										this.value = Item.buyPrice(0, 0, 15, 0);
										this.rare = 3;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										return;
									}
									if (type == 785)
									{
										this.width = 24;
										this.height = 8;
										this.accessory = true;
										this.value = 400000;
										this.rare = 5;
										this.wingSlot = 7;
										return;
									}
									if (type == 786)
									{
										this.width = 24;
										this.height = 8;
										this.accessory = true;
										this.value = 400000;
										this.rare = 5;
										this.wingSlot = 8;
										return;
									}
									if (type == 787)
									{
										this.useTurn = true;
										this.autoReuse = true;
										this.useStyle = 1;
										this.useAnimation = 27;
										this.useTime = 14;
										this.hammer = 85;
										this.width = 24;
										this.height = 28;
										this.damage = 26;
										this.knockBack = 7.5f;
										this.scale = 1.1f;
										this.UseSound = SoundID.Item1;
										this.rare = 7;
										this.value = Item.buyPrice(0, 40, 0, 0);
										this.melee = true;
										return;
									}
									if (type == 788)
									{
										this.mana = 12;
										this.damage = 35;
										this.useStyle = 5;
										this.shootSpeed = 32f;
										this.shoot = 150;
										this.width = 26;
										this.height = 28;
										this.useAnimation = 25;
										this.useTime = 25;
										this.autoReuse = true;
										this.rare = 7;
										this.noMelee = true;
										this.knockBack = 1f;
										this.value = 200000;
										this.magic = true;
										return;
									}
									if (type == 789)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 91;
										this.placeStyle = 4;
										this.width = 10;
										this.height = 24;
										this.value = 5000;
										return;
									}
									if (type == 790)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 91;
										this.placeStyle = 5;
										this.width = 10;
										this.height = 24;
										this.value = 5000;
										return;
									}
									if (type == 791)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 91;
										this.placeStyle = 6;
										this.width = 10;
										this.height = 24;
										this.value = 5000;
										return;
									}
									if (type == 792)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 6;
										this.headSlot = 57;
										this.value = 50000;
										this.rare = 1;
										return;
									}
									if (type == 793)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 7;
										this.bodySlot = 37;
										this.value = 40000;
										this.rare = 1;
										return;
									}
									if (type == 794)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 6;
										this.legSlot = 35;
										this.value = 30000;
										this.rare = 1;
										return;
									}
									if (type == 795)
									{
										this.useStyle = 1;
										this.useTime = 25;
										this.useAnimation = 25;
										this.knockBack = 5f;
										this.width = 24;
										this.height = 28;
										this.damage = 22;
										this.scale = 1f;
										this.UseSound = SoundID.Item1;
										this.rare = 1;
										this.value = 13500;
										this.melee = true;
										return;
									}
									if (type == 796)
									{
										this.useStyle = 5;
										this.useAnimation = 30;
										this.useTime = 30;
										this.width = 12;
										this.height = 28;
										this.shoot = 1;
										this.useAmmo = AmmoID.Arrow;
										this.UseSound = SoundID.Item5;
										this.damage = 19;
										this.shootSpeed = 6.7f;
										this.knockBack = 1f;
										this.alpha = 30;
										this.rare = 1;
										this.noMelee = true;
										this.value = 18000;
										this.ranged = true;
										return;
									}
									if (type == 797)
									{
										this.autoReuse = true;
										this.useStyle = 1;
										this.useAnimation = 40;
										this.useTime = 19;
										this.hammer = 55;
										this.width = 24;
										this.height = 28;
										this.damage = 23;
										this.knockBack = 6f;
										this.scale = 1f;
										this.UseSound = SoundID.Item1;
										this.rare = 1;
										this.value = 15000;
										this.melee = true;
										return;
									}
									if (type == 798)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 22;
										this.useTime = 14;
										this.autoReuse = true;
										this.width = 24;
										this.height = 28;
										this.damage = 12;
										this.pick = 70;
										this.UseSound = SoundID.Item1;
										this.knockBack = 3.5f;
										this.rare = 1;
										this.value = 18000;
										this.scale = 1f;
										this.melee = true;
										return;
									}
									if (type == 799)
									{
										this.autoReuse = true;
										this.useStyle = 1;
										this.useAnimation = 32;
										this.knockBack = 6f;
										this.useTime = 15;
										this.width = 24;
										this.height = 28;
										this.damage = 22;
										this.axe = 15;
										this.scale = 1f;
										this.UseSound = SoundID.Item1;
										this.rare = 1;
										this.value = 13500;
										this.melee = true;
										return;
									}
									if (type == 800)
									{
										this.useStyle = 5;
										this.useAnimation = 20;
										this.useTime = 20;
										this.width = 24;
										this.height = 28;
										this.shoot = 14;
										this.useAmmo = AmmoID.Bullet;
										this.UseSound = SoundID.Item11;
										this.damage = 19;
										this.shootSpeed = 6f;
										this.noMelee = true;
										this.knockBack = 2f;
										this.value = this.shadowOrbPrice;
										this.scale = 0.9f;
										this.rare = 1;
										this.ranged = true;
										return;
									}
									if (type == 801)
									{
										this.useStyle = 5;
										this.useAnimation = 45;
										this.useTime = 45;
										this.knockBack = 5.5f;
										this.width = 30;
										this.height = 10;
										this.damage = 17;
										this.scale = 1.1f;
										this.noUseGraphic = true;
										this.shoot = 154;
										this.shootSpeed = 12f;
										this.UseSound = SoundID.Item1;
										this.rare = 1;
										this.value = 27000;
										this.melee = true;
										this.channel = true;
										this.noMelee = true;
										return;
									}
									if (type == 802)
									{
										this.useStyle = 5;
										this.useAnimation = 31;
										this.useTime = 31;
										this.shootSpeed = 4f;
										this.knockBack = 5f;
										this.width = 40;
										this.height = 40;
										this.damage = 17;
										this.scale = 1.1f;
										this.UseSound = SoundID.Item1;
										this.shoot = 153;
										this.rare = 1;
										this.value = this.shadowOrbPrice;
										this.noMelee = true;
										this.noUseGraphic = true;
										this.melee = true;
										return;
									}
									if (type == 803)
									{
										this.width = 18;
										this.height = 18;
										this.headSlot = 58;
										this.value = 50000;
										this.defense = 3;
										return;
									}
									if (type == 804)
									{
										this.width = 18;
										this.height = 18;
										this.bodySlot = 38;
										this.value = 40000;
										this.defense = 3;
										return;
									}
									if (type == 805)
									{
										this.width = 18;
										this.height = 18;
										this.legSlot = 36;
										this.value = 30000;
										this.defense = 3;
										return;
									}
									if (type == 806)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 15;
										this.placeStyle = 5;
										this.width = 12;
										this.height = 30;
										this.value = 150;
										return;
									}
									if (type == 807)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 15;
										this.placeStyle = 6;
										this.width = 12;
										this.height = 30;
										this.value = 150;
										return;
									}
									if (type == 808)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 15;
										this.placeStyle = 7;
										this.width = 12;
										this.height = 30;
										this.value = 150;
										return;
									}
									if (type == 809)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 15;
										this.placeStyle = 8;
										this.width = 12;
										this.height = 30;
										this.value = 150;
										return;
									}
									if (type == 810)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 15;
										this.placeStyle = 9;
										this.width = 12;
										this.height = 30;
										this.value = 150;
										return;
									}
									if (type == 811)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 18;
										this.placeStyle = 4;
										this.width = 28;
										this.height = 14;
										this.value = 150;
										return;
									}
									if (type == 812)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 18;
										this.placeStyle = 5;
										this.width = 28;
										this.height = 14;
										this.value = 150;
										return;
									}
									if (type == 813)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 18;
										this.placeStyle = 6;
										this.width = 28;
										this.height = 14;
										this.value = 150;
										return;
									}
									if (type == 814)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 18;
										this.placeStyle = 7;
										this.width = 28;
										this.height = 14;
										this.value = 150;
										return;
									}
									if (type == 815)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 18;
										this.placeStyle = 8;
										this.width = 28;
										this.height = 14;
										this.value = 150;
										return;
									}
									if (type == 816)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 10;
										this.placeStyle = 4;
										this.width = 14;
										this.height = 28;
										this.value = 200;
										return;
									}
									if (type == 817)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 10;
										this.placeStyle = 5;
										this.width = 14;
										this.height = 28;
										this.value = 200;
										return;
									}
									if (type == 818)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 10;
										this.placeStyle = 6;
										this.width = 14;
										this.height = 28;
										this.value = 200;
										return;
									}
									if (type == 819)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 10;
										this.placeStyle = 7;
										this.width = 14;
										this.height = 28;
										this.value = 200;
										return;
									}
									if (type == 820)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 10;
										this.placeStyle = 8;
										this.width = 14;
										this.height = 28;
										this.value = 200;
										return;
									}
									if (type == 821)
									{
										this.width = 24;
										this.height = 8;
										this.accessory = true;
										this.value = 400000;
										this.rare = 5;
										this.wingSlot = 9;
										return;
									}
									if (type == 822)
									{
										this.width = 24;
										this.height = 8;
										this.accessory = true;
										this.value = 400000;
										this.rare = 5;
										this.wingSlot = 10;
										return;
									}
									if (type == 823)
									{
										this.color = new Color(255, 255, 255, 0);
										this.alpha = 255;
										this.width = 24;
										this.height = 8;
										this.accessory = true;
										this.value = 400000;
										this.rare = 8;
										this.wingSlot = 11;
										return;
									}
									if (type == 824)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 202;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 825)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 82;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 826)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 15;
										this.placeStyle = 10;
										this.width = 12;
										this.height = 30;
										this.value = 150;
										return;
									}
									if (type == 827)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 14;
										this.placeStyle = 4;
										this.width = 26;
										this.height = 20;
										this.value = 300;
										return;
									}
									if (type == 828)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 14;
										this.placeStyle = 5;
										this.width = 26;
										this.height = 20;
										this.value = 300;
										return;
									}
									if (type == 829)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 14;
										this.placeStyle = 6;
										this.width = 26;
										this.height = 20;
										this.value = 300;
										return;
									}
									if (type == 830)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 14;
										this.placeStyle = 7;
										this.width = 26;
										this.height = 20;
										this.value = 300;
										return;
									}
									if (type == 831)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 21;
										this.placeStyle = 12;
										this.width = 26;
										this.height = 22;
										this.value = 5000;
										return;
									}
									if (type == 832)
									{
										this.tileWand = 9;
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.createTile = 191;
										this.width = 8;
										this.height = 10;
										this.rare = 1;
										this.value = Item.sellPrice(0, 0, 25, 0);
										return;
									}
									if (type == 833)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 163;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 834)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 164;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 835)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 200;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 836)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 203;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 837)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 10;
										this.placeStyle = 9;
										this.width = 14;
										this.height = 28;
										this.value = 200;
										return;
									}
									if (type == 838)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 21;
										this.placeStyle = 13;
										this.width = 26;
										this.height = 22;
										this.value = 5000;
										return;
									}
									if (type == 839)
									{
										this.width = 28;
										this.height = 20;
										this.headSlot = 59;
										this.rare = 2;
										this.vanity = true;
										this.value = Item.buyPrice(0, 1, 50, 0);
										return;
									}
									if (type == 840)
									{
										this.width = 18;
										this.height = 14;
										this.bodySlot = 39;
										this.rare = 2;
										this.vanity = true;
										this.value = Item.buyPrice(0, 1, 50, 0);
										return;
									}
									if (type == 841)
									{
										this.width = 18;
										this.height = 14;
										this.legSlot = 37;
										this.rare = 2;
										this.vanity = true;
										this.value = Item.buyPrice(0, 1, 50, 0);
										return;
									}
									if (type == 842)
									{
										this.width = 28;
										this.height = 20;
										this.headSlot = 60;
										this.rare = 1;
										this.vanity = true;
										this.value = Item.sellPrice(0, 0, 50, 0);
										return;
									}
									if (type == 843)
									{
										this.width = 18;
										this.height = 14;
										this.bodySlot = 40;
										this.rare = 1;
										this.vanity = true;
										this.value = Item.sellPrice(0, 0, 50, 0);
										return;
									}
									if (type == 844)
									{
										this.width = 18;
										this.height = 14;
										this.legSlot = 38;
										this.rare = 1;
										this.vanity = true;
										this.value = Item.sellPrice(0, 0, 50, 0);
										return;
									}
									if (type == 845)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 91;
										this.placeStyle = 7;
										this.width = 10;
										this.height = 24;
										this.value = 5000;
										return;
									}
									if (type == 846)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 91;
										this.placeStyle = 8;
										this.width = 10;
										this.height = 24;
										this.value = 5000;
										return;
									}
									if (type == 847)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 91;
										this.placeStyle = 9;
										this.width = 10;
										this.height = 24;
										this.value = 5000;
										return;
									}
									if (type == 848)
									{
										this.width = 28;
										this.height = 20;
										this.headSlot = 61;
										this.rare = 1;
										this.vanity = true;
										this.value = Item.buyPrice(0, 2, 0, 0);
										return;
									}
									if (type == 849)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.width = 24;
										this.height = 28;
										this.maxStack = Item.CommonMaxStack;
										this.mech = true;
										this.value = Item.buyPrice(0, 0, 10, 0);
										return;
									}
									if (type == 850)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 5;
										this.autoReuse = true;
										this.width = 24;
										this.height = 28;
										this.rare = 1;
										this.value = 20000;
										this.mech = true;
										this.tileBoost = 20;
										return;
									}
									if (type == 851)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 5;
										this.autoReuse = true;
										this.width = 24;
										this.height = 28;
										this.rare = 1;
										this.value = 20000;
										this.mech = true;
										this.tileBoost = 20;
										return;
									}
									if (type == 852)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 135;
										this.width = 12;
										this.height = 12;
										this.placeStyle = 4;
										this.mech = true;
										this.value = 5000;
										return;
									}
									if (type == 853)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 135;
										this.width = 12;
										this.height = 12;
										this.placeStyle = 5;
										this.mech = true;
										this.value = 5000;
										return;
									}
									if (type == 854)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 5;
										this.value = 50000;
										return;
									}
									if (type == 855)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 5;
										this.value = 50000;
										return;
									}
									if (type == 856)
									{
										this.noWet = true;
										this.holdStyle = 1;
										this.width = 30;
										this.height = 30;
										this.value = 500;
										this.rare = 2;
										this.vanity = true;
										return;
									}
									if (type == 857)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 2;
										this.value = 50000;
										this.waistSlot = 15;
										return;
									}
									if (type == 858)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 89;
										this.placeStyle = 24;
										this.width = 20;
										this.height = 20;
										this.value = 300;
										return;
									}
									if (type == 859)
									{
										this.useStyle = 1;
										this.shootSpeed = 6f;
										this.shoot = 155;
										this.width = 44;
										this.height = 44;
										this.consumable = true;
										this.UseSound = SoundID.Item1;
										this.useAnimation = 20;
										this.useTime = 20;
										this.noUseGraphic = true;
										this.noMelee = true;
										this.value = 20;
										return;
									}
									if (type == 860)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 6;
										this.lifeRegen = 2;
										this.value = Item.buyPrice(0, 20, 0, 0);
										this.handOnSlot = 4;
										return;
									}
									if (type == 861)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 6;
										this.value = Item.buyPrice(0, 40, 0, 0);
										this.hasVanityEffects = true;
										return;
									}
									if (type == 862)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 6;
										this.value = Item.buyPrice(0, 10, 0, 0);
										this.neckSlot = 5;
										return;
									}
									if (type == 863)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 4;
										this.value = 200000;
										this.shoeSlot = 2;
										return;
									}
									if (type == 864)
									{
										this.width = 28;
										this.height = 20;
										this.headSlot = 62;
										this.rare = 1;
										this.vanity = true;
										this.value = Item.buyPrice(0, 25, 0, 0);
										return;
									}
									if (type == 865)
									{
										this.width = 18;
										this.height = 14;
										this.bodySlot = 41;
										this.rare = 1;
										this.vanity = true;
										this.value = Item.buyPrice(0, 10, 0, 0);
										return;
									}
									if (type == 866)
									{
										this.width = 18;
										this.height = 14;
										this.bodySlot = 42;
										this.rare = 1;
										this.vanity = true;
										this.value = Item.buyPrice(0, 2, 0, 0);
										return;
									}
									if (type == 867)
									{
										this.width = 28;
										this.height = 20;
										this.headSlot = 63;
										this.rare = 1;
										this.defense = 2;
										this.value = Item.sellPrice(0, 0, 50, 0);
										return;
									}
									if (type == 868)
									{
										this.width = 28;
										this.height = 20;
										this.headSlot = 64;
										this.rare = 1;
										this.vanity = true;
										this.value = Item.buyPrice(0, 2, 0, 0);
										return;
									}
									if (type == 869)
									{
										this.width = 28;
										this.height = 20;
										this.headSlot = 65;
										this.rare = 1;
										this.vanity = true;
										this.value = Item.buyPrice(0, 2, 50, 0);
										return;
									}
									if (type == 870)
									{
										this.width = 28;
										this.height = 20;
										this.headSlot = 66;
										this.rare = 1;
										this.value = Item.buyPrice(0, 2, 0, 0);
										this.vanity = true;
										return;
									}
									if (type == 871)
									{
										this.width = 28;
										this.height = 20;
										this.bodySlot = 43;
										this.rare = 1;
										this.value = Item.buyPrice(0, 2, 0, 0);
										this.vanity = true;
										return;
									}
									if (type == 872)
									{
										this.width = 28;
										this.height = 20;
										this.legSlot = 39;
										this.rare = 1;
										this.value = Item.buyPrice(0, 2, 0, 0);
										this.vanity = true;
										return;
									}
									if (type == 873)
									{
										this.width = 28;
										this.height = 20;
										this.headSlot = 67;
										this.rare = 1;
										this.vanity = true;
										this.value = Item.buyPrice(0, 5, 0, 0);
										return;
									}
									if (type == 874)
									{
										this.width = 28;
										this.height = 20;
										this.bodySlot = 44;
										this.rare = 1;
										this.vanity = true;
										this.value = Item.buyPrice(0, 5, 0, 0);
										return;
									}
									if (type == 875)
									{
										this.width = 28;
										this.height = 20;
										this.legSlot = 40;
										this.rare = 1;
										this.vanity = true;
										this.value = Item.buyPrice(0, 5, 0, 0);
										return;
									}
									if (type == 876)
									{
										this.width = 28;
										this.height = 20;
										this.headSlot = 68;
										this.rare = 1;
										this.vanity = true;
										this.value = Item.buyPrice(0, 5, 0, 0);
										return;
									}
									if (type == 877)
									{
										this.width = 28;
										this.height = 20;
										this.bodySlot = 45;
										this.rare = 1;
										this.vanity = true;
										this.value = Item.buyPrice(0, 5, 0, 0);
										return;
									}
									if (type == 878)
									{
										this.width = 28;
										this.height = 20;
										this.legSlot = 41;
										this.rare = 1;
										this.vanity = true;
										this.value = Item.buyPrice(0, 5, 0, 0);
										return;
									}
									if (type == 879)
									{
										this.width = 28;
										this.height = 20;
										this.headSlot = 69;
										this.rare = 1;
										this.defense = 4;
										this.value = Item.sellPrice(0, 0, 50, 0);
										return;
									}
									if (type == 880)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 204;
										this.width = 12;
										this.height = 12;
										this.rare = 1;
										this.value = Item.sellPrice(0, 0, 13, 0);
										return;
									}
									if (type == 881)
									{
										this.useStyle = 1;
										this.useTurn = false;
										this.useAnimation = 30;
										this.useTime = 30;
										this.width = 24;
										this.height = 28;
										this.damage = 10;
										this.knockBack = 4.5f;
										this.UseSound = SoundID.Item1;
										this.scale = 1f;
										this.value = 1800;
										this.melee = true;
										return;
									}
									if (type == 882)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 25;
										this.useTime = 16;
										this.autoReuse = true;
										this.width = 24;
										this.height = 28;
										this.damage = 4;
										this.pick = 35;
										this.UseSound = SoundID.Item1;
										this.knockBack = 2f;
										this.value = 2000;
										this.melee = true;
										return;
									}
									if (type == 883)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 206;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 884)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 84;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 885)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 4;
										this.value = 100000;
										return;
									}
									if (type == 886)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 4;
										this.value = 100000;
										return;
									}
									if (type == 887)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 4;
										this.value = 100000;
										return;
									}
									if (type == 888)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 4;
										this.value = 100000;
										this.faceSlot = 5;
										return;
									}
									if (type == 889)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 4;
										this.value = 100000;
										return;
									}
									if (type == 890)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 4;
										this.value = 100000;
										return;
									}
									if (type == 891)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 2;
										this.value = 100000;
										return;
									}
									if (type == 892)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 4;
										this.value = 100000;
										return;
									}
									if (type == 893)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 4;
										this.value = 100000;
										return;
									}
									if (type == 894)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 1;
										this.headSlot = 70;
										this.value = Item.sellPrice(0, 0, 0, 40);
										return;
									}
									if (type == 895)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 1;
										this.bodySlot = 46;
										this.value = Item.sellPrice(0, 0, 0, 60);
										return;
									}
									if (type == 896)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 1;
										this.legSlot = 42;
										this.value = Item.sellPrice(0, 0, 0, 50);
										return;
									}
									if (type == 897)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 5;
										this.value = Item.buyPrice(0, 20, 0, 0);
										this.handOffSlot = 5;
										this.handOnSlot = 10;
										return;
									}
									if (type == 898)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 5;
										this.value = 300000;
										this.shoeSlot = 10;
										return;
									}
									if (type == 899)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 7;
										this.value = 300000;
										this.handOnSlot = 13;
										return;
									}
									if (type == 900)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 5;
										this.value = this.eclipsePrice;
										this.handOnSlot = 14;
										return;
									}
									if (type == 901)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 5;
										this.value = 100000;
										return;
									}
									if (type == 902)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 5;
										this.value = 100000;
										return;
									}
									if (type == 903)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 5;
										this.value = 100000;
										return;
									}
									if (type == 904)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 5;
										this.value = 100000;
										return;
									}
									if (type == 905)
									{
										this.useStyle = 5;
										this.autoReuse = true;
										this.useAnimation = 8;
										this.useTime = 8;
										this.width = 50;
										this.height = 18;
										this.shoot = 158;
										this.useAmmo = AmmoID.Coin;
										this.UseSound = SoundID.Item11;
										this.damage = 0;
										this.shootSpeed = 10f;
										this.noMelee = true;
										this.value = 300000;
										this.rare = 6;
										this.knockBack = 2f;
										this.ranged = true;
										return;
									}
									if (type == 906)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 3;
										this.value = 300000;
										this.handOnSlot = 24;
										return;
									}
									if (type == 907)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 4;
										this.value = Item.buyPrice(0, 30, 0, 0);
										this.shoeSlot = 11;
										return;
									}
									if (type == 908)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 7;
										this.value = 500000;
										this.shoeSlot = 8;
										return;
									}
									if (type == 909)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 207;
										this.placeStyle = 0;
										this.width = 26;
										this.height = 36;
										this.value = Item.buyPrice(0, 4, 0, 0);
										this.rare = 1;
										return;
									}
									if (type == 910)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 207;
										this.placeStyle = 1;
										this.width = 26;
										this.height = 36;
										this.value = Item.buyPrice(0, 4, 0, 0);
										this.rare = 1;
										return;
									}
									if (type == 911)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 208;
										this.width = 8;
										this.height = 10;
										return;
									}
									if (type == 912)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 10;
										this.placeStyle = 10;
										this.width = 14;
										this.height = 28;
										this.value = 200;
										return;
									}
									if (type == 913)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 19;
										this.placeStyle = 5;
										this.width = 8;
										this.height = 10;
										return;
									}
									if (type == 914)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 21;
										this.placeStyle = 14;
										this.width = 26;
										this.height = 22;
										this.value = 500;
										return;
									}
									if (type == 915)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 15;
										this.placeStyle = 11;
										this.width = 12;
										this.height = 30;
										this.value = 150;
										return;
									}
									if (type == 916)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 18;
										this.placeStyle = 9;
										this.width = 28;
										this.height = 14;
										this.value = 150;
										return;
									}
									if (type == 917)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 14;
										this.placeStyle = 8;
										this.width = 26;
										this.height = 20;
										this.value = 300;
										return;
									}
									if (type == 918)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 88;
										this.placeStyle = 4;
										this.width = 20;
										this.height = 20;
										this.value = 300;
										return;
									}
									if (type == 919)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 87;
										this.placeStyle = 4;
										this.width = 20;
										this.height = 20;
										this.value = 300;
										return;
									}
									if (type == 920)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 79;
										this.placeStyle = 4;
										this.width = 28;
										this.height = 20;
										this.value = 2000;
										return;
									}
									if (type == 921)
									{
										this.useStyle = 1;
										this.useTurn = false;
										this.useAnimation = 19;
										this.useTime = 19;
										this.width = 24;
										this.height = 28;
										this.damage = 11;
										this.knockBack = 6f;
										this.UseSound = SoundID.Item1;
										this.scale = 1f;
										this.value = 100;
										this.melee = true;
										return;
									}
									if (type == 922)
									{
										this.autoReuse = true;
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 30;
										this.useTime = 20;
										this.hammer = 40;
										this.width = 24;
										this.height = 28;
										this.damage = 7;
										this.knockBack = 5.5f;
										this.scale = 1f;
										this.UseSound = SoundID.Item1;
										this.value = 50;
										this.melee = true;
										return;
									}
									if (type == 923)
									{
										this.useStyle = 5;
										this.useAnimation = 28;
										this.useTime = 28;
										this.width = 12;
										this.height = 28;
										this.shoot = 1;
										this.useAmmo = AmmoID.Arrow;
										this.UseSound = SoundID.Item5;
										this.damage = 8;
										this.shootSpeed = 6.6f;
										this.noMelee = true;
										this.value = 100;
										this.ranged = true;
										return;
									}
									if (type == 924)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 1;
										this.headSlot = 71;
										return;
									}
									if (type == 925)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 2;
										this.bodySlot = 47;
										return;
									}
									if (type == 926)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 1;
										this.legSlot = 43;
										return;
									}
									if (type == 927)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 85;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 928)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 209;
										this.width = 12;
										this.height = 12;
										this.rare = 3;
										this.value = Item.buyPrice(0, 25, 0, 0);
										return;
									}
									if (type == 929)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 20;
										this.useTime = 20;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.width = 12;
										this.height = 12;
										this.damage = 300;
										this.noMelee = true;
										this.value = Item.buyPrice(0, 0, 15, 0);
										return;
									}
									if (type == 930)
									{
										this.useStyle = 5;
										this.useAnimation = 18;
										this.useTime = 18;
										this.width = 24;
										this.height = 28;
										this.shoot = 163;
										this.useAmmo = AmmoID.Flare;
										this.UseSound = SoundID.Item11;
										this.damage = 2;
										this.shootSpeed = 6f;
										this.noMelee = true;
										this.value = 50000;
										this.scale = 0.9f;
										this.rare = 1;
										this.holdStyle = 1;
										return;
									}
									if (type == 931)
									{
										this.shootSpeed = 6f;
										this.shoot = 163;
										this.damage = 1;
										this.width = 12;
										this.height = 12;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.ammo = AmmoID.Flare;
										this.knockBack = 1.5f;
										this.value = 7;
										this.ranged = true;
										return;
									}
									if (type == 932)
									{
										this.tileWand = 154;
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.createTile = 194;
										this.width = 8;
										this.height = 10;
										this.rare = 1;
										this.value = Item.sellPrice(0, 0, 50, 0);
										return;
									}
									if (type == 933)
									{
										this.tileWand = 9;
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.createTile = 192;
										this.width = 8;
										this.height = 10;
										this.rare = 1;
										this.value = Item.sellPrice(0, 0, 25, 0);
										return;
									}
									if (type == 934)
									{
										this.width = 34;
										this.height = 12;
										this.accessory = true;
										this.rare = 2;
										this.value = 50000;
										return;
									}
									if (type == 935)
									{
										this.width = 24;
										this.height = 24;
										this.accessory = true;
										this.value = 300000;
										this.rare = 5;
										return;
									}
									if (type == 936)
									{
										this.width = 24;
										this.height = 24;
										this.accessory = true;
										this.rare = 6;
										this.value = Item.buyPrice(0, 25, 0, 0);
										this.handOffSlot = 4;
										this.handOnSlot = 9;
										return;
									}
									if (type == 937)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 210;
										this.width = 12;
										this.height = 12;
										this.placeStyle = 0;
										this.mech = true;
										this.value = 50000;
										this.mech = true;
										return;
									}
									if (type == 938)
									{
										this.width = 24;
										this.height = 24;
										this.accessory = true;
										this.rare = 8;
										this.defense = 6;
										this.value = 300000;
										this.shieldSlot = 2;
										return;
									}
									if (type == 939)
									{
										this.noUseGraphic = true;
										this.damage = 0;
										this.knockBack = 7f;
										this.useStyle = 5;
										this.shootSpeed = 10f;
										this.shoot = 165;
										this.width = 18;
										this.height = 28;
										this.UseSound = SoundID.Item1;
										this.useAnimation = 20;
										this.useTime = 20;
										this.rare = 2;
										this.noMelee = true;
										this.value = 20000;
										return;
									}
									if (type == 940)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 207;
										this.placeStyle = 2;
										this.width = 26;
										this.height = 36;
										this.value = Item.buyPrice(0, 4, 0, 0);
										this.rare = 1;
										return;
									}
									if (type == 941)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 207;
										this.placeStyle = 3;
										this.width = 26;
										this.height = 36;
										this.value = Item.buyPrice(0, 4, 0, 0);
										this.rare = 1;
										return;
									}
									if (type == 942)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 207;
										this.placeStyle = 4;
										this.width = 26;
										this.height = 36;
										this.value = Item.buyPrice(0, 4, 0, 0);
										this.rare = 1;
										return;
									}
									if (type == 943)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 207;
										this.placeStyle = 5;
										this.width = 26;
										this.height = 36;
										this.value = Item.buyPrice(0, 4, 0, 0);
										this.rare = 1;
										return;
									}
									if (type == 944)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 207;
										this.placeStyle = 6;
										this.width = 26;
										this.height = 36;
										this.value = Item.buyPrice(0, 4, 0, 0);
										this.rare = 1;
										return;
									}
									if (type == 945)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 207;
										this.placeStyle = 7;
										this.width = 26;
										this.height = 36;
										this.value = Item.buyPrice(0, 4, 0, 0);
										this.rare = 1;
										return;
									}
									if (type == 946)
									{
										this.width = 44;
										this.height = 44;
										this.rare = 1;
										this.value = 10000;
										this.holdStyle = 2;
										this.useStyle = 3;
										this.useAnimation = 22;
										this.useTime = 22;
										this.damage = 10;
										this.knockBack = 5f;
										this.UseSound = SoundID.Item1;
										this.melee = true;
										return;
									}
									if (type == 947)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 211;
										this.width = 12;
										this.height = 12;
										this.rare = 7;
										this.value = Item.sellPrice(0, 0, 15, 0);
										return;
									}
									if (type == 948)
									{
										this.width = 24;
										this.height = 8;
										this.accessory = true;
										this.rare = 8;
										this.wingSlot = 12;
										this.value = Item.buyPrice(3, 0, 0, 0);
										return;
									}
									if (type == 949)
									{
										this.useStyle = 1;
										this.shootSpeed = 7f;
										this.shoot = 166;
										this.ammo = AmmoID.Snowball;
										this.damage = 8;
										this.width = 18;
										this.height = 20;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.UseSound = SoundID.Item1;
										this.useAnimation = 19;
										this.useTime = 19;
										this.noUseGraphic = true;
										this.noMelee = true;
										this.ranged = true;
										this.knockBack = 5.75f;
										return;
									}
									if (type == 950)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 1;
										this.value = 50000;
										this.shoeSlot = 7;
										return;
									}
									if (type == 951)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 212;
										this.width = 20;
										this.height = 20;
										this.value = 50000;
										this.rare = 2;
										return;
									}
									if (type == 952)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 21;
										this.placeStyle = 15;
										this.width = 26;
										this.height = 22;
										this.value = 500;
										return;
									}
									if (type == 953)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 1;
										this.value = Item.sellPrice(0, 0, 50, 0);
										this.handOnSlot = 11;
										this.handOffSlot = 6;
										return;
									}
									if (type == 954)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 2;
										this.headSlot = 72;
										this.value = 5000;
										return;
									}
									if (type == 955)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 4;
										this.headSlot = 73;
										this.value = 25000;
										return;
									}
									if (type == 956)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 6;
										this.headSlot = 74;
										this.rare = 1;
										this.value = 37500;
										return;
									}
									if (type == 957)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 7;
										this.bodySlot = 48;
										this.rare = 1;
										this.value = 30000;
										return;
									}
									if (type == 958)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 6;
										this.legSlot = 44;
										this.rare = 1;
										this.value = 22500;
										return;
									}
									if (type == 959)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 6;
										this.headSlot = 75;
										this.rare = 2;
										this.value = 45000;
										return;
									}
									if (type == 960)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 5;
										this.headSlot = 76;
										this.rare = 3;
										this.value = 45000;
										return;
									}
									if (type == 961)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 6;
										this.bodySlot = 49;
										this.rare = 3;
										this.value = 30000;
										return;
									}
									if (type == 962)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 6;
										this.legSlot = 45;
										this.rare = 3;
										this.value = 30000;
										return;
									}
									if (type == 963)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 7;
										this.value = Item.buyPrice(0, 15, 0, 0);
										this.waistSlot = 10;
										return;
									}
									if (type == 964)
									{
										this.knockBack = 5.75f;
										this.useStyle = 5;
										this.useAnimation = 40;
										this.useTime = 40;
										this.width = 50;
										this.height = 14;
										this.shoot = 10;
										this.useAmmo = AmmoID.Bullet;
										this.UseSound = SoundID.Item36;
										this.damage = 14;
										this.shootSpeed = 5.35f;
										this.noMelee = true;
										this.value = Item.sellPrice(0, 2, 0, 0);
										this.rare = 2;
										this.ranged = true;
										return;
									}
									if (type == 965)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 8;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 213;
										this.width = 12;
										this.height = 12;
										this.value = 10;
										this.tileBoost += 3;
										return;
									}
									if (type == 966)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 215;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 967)
									{
										this.width = 12;
										this.height = 12;
										this.maxStack = Item.CommonMaxStack;
										this.value = 100;
										return;
									}
									if (type == 968)
									{
										this.holdStyle = 1;
										this.width = 12;
										this.height = 12;
										this.value = 200;
										return;
									}
									if (type == 970)
									{
										this.createTile = 216;
										this.placeStyle = 0;
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.width = 12;
										this.height = 30;
										this.value = 1500;
										this.mech = true;
										return;
									}
									if (type == 971)
									{
										this.createTile = 216;
										this.placeStyle = 1;
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.width = 12;
										this.height = 30;
										this.value = 1500;
										this.mech = true;
										return;
									}
									if (type == 972)
									{
										this.createTile = 216;
										this.placeStyle = 2;
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.width = 12;
										this.height = 30;
										this.value = 1500;
										this.mech = true;
										return;
									}
									if (type == 973)
									{
										this.createTile = 216;
										this.placeStyle = 3;
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.width = 12;
										this.height = 30;
										this.value = 1500;
										this.mech = true;
										return;
									}
									if (type == 974)
									{
										this.flame = true;
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.holdStyle = 1;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 4;
										this.placeStyle = 9;
										this.width = 10;
										this.height = 12;
										this.value = 60;
										this.noWet = true;
										return;
									}
									if (type == 975)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 1;
										this.value = 50000;
										this.shoeSlot = 4;
										return;
									}
									if (type == 976)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 2;
										this.value = 50000;
										this.shoeSlot = 4;
										this.handOnSlot = 11;
										this.handOffSlot = 6;
										return;
									}
									if (type == 977)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 7;
										this.value = Item.buyPrice(0, 15, 0, 0);
										this.shoeSlot = 3;
										return;
									}
									if (type == 978)
									{
										this.width = 18;
										this.height = 18;
										this.headSlot = 77;
										this.value = 50000;
										this.defense = 3;
										return;
									}
									if (type == 979)
									{
										this.width = 18;
										this.height = 18;
										this.bodySlot = 50;
										this.value = 40000;
										this.defense = 3;
										return;
									}
									if (type == 980)
									{
										this.width = 18;
										this.height = 18;
										this.legSlot = 46;
										this.value = 30000;
										this.defense = 3;
										return;
									}
									if (type == 981)
									{
										this.maxStack = Item.CommonMaxStack;
										this.width = 12;
										this.height = 20;
										this.value = 10000;
										return;
									}
									if (type == 982)
									{
										this.width = 22;
										this.height = 22;
										this.accessory = true;
										this.rare = 1;
										this.value = 50000;
										this.handOnSlot = 1;
										return;
									}
									if (type == 983)
									{
										this.width = 14;
										this.height = 28;
										this.rare = 4;
										this.value = 150000;
										this.accessory = true;
										this.balloonSlot = 6;
										return;
									}
									if (type == 984)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 8;
										this.value = 500000;
										this.handOnSlot = 11;
										this.handOffSlot = 6;
										this.shoeSlot = 14;
										this.waistSlot = 10;
										return;
									}
									if (type == 985)
									{
										this.useStyle = 1;
										this.shootSpeed = 10f;
										this.shoot = 171;
										this.damage = 0;
										this.width = 18;
										this.height = 20;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.UseSound = SoundID.Item1;
										this.useAnimation = 20;
										this.useTime = 20;
										this.noUseGraphic = true;
										this.noMelee = true;
										this.value = 100;
										return;
									}
									if (type == 986)
									{
										this.useStyle = 5;
										this.autoReuse = true;
										this.useAnimation = 35;
										this.useTime = 35;
										this.width = 38;
										this.height = 6;
										this.shoot = 10;
										this.useAmmo = AmmoID.Dart;
										this.UseSound = SoundID.Item64;
										this.damage = 27;
										this.shootSpeed = 13f;
										this.noMelee = true;
										this.value = Item.buyPrice(0, 5, 0, 0);
										this.knockBack = 4f;
										this.useAmmo = AmmoID.Dart;
										this.ranged = true;
										this.rare = 3;
										return;
									}
									if (type == 987)
									{
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 1;
										this.value = 50000;
										this.waistSlot = 13;
										return;
									}
									if (type == 988)
									{
										this.shootSpeed = 3.75f;
										this.shoot = 172;
										this.damage = 7;
										this.width = 10;
										this.height = 28;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.ammo = AmmoID.Arrow;
										this.knockBack = 2.2f;
										this.value = 15;
										this.ranged = true;
										return;
									}
									if (type == 989)
									{
										this.autoReuse = true;
										this.rare = 2;
										this.UseSound = SoundID.Item1;
										this.useStyle = 1;
										this.damage = 23;
										this.useAnimation = 21;
										this.useTime = 45;
										this.scale = 1.1f;
										this.width = 30;
										this.height = 30;
										this.shoot = 173;
										this.shootSpeed = 9.5f;
										this.knockBack = 4.25f;
										this.melee = true;
										this.value = Item.sellPrice(0, 3, 0, 0);
										return;
									}
									if (type == 990)
									{
										this.useTurn = true;
										this.autoReuse = true;
										this.useStyle = 1;
										this.useAnimation = 25;
										this.useTime = 7;
										this.knockBack = 4.75f;
										this.width = 20;
										this.height = 12;
										this.damage = 35;
										this.pick = 200;
										this.axe = 22;
										this.UseSound = SoundID.Item1;
										this.rare = 4;
										this.value = 220000;
										this.melee = true;
										this.scale = 1.1f;
										return;
									}
									if (type == 991)
									{
										this.useTurn = true;
										this.autoReuse = true;
										this.useStyle = 1;
										this.useAnimation = 35;
										this.useTime = 13;
										this.knockBack = 5f;
										this.width = 20;
										this.height = 12;
										this.damage = 33;
										this.axe = 14;
										this.UseSound = SoundID.Item1;
										this.rare = 4;
										this.value = 54000;
										this.melee = true;
										this.scale = 1.1f;
										return;
									}
									if (type == 992)
									{
										this.useTurn = true;
										this.autoReuse = true;
										this.useStyle = 1;
										this.useAnimation = 35;
										this.useTime = 10;
										this.knockBack = 6f;
										this.width = 20;
										this.height = 12;
										this.damage = 39;
										this.axe = 17;
										this.UseSound = SoundID.Item1;
										this.rare = 4;
										this.value = 81000;
										this.melee = true;
										this.scale = 1.1f;
										return;
									}
									if (type == 993)
									{
										this.useTurn = true;
										this.autoReuse = true;
										this.useStyle = 1;
										this.useAnimation = 35;
										this.useTime = 8;
										this.knockBack = 7f;
										this.width = 20;
										this.height = 12;
										this.damage = 43;
										this.axe = 20;
										this.UseSound = SoundID.Item1;
										this.rare = 4;
										this.value = 108000;
										this.melee = true;
										this.scale = 1.1f;
										return;
									}
									if (type == 994)
									{
										this.damage = 0;
										this.useStyle = 1;
										this.shoot = 175;
										this.width = 16;
										this.height = 30;
										this.UseSound = SoundID.Item2;
										this.useAnimation = 20;
										this.useTime = 20;
										this.rare = 3;
										this.noMelee = true;
										this.value = Item.sellPrice(0, 7, 50, 0);
										this.buffType = 45;
										return;
									}
									if (type == 995)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 217;
										this.width = 26;
										this.height = 20;
										this.value = 100000;
										return;
									}
									if (type == 996)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 218;
										this.width = 26;
										this.height = 20;
										this.value = 100000;
										return;
									}
									if (type == 997)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 219;
										this.width = 26;
										this.height = 20;
										this.value = 100000;
										return;
									}
									if (type == 998)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 220;
										this.width = 26;
										this.height = 20;
										this.value = 100000;
										return;
									}
									if (type == 999)
									{
										this.createTile = 178;
										this.placeStyle = 6;
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.alpha = 50;
										this.width = 10;
										this.height = 14;
										this.value = 15000;
										return;
									}
									if (type == 1000)
									{
										this.useStyle = 5;
										this.shootSpeed = 10f;
										this.shoot = 178;
										this.damage = 0;
										this.width = 18;
										this.height = 20;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.UseSound = SoundID.Item11;
										this.useAnimation = 15;
										this.useTime = 15;
										this.noMelee = true;
										this.value = 100;
										this.ranged = true;
									}
								}
							}
						}
					}
				}
			}
		}

		// Token: 0x0600060F RID: 1551 RVA: 0x0027CAC4 File Offset: 0x0027ACC4
		public void SetDefaults2(int type)
		{
			if (type == 1001)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 20;
				this.headSlot = 78;
				this.rare = 7;
				this.value = 300000;
				return;
			}
			if (type == 1002)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 13;
				this.headSlot = 79;
				this.rare = 7;
				this.value = 300000;
				return;
			}
			if (type == 1003)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 7;
				this.headSlot = 80;
				this.rare = 7;
				this.value = 300000;
				return;
			}
			if (type == 1004)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 18;
				this.bodySlot = 51;
				this.rare = 7;
				this.value = 240000;
				return;
			}
			if (type == 1005)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 13;
				this.legSlot = 47;
				this.rare = 7;
				this.value = 180000;
				return;
			}
			if (type == 1006)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.sellPrice(0, 0, 90, 0);
				this.rare = 7;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 17;
				return;
			}
			if (type == 1007)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1008)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1009)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1010)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1011)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1012)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1013)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1014)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1015)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1016)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1017)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1018)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1019)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1020)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1021)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1022)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1023)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1024)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1025)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1026)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1027)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1028)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1029)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1030)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1031)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1032)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1033)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1034)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1035)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1036)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1037)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1038)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1039)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1040)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1041)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1042)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1043)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1044)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1045)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1046)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1047)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1048)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1049)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1050)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1051)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1052)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1053)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1054)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1055)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1056)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1057)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1058)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1059)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1060)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1061)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1062)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1063)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1064)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1065)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1066)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1067)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1068)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1069)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1070)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1071)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.width = 24;
				this.height = 24;
				this.value = 10000;
				return;
			}
			if (type == 1072)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.width = 24;
				this.height = 24;
				this.value = 10000;
				return;
			}
			if (type == 1073)
			{
				this.paint = 1;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1074)
			{
				this.paint = 2;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1075)
			{
				this.paint = 3;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1076)
			{
				this.paint = 4;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1077)
			{
				this.paint = 5;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1078)
			{
				this.paint = 6;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1079)
			{
				this.paint = 7;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1080)
			{
				this.paint = 8;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1081)
			{
				this.paint = 9;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1082)
			{
				this.paint = 10;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1083)
			{
				this.paint = 11;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1084)
			{
				this.paint = 12;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1085)
			{
				this.paint = 13;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1086)
			{
				this.paint = 14;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1087)
			{
				this.paint = 15;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1088)
			{
				this.paint = 16;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1089)
			{
				this.paint = 17;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1090)
			{
				this.paint = 18;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1091)
			{
				this.paint = 19;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1092)
			{
				this.paint = 20;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1093)
			{
				this.paint = 21;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1094)
			{
				this.paint = 22;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1095)
			{
				this.paint = 23;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1096)
			{
				this.paint = 24;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1097)
			{
				this.paint = 25;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1098)
			{
				this.paint = 26;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1099)
			{
				this.paint = 27;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1100)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.width = 24;
				this.height = 24;
				this.value = 10000;
				return;
			}
			if (type == 1101)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 226;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 1102)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 112;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 1103)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 224;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 1104)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 221;
				this.width = 12;
				this.height = 12;
				this.value = 4500;
				this.rare = 3;
				return;
			}
			if (type == 1105)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 222;
				this.width = 12;
				this.height = 12;
				this.value = 6500;
				this.rare = 3;
				return;
			}
			if (type == 1106)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 223;
				this.width = 12;
				this.height = 12;
				this.value = 8500;
				this.rare = 3;
				return;
			}
			if (type == 1107)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				this.placeStyle = 0;
				this.createTile = 227;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				return;
			}
			if (type == 1108)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				this.placeStyle = 1;
				this.createTile = 227;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				return;
			}
			if (type == 1109)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				this.placeStyle = 2;
				this.createTile = 227;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				return;
			}
			if (type == 1110)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				this.placeStyle = 3;
				this.createTile = 227;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				return;
			}
			if (type == 1111)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				this.placeStyle = 4;
				this.createTile = 227;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				return;
			}
			if (type == 1112)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				this.placeStyle = 5;
				this.createTile = 227;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				return;
			}
			if (type == 1113)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1114)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				this.placeStyle = 7;
				this.createTile = 227;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				return;
			}
			if (type == 1115)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1116)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1117)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1118)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1119)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			}
			if (type == 1120)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 228;
				this.width = 26;
				this.height = 20;
				this.value = Item.buyPrice(0, 5, 0, 0);
				return;
			}
			if (type == 1121)
			{
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 12;
				this.useTime = 12;
				this.mana = 5;
				this.width = 50;
				this.height = 18;
				this.shoot = 181;
				this.UseSound = SoundID.Item11;
				this.damage = 9;
				this.shootSpeed = 8f;
				this.noMelee = true;
				this.value = this.queenBeePrice;
				this.knockBack = 0.25f;
				this.rare = 2;
				this.magic = true;
				this.scale = 0.8f;
				return;
			}
			if (type == 1122)
			{
				this.autoReuse = true;
				this.useStyle = 1;
				this.shootSpeed = 12f;
				this.shoot = 182;
				this.damage = 80;
				this.width = 18;
				this.height = 20;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 14;
				this.useTime = 14;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 35, 0, 0);
				this.knockBack = 5f;
				this.melee = true;
				this.rare = 7;
				return;
			}
			if (type == 1123)
			{
				this.useStyle = 1;
				this.useTime = 20;
				this.useAnimation = 20;
				this.knockBack = 5.3f;
				this.width = 40;
				this.autoReuse = true;
				this.height = 40;
				this.damage = 30;
				this.scale = 1f;
				this.UseSound = SoundID.Item1;
				this.rare = 3;
				this.value = this.queenBeePrice;
				this.melee = true;
				return;
			}
			if (type == 1124)
			{
				this.width = 12;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				return;
			}
			if (type == 1125)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 229;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 1126)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 108;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 1127)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 230;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 1128)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.autoReuse = true;
				return;
			}
			if (type == 1129)
			{
				this.tileWand = 1124;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.createTile = 225;
				this.width = 8;
				this.height = 10;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			}
			if (type == 1130)
			{
				this.useStyle = 1;
				this.shootSpeed = 6f;
				this.shoot = 183;
				this.knockBack = 1f;
				this.damage = 12;
				this.width = 10;
				this.height = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 15;
				this.useTime = 15;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 0, 5, 0);
				this.ranged = true;
				return;
			}
			if (type == 1131)
			{
				this.width = 22;
				this.height = 22;
				this.accessory = true;
				this.rare = 8;
				this.value = Item.sellPrice(0, 40, 0, 0);
				this.expert = true;
				return;
			}
			if (type == 1132)
			{
				this.width = 22;
				this.height = 22;
				this.accessory = true;
				this.rare = 2;
				this.value = 100000;
				return;
			}
			if (type == 1133)
			{
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 1;
				return;
			}
			if (type == 1134)
			{
				this.UseSound = SoundID.Item3;
				this.healLife = 80;
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.potion = true;
				this.buffType = 48;
				this.buffTime = 900;
				this.value = 40;
				return;
			}
			if (type == 1135)
			{
				this.width = 18;
				this.height = 18;
				this.headSlot = 81;
				this.value = 1000;
				this.defense = 1;
				return;
			}
			if (type == 1136)
			{
				this.width = 18;
				this.height = 18;
				this.bodySlot = 52;
				this.value = 1000;
				this.defense = 2;
				return;
			}
			if (type == 1137)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 12;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			}
			if (type == 1138)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 13;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			}
			if (type == 1139)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 14;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			}
			if (type == 1140)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 15;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			}
			if (type == 1141)
			{
				this.width = 14;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 7;
				return;
			}
			if (type == 1142)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 21;
				this.placeStyle = 16;
				this.width = 26;
				this.height = 22;
				this.value = 500;
				return;
			}
			if (type == 1143)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 15;
				this.placeStyle = 12;
				this.width = 12;
				this.height = 30;
				this.value = 150;
				return;
			}
			if (type == 1144)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 14;
				this.placeStyle = 9;
				this.width = 26;
				this.height = 20;
				this.value = 300;
				return;
			}
			if (type == 1145)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 18;
				this.placeStyle = 10;
				this.width = 28;
				this.height = 14;
				this.value = 150;
				return;
			}
			if (type == 1146)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 137;
				this.placeStyle = 1;
				this.width = 12;
				this.height = 12;
				this.value = 10000;
				this.mech = true;
				return;
			}
			if (type == 1147)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 137;
				this.placeStyle = 2;
				this.width = 12;
				this.height = 12;
				this.value = 10000;
				this.mech = true;
				return;
			}
			if (type == 1148)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 137;
				this.placeStyle = 3;
				this.width = 12;
				this.height = 12;
				this.value = 10000;
				this.mech = true;
				return;
			}
			if (type == 1149)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 137;
				this.placeStyle = 4;
				this.width = 12;
				this.height = 12;
				this.value = 10000;
				this.mech = true;
				return;
			}
			if (type == 1150)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 232;
				this.width = 12;
				this.height = 12;
				return;
			}
			if (type == 1151)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 135;
				this.width = 12;
				this.height = 12;
				this.placeStyle = 6;
				this.mech = true;
				this.value = 5000;
				return;
			}
			if (type == 1152)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 43;
				return;
			}
			if (type == 1153)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 44;
				return;
			}
			if (type == 1154)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 45;
				return;
			}
			if (type == 1155)
			{
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 18;
				this.useTime = 18;
				this.mana = 10;
				this.width = 50;
				this.height = 18;
				this.shoot = 189;
				this.UseSound = SoundID.Item11;
				this.damage = 31;
				this.shootSpeed = 9f;
				this.noMelee = true;
				this.value = 500000;
				this.knockBack = 0.25f;
				this.rare = 8;
				this.magic = true;
				return;
			}
			if (type == 1156)
			{
				this.channel = true;
				this.useStyle = 5;
				this.useAnimation = 30;
				this.useTime = 30;
				this.knockBack = 1f;
				this.width = 30;
				this.height = 10;
				this.damage = 38;
				this.scale = 1.1f;
				this.shoot = 190;
				this.shootSpeed = 14f;
				this.UseSound = SoundID.Item10;
				this.rare = 8;
				this.value = Item.sellPrice(0, 20, 0, 0);
				this.ranged = true;
				this.noMelee = true;
				return;
			}
			if (type == 1157)
			{
				this.mana = 10;
				this.damage = 40;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 191;
				this.width = 26;
				this.height = 28;
				this.UseSound = SoundID.Item44;
				this.useAnimation = 28;
				this.useTime = 28;
				this.rare = 7;
				this.noMelee = true;
				this.knockBack = 3f;
				this.buffType = 49;
				this.value = Item.buyPrice(0, 35, 0, 0);
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			}
			if (type == 1158)
			{
				this.rare = 7;
				this.width = 24;
				this.height = 28;
				this.accessory = true;
				this.value = Item.buyPrice(0, 20, 0, 0);
				this.neckSlot = 4;
				return;
			}
			if (type == 1159)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.headSlot = 82;
				this.rare = 7;
				this.value = Item.buyPrice(0, 50, 0, 0);
				return;
			}
			if (type == 1160)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 17;
				this.bodySlot = 53;
				this.rare = 7;
				this.value = Item.buyPrice(0, 50, 0, 0);
				return;
			}
			if (type == 1161)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 12;
				this.legSlot = 48;
				this.rare = 7;
				this.value = Item.buyPrice(0, 50, 0, 0);
				return;
			}
			if (type == 1162)
			{
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.value = Item.buyPrice(1, 50, 0, 0);
				this.wingSlot = 13;
				this.rare = 5;
				return;
			}
			if (type == 1163)
			{
				this.width = 14;
				this.height = 28;
				this.rare = 4;
				this.value = 150000;
				this.accessory = true;
				this.balloonSlot = 1;
				return;
			}
			if (type == 1164)
			{
				this.width = 14;
				this.height = 28;
				this.rare = 8;
				this.value = 150000;
				this.accessory = true;
				this.balloonSlot = 3;
				return;
			}
			if (type == 1165)
			{
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.value = 400000;
				this.rare = 5;
				this.wingSlot = 14;
				return;
			}
			if (type == 1166)
			{
				this.useStyle = 1;
				this.useTime = 22;
				this.useAnimation = 22;
				this.knockBack = 5.5f;
				this.width = 24;
				this.height = 28;
				this.damage = 19;
				this.scale = 1f;
				this.UseSound = SoundID.Item1;
				this.rare = 3;
				this.value = 9000;
				this.melee = true;
				return;
			}
			if (type == 1167)
			{
				this.rare = 7;
				this.width = 24;
				this.height = 28;
				this.accessory = true;
				this.value = Item.buyPrice(0, 40, 0, 0);
				return;
			}
			if (type == 1168)
			{
				this.useStyle = 1;
				this.shootSpeed = 6f;
				this.shoot = 196;
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 15;
				this.useTime = 15;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = 20;
				return;
			}
			if (type == 1169)
			{
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 197;
				this.width = 16;
				this.height = 30;
				this.UseSound = SoundID.Item2;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.buffType = 50;
				return;
			}
			if (type == 1170)
			{
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 198;
				this.width = 16;
				this.height = 30;
				this.UseSound = SoundID.Item2;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 3, 0, 0);
				this.buffType = 51;
				return;
			}
			if (type == 1171)
			{
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 199;
				this.width = 16;
				this.height = 30;
				this.UseSound = SoundID.Item2;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.buffType = 52;
				this.value = Item.buyPrice(2, 0, 0, 0);
				return;
			}
			if (type == 1172)
			{
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 200;
				this.width = 16;
				this.height = 30;
				this.UseSound = SoundID.Item2;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.buffType = 53;
				return;
			}
			if (type == 1173)
			{
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 85;
				this.placeStyle = 1;
				this.width = 20;
				this.height = 20;
				return;
			}
			if (type == 1174)
			{
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 85;
				this.placeStyle = 2;
				this.width = 20;
				this.height = 20;
				return;
			}
			if (type == 1175)
			{
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 85;
				this.placeStyle = 3;
				this.width = 20;
				this.height = 20;
				return;
			}
			if (type == 1176)
			{
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 85;
				this.placeStyle = 4;
				this.width = 20;
				this.height = 20;
				return;
			}
			if (type == 1177)
			{
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 85;
				this.placeStyle = 5;
				this.width = 20;
				this.height = 20;
				return;
			}
			if (type == 1178)
			{
				this.useStyle = 5;
				this.mana = 5;
				this.autoReuse = true;
				this.useAnimation = 7;
				this.useTime = 7;
				this.width = 24;
				this.height = 18;
				this.shoot = 206;
				this.UseSound = SoundID.Item7;
				this.damage = 48;
				this.shootSpeed = 11f;
				this.noMelee = true;
				this.value = 300000;
				this.knockBack = 4f;
				this.rare = 7;
				this.magic = true;
				return;
			}
			if (type == 1179)
			{
				this.shootSpeed = 5f;
				this.shoot = 207;
				this.damage = 9;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Bullet;
				this.knockBack = 4.5f;
				this.value = 50;
				this.ranged = true;
				this.rare = 7;
				return;
			}
			if (type == 1180)
			{
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 208;
				this.width = 16;
				this.height = 30;
				this.UseSound = SoundID.Item2;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.buffType = 54;
				this.value = Item.sellPrice(0, 75, 0, 0);
				return;
			}
			if (type == 1181)
			{
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 209;
				this.width = 16;
				this.height = 30;
				this.UseSound = SoundID.Item2;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 45, 0, 0);
				this.buffType = 55;
				return;
			}
			if (type == 1182)
			{
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 210;
				this.width = 16;
				this.height = 30;
				this.UseSound = SoundID.Item2;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.buffType = 56;
				return;
			}
			if (type == 1183)
			{
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 211;
				this.width = 16;
				this.height = 30;
				this.UseSound = SoundID.Item2;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 8;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 5, 50, 0);
				this.buffType = 57;
				return;
			}
			if (type == 1184)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 13500;
				this.rare = 3;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 12;
				return;
			}
			if (type == 1185)
			{
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 22;
				this.useTime = 22;
				this.knockBack = 5.5f;
				this.width = 40;
				this.height = 40;
				this.damage = 49;
				this.scale = 1f;
				this.UseSound = SoundID.Item1;
				this.rare = 4;
				this.value = 92000;
				this.melee = true;
				return;
			}
			if (type == 1186)
			{
				this.useStyle = 5;
				this.useAnimation = 27;
				this.useTime = 27;
				this.shootSpeed = 4.4f;
				this.knockBack = 4.5f;
				this.width = 40;
				this.height = 40;
				this.damage = 44;
				this.scale = 1.1f;
				this.UseSound = SoundID.Item1;
				this.shoot = 212;
				this.rare = 4;
				this.value = 60000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				return;
			}
			if (type == 1187)
			{
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 22;
				this.useTime = 22;
				this.width = 50;
				this.height = 18;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = SoundID.Item5;
				this.damage = 37;
				this.shootSpeed = 9.25f;
				this.noMelee = true;
				this.value = 80000;
				this.ranged = true;
				this.rare = 4;
				this.knockBack = 1.75f;
				return;
			}
			if (type == 1188)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.autoReuse = true;
				this.useAnimation = 25;
				this.useTime = 12;
				this.knockBack = 5f;
				this.width = 20;
				this.height = 12;
				this.damage = 12;
				this.pick = 130;
				this.UseSound = SoundID.Item1;
				this.rare = 4;
				this.value = 72000;
				this.melee = true;
				this.scale = 1f;
				return;
			}
			if (type == 1189)
			{
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 12;
				this.shootSpeed = 32f;
				this.knockBack = 0.5f;
				this.width = 20;
				this.height = 12;
				this.damage = 12;
				this.pick = 130;
				this.UseSound = SoundID.Item23;
				this.shoot = 213;
				this.rare = 4;
				this.value = 72000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				return;
			}
			if (type == 1190)
			{
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 12;
				this.shootSpeed = 40f;
				this.knockBack = 2.9f;
				this.width = 20;
				this.height = 12;
				this.damage = 26;
				this.axe = 15;
				this.UseSound = SoundID.Item23;
				this.shoot = 214;
				this.rare = 4;
				this.value = 72000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				return;
			}
			if (type == 1191)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.sellPrice(0, 0, 52, 0);
				this.rare = 3;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 14;
				return;
			}
			if (type == 1192)
			{
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 22;
				this.useTime = 22;
				this.knockBack = 6f;
				this.width = 40;
				this.height = 40;
				this.damage = 59;
				this.scale = 1f;
				this.UseSound = SoundID.Item1;
				this.rare = 4;
				this.value = 126500;
				this.melee = true;
				return;
			}
			if (type == 1193)
			{
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 25;
				this.shootSpeed = 4.5f;
				this.knockBack = 5.5f;
				this.width = 40;
				this.height = 40;
				this.damage = 46;
				this.scale = 1.1f;
				this.UseSound = SoundID.Item1;
				this.shoot = 215;
				this.rare = 4;
				this.value = 82500;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				return;
			}
			if (type == 1194)
			{
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 19;
				this.useTime = 19;
				this.width = 50;
				this.height = 18;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = SoundID.Item5;
				this.damage = 40;
				this.shootSpeed = 9.75f;
				this.noMelee = true;
				this.value = 110000;
				this.ranged = true;
				this.rare = 4;
				this.knockBack = 2f;
				return;
			}
			if (type == 1195)
			{
				this.useStyle = 1;
				this.useAnimation = 25;
				this.useTime = 9;
				this.knockBack = 5f;
				this.useTurn = true;
				this.autoReuse = true;
				this.width = 20;
				this.height = 12;
				this.damage = 17;
				this.pick = 165;
				this.UseSound = SoundID.Item1;
				this.rare = 4;
				this.value = 99000;
				this.melee = true;
				this.scale = 1f;
				return;
			}
			if (type == 1196)
			{
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 9;
				this.shootSpeed = 32f;
				this.knockBack = 0.5f;
				this.width = 20;
				this.height = 12;
				this.damage = 17;
				this.pick = 165;
				this.UseSound = SoundID.Item23;
				this.shoot = 216;
				this.rare = 4;
				this.value = 99000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				return;
			}
			if (type == 1197)
			{
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 9;
				this.shootSpeed = 40f;
				this.knockBack = 3.75f;
				this.width = 20;
				this.height = 12;
				this.damage = 31;
				this.axe = 18;
				this.UseSound = SoundID.Item23;
				this.shoot = 217;
				this.rare = 4;
				this.value = 99000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				return;
			}
			if (type == 1198)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.sellPrice(0, 0, 68, 0);
				this.rare = 3;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 16;
				return;
			}
			if (type == 1199)
			{
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.knockBack = 6f;
				this.width = 40;
				this.height = 40;
				this.damage = 61;
				this.scale = 1f;
				this.UseSound = SoundID.Item1;
				this.rare = 4;
				this.value = 161000;
				this.melee = true;
				return;
			}
			if (type == 1200)
			{
				this.useStyle = 5;
				this.useAnimation = 23;
				this.useTime = 23;
				this.shootSpeed = 5f;
				this.knockBack = 6.2f;
				this.width = 40;
				this.height = 40;
				this.damage = 48;
				this.scale = 1.1f;
				this.UseSound = SoundID.Item1;
				this.shoot = 218;
				this.rare = 4;
				this.value = 105000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				return;
			}
			if (type == 1201)
			{
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.width = 50;
				this.height = 18;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = SoundID.Item5;
				this.damage = 43;
				this.shootSpeed = 10.5f;
				this.noMelee = true;
				this.value = 140000;
				this.ranged = true;
				this.rare = 4;
				this.knockBack = 2.5f;
				return;
			}
			if (type == 1202)
			{
				this.useStyle = 1;
				this.useAnimation = 25;
				this.useTime = 7;
				this.knockBack = 5f;
				this.useTurn = true;
				this.autoReuse = true;
				this.width = 20;
				this.height = 12;
				this.damage = 27;
				this.pick = 190;
				this.UseSound = SoundID.Item1;
				this.rare = 4;
				this.value = 126000;
				this.melee = true;
				this.scale = 1f;
				return;
			}
			if (type == 1203)
			{
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 7;
				this.shootSpeed = 32f;
				this.knockBack = 0.5f;
				this.width = 20;
				this.height = 12;
				this.damage = 27;
				this.pick = 190;
				this.UseSound = SoundID.Item23;
				this.shoot = 219;
				this.rare = 4;
				this.value = 126000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				return;
			}
			if (type == 1204)
			{
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 7;
				this.shootSpeed = 40f;
				this.knockBack = 4.6f;
				this.width = 20;
				this.height = 12;
				this.damage = 34;
				this.axe = 21;
				this.UseSound = SoundID.Item23;
				this.shoot = 220;
				this.rare = 4;
				this.value = 126000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				return;
			}
			if (type == 1205)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 14;
				this.headSlot = 83;
				this.rare = 4;
				this.value = 75000;
				return;
			}
			if (type == 1206)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 5;
				this.headSlot = 84;
				this.rare = 4;
				this.value = 75000;
				return;
			}
			if (type == 1207)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 3;
				this.headSlot = 85;
				this.rare = 4;
				this.value = 75000;
				return;
			}
			if (type == 1208)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 10;
				this.bodySlot = 54;
				this.rare = 4;
				this.value = 60000;
				return;
			}
			if (type == 1209)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 8;
				this.legSlot = 49;
				this.rare = 4;
				this.value = 45000;
				return;
			}
			if (type == 1210)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 19;
				this.headSlot = 86;
				this.rare = 4;
				this.value = 112500;
				return;
			}
			if (type == 1211)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 7;
				this.headSlot = 87;
				this.rare = 4;
				this.value = 112500;
				return;
			}
			if (type == 1212)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 4;
				this.headSlot = 88;
				this.rare = 4;
				this.value = 112500;
				return;
			}
			if (type == 1213)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 13;
				this.bodySlot = 55;
				this.rare = 4;
				this.value = 90000;
				return;
			}
			if (type == 1214)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 10;
				this.legSlot = 50;
				this.rare = 4;
				this.value = 67500;
				return;
			}
			if (type == 1215)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 23;
				this.headSlot = 89;
				this.rare = 4;
				this.value = 150000;
				return;
			}
			if (type == 1216)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 8;
				this.headSlot = 90;
				this.rare = 4;
				this.value = 150000;
				return;
			}
			if (type == 1217)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 4;
				this.headSlot = 91;
				this.rare = 4;
				this.value = 150000;
				return;
			}
			if (type == 1218)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 15;
				this.bodySlot = 56;
				this.rare = 4;
				this.value = 120000;
				return;
			}
			if (type == 1219)
			{
				this.width = 18;
				this.height = 18;
				this.defense = 11;
				this.legSlot = 51;
				this.rare = 4;
				this.value = 90000;
				return;
			}
			if (type == 1220)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 134;
				this.placeStyle = 1;
				this.width = 28;
				this.height = 14;
				this.value = 25000;
				this.rare = 3;
				return;
			}
			if (type == 1221)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 133;
				this.placeStyle = 1;
				this.width = 44;
				this.height = 30;
				this.value = 50000;
				this.rare = 3;
				return;
			}
			if (type == 1222)
			{
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 35;
				this.useTime = 12;
				this.knockBack = 5.5f;
				this.width = 20;
				this.height = 12;
				this.damage = 36;
				this.axe = 15;
				this.UseSound = SoundID.Item1;
				this.rare = 4;
				this.value = 72000;
				this.melee = true;
				this.scale = 1.1f;
				return;
			}
			if (type == 1223)
			{
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 35;
				this.useTime = 9;
				this.knockBack = 6.5f;
				this.width = 20;
				this.height = 12;
				this.damage = 41;
				this.axe = 18;
				this.UseSound = SoundID.Item1;
				this.rare = 4;
				this.value = 99000;
				this.melee = true;
				this.scale = 1.1f;
				return;
			}
			if (type == 1224)
			{
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 35;
				this.useTime = 7;
				this.knockBack = 7.5f;
				this.width = 20;
				this.height = 12;
				this.damage = 44;
				this.axe = 21;
				this.UseSound = SoundID.Item1;
				this.rare = 4;
				this.value = 126000;
				this.melee = true;
				this.scale = 1.1f;
				return;
			}
			if (type == 1225)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.sellPrice(0, 0, 40, 0);
				this.rare = 4;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 18;
				return;
			}
			if (type == 1226)
			{
				this.useStyle = 1;
				this.useAnimation = 26;
				this.useTime = 60;
				this.shoot = 229;
				this.shootSpeed = 8f;
				this.knockBack = 6f;
				this.width = 40;
				this.height = 40;
				this.damage = 95;
				this.UseSound = SoundID.Item1;
				this.rare = 7;
				this.value = 276000;
				this.scale = 1f;
				this.melee = true;
				return;
			}
			if (type == 1227)
			{
				this.autoReuse = true;
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 16;
				this.useTime = 28;
				this.shoot = 228;
				this.shootSpeed = 8f;
				this.knockBack = 4f;
				this.width = 40;
				this.height = 40;
				this.damage = 57;
				this.UseSound = SoundID.Item1;
				this.rare = 7;
				this.value = 276000;
				this.melee = true;
				return;
			}
			if (type == 1228)
			{
				this.useStyle = 5;
				this.useAnimation = 23;
				this.useTime = 23;
				this.shootSpeed = 5f;
				this.knockBack = 6.2f;
				this.width = 40;
				this.height = 40;
				this.damage = 49;
				this.scale = 1.1f;
				this.UseSound = SoundID.Item1;
				this.shoot = 222;
				this.rare = 7;
				this.value = 180000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				return;
			}
			if (type == 1229)
			{
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 19;
				this.useTime = 19;
				this.width = 50;
				this.height = 18;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = SoundID.Item5;
				this.damage = 34;
				this.shootSpeed = 11.5f;
				this.noMelee = true;
				this.value = 240000;
				this.ranged = true;
				this.rare = 7;
				this.knockBack = 2.75f;
				return;
			}
			if (type == 1230)
			{
				this.useStyle = 1;
				this.useAnimation = 25;
				this.useTime = 7;
				this.knockBack = 5f;
				this.useTurn = true;
				this.autoReuse = true;
				this.width = 20;
				this.height = 12;
				this.damage = 40;
				this.pick = 200;
				this.UseSound = SoundID.Item1;
				this.rare = 7;
				this.value = 216000;
				this.melee = true;
				this.scale = 1f;
				this.tileBoost++;
				return;
			}
			if (type == 1231)
			{
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 7;
				this.shootSpeed = 40f;
				this.knockBack = 1f;
				this.width = 20;
				this.height = 12;
				this.damage = 35;
				this.pick = 200;
				this.UseSound = SoundID.Item23;
				this.shoot = 223;
				this.rare = 7;
				this.value = 216000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				this.tileBoost++;
				return;
			}
			if (type == 1232)
			{
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 7;
				this.shootSpeed = 46f;
				this.knockBack = 4.6f;
				this.width = 20;
				this.height = 12;
				this.damage = 50;
				this.axe = 23;
				this.UseSound = SoundID.Item23;
				this.shoot = 224;
				this.rare = 7;
				this.value = 216000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				this.tileBoost++;
				return;
			}
			if (type == 1233)
			{
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 30;
				this.useTime = 7;
				this.knockBack = 7f;
				this.width = 20;
				this.height = 12;
				this.damage = 70;
				this.axe = 23;
				this.UseSound = SoundID.Item1;
				this.rare = 7;
				this.value = 216000;
				this.melee = true;
				this.scale = 1.15f;
				this.tileBoost++;
				return;
			}
			if (type == 1234)
			{
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 35;
				this.useTime = 14;
				this.hammer = 90;
				this.width = 24;
				this.height = 28;
				this.damage = 80;
				this.knockBack = 8f;
				this.scale = 1f;
				this.UseSound = SoundID.Item1;
				this.rare = 7;
				this.value = 216000;
				this.melee = true;
				this.tileBoost++;
				return;
			}
			if (type == 1235)
			{
				this.shootSpeed = 4.5f;
				this.shoot = 225;
				this.damage = 16;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 3.5f;
				this.value = 100;
				this.ranged = true;
				this.rare = 7;
				return;
			}
			if (type == 1236)
			{
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 10f;
				this.shoot = 230;
				this.width = 18;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = 20000;
				return;
			}
			if (type == 1237)
			{
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 10.5f;
				this.shoot = 231;
				this.width = 18;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = 20000;
				return;
			}
			if (type == 1238)
			{
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 11f;
				this.shoot = 232;
				this.width = 18;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = 20000;
				return;
			}
			if (type == 1239)
			{
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 11.5f;
				this.shoot = 233;
				this.width = 18;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = 20000;
				return;
			}
			if (type == 1240)
			{
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 12f;
				this.shoot = 234;
				this.width = 18;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = 20000;
				return;
			}
			if (type == 1241)
			{
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 12.5f;
				this.shoot = 235;
				this.width = 18;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = 20000;
				return;
			}
			if (type == 1242)
			{
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 236;
				this.width = 16;
				this.height = 30;
				this.UseSound = SoundID.Item2;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 7, 50, 0);
				this.buffType = 61;
				return;
			}
			if (type == 1243)
			{
				this.width = 28;
				this.height = 20;
				this.headSlot = 92;
				this.rare = 1;
				this.vanity = true;
				return;
			}
			if (type == 1244)
			{
				this.mana = 30;
				this.damage = 30;
				this.useStyle = 1;
				this.shootSpeed = 16f;
				this.shoot = 237;
				this.width = 26;
				this.height = 28;
				this.UseSound = SoundID.Item66;
				this.useAnimation = 22;
				this.useTime = 22;
				this.rare = 6;
				this.noMelee = true;
				this.knockBack = 0f;
				this.value = Item.sellPrice(0, 3, 50, 0);
				this.magic = true;
				return;
			}
			if (type == 1245)
			{
				this.flame = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.holdStyle = 1;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 4;
				this.placeStyle = 10;
				this.width = 10;
				this.height = 12;
				this.value = 60;
				this.noWet = true;
				return;
			}
			if (type == 1246)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 234;
				this.width = 12;
				this.height = 12;
				this.ammo = AmmoID.Sand;
				this.notAmmo = true;
				return;
			}
			if (type == 1247)
			{
				this.width = 20;
				this.height = 24;
				this.value = 150000;
				this.accessory = true;
				this.rare = 4;
				this.backSlot = 1;
				return;
			}
			if (type == 1248)
			{
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.value = Item.buyPrice(0, 25, 0, 0);
				this.rare = 7;
				return;
			}
			if (type == 1249)
			{
				this.width = 14;
				this.height = 28;
				this.rare = 2;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.accessory = true;
				this.balloonSlot = 7;
				return;
			}
			if (type == 1250)
			{
				this.width = 20;
				this.height = 22;
				this.rare = 4;
				this.value = Item.buyPrice(0, 15, 0, 0);
				this.accessory = true;
				this.balloonSlot = 2;
				return;
			}
			if (type == 1251)
			{
				this.width = 20;
				this.height = 22;
				this.rare = 4;
				this.value = Item.buyPrice(0, 15, 0, 0);
				this.accessory = true;
				this.balloonSlot = 9;
				return;
			}
			if (type == 1252)
			{
				this.width = 20;
				this.height = 22;
				this.rare = 4;
				this.value = Item.buyPrice(0, 15, 0, 0);
				this.accessory = true;
				this.balloonSlot = 10;
				return;
			}
			if (type == 1253)
			{
				this.width = 20;
				this.height = 24;
				this.value = 225000;
				this.accessory = true;
				this.rare = 5;
				return;
			}
			if (type == 1254)
			{
				this.useStyle = 5;
				this.useAnimation = 36;
				this.useTime = 36;
				this.crit += 25;
				this.width = 44;
				this.height = 14;
				this.shoot = 10;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = SoundID.Item40;
				this.damage = 185;
				this.shootSpeed = 16f;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 40, 0, 0);
				this.knockBack = 8f;
				this.rare = 8;
				this.ranged = true;
				return;
			}
			if (type == 1255)
			{
				this.autoReuse = false;
				this.useStyle = 5;
				this.useAnimation = 9;
				this.useTime = 9;
				this.width = 24;
				this.height = 22;
				this.shoot = 14;
				this.knockBack = 5.5f;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = SoundID.Item41;
				this.damage = 50;
				this.shootSpeed = 13.5f;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.scale = 0.85f;
				this.rare = 7;
				this.ranged = true;
				this.autoReuse = true;
				return;
			}
			if (type == 1256)
			{
				this.mana = 30;
				this.damage = 12;
				this.useStyle = 1;
				this.shootSpeed = 12f;
				this.shoot = 243;
				this.width = 26;
				this.height = 28;
				this.UseSound = SoundID.Item8;
				this.useAnimation = 24;
				this.useTime = 24;
				this.rare = 1;
				this.noMelee = true;
				this.knockBack = 0f;
				this.value = this.shadowOrbPrice;
				this.magic = true;
				return;
			}
			if (type == 1257)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 39, 0);
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 19;
				return;
			}
			if (type == 1258)
			{
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 22;
				this.useTime = 22;
				this.width = 50;
				this.height = 18;
				this.shoot = 246;
				this.useAmmo = AmmoID.StyngerBolt;
				this.UseSound = SoundID.Item11;
				this.damage = 45;
				this.knockBack = 5f;
				this.shootSpeed = 9f;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 35, 0, 0);
				this.rare = 7;
				this.ranged = true;
				return;
			}
			if (type == 1259)
			{
				this.noMelee = true;
				this.useStyle = 5;
				this.useAnimation = 40;
				this.useTime = 40;
				this.knockBack = 6.5f;
				this.width = 30;
				this.height = 10;
				this.damage = 65;
				this.scale = 1.1f;
				this.noUseGraphic = true;
				this.shoot = 247;
				this.shootSpeed = 15.9f;
				this.UseSound = SoundID.Item1;
				this.rare = 7;
				this.value = Item.sellPrice(0, 6, 0, 0);
				this.melee = true;
				this.channel = true;
				return;
			}
			if (type == 1260)
			{
				this.useStyle = 5;
				this.useAnimation = 40;
				this.useTime = 40;
				this.width = 50;
				this.height = 18;
				this.shoot = 250;
				this.UseSound = SoundID.Item67;
				this.damage = 45;
				this.knockBack = 2.5f;
				this.shootSpeed = 16f;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 20, 0, 0);
				this.rare = 8;
				this.magic = true;
				this.mana = 20;
				return;
			}
			if (type == 1261)
			{
				this.shootSpeed = 2f;
				this.shoot = 246;
				this.damage = 17;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.StyngerBolt;
				this.knockBack = 1f;
				this.value = 75;
				this.rare = 5;
				this.ranged = true;
				return;
			}
			if (type == 1262)
			{
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 7;
				this.shootSpeed = 46f;
				this.knockBack = 5.2f;
				this.width = 20;
				this.height = 12;
				this.damage = 45;
				this.hammer = 90;
				this.UseSound = SoundID.Item23;
				this.shoot = 252;
				this.rare = 7;
				this.value = 216000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				this.tileBoost++;
				return;
			}
			if (type == 1263)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 235;
				this.width = 12;
				this.height = 12;
				this.value = Item.buyPrice(0, 2, 50, 0);
				this.mech = true;
				return;
			}
			if (type == 1264)
			{
				this.mana = 11;
				this.damage = 60;
				this.useStyle = 1;
				this.shootSpeed = 9f;
				this.shoot = 253;
				this.width = 26;
				this.height = 28;
				this.UseSound = SoundID.Item20;
				this.useAnimation = 12;
				this.useTime = 12;
				this.rare = 5;
				this.noMelee = true;
				this.knockBack = 6.5f;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.magic = true;
				return;
			}
			if (type == 1265)
			{
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 9;
				this.useTime = 9;
				this.width = 24;
				this.height = 22;
				this.shoot = 14;
				this.knockBack = 3.5f;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = SoundID.Item11;
				this.damage = 30;
				this.shootSpeed = 13f;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 7, 0, 0);
				this.scale = 0.75f;
				this.rare = 7;
				this.ranged = true;
				return;
			}
			if (type == 1266)
			{
				this.rare = 8;
				this.mana = 14;
				this.UseSound = SoundID.Item20;
				this.noMelee = true;
				this.useStyle = 5;
				this.damage = 48;
				this.knockBack = 6f;
				this.useAnimation = 20;
				this.useTime = 20;
				this.width = 24;
				this.height = 28;
				this.shoot = 254;
				this.shootSpeed = 1.2f;
				this.magic = true;
				this.value = 500000;
				return;
			}
			if (type == 1267)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 88;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 0, 20);
				return;
			}
			if (type == 1268)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 89;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 0, 40);
				return;
			}
			if (type == 1269)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 90;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 0, 60);
				return;
			}
			if (type == 1270)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 91;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 0, 80);
				return;
			}
			if (type == 1271)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 92;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 1, 20);
				return;
			}
			if (type == 1272)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 93;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 1, 0);
				return;
			}
			if (type == 1273)
			{
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 25;
				this.width = 30;
				this.height = 10;
				this.noUseGraphic = true;
				this.shoot = 256;
				this.shootSpeed = 15f;
				this.UseSound = SoundID.Item1;
				this.rare = 2;
				this.value = 45000;
				return;
			}
			if (type == 1274)
			{
				this.width = 28;
				this.height = 20;
				this.headSlot = 93;
				this.rare = 1;
				this.vanity = true;
				return;
			}
			if (type == 1275)
			{
				this.width = 28;
				this.height = 20;
				this.headSlot = 94;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 1, 0, 0);
				return;
			}
			if (type == 1276)
			{
				this.width = 28;
				this.height = 20;
				this.headSlot = 95;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 1, 0, 0);
				return;
			}
			if (type == 1277)
			{
				this.width = 28;
				this.height = 20;
				this.headSlot = 96;
				this.rare = 1;
				this.value = Item.buyPrice(0, 3, 0, 0);
				this.vanity = true;
				return;
			}
			if (type == 1278)
			{
				this.width = 28;
				this.height = 20;
				this.headSlot = 97;
				this.rare = 1;
				this.value = Item.buyPrice(0, 3, 0, 0);
				this.vanity = true;
				return;
			}
			if (type == 1279)
			{
				this.width = 28;
				this.height = 20;
				this.bodySlot = 57;
				this.rare = 1;
				this.value = Item.buyPrice(0, 3, 0, 0);
				this.vanity = true;
				return;
			}
			if (type == 1280)
			{
				this.width = 28;
				this.height = 20;
				this.legSlot = 52;
				this.rare = 1;
				this.value = Item.buyPrice(0, 3, 0, 0);
				this.vanity = true;
				return;
			}
			if (type == 1281)
			{
				this.width = 28;
				this.height = 20;
				this.headSlot = 98;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 75, 0);
				this.vanity = true;
				return;
			}
			if (type == 1282)
			{
				this.width = 18;
				this.height = 14;
				this.bodySlot = 58;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			}
			if (type == 1283)
			{
				this.width = 18;
				this.height = 14;
				this.bodySlot = 59;
				this.defense = 1;
				this.value = Item.sellPrice(0, 0, 50, 0) * 2;
				return;
			}
			if (type == 1284)
			{
				this.width = 18;
				this.height = 14;
				this.bodySlot = 60;
				this.defense = 1;
				this.value = Item.sellPrice(0, 0, 50, 0) * 3;
				this.rare = 1;
				return;
			}
			if (type == 1285)
			{
				this.width = 18;
				this.height = 14;
				this.bodySlot = 61;
				this.defense = 2;
				this.value = Item.sellPrice(0, 0, 50, 0) * 4;
				this.rare = 1;
				return;
			}
			if (type == 1286)
			{
				this.width = 18;
				this.height = 14;
				this.bodySlot = 62;
				this.defense = 2;
				this.value = Item.sellPrice(0, 0, 50, 0) * 5;
				this.rare = 1;
				return;
			}
			if (type == 1287)
			{
				this.defense = 3;
				this.width = 18;
				this.height = 14;
				this.bodySlot = 63;
				this.value = Item.sellPrice(0, 0, 50, 0) * 6;
				this.rare = 2;
				return;
			}
			if (type == 1288)
			{
				this.width = 28;
				this.height = 20;
				this.bodySlot = 64;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 25, 0, 0);
				return;
			}
			if (type == 1289)
			{
				this.width = 28;
				this.height = 20;
				this.legSlot = 53;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 25, 0, 0);
				return;
			}
			if (type == 1290)
			{
				this.width = 22;
				this.height = 22;
				this.accessory = true;
				this.rare = 1;
				this.value = this.shadowOrbPrice;
				this.neckSlot = 3;
				return;
			}
			if (type == 1291)
			{
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 18;
				this.height = 18;
				this.useStyle = 4;
				this.useTime = 30;
				this.UseSound = SoundID.Item4;
				this.useAnimation = 30;
				this.rare = 7;
				this.value = Item.sellPrice(0, 2, 0, 0);
				return;
			}
			if (type == 1292)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 237;
				this.width = 26;
				this.height = 20;
				this.value = 300;
				return;
			}
			if (type == 1293)
			{
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 22;
				this.height = 10;
				this.value = Item.sellPrice(0, 1, 0, 0);
				return;
			}
			if (type == 1294)
			{
				this.useStyle = 1;
				this.useAnimation = 16;
				this.useTime = 6;
				this.knockBack = 5.5f;
				this.useTurn = true;
				this.autoReuse = true;
				this.width = 20;
				this.height = 12;
				this.damage = 34;
				this.pick = 210;
				this.axe = 25;
				this.UseSound = SoundID.Item1;
				this.rare = 7;
				this.value = 216000;
				this.melee = true;
				this.scale = 1.15f;
				this.tileBoost++;
				return;
			}
			if (type == 1295)
			{
				this.mana = 8;
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 10;
				this.useTime = 10;
				this.width = 24;
				this.height = 18;
				this.shoot = 260;
				this.UseSound = SoundID.Item12;
				this.damage = 90;
				this.shootSpeed = 15f;
				this.noMelee = true;
				this.value = 350000;
				this.knockBack = 3f;
				this.rare = 7;
				this.magic = true;
				return;
			}
			if (type == 1296)
			{
				this.mana = 18;
				this.damage = 125;
				this.useStyle = 5;
				this.crit = 20;
				this.shootSpeed = 12f;
				this.shoot = 261;
				this.width = 26;
				this.height = 28;
				this.UseSound = SoundID.Item69;
				this.useAnimation = (this.useTime = 24);
				this.rare = 7;
				this.noMelee = true;
				this.knockBack = 7.5f;
				this.value = Item.buyPrice(0, 35, 0, 0);
				this.magic = true;
				return;
			}
			if (type == 1297)
			{
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 24;
				this.useTime = 24;
				this.knockBack = 12f;
				this.width = 30;
				this.height = 10;
				this.damage = 90;
				this.scale = 0.9f;
				this.shoot = 262;
				this.shootSpeed = 14f;
				this.UseSound = SoundID.Item10;
				this.rare = 7;
				this.value = Item.buyPrice(0, 35, 0, 0);
				this.melee = true;
				this.noMelee = true;
				return;
			}
			if (type == 1298)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 21;
				this.placeStyle = 17;
				this.width = 26;
				this.height = 22;
				this.value = 500;
				return;
			}
			if (type == 1299)
			{
				this.width = 14;
				this.height = 28;
				this.rare = 4;
				this.value = 150000;
				return;
			}
			if (type == 1300)
			{
				this.width = 14;
				this.height = 28;
				this.rare = 4;
				this.value = 150000;
				this.accessory = true;
				return;
			}
			if (type == 1301)
			{
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.value = 300000;
				this.rare = 7;
				return;
			}
			if (type == 1302)
			{
				this.shootSpeed = 4f;
				this.shoot = 242;
				this.damage = 11;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Bullet;
				this.knockBack = 4f;
				this.value = 40;
				this.ranged = true;
				this.rare = 3;
				return;
			}
			if (type == 1303)
			{
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.rare = 2;
				this.neckSlot = 1;
				return;
			}
			if (type == 1304)
			{
				this.useStyle = 1;
				this.useTurn = false;
				this.useAnimation = 22;
				this.useTime = 22;
				this.width = 24;
				this.height = 28;
				this.damage = 15;
				this.knockBack = 5.5f;
				this.UseSound = SoundID.Item1;
				this.scale = 1f;
				this.value = 2000;
				this.melee = true;
				return;
			}
			if (type == 1305)
			{
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 23;
				this.knockBack = 7.25f;
				this.useTime = 7;
				this.width = 24;
				this.height = 28;
				this.damage = 72;
				this.axe = 35;
				this.hammer = 100;
				this.tileBoost = 1;
				this.scale = 1.15f;
				this.rare = 8;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.melee = true;
				return;
			}
			if (type == 1306)
			{
				this.useStyle = 1;
				this.useAnimation = 25;
				this.useTime = 25;
				this.knockBack = 5.5f;
				this.width = 24;
				this.height = 28;
				this.damage = 50;
				this.scale = 1.15f;
				this.UseSound = SoundID.Item1;
				this.rare = 5;
				this.shoot = 263;
				this.shootSpeed = 12f;
				this.value = 250000;
				this.melee = true;
				return;
			}
			if (type == 1307)
			{
				this.accessory = true;
				this.width = 14;
				this.height = 26;
				this.value = 1000;
				this.rare = 1;
				return;
			}
			if (type == 1308)
			{
				this.mana = 22;
				this.UseSound = SoundID.Item43;
				this.useStyle = 5;
				this.damage = 43;
				this.useAnimation = 36;
				this.useTime = 36;
				this.width = 40;
				this.height = 40;
				this.shoot = 265;
				this.shootSpeed = 13.5f;
				this.knockBack = 5.6f;
				this.magic = true;
				this.autoReuse = true;
				this.rare = 6;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 4, 0, 0);
				return;
			}
			if (type == 1309)
			{
				this.mana = 10;
				this.damage = 8;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 266;
				this.width = 26;
				this.height = 28;
				this.UseSound = SoundID.Item44;
				this.useAnimation = 28;
				this.useTime = 28;
				this.rare = 4;
				this.noMelee = true;
				this.knockBack = 2f;
				this.buffType = 64;
				this.value = 100000;
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			}
			if (type == 1310)
			{
				this.shoot = 267;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.ammo = AmmoID.Dart;
				this.damage = 10;
				this.knockBack = 2f;
				this.shootSpeed = 2f;
				this.ranged = true;
				this.rare = 2;
				this.consumable = true;
				return;
			}
			if (type == 1311)
			{
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 268;
				this.width = 16;
				this.height = 30;
				this.UseSound = SoundID.Item2;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 6;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 3, 0, 0);
				this.buffType = 65;
				return;
			}
			if (type == 1312)
			{
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 269;
				this.width = 16;
				this.height = 30;
				this.UseSound = SoundID.Item2;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 6;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 2, 50, 0);
				this.buffType = 66;
				return;
			}
			if (type == 1313)
			{
				this.autoReuse = true;
				this.rare = 2;
				this.mana = 18;
				this.UseSound = SoundID.Item8;
				this.noMelee = true;
				this.useStyle = 5;
				this.damage = 29;
				this.useAnimation = 26;
				this.useTime = 26;
				this.width = 24;
				this.height = 28;
				this.shoot = 837;
				this.scale = 0.9f;
				this.shootSpeed = 3.5f;
				this.knockBack = 3.5f;
				this.magic = true;
				this.value = Item.sellPrice(0, 1, 50, 0);
				return;
			}
			if (type == 1314)
			{
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 28;
				this.useTime = 28;
				this.knockBack = 6.5f;
				this.width = 30;
				this.height = 10;
				this.damage = 40;
				this.scale = 0.9f;
				this.shoot = 271;
				this.shootSpeed = 15f;
				this.UseSound = SoundID.Item174;
				this.rare = 4;
				this.value = Item.sellPrice(0, 3, 50, 0);
				this.melee = true;
				this.noMelee = true;
				if (this.Variant == ItemVariants.WeakerVariant)
				{
					this.rare = 4;
					this.value = Item.sellPrice(0, 3, 50, 0);
					this.damage = 18;
					this.useAnimation = 25;
					this.useTime = 25;
					this.knockBack = 5f;
					this.autoReuse = false;
					return;
				}
			}
			else
			{
				if (type == 1315)
				{
					this.useStyle = 4;
					this.consumable = true;
					this.useAnimation = 45;
					this.useTime = 45;
					this.width = 28;
					this.height = 28;
					this.maxStack = Item.CommonMaxStack;
					return;
				}
				if (type == 1316)
				{
					this.width = 18;
					this.height = 18;
					this.defense = 21;
					this.headSlot = 99;
					this.rare = 8;
					this.value = 300000;
					return;
				}
				if (type == 1317)
				{
					this.width = 18;
					this.height = 18;
					this.defense = 27;
					this.bodySlot = 65;
					this.rare = 8;
					this.value = 240000;
					return;
				}
				if (type == 1318)
				{
					this.width = 18;
					this.height = 18;
					this.defense = 17;
					this.legSlot = 54;
					this.rare = 8;
					this.value = 180000;
					return;
				}
				if (type == 1319)
				{
					this.autoReuse = true;
					this.useStyle = 5;
					this.useAnimation = 19;
					this.useTime = 19;
					this.width = 44;
					this.height = 14;
					this.shoot = 166;
					this.useAmmo = AmmoID.Bullet;
					this.UseSound = SoundID.Item11;
					this.damage = 10;
					this.shootSpeed = 11f;
					this.noMelee = true;
					this.value = 100000;
					this.knockBack = 1f;
					this.rare = 1;
					this.ranged = true;
					this.useAmmo = AmmoID.Snowball;
					this.shoot = 166;
					if (this.Variant == ItemVariants.StrongerVariant)
					{
						this.value = Item.sellPrice(0, 5, 0, 0);
						this.rare = 5;
						this.damage = 22;
						this.useAnimation = 6;
						this.useTime = 6;
						return;
					}
				}
				else
				{
					if (type == 1320)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 19;
						this.useTime = 11;
						this.autoReuse = true;
						this.width = 24;
						this.height = 28;
						this.damage = 8;
						this.pick = 55;
						this.UseSound = SoundID.Item1;
						this.knockBack = 3f;
						this.rare = 1;
						this.value = Item.buyPrice(0, 1, 50, 0);
						this.scale = 1f;
						this.melee = true;
						return;
					}
					if (type == 1321)
					{
						this.width = 24;
						this.height = 28;
						this.accessory = true;
						this.value = Item.sellPrice(0, 5, 0, 0);
						this.rare = 4;
						this.backSlot = 7;
						return;
					}
					if (type == 1322)
					{
						this.width = 24;
						this.height = 28;
						this.accessory = true;
						this.value = Item.sellPrice(0, 2, 0, 0);
						this.rare = 3;
						return;
					}
					if (type == 1323)
					{
						this.width = 24;
						this.height = 28;
						this.accessory = true;
						this.value = Item.sellPrice(0, 2, 0, 0);
						this.rare = 3;
						this.faceSlot = 6;
						return;
					}
					if (type == 1324)
					{
						this.autoReuse = true;
						this.noMelee = true;
						this.useStyle = 1;
						this.shootSpeed = 16f;
						this.shoot = 272;
						this.damage = 45;
						this.knockBack = 6.5f;
						this.width = 14;
						this.height = 28;
						this.UseSound = SoundID.Item1;
						this.useAnimation = 11;
						this.useTime = 11;
						this.noUseGraphic = true;
						this.rare = 5;
						this.value = Item.sellPrice(0, 12, 0, 0);
						this.melee = true;
						return;
					}
					if (type == 1325)
					{
						this.autoReuse = false;
						this.useStyle = 5;
						this.useAnimation = 20;
						this.useTime = 20;
						this.knockBack = 3.5f;
						this.width = 30;
						this.height = 10;
						this.damage = 12;
						this.shoot = 273;
						this.shootSpeed = 12f;
						this.UseSound = SoundID.Item1;
						this.rare = 1;
						this.value = Item.sellPrice(0, 0, 25, 0);
						this.melee = true;
						this.noMelee = true;
						this.noUseGraphic = true;
						if (this.Variant == ItemVariants.StrongerVariant)
						{
							this.rare = 4;
							this.value = Item.sellPrice(0, 3, 50, 0);
							this.damage = 60;
							this.useAnimation = 15;
							this.useTime = 15;
							this.autoReuse = true;
							return;
						}
					}
					else
					{
						if (type == 1326)
						{
							this.autoReuse = false;
							this.useStyle = 1;
							this.useAnimation = 20;
							this.useTime = 20;
							this.width = 20;
							this.height = 20;
							this.UseSound = SoundID.Item8;
							this.rare = 7;
							this.value = Item.sellPrice(0, 10, 0, 0);
							return;
						}
						if (type == 1327)
						{
							this.autoReuse = true;
							this.useStyle = 1;
							this.useAnimation = 25;
							this.useTime = 25;
							this.knockBack = 5f;
							this.width = 24;
							this.height = 28;
							this.damage = 57;
							this.scale = 1f;
							this.UseSound = SoundID.Item71;
							this.rare = 6;
							this.shoot = 274;
							this.shootSpeed = 9f;
							this.value = this.eclipsePrice;
							this.melee = true;
							return;
						}
						if (type == 1328)
						{
							this.width = 14;
							this.height = 18;
							this.maxStack = Item.CommonMaxStack;
							this.rare = 7;
							this.value = 5000;
							return;
						}
						if (type == 1329)
						{
							this.width = 14;
							this.height = 18;
							this.maxStack = Item.CommonMaxStack;
							this.rare = 1;
							this.value = 750;
							this.MakeUsableWithChlorophyteExtractinator();
							return;
						}
						if (type == 1330)
						{
							this.width = 18;
							this.height = 20;
							this.maxStack = Item.CommonMaxStack;
							this.value = 12;
							return;
						}
						if (type == 1331)
						{
							this.useStyle = 4;
							this.consumable = true;
							this.useAnimation = 45;
							this.useTime = 45;
							this.width = 28;
							this.height = 28;
							this.maxStack = Item.CommonMaxStack;
							this.rare = 1;
							return;
						}
						if (type == 1332)
						{
							this.width = 12;
							this.height = 14;
							this.maxStack = Item.CommonMaxStack;
							this.value = 4500;
							this.rare = 3;
							return;
						}
						if (type == 1333)
						{
							this.flame = true;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.holdStyle = 1;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 4;
							this.placeStyle = 11;
							this.width = 10;
							this.height = 12;
							this.value = 160;
							this.rare = 1;
							return;
						}
						if (type == 1334)
						{
							this.shootSpeed = 4.25f;
							this.shoot = 278;
							this.damage = 16;
							this.width = 10;
							this.height = 28;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.ammo = AmmoID.Arrow;
							this.knockBack = 3f;
							this.value = 40;
							this.ranged = true;
							this.rare = 3;
							return;
						}
						if (type == 1335)
						{
							this.shootSpeed = 5.25f;
							this.shoot = 279;
							this.damage = 13;
							this.width = 8;
							this.height = 8;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.ammo = AmmoID.Bullet;
							this.knockBack = 4f;
							this.value = 30;
							this.ranged = true;
							this.rare = 3;
							return;
						}
						if (type == 1336)
						{
							this.mana = 7;
							this.autoReuse = true;
							this.useStyle = 5;
							this.useAnimation = 18;
							this.useTime = 6;
							this.knockBack = 4f;
							this.width = 38;
							this.height = 10;
							this.damage = 30;
							this.shoot = 280;
							this.shootSpeed = 10f;
							this.UseSound = SoundID.Item13;
							this.rare = 4;
							this.value = Item.sellPrice(0, 4, 0, 0);
							this.magic = true;
							this.noMelee = true;
							return;
						}
						if (type == 1337)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 209;
							this.placeStyle = 1;
							this.width = 12;
							this.height = 12;
							this.value = Item.buyPrice(0, 50, 0, 0);
							return;
						}
						if (type == 1338)
						{
							this.noUseGraphic = true;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 20;
							this.useTime = 20;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.width = 12;
							this.height = 12;
							this.damage = 350;
							this.noMelee = true;
							this.value = Item.buyPrice(0, 0, 35, 0);
							this.makeNPC = 614;
							return;
						}
						if (type == 1339)
						{
							this.width = 12;
							this.height = 20;
							this.maxStack = Item.CommonMaxStack;
							this.value = Item.buyPrice(0, 0, 15, 0);
							return;
						}
						if (type == 1340)
						{
							this.UseSound = SoundID.Item3;
							this.useStyle = 9;
							this.useTurn = true;
							this.useAnimation = 17;
							this.useTime = 17;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.width = 14;
							this.height = 24;
							this.buffType = 71;
							this.buffTime = 72000;
							this.value = Item.sellPrice(0, 0, 5, 0);
							this.rare = 4;
							return;
						}
						if (type == 1341)
						{
							this.shootSpeed = 4.3f;
							this.shoot = 282;
							this.damage = 19;
							this.width = 10;
							this.height = 28;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.ammo = AmmoID.Arrow;
							this.knockBack = 4.2f;
							this.value = 90;
							this.ranged = true;
							this.rare = 3;
							return;
						}
						if (type == 1342)
						{
							this.shootSpeed = 5.3f;
							this.shoot = 283;
							this.damage = 15;
							this.width = 8;
							this.height = 8;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.ammo = AmmoID.Bullet;
							this.knockBack = 4.1f;
							this.value = 40;
							this.ranged = true;
							this.rare = 3;
							return;
						}
						if (type == 1343)
						{
							this.width = 16;
							this.height = 24;
							this.accessory = true;
							this.rare = 7;
							this.value = 300000;
							this.handOffSlot = 1;
							this.handOnSlot = 6;
							return;
						}
						if (type == 1344)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 272;
							this.width = 12;
							this.height = 12;
							this.value = Item.buyPrice(0, 0, 7, 0);
							return;
						}
						if (type == 1345)
						{
							this.width = 12;
							this.height = 20;
							this.maxStack = Item.CommonMaxStack;
							this.value = Item.buyPrice(0, 0, 2, 0);
							this.noMelee = true;
							this.useStyle = 1;
							this.useAnimation = (this.useTime = 20);
							this.autoReuse = true;
							this.consumable = true;
							return;
						}
						if (type == 1346)
						{
							this.width = 12;
							this.height = 20;
							this.maxStack = Item.CommonMaxStack;
							this.value = Item.buyPrice(0, 0, 15, 0);
							return;
						}
						if (type == 1347)
						{
							this.width = 12;
							this.height = 20;
							this.maxStack = Item.CommonMaxStack;
							this.value = Item.buyPrice(0, 0, 12, 0);
							return;
						}
						if (type == 1348)
						{
							this.width = 12;
							this.height = 20;
							this.maxStack = Item.CommonMaxStack;
							this.value = Item.buyPrice(0, 0, 17, 0);
							return;
						}
						if (type == 1349)
						{
							this.shootSpeed = 5.1f;
							this.shoot = 284;
							this.damage = 10;
							this.width = 8;
							this.height = 8;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.ammo = AmmoID.Bullet;
							this.knockBack = 5f;
							this.value = 10;
							this.ranged = true;
							this.rare = 3;
							return;
						}
						if (type == 1350)
						{
							this.shootSpeed = 4.6f;
							this.shoot = 285;
							this.damage = 15;
							this.width = 8;
							this.height = 8;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.ammo = AmmoID.Bullet;
							this.knockBack = 3.6f;
							this.value = 40;
							this.ranged = true;
							this.rare = 3;
							return;
						}
						if (type == 1351)
						{
							this.shootSpeed = 4.7f;
							this.shoot = 286;
							this.damage = 10;
							this.width = 8;
							this.height = 8;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.ammo = AmmoID.Bullet;
							this.knockBack = 6.6f;
							this.value = 40;
							this.ranged = true;
							this.rare = 3;
							return;
						}
						if (type == 1352)
						{
							this.shootSpeed = 4.6f;
							this.shoot = 287;
							this.damage = 10;
							this.width = 8;
							this.height = 8;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.ammo = AmmoID.Bullet;
							this.knockBack = 3.6f;
							this.value = 40;
							this.ranged = true;
							this.rare = 3;
							return;
						}
						if (type == 1353)
						{
							this.UseSound = SoundID.Item3;
							this.useStyle = 9;
							this.useTurn = true;
							this.useAnimation = 17;
							this.useTime = 17;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.width = 14;
							this.height = 24;
							this.buffType = 73;
							this.buffTime = 72000;
							this.value = Item.sellPrice(0, 0, 5, 0);
							this.rare = 4;
							return;
						}
						if (type == 1354)
						{
							this.UseSound = SoundID.Item3;
							this.useStyle = 9;
							this.useTurn = true;
							this.useAnimation = 17;
							this.useTime = 17;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.width = 14;
							this.height = 24;
							this.buffType = 74;
							this.buffTime = 72000;
							this.value = Item.sellPrice(0, 0, 5, 0);
							this.rare = 4;
							return;
						}
						if (type == 1355)
						{
							this.UseSound = SoundID.Item3;
							this.useStyle = 9;
							this.useTurn = true;
							this.useAnimation = 17;
							this.useTime = 17;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.width = 14;
							this.height = 24;
							this.buffType = 75;
							this.buffTime = 72000;
							this.value = Item.sellPrice(0, 0, 5, 0);
							this.rare = 4;
							return;
						}
						if (type == 1356)
						{
							this.UseSound = SoundID.Item3;
							this.useStyle = 9;
							this.useTurn = true;
							this.useAnimation = 17;
							this.useTime = 17;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.width = 14;
							this.height = 24;
							this.buffType = 76;
							this.buffTime = 72000;
							this.value = Item.sellPrice(0, 0, 5, 0);
							this.rare = 4;
							return;
						}
						if (type == 1357)
						{
							this.UseSound = SoundID.Item3;
							this.useStyle = 9;
							this.useTurn = true;
							this.useAnimation = 17;
							this.useTime = 17;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.width = 14;
							this.height = 24;
							this.buffType = 77;
							this.buffTime = 72000;
							this.value = Item.sellPrice(0, 0, 5, 0);
							this.rare = 4;
							return;
						}
						if (type == 1358)
						{
							this.UseSound = SoundID.Item3;
							this.useStyle = 9;
							this.useTurn = true;
							this.useAnimation = 17;
							this.useTime = 17;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.width = 14;
							this.height = 24;
							this.buffType = 78;
							this.buffTime = 72000;
							this.value = Item.sellPrice(0, 0, 3, 0);
							this.rare = 4;
							return;
						}
						if (type == 1359)
						{
							this.UseSound = SoundID.Item3;
							this.useStyle = 9;
							this.useTurn = true;
							this.useAnimation = 17;
							this.useTime = 17;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.width = 14;
							this.height = 24;
							this.buffType = 79;
							this.buffTime = 72000;
							this.value = Item.sellPrice(0, 0, 5, 0);
							this.rare = 4;
							return;
						}
						if (type == 1360)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 1, 0, 0);
							this.placeStyle = 0;
							this.rare = 1;
							return;
						}
						if (type == 1361)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 1, 0, 0);
							this.placeStyle = 1;
							this.rare = 1;
							return;
						}
						if (type == 1362)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 1, 0, 0);
							this.placeStyle = 2;
							this.rare = 1;
							return;
						}
						if (type == 1363)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 1, 0, 0);
							this.placeStyle = 3;
							this.rare = 1;
							return;
						}
						if (type == 1364)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 1, 0, 0);
							this.placeStyle = 4;
							this.rare = 1;
							return;
						}
						if (type == 1365)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 1, 0, 0);
							this.placeStyle = 5;
							this.rare = 1;
							return;
						}
						if (type == 1366)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 1, 0, 0);
							this.placeStyle = 6;
							this.rare = 1;
							return;
						}
						if (type == 1367)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 1, 0, 0);
							this.placeStyle = 7;
							this.rare = 1;
							return;
						}
						if (type == 1368)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 1, 0, 0);
							this.placeStyle = 8;
							this.rare = 1;
							return;
						}
						if (type == 1369)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 1, 0, 0);
							this.placeStyle = 9;
							this.rare = 1;
							return;
						}
						if (type == 1370)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 1, 0, 0);
							this.placeStyle = 10;
							this.rare = 1;
							return;
						}
						if (type == 1371)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 1, 0, 0);
							this.placeStyle = 11;
							this.rare = 1;
							return;
						}
						if (type == 1372)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 12;
							return;
						}
						if (type == 1373)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 13;
							return;
						}
						if (type == 1374)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 14;
							return;
						}
						if (type == 1375)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 15;
							return;
						}
						if (type == 1376)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.placeStyle = 16;
							return;
						}
						if (type == 1377)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.placeStyle = 17;
							return;
						}
						if (type == 1378)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 100;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1379)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 101;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1380)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 102;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1381)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 103;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1382)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 104;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1383)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 105;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1384)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 19;
							this.placeStyle = 6;
							this.width = 8;
							this.height = 10;
							return;
						}
						if (type == 1385)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 19;
							this.placeStyle = 7;
							this.width = 8;
							this.height = 10;
							return;
						}
						if (type == 1386)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 19;
							this.placeStyle = 8;
							this.width = 8;
							this.height = 10;
							return;
						}
						if (type == 1387)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 19;
							this.placeStyle = 9;
							this.width = 8;
							this.height = 10;
							return;
						}
						if (type == 1388)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 19;
							this.placeStyle = 10;
							this.width = 8;
							this.height = 10;
							return;
						}
						if (type == 1389)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 19;
							this.placeStyle = 11;
							this.width = 8;
							this.height = 10;
							return;
						}
						if (type == 1390)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 42;
							this.width = 12;
							this.height = 28;
							this.value = Item.sellPrice(0, 0, 0, 30);
							this.placeStyle = 1;
							return;
						}
						if (type == 1391)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 42;
							this.width = 12;
							this.height = 28;
							this.value = Item.sellPrice(0, 0, 0, 30);
							this.placeStyle = 2;
							return;
						}
						if (type == 1392)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 42;
							this.width = 12;
							this.height = 28;
							this.value = Item.sellPrice(0, 0, 0, 30);
							this.placeStyle = 3;
							return;
						}
						if (type == 1393)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 42;
							this.width = 12;
							this.height = 28;
							this.value = Item.sellPrice(0, 0, 0, 30);
							this.placeStyle = 4;
							return;
						}
						if (type == 1394)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 42;
							this.width = 12;
							this.height = 28;
							this.value = Item.sellPrice(0, 0, 0, 30);
							this.placeStyle = 5;
							return;
						}
						if (type == 1395)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 42;
							this.width = 12;
							this.height = 28;
							this.value = Item.sellPrice(0, 0, 0, 30);
							this.placeStyle = 6;
							return;
						}
						if (type == 1396)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 15;
							this.placeStyle = 13;
							this.width = 12;
							this.height = 30;
							this.value = 150;
							return;
						}
						if (type == 1397)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 14;
							this.placeStyle = 10;
							this.width = 26;
							this.height = 20;
							this.value = 300;
							return;
						}
						if (type == 1398)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 18;
							this.placeStyle = 11;
							this.width = 28;
							this.height = 14;
							this.value = 150;
							return;
						}
						if (type == 1399)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 15;
							this.placeStyle = 14;
							this.width = 12;
							this.height = 30;
							this.value = 150;
							return;
						}
						if (type == 1400)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 14;
							this.placeStyle = 11;
							this.width = 26;
							this.height = 20;
							this.value = 300;
							return;
						}
						if (type == 1401)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 18;
							this.placeStyle = 12;
							this.width = 28;
							this.height = 14;
							this.value = 150;
							return;
						}
						if (type == 1402)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 15;
							this.placeStyle = 15;
							this.width = 12;
							this.height = 30;
							this.value = 150;
							return;
						}
						if (type == 1403)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 14;
							this.placeStyle = 12;
							this.width = 26;
							this.height = 20;
							this.value = 300;
							return;
						}
						if (type == 1404)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 18;
							this.placeStyle = 13;
							this.width = 28;
							this.height = 14;
							this.value = 150;
							return;
						}
						if (type == 1405)
						{
							this.noWet = true;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 33;
							this.width = 8;
							this.height = 18;
							this.value = Item.sellPrice(0, 0, 0, 60);
							this.placeStyle = 1;
							return;
						}
						if (type == 1406)
						{
							this.noWet = true;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 33;
							this.width = 8;
							this.height = 18;
							this.value = Item.sellPrice(0, 0, 0, 60);
							this.placeStyle = 2;
							return;
						}
						if (type == 1407)
						{
							this.noWet = true;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 33;
							this.width = 8;
							this.height = 18;
							this.value = Item.sellPrice(0, 0, 0, 60);
							this.placeStyle = 3;
							return;
						}
						if (type == 1408)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 105;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							this.placeStyle = 46;
							return;
						}
						if (type == 1409)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 105;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							this.placeStyle = 47;
							return;
						}
						if (type == 1410)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 105;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							this.placeStyle = 48;
							return;
						}
						if (type == 1411)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 10;
							this.placeStyle = 16;
							this.width = 14;
							this.height = 28;
							this.value = 200;
							return;
						}
						if (type == 1412)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 10;
							this.placeStyle = 17;
							this.width = 14;
							this.height = 28;
							this.value = 200;
							return;
						}
						if (type == 1413)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 10;
							this.placeStyle = 18;
							this.width = 14;
							this.height = 28;
							this.value = 200;
							return;
						}
						if (type == 1414)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 101;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							this.placeStyle = 1;
							return;
						}
						if (type == 1415)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 101;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							this.placeStyle = 2;
							return;
						}
						if (type == 1416)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 101;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							this.placeStyle = 3;
							return;
						}
						if (type == 1417)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 241;
							this.placeStyle = 0;
							this.width = 30;
							this.height = 30;
							return;
						}
						if (type == 1418)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 19;
							this.placeStyle = 12;
							this.width = 8;
							this.height = 10;
							return;
						}
						if (type == 1419)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 18;
							return;
						}
						if (type == 1420)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 19;
							return;
						}
						if (type == 1421)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 242;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 0;
							return;
						}
						if (type == 1422)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 242;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 1;
							return;
						}
						if (type == 1423)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 242;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 2;
							return;
						}
						if (type == 1424)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 242;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 3;
							return;
						}
						if (type == 1425)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 242;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 4;
							return;
						}
						if (type == 1426)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 242;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 5;
							return;
						}
						if (type == 1427)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 20;
							return;
						}
						if (type == 1428)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 21;
							return;
						}
						if (type == 1429)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 100;
							this.vanity = true;
							this.value = Item.buyPrice(0, 1, 0, 0);
							return;
						}
						if (type == 1430)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 243;
							this.width = 26;
							this.height = 20;
							this.value = Item.buyPrice(0, 7, 0, 0);
							this.rare = 2;
							return;
						}
						if (type == 1431)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 42;
							this.width = 12;
							this.height = 28;
							this.value = Item.sellPrice(0, 0, 5, 0);
							this.placeStyle = 7;
							return;
						}
						if (type == 1432)
						{
							this.width = 12;
							this.height = 20;
							this.maxStack = Item.CommonMaxStack;
							this.value = Item.buyPrice(0, 0, 0, 5);
							return;
						}
						if (type == 1433)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 242;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 6;
							return;
						}
						if (type == 1434)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 242;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 7;
							return;
						}
						if (type == 1435)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 242;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 8;
							return;
						}
						if (type == 1436)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 242;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 9;
							return;
						}
						if (type == 1437)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 242;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 10;
							return;
						}
						if (type == 1438)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 242;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 11;
							return;
						}
						if (type == 1439)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 242;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 12;
							return;
						}
						if (type == 1440)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 22;
							return;
						}
						if (type == 1441)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 23;
							return;
						}
						if (type == 1442)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 24;
							return;
						}
						if (type == 1443)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 25;
							return;
						}
						if (type == 1444)
						{
							this.mana = 7;
							this.UseSound = SoundID.Item72;
							this.useStyle = 5;
							this.damage = 80;
							this.useAnimation = 15;
							this.useTime = 15;
							this.autoReuse = true;
							this.width = 40;
							this.height = 40;
							this.shoot = 294;
							this.shootSpeed = 6f;
							this.knockBack = 3.25f;
							this.value = Item.sellPrice(0, 6, 0, 0);
							this.magic = true;
							this.rare = 8;
							this.noMelee = true;
							return;
						}
						if (type == 1445)
						{
							this.mana = 18;
							this.UseSound = SoundID.Item73;
							this.useStyle = 5;
							this.damage = 70;
							this.useAnimation = 30;
							this.useTime = 30;
							this.width = 40;
							this.height = 40;
							this.shoot = 295;
							this.shootSpeed = 8f;
							this.knockBack = 5f;
							this.value = Item.sellPrice(0, 6, 0, 0);
							this.magic = true;
							this.noMelee = true;
							this.rare = 8;
							return;
						}
						if (type == 1446)
						{
							this.mana = 15;
							this.UseSound = SoundID.Item43;
							this.useStyle = 5;
							this.damage = 65;
							this.autoReuse = true;
							this.useAnimation = 24;
							this.useTime = 24;
							this.width = 40;
							this.height = 40;
							this.shoot = 297;
							this.shootSpeed = 6f;
							this.knockBack = 6f;
							this.value = Item.sellPrice(0, 6, 0, 0);
							this.magic = true;
							this.noMelee = true;
							this.rare = 8;
							return;
						}
						if (type == 1447)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 106;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1448)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 107;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1449)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 244;
							this.width = 26;
							this.height = 20;
							this.value = Item.buyPrice(0, 4, 0, 0);
							this.rare = 1;
							return;
						}
						if (type == 1450)
						{
							this.useStyle = 1;
							this.autoReuse = true;
							this.useTurn = false;
							this.useAnimation = 25;
							this.useTime = 25;
							this.width = 24;
							this.height = 28;
							this.scale = 1f;
							this.value = Item.buyPrice(0, 5, 0, 0);
							this.noMelee = true;
							this.rare = 1;
							return;
						}
						if (type == 1451)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 91;
							this.placeStyle = 10;
							this.width = 10;
							this.height = 24;
							this.value = 1000;
							return;
						}
						if (type == 1452)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 91;
							this.placeStyle = 11;
							this.width = 10;
							this.height = 24;
							this.value = 1000;
							return;
						}
						if (type == 1453)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 91;
							this.placeStyle = 12;
							this.width = 10;
							this.height = 24;
							this.value = 1000;
							return;
						}
						if (type == 1454)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 91;
							this.placeStyle = 13;
							this.width = 10;
							this.height = 24;
							this.value = 1000;
							return;
						}
						if (type == 1455)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 91;
							this.placeStyle = 14;
							this.width = 10;
							this.height = 24;
							this.value = 1000;
							return;
						}
						if (type == 1456)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 91;
							this.placeStyle = 15;
							this.width = 10;
							this.height = 24;
							this.value = 1000;
							return;
						}
						if (type == 1457)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 19;
							this.placeStyle = 13;
							this.width = 8;
							this.height = 10;
							return;
						}
						if (type == 1458)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 10;
							this.placeStyle = 19;
							this.width = 14;
							this.height = 28;
							this.value = 200;
							return;
						}
						if (type == 1459)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 15;
							this.placeStyle = 16;
							this.width = 12;
							this.height = 30;
							this.value = 150;
							return;
						}
						if (type == 1460)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 14;
							this.placeStyle = 13;
							this.width = 26;
							this.height = 20;
							this.value = 300;
							return;
						}
						if (type == 1461)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 18;
							this.placeStyle = 14;
							this.width = 28;
							this.height = 14;
							this.value = 150;
							return;
						}
						if (type == 1462)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 105;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							this.placeStyle = 49;
							return;
						}
						if (type == 1463)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 101;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							this.placeStyle = 4;
							return;
						}
						if (type == 1464)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 91;
							this.placeStyle = 16;
							this.width = 10;
							this.height = 24;
							this.value = 1000;
							return;
						}
						if (type == 1465)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 91;
							this.placeStyle = 17;
							this.width = 10;
							this.height = 24;
							this.value = 1000;
							return;
						}
						if (type == 1466)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 91;
							this.placeStyle = 18;
							this.width = 10;
							this.height = 24;
							this.value = 1000;
							return;
						}
						if (type == 1467)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 91;
							this.placeStyle = 19;
							this.width = 10;
							this.height = 24;
							this.value = 1000;
							return;
						}
						if (type == 1468)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 91;
							this.placeStyle = 20;
							this.width = 10;
							this.height = 24;
							this.value = 1000;
							return;
						}
						if (type == 1469)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 91;
							this.placeStyle = 21;
							this.width = 10;
							this.height = 24;
							this.value = 1000;
							return;
						}
						if (type == 1470)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 79;
							this.placeStyle = 5;
							this.width = 28;
							this.height = 20;
							this.value = 2000;
							return;
						}
						if (type == 1471)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 79;
							this.placeStyle = 6;
							this.width = 28;
							this.height = 20;
							this.value = 2000;
							return;
						}
						if (type == 1472)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 79;
							this.placeStyle = 7;
							this.width = 28;
							this.height = 20;
							this.value = 2000;
							return;
						}
						if (type == 1473)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 79;
							this.placeStyle = 8;
							this.width = 28;
							this.height = 20;
							this.value = 2000;
							return;
						}
						if (type >= 1474 && type <= 1478)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 245;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = type - 1474;
							return;
						}
						if (type >= 1479 && type <= 1494)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 246;
							this.width = 30;
							this.height = 30;
							if (type >= 1481 && type <= 1494)
							{
								this.value = Item.buyPrice(0, 1, 0, 0);
							}
							else
							{
								this.value = Item.sellPrice(0, 0, 10, 0);
							}
							this.placeStyle = type - 1479;
							return;
						}
						if (type == 1495)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 245;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 5;
							return;
						}
						if (type >= 1496 && type <= 1499)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 26 + type - 1496;
							return;
						}
						if (type >= 1500 && type <= 1502)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 242;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 13 + type - 1500;
							return;
						}
						if (type == 1503)
						{
							this.width = 18;
							this.height = 18;
							this.defense = 6;
							this.headSlot = 101;
							this.rare = 8;
							this.value = 375000;
							return;
						}
						if (type == 1504)
						{
							this.width = 18;
							this.height = 18;
							this.defense = 14;
							this.bodySlot = 66;
							this.rare = 8;
							this.value = 300000;
							return;
						}
						if (type == 1505)
						{
							this.width = 18;
							this.height = 18;
							this.defense = 10;
							this.legSlot = 55;
							this.rare = 8;
							this.value = 225000;
							return;
						}
						if (type == 1506)
						{
							this.useStyle = 1;
							this.useAnimation = 24;
							this.useTime = 8;
							this.knockBack = 5.25f;
							this.useTurn = true;
							this.autoReuse = true;
							this.width = 20;
							this.height = 12;
							this.damage = 32;
							this.pick = 200;
							this.UseSound = SoundID.Item1;
							this.rare = 8;
							this.value = 216000;
							this.melee = true;
							this.scale = 1f;
							this.tileBoost += 3;
							return;
						}
						if (type == 1507)
						{
							this.useTurn = true;
							this.autoReuse = true;
							this.useStyle = 1;
							this.useAnimation = 28;
							this.useTime = 8;
							this.knockBack = 7f;
							this.width = 20;
							this.height = 12;
							this.damage = 60;
							this.axe = 30;
							this.hammer = 90;
							this.UseSound = SoundID.Item1;
							this.rare = 8;
							this.value = 216000;
							this.melee = true;
							this.scale = 1.05f;
							this.tileBoost += 3;
							return;
						}
						if (type == 1508)
						{
							this.maxStack = Item.CommonMaxStack;
							this.width = 16;
							this.height = 14;
							this.value = Item.sellPrice(0, 0, 50, 0);
							this.rare = 8;
							return;
						}
						if (type == 1509)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 15;
							this.placeStyle = 17;
							this.width = 12;
							this.height = 30;
							this.value = 150;
							return;
						}
						if (type == 1510)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 14;
							this.placeStyle = 14;
							this.width = 26;
							this.height = 20;
							this.value = 300;
							return;
						}
						if (type == 1511)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 18;
							this.placeStyle = 15;
							this.width = 28;
							this.height = 14;
							this.value = 150;
							return;
						}
						if (type == 1512)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 101;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							this.placeStyle = 5;
							return;
						}
						if (type == 1513)
						{
							this.noMelee = true;
							this.useStyle = 1;
							this.shootSpeed = 14f;
							this.shoot = 301;
							this.damage = 90;
							this.knockBack = 9f;
							this.width = 14;
							this.height = 28;
							this.UseSound = SoundID.Item1;
							this.useAnimation = 15;
							this.useTime = 15;
							this.noUseGraphic = true;
							this.rare = 8;
							this.value = Item.sellPrice(0, 10, 0, 0);
							this.melee = true;
							this.autoReuse = true;
							return;
						}
						if (type == 1514)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 102;
							this.rare = 1;
							this.value = Item.sellPrice(0, 1, 0, 0);
							this.vanity = true;
							return;
						}
						if (type == 1515)
						{
							this.width = 24;
							this.height = 8;
							this.accessory = true;
							this.value = 400000;
							this.rare = 5;
							this.wingSlot = 15;
							return;
						}
						if (type >= 1516 && type <= 1521)
						{
							this.maxStack = Item.CommonMaxStack;
							this.width = 16;
							this.height = 14;
							this.value = Item.sellPrice(0, 2, 50, 0);
							this.rare = 5;
							return;
						}
						if (type >= 1522 && type <= 1527)
						{
							this.width = 20;
							this.height = 20;
							this.rare = 1;
							return;
						}
						if (type >= 1528 && type <= 1532)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 21;
							this.placeStyle = 18 + type - 1528;
							this.width = 26;
							this.height = 22;
							this.value = 2500;
							return;
						}
						if (type >= 1533 && type <= 1537)
						{
							this.width = 14;
							this.height = 20;
							this.maxStack = Item.CommonMaxStack;
							this.rare = 8;
							return;
						}
						if (type >= 1538 && type <= 1540)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 30 + type - 1538;
							return;
						}
						if (type >= 1541 && type <= 1542)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 246;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 16 + type - 1541;
							return;
						}
						if (type >= 1543 && type <= 1545)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.width = 24;
							this.height = 24;
							this.value = Item.sellPrice(0, 6, 0, 0);
							this.tileBoost += 3;
							return;
						}
						if (type == 1546)
						{
							this.width = 18;
							this.height = 18;
							this.defense = 11;
							this.headSlot = 103;
							this.rare = 8;
							this.value = 375000;
							return;
						}
						if (type == 1547)
						{
							this.width = 18;
							this.height = 18;
							this.defense = 11;
							this.headSlot = 104;
							this.rare = 8;
							this.value = 375000;
							return;
						}
						if (type == 1548)
						{
							this.width = 18;
							this.height = 18;
							this.defense = 11;
							this.headSlot = 105;
							this.rare = 8;
							this.value = 375000;
							return;
						}
						if (type == 1549)
						{
							this.width = 18;
							this.height = 18;
							this.defense = 24;
							this.bodySlot = 67;
							this.rare = 8;
							this.value = 300000;
							return;
						}
						if (type == 1550)
						{
							this.width = 18;
							this.height = 18;
							this.defense = 16;
							this.legSlot = 56;
							this.rare = 8;
							this.value = 225000;
							return;
						}
						if (type == 1551)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 247;
							this.width = 26;
							this.height = 24;
							this.value = Item.buyPrice(1, 0, 0, 0);
							return;
						}
						if (type == 1552)
						{
							this.width = 20;
							this.height = 20;
							this.maxStack = Item.CommonMaxStack;
							this.rare = 7;
							this.value = Item.sellPrice(0, 1, 0, 0);
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.consumable = true;
							this.createTile = 239;
							this.placeStyle = 20;
							return;
						}
						if (type == 1553)
						{
							this.useStyle = 5;
							this.autoReuse = true;
							this.useAnimation = 5;
							this.useTime = 5;
							this.crit += 10;
							this.width = 60;
							this.height = 26;
							this.shoot = 10;
							this.useAmmo = AmmoID.Bullet;
							this.UseSound = SoundID.Item40;
							this.damage = 85;
							this.shootSpeed = 12f;
							this.noMelee = true;
							this.value = 750000;
							this.rare = 10;
							this.knockBack = 2.5f;
							this.ranged = true;
							return;
						}
						if (type == 1554)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.headSlot = 106;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1555)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.bodySlot = 68;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1556)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.legSlot = 57;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1557)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.headSlot = 107;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1558)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.bodySlot = 69;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1559)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.legSlot = 58;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1560)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.headSlot = 108;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1561)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.bodySlot = 70;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1562)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.legSlot = 59;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1563)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.headSlot = 109;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1564)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.bodySlot = 71;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1565)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.legSlot = 60;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1566)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.headSlot = 110;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1567)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.bodySlot = 72;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1568)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.legSlot = 61;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1569)
						{
							this.autoReuse = true;
							this.useStyle = 1;
							this.shootSpeed = 15f;
							this.shoot = 304;
							this.damage = 29;
							this.width = 18;
							this.height = 20;
							this.UseSound = SoundID.Item39;
							this.useAnimation = 16;
							this.useTime = 16;
							this.noUseGraphic = true;
							this.noMelee = true;
							this.value = Item.sellPrice(0, 20, 0, 0);
							this.knockBack = 2.75f;
							this.melee = true;
							this.rare = 8;
							return;
						}
						if (type == 1570)
						{
							this.width = 14;
							this.height = 18;
							this.maxStack = Item.CommonMaxStack;
							this.rare = 8;
							this.value = this.eclipsePrice;
							return;
						}
						if (type == 1571)
						{
							this.autoReuse = true;
							this.useStyle = 5;
							this.shootSpeed = 14f;
							this.shoot = 306;
							this.damage = 70;
							this.width = 18;
							this.height = 20;
							this.UseSound = SoundID.Item39;
							this.useAnimation = 20;
							this.useTime = 20;
							this.noUseGraphic = true;
							this.noMelee = true;
							this.value = Item.sellPrice(0, 20, 0, 0);
							this.knockBack = 5f;
							this.melee = true;
							this.rare = 8;
							return;
						}
						if (type == 1572)
						{
							this.useStyle = 1;
							this.shootSpeed = 14f;
							this.shoot = 308;
							this.damage = 100;
							this.width = 18;
							this.height = 20;
							this.UseSound = SoundID.Item1;
							this.useAnimation = 30;
							this.useTime = 30;
							this.noMelee = true;
							this.value = Item.sellPrice(0, 20, 0, 0);
							this.knockBack = 7.5f;
							this.rare = 8;
							this.summon = true;
							this.mana = 20;
							this.sentry = true;
							return;
						}
						if (type == 1573)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 242;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 16;
							return;
						}
						if (type >= 1574 && type <= 1576)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 240;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 33 + type - 1574;
							return;
						}
						if (type == 1577)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 245;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 6;
							return;
						}
						if (type == 1578)
						{
							this.width = 22;
							this.height = 22;
							this.accessory = true;
							this.rare = 3;
							this.value = 100000;
							this.neckSlot = 6;
							return;
						}
						if (type == 1579)
						{
							this.width = 28;
							this.height = 24;
							this.accessory = true;
							this.rare = 1;
							this.value = 50000;
							this.shoeSlot = 5;
							return;
						}
						if (type == 1580)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.headSlot = 111;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1581)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.bodySlot = 73;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1582)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.legSlot = 62;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1583)
						{
							this.width = 24;
							this.height = 8;
							this.accessory = true;
							this.rare = 9;
							this.wingSlot = 16;
							this.value = 400000;
							return;
						}
						if (type == 1584)
						{
							this.width = 24;
							this.height = 8;
							this.accessory = true;
							this.rare = 9;
							this.wingSlot = 17;
							this.value = 400000;
							return;
						}
						if (type == 1585)
						{
							this.width = 24;
							this.height = 8;
							this.accessory = true;
							this.rare = 9;
							this.wingSlot = 18;
							this.value = 400000;
							return;
						}
						if (type == 1586)
						{
							this.width = 24;
							this.height = 8;
							this.accessory = true;
							this.rare = 9;
							this.wingSlot = 19;
							this.value = 400000;
							return;
						}
						if (type == 1587)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.bodySlot = 74;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1588)
						{
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.legSlot = 63;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						}
						if (type == 1589)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 248;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1590)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 109;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1591)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 249;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1592)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 110;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1593)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 250;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1594)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 111;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1595)
						{
							this.width = 22;
							this.height = 22;
							this.accessory = true;
							this.rare = 2;
							this.value = 100000;
							this.handOffSlot = 3;
							this.handOnSlot = 8;
							return;
						}
						if (type >= 1596 && type <= 1610)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.consumable = true;
							this.createTile = 139;
							this.placeStyle = type - 1596 + 13;
							this.width = 24;
							this.height = 24;
							this.rare = 4;
							this.value = 100000;
							this.accessory = true;
							this.hasVanityEffects = true;
							return;
						}
						if (type == 1611)
						{
							this.maxStack = Item.CommonMaxStack;
							this.width = 16;
							this.height = 14;
							this.value = Item.sellPrice(0, 2, 50, 0);
							this.rare = 5;
							return;
						}
						if (type == 1612)
						{
							this.width = 16;
							this.height = 24;
							this.accessory = true;
							this.rare = 6;
							this.value = Item.sellPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1613)
						{
							this.width = 24;
							this.height = 28;
							this.rare = 7;
							this.value = Item.sellPrice(0, 5, 0, 0);
							this.accessory = true;
							this.defense = 4;
							this.shieldSlot = 4;
							return;
						}
						if (type == 1614)
						{
							this.shootSpeed = 6f;
							this.shoot = 310;
							this.damage = 1;
							this.width = 12;
							this.height = 12;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.ammo = AmmoID.Flare;
							this.knockBack = 1.5f;
							this.value = 7;
							this.ranged = true;
							return;
						}
						if (type >= 1615 && type <= 1701)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 91;
							this.placeStyle = 22 + type - 1615;
							this.width = 10;
							this.height = 24;
							this.value = 1000;
							this.rare = 1;
							return;
						}
						if (type == 1702)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 19;
							this.placeStyle = 14;
							this.width = 8;
							this.height = 10;
							return;
						}
						if (type >= 1703 && type <= 1708)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 15;
							this.placeStyle = 18 + type - 1703;
							this.width = 12;
							this.height = 30;
							this.value = 150;
							return;
						}
						if (type >= 1709 && type <= 1712)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 10;
							this.placeStyle = 20 + type - 1709;
							this.width = 14;
							this.height = 28;
							this.value = 200;
							return;
						}
						if (type >= 1713 && type <= 1718)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 14;
							this.placeStyle = 15 + type - 1713;
							this.width = 26;
							this.height = 20;
							this.value = 300;
							return;
						}
						if (type >= 1719 && type <= 1722)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 79;
							this.placeStyle = 9 + type - 1719;
							this.width = 28;
							this.height = 20;
							this.value = 2000;
							return;
						}
						if (type == 1723)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 78;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1724)
						{
							this.width = 16;
							this.height = 24;
							this.accessory = true;
							this.rare = 2;
							this.value = 50000;
							this.waistSlot = 14;
							return;
						}
						if (type == 1725)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 251;
							this.width = 8;
							this.height = 10;
							this.value = Item.sellPrice(0, 0, 0, 25);
							return;
						}
						if (type == 1726)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 113;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1727)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 252;
							this.width = 8;
							this.height = 10;
							return;
						}
						if (type == 1728)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 114;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1729)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 253;
							this.width = 8;
							this.height = 10;
							return;
						}
						if (type == 1730)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 115;
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1731)
						{
							this.width = 18;
							this.height = 18;
							this.defense = 2;
							this.headSlot = 112;
							return;
						}
						if (type == 1732)
						{
							this.width = 18;
							this.height = 18;
							this.defense = 3;
							this.bodySlot = 75;
							return;
						}
						if (type == 1733)
						{
							this.width = 18;
							this.height = 18;
							this.defense = 2;
							this.legSlot = 64;
							return;
						}
						if (type == 1734)
						{
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1735)
						{
							this.width = 12;
							this.height = 12;
							return;
						}
						if (type == 1736)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 113;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1737)
						{
							this.width = 18;
							this.height = 18;
							this.bodySlot = 76;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1738)
						{
							this.width = 18;
							this.height = 18;
							this.legSlot = 65;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1739)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 114;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1740)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 115;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1741)
						{
							this.width = 18;
							this.height = 18;
							this.bodySlot = 77;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1742)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 116;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1743)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 117;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1744)
						{
							this.width = 18;
							this.height = 18;
							this.bodySlot = 78;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1745)
						{
							this.width = 18;
							this.height = 18;
							this.legSlot = 66;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1746)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 118;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1747)
						{
							this.width = 18;
							this.height = 18;
							this.bodySlot = 79;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1748)
						{
							this.width = 18;
							this.height = 18;
							this.legSlot = 67;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1749)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 119;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1750)
						{
							this.width = 18;
							this.height = 18;
							this.bodySlot = 80;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1751)
						{
							this.width = 18;
							this.height = 18;
							this.legSlot = 68;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1752)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 120;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1753)
						{
							this.width = 18;
							this.height = 18;
							this.bodySlot = 81;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1754)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 121;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1755)
						{
							this.width = 18;
							this.height = 18;
							this.bodySlot = 82;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1756)
						{
							this.width = 18;
							this.height = 18;
							this.legSlot = 69;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1757)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 122;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1758)
						{
							this.width = 18;
							this.height = 18;
							this.bodySlot = 83;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1759)
						{
							this.width = 18;
							this.height = 18;
							this.legSlot = 70;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1760)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 123;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1761)
						{
							this.width = 18;
							this.height = 18;
							this.bodySlot = 84;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1762)
						{
							this.width = 18;
							this.height = 18;
							this.legSlot = 71;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1763)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 124;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1764)
						{
							this.width = 18;
							this.height = 18;
							this.bodySlot = 85;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1765)
						{
							this.width = 18;
							this.height = 18;
							this.legSlot = 72;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1766)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 125;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1767)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 126;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1768)
						{
							this.width = 18;
							this.height = 18;
							this.bodySlot = 86;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1769)
						{
							this.width = 18;
							this.height = 18;
							this.legSlot = 73;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1770)
						{
							this.width = 18;
							this.height = 18;
							this.bodySlot = 87;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1771)
						{
							this.width = 18;
							this.height = 18;
							this.legSlot = 74;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1772)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 127;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1773)
						{
							this.width = 18;
							this.height = 18;
							this.bodySlot = 88;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1774)
						{
							this.width = 12;
							this.height = 12;
							this.rare = 3;
							this.maxStack = Item.CommonMaxStack;
							this.value = Item.sellPrice(0, 1, 0, 0);
							return;
						}
						if (type == 1775)
						{
							this.width = 18;
							this.height = 18;
							this.bodySlot = 89;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1776)
						{
							this.width = 18;
							this.height = 18;
							this.legSlot = 75;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1777)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 128;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1778)
						{
							this.width = 18;
							this.height = 18;
							this.bodySlot = 90;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1779)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 129;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1780)
						{
							this.width = 18;
							this.height = 18;
							this.bodySlot = 91;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1781)
						{
							this.width = 18;
							this.height = 18;
							this.legSlot = 76;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1782)
						{
							this.useStyle = 5;
							this.autoReuse = true;
							this.useAnimation = 9;
							this.useTime = 9;
							this.crit += 6;
							this.width = 60;
							this.height = 26;
							this.shoot = 311;
							this.useAmmo = AmmoID.CandyCorn;
							this.UseSound = SoundID.Item11;
							this.damage = 44;
							this.shootSpeed = 10f;
							this.noMelee = true;
							this.value = Item.sellPrice(0, 10, 0, 0);
							this.rare = 8;
							this.knockBack = 2f;
							this.ranged = true;
							return;
						}
						if (type == 1783)
						{
							this.shootSpeed = 4f;
							this.shoot = 311;
							this.damage = 9;
							this.width = 8;
							this.height = 8;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.ammo = AmmoID.CandyCorn;
							this.knockBack = 1.5f;
							this.value = 5;
							this.ranged = true;
							return;
						}
						if (type == 1784)
						{
							this.useStyle = 5;
							this.autoReuse = true;
							this.useAnimation = 25;
							this.useTime = 25;
							this.crit += 6;
							this.width = 60;
							this.height = 26;
							this.shoot = 312;
							this.useAmmo = AmmoID.JackOLantern;
							this.UseSound = SoundID.Item11;
							this.damage = 65;
							this.shootSpeed = 7f;
							this.noMelee = true;
							this.value = Item.sellPrice(0, 10, 0, 0);
							this.rare = 8;
							this.knockBack = 5f;
							this.ranged = true;
							return;
						}
						if (type == 1785)
						{
							this.shootSpeed = 4f;
							this.shoot = 312;
							this.damage = 60;
							this.width = 8;
							this.height = 8;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.ammo = AmmoID.JackOLantern;
							this.knockBack = 3f;
							this.value = 15;
							this.ranged = true;
							return;
						}
						if (type == 1786)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useTime = 24;
							this.useAnimation = 24;
							this.autoReuse = true;
							this.width = 24;
							this.height = 28;
							this.damage = 9;
							this.UseSound = SoundID.Item1;
							this.knockBack = 2.25f;
							this.value = Item.buyPrice(0, 0, 60, 0);
							this.melee = true;
							return;
						}
						if (type == 1788)
						{
							this.width = 18;
							this.height = 18;
							this.headSlot = 130;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1789)
						{
							this.width = 18;
							this.height = 18;
							this.bodySlot = 92;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1790)
						{
							this.width = 18;
							this.height = 18;
							this.legSlot = 77;
							this.vanity = true;
							this.value = Item.buyPrice(0, 3, 0, 0);
							return;
						}
						if (type == 1791)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 96;
							this.placeStyle = 1;
							this.width = 20;
							this.height = 20;
							this.value = Item.buyPrice(0, 1, 50, 0);
							return;
						}
						if (type == 1792)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 15;
							this.placeStyle = 24;
							this.width = 12;
							this.height = 30;
							this.value = 150;
							return;
						}
						if (type == 1793)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 10;
							this.placeStyle = 24;
							this.width = 14;
							this.height = 28;
							this.value = 200;
							return;
						}
						if (type == 1794)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 14;
							this.placeStyle = 21;
							this.width = 26;
							this.height = 20;
							this.value = 300;
							return;
						}
						if (type == 1795)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 18;
							this.placeStyle = 16;
							this.width = 28;
							this.height = 14;
							this.value = 150;
							return;
						}
						if (type == 1796)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 19;
							this.placeStyle = 15;
							this.width = 8;
							this.height = 10;
							return;
						}
						if (type == 1797)
						{
							this.width = 24;
							this.height = 8;
							this.accessory = true;
							this.rare = 7;
							this.value = 400000;
							this.wingSlot = 20;
							return;
						}
						if (type == 1798)
						{
							this.damage = 0;
							this.useStyle = 1;
							this.shoot = 313;
							this.width = 16;
							this.height = 30;
							this.UseSound = SoundID.Item2;
							this.useAnimation = 20;
							this.useTime = 20;
							this.rare = 3;
							this.noMelee = true;
							this.buffType = 81;
							this.value = Item.sellPrice(0, 2, 0, 0);
							return;
						}
						if (type == 1799)
						{
							this.damage = 0;
							this.useStyle = 1;
							this.shoot = 314;
							this.width = 16;
							this.height = 30;
							this.UseSound = SoundID.Item2;
							this.useAnimation = 20;
							this.useTime = 20;
							this.rare = 3;
							this.noMelee = true;
							this.buffType = 82;
							this.value = Item.sellPrice(0, 2, 0, 0);
							return;
						}
						if (type == 1800)
						{
							this.noUseGraphic = true;
							this.damage = 0;
							this.knockBack = 7f;
							this.useStyle = 5;
							this.shootSpeed = 13.5f;
							this.shoot = 315;
							this.width = 18;
							this.height = 28;
							this.UseSound = SoundID.Item1;
							this.useAnimation = 20;
							this.useTime = 20;
							this.rare = 3;
							this.noMelee = true;
							this.value = Item.sellPrice(0, 1, 50, 0);
							return;
						}
						if (type == 1801)
						{
							this.useStyle = 5;
							this.autoReuse = true;
							this.useAnimation = 12;
							this.useTime = 12;
							this.mana = 6;
							this.width = 50;
							this.height = 18;
							this.shoot = 316;
							this.UseSound = SoundID.Item32;
							this.damage = 45;
							this.shootSpeed = 10f;
							this.noMelee = true;
							this.value = Item.sellPrice(0, 10, 0, 0);
							this.rare = 8;
							this.magic = true;
							this.knockBack = 3f;
							return;
						}
						if (type == 1802)
						{
							this.mana = 10;
							this.damage = 55;
							this.useStyle = 1;
							this.shootSpeed = 10f;
							this.shoot = 317;
							this.width = 26;
							this.height = 28;
							this.UseSound = SoundID.Item44;
							this.useAnimation = 28;
							this.useTime = 28;
							this.rare = 8;
							this.noMelee = true;
							this.knockBack = 3f;
							this.buffType = 83;
							this.value = Item.sellPrice(0, 10, 0, 0);
							this.summon = true;
							this.autoReuse = true;
							this.reuseDelay = 2;
							return;
						}
						if (type < 1803 || type > 1807)
						{
							if (type == 1808)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 42;
								this.width = 12;
								this.height = 28;
								this.placeStyle = 8;
								return;
							}
							if (type == 1809)
							{
								this.useStyle = 1;
								this.shootSpeed = 9f;
								this.shoot = 318;
								this.damage = 13;
								this.width = 18;
								this.height = 20;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.UseSound = SoundID.Item1;
								this.useAnimation = 19;
								this.useTime = 19;
								this.noUseGraphic = true;
								this.noMelee = true;
								this.ranged = true;
								this.knockBack = 6.5f;
								return;
							}
							if (type == 1810)
							{
								this.damage = 0;
								this.useStyle = 1;
								this.shoot = 319;
								this.width = 16;
								this.height = 30;
								this.UseSound = SoundID.Item2;
								this.useAnimation = 20;
								this.useTime = 20;
								this.rare = 3;
								this.noMelee = true;
								this.buffType = 84;
								this.value = Item.sellPrice(0, 2, 0, 0);
								return;
							}
							if (type == 1811)
							{
								this.maxStack = Item.CommonMaxStack;
								this.width = 16;
								this.height = 14;
								this.value = Item.sellPrice(0, 2, 50, 0);
								this.rare = 5;
								return;
							}
							if (type == 1812)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 34;
								this.placeStyle = 6;
								this.width = 26;
								this.height = 26;
								return;
							}
							if (type == 1813)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 35;
								this.width = 26;
								this.height = 26;
								return;
							}
							if (type == 1814)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 15;
								this.placeStyle = 25;
								this.width = 12;
								this.height = 30;
								this.value = 150;
								return;
							}
							if (type == 1815)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 10;
								this.placeStyle = 25;
								this.width = 14;
								this.height = 28;
								this.value = 200;
								return;
							}
							if (type == 1816)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 14;
								this.placeStyle = 22;
								this.width = 26;
								this.height = 20;
								this.value = 300;
								return;
							}
							if (type == 1817)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 18;
								this.placeStyle = 17;
								this.width = 28;
								this.height = 14;
								this.value = 150;
								return;
							}
							if (type == 1818)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 19;
								this.placeStyle = 16;
								this.width = 8;
								this.height = 10;
								return;
							}
							if (type == 1819)
							{
								this.width = 18;
								this.height = 18;
								this.headSlot = 131;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1820)
							{
								this.width = 18;
								this.height = 18;
								this.bodySlot = 93;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1821)
							{
								this.width = 18;
								this.height = 18;
								this.headSlot = 132;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1822)
							{
								this.width = 18;
								this.height = 18;
								this.bodySlot = 94;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1823)
							{
								this.width = 18;
								this.height = 18;
								this.legSlot = 78;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1824)
							{
								this.width = 18;
								this.height = 18;
								this.headSlot = 133;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1825)
							{
								this.noMelee = true;
								this.useStyle = 1;
								this.shootSpeed = 15f;
								this.shoot = 320;
								this.damage = 20;
								this.knockBack = 5f;
								this.width = 34;
								this.height = 34;
								this.UseSound = SoundID.Item1;
								this.useAnimation = 15;
								this.useTime = 15;
								this.noUseGraphic = true;
								this.rare = 2;
								this.value = 50000;
								this.melee = true;
								return;
							}
							if (type == 1826)
							{
								this.autoReuse = true;
								this.useStyle = 1;
								this.useAnimation = 26;
								this.useTime = 26;
								this.knockBack = 7.5f;
								this.width = 40;
								this.height = 40;
								this.damage = 150;
								this.scale = 1f;
								this.UseSound = SoundID.Item1;
								this.rare = 8;
								this.value = Item.sellPrice(0, 10, 0, 0);
								this.melee = true;
								this.shoot = 997;
								this.noMelee = true;
								this.shootsEveryUse = true;
								return;
							}
							if (type == 1827)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.autoReuse = true;
								this.useAnimation = 8;
								this.useTime = 8;
								this.width = 24;
								this.height = 28;
								this.damage = 14;
								this.knockBack = 4f;
								this.UseSound = SoundID.Item1;
								this.scale = 1f;
								this.melee = true;
								this.rare = 2;
								this.value = 50000;
								this.melee = true;
								return;
							}
							if (type == 1828)
							{
								this.autoReuse = true;
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 254;
								this.width = 8;
								this.height = 10;
								this.value = Item.buyPrice(0, 0, 2, 50);
								return;
							}
							if (type == 1829)
							{
								this.noUseGraphic = true;
								this.damage = 0;
								this.knockBack = 7f;
								this.useStyle = 5;
								this.shootSpeed = 15.5f;
								this.shoot = 322;
								this.width = 18;
								this.height = 28;
								this.UseSound = SoundID.Item1;
								this.useAnimation = 20;
								this.useTime = 20;
								this.rare = 7;
								this.noMelee = true;
								this.value = Item.sellPrice(0, 4, 0, 0);
								return;
							}
							if (type == 1830)
							{
								this.width = 24;
								this.height = 8;
								this.accessory = true;
								this.rare = 7;
								this.value = 400000;
								this.wingSlot = 21;
								return;
							}
							if (type == 1831)
							{
								this.maxStack = Item.CommonMaxStack;
								this.width = 16;
								this.height = 14;
								this.value = Item.sellPrice(0, 2, 50, 0);
								this.rare = 5;
								return;
							}
							if (type == 1832)
							{
								this.width = 18;
								this.height = 18;
								this.headSlot = 134;
								this.value = Item.sellPrice(0, 1, 0, 0);
								this.defense = 9;
								this.rare = 8;
								return;
							}
							if (type == 1833)
							{
								this.width = 18;
								this.height = 18;
								this.bodySlot = 95;
								this.value = Item.sellPrice(0, 1, 0, 0);
								this.defense = 11;
								this.rare = 8;
								return;
							}
							if (type == 1834)
							{
								this.width = 18;
								this.height = 18;
								this.legSlot = 79;
								this.value = Item.sellPrice(0, 1, 0, 0);
								this.defense = 10;
								this.rare = 8;
								return;
							}
							if (type == 1835)
							{
								this.useStyle = 5;
								this.autoReuse = true;
								this.useAnimation = 12;
								this.useTime = 12;
								this.crit += 10;
								this.width = 40;
								this.height = 26;
								this.shoot = 323;
								this.useAmmo = AmmoID.Stake;
								this.UseSound = SoundID.Item5;
								this.damage = 75;
								this.shootSpeed = 9f;
								this.noMelee = true;
								this.value = Item.sellPrice(0, 10, 0, 0);
								this.rare = 8;
								this.knockBack = 6.5f;
								this.ranged = true;
								return;
							}
							if (type == 1836)
							{
								this.shootSpeed = 3f;
								this.shoot = 323;
								this.damage = 25;
								this.width = 20;
								this.height = 14;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.ammo = AmmoID.Stake;
								this.knockBack = 4.5f;
								this.value = 15;
								this.ranged = true;
								return;
							}
							if (type == 1837)
							{
								this.useStyle = 1;
								this.shoot = 324;
								this.width = 16;
								this.height = 30;
								this.UseSound = SoundID.Item2;
								this.useAnimation = 20;
								this.useTime = 20;
								this.rare = 3;
								this.noMelee = true;
								this.buffType = 85;
								this.value = Item.sellPrice(0, 2, 0, 0);
								return;
							}
							if (type == 1838)
							{
								this.width = 18;
								this.height = 18;
								this.headSlot = 135;
								this.value = Item.buyPrice(0, 3, 0, 0);
								this.vanity = true;
								return;
							}
							if (type == 1839)
							{
								this.width = 18;
								this.height = 18;
								this.bodySlot = 96;
								this.value = Item.buyPrice(0, 3, 0, 0);
								this.vanity = true;
								return;
							}
							if (type == 1840)
							{
								this.width = 18;
								this.height = 18;
								this.legSlot = 80;
								this.value = Item.buyPrice(0, 3, 0, 0);
								this.vanity = true;
								return;
							}
							if (type == 1841)
							{
								this.width = 18;
								this.height = 18;
								this.headSlot = 136;
								this.value = Item.buyPrice(0, 3, 0, 0);
								this.vanity = true;
								return;
							}
							if (type == 1842)
							{
								this.width = 18;
								this.height = 18;
								this.bodySlot = 97;
								this.value = Item.buyPrice(0, 3, 0, 0);
								this.vanity = true;
								return;
							}
							if (type == 1843)
							{
								this.width = 18;
								this.height = 18;
								this.legSlot = 81;
								this.value = Item.buyPrice(0, 3, 0, 0);
								this.vanity = true;
								return;
							}
							if (type == 1844)
							{
								this.useStyle = 4;
								this.width = 22;
								this.height = 14;
								this.consumable = true;
								this.useAnimation = 45;
								this.useTime = 45;
								this.maxStack = Item.CommonMaxStack;
								this.rare = 8;
								return;
							}
							if (type == 1845)
							{
								this.rare = 8;
								this.width = 24;
								this.height = 28;
								this.accessory = true;
								this.value = Item.buyPrice(0, 20, 0, 0);
								return;
							}
							if (type >= 1846 && type <= 1850)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 242;
								this.width = 30;
								this.height = 30;
								this.value = Item.sellPrice(0, 0, 10, 0);
								this.placeStyle = 17 + type - 1846;
								return;
							}
							if (type == 1851)
							{
								this.width = 18;
								this.height = 18;
								this.bodySlot = 98;
								this.value = Item.buyPrice(0, 3, 0, 0);
								this.vanity = true;
								return;
							}
							if (type == 1852)
							{
								this.width = 18;
								this.height = 18;
								this.legSlot = 82;
								this.value = Item.buyPrice(0, 3, 0, 0);
								this.vanity = true;
								return;
							}
							if (type == 1853)
							{
								this.width = 18;
								this.height = 18;
								this.bodySlot = 99;
								this.value = Item.buyPrice(0, 3, 0, 0);
								this.vanity = true;
								return;
							}
							if (type == 1854)
							{
								this.width = 18;
								this.height = 18;
								this.legSlot = 83;
								this.value = Item.buyPrice(0, 3, 0, 0);
								this.vanity = true;
								return;
							}
							if (type == 1855 || type == 1856)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 240;
								this.width = 30;
								this.height = 30;
								this.value = Item.sellPrice(0, 1, 0, 0);
								this.rare = 1;
								this.placeStyle = 36 + type - 1855;
								return;
							}
							if (type == 1857)
							{
								this.width = 18;
								this.height = 18;
								this.headSlot = 137;
								this.value = Item.sellPrice(0, 5, 0, 0);
								this.vanity = true;
								this.rare = 3;
								return;
							}
							if (type == 1858)
							{
								this.width = 14;
								this.height = 28;
								this.rare = 7;
								this.value = 300000;
								this.accessory = true;
								return;
							}
							if (type == 1859)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 42;
								this.width = 12;
								this.height = 28;
								this.placeStyle = 9;
								this.value = 75000;
								this.rare = 2;
								return;
							}
							if (type == 1860)
							{
								this.width = 24;
								this.height = 28;
								this.rare = 5;
								this.value = 150000;
								this.accessory = true;
								this.faceSlot = 3;
								return;
							}
							if (type == 1861)
							{
								this.width = 24;
								this.height = 28;
								this.rare = 6;
								this.value = 250000;
								this.accessory = true;
								this.faceSlot = 2;
								return;
							}
							if (type == 1862)
							{
								this.width = 16;
								this.height = 24;
								this.accessory = true;
								this.rare = 7;
								this.value = 350000;
								this.shoeSlot = 9;
								return;
							}
							if (type == 1863)
							{
								this.width = 14;
								this.height = 28;
								this.rare = 4;
								this.value = 150000;
								this.accessory = true;
								this.balloonSlot = 5;
								return;
							}
							if (type == 1864)
							{
								this.rare = 8;
								this.width = 24;
								this.height = 28;
								this.accessory = true;
								this.value = Item.buyPrice(0, 25, 0, 0);
								return;
							}
							if (type == 1865)
							{
								this.width = 16;
								this.height = 24;
								this.accessory = true;
								this.rare = 7;
								this.value = 400000;
								return;
							}
							if (type == 1866)
							{
								this.width = 24;
								this.height = 8;
								this.accessory = true;
								this.value = 400000;
								this.rare = 5;
								this.wingSlot = 22;
								return;
							}
							if (type == 1867)
							{
								this.width = 12;
								this.height = 12;
								return;
							}
							if (type == 1868)
							{
								this.width = 12;
								this.height = 12;
								return;
							}
							if (type == 1869)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 36;
								this.width = 12;
								this.height = 28;
								this.rare = 1;
								return;
							}
							if (type == 1870)
							{
								this.useStyle = 5;
								this.autoReuse = true;
								this.useAnimation = 38;
								this.useTime = 38;
								this.width = 44;
								this.height = 14;
								this.shoot = 10;
								this.useAmmo = AmmoID.Bullet;
								this.UseSound = SoundID.Item11;
								this.damage = 20;
								this.shootSpeed = 8f;
								this.noMelee = true;
								this.value = 100000;
								this.knockBack = 3.75f;
								this.rare = 1;
								this.ranged = true;
								return;
							}
							if (type == 1871)
							{
								this.width = 24;
								this.height = 8;
								this.accessory = true;
								this.value = 400000;
								this.rare = 5;
								this.wingSlot = 23;
								return;
							}
							if (type == 1872)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 170;
								this.width = 12;
								this.height = 12;
								return;
							}
							if (type == 1873)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 171;
								this.width = 12;
								this.height = 12;
								this.value = Item.buyPrice(0, 0, 25, 0);
								return;
							}
							if (type >= 1874 && type <= 1905)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.width = 12;
								this.height = 12;
								this.noMelee = true;
								this.value = Item.buyPrice(0, 0, 5, 0);
								return;
							}
							if (type == 1906)
							{
								this.width = 18;
								this.height = 18;
								this.headSlot = 138;
								this.vanity = true;
								this.value = Item.buyPrice(0, 1, 0, 0);
								return;
							}
							if (type == 1907)
							{
								this.width = 18;
								this.height = 18;
								this.headSlot = 139;
								this.vanity = true;
								this.value = Item.buyPrice(0, 1, 0, 0);
								return;
							}
							if (type == 1908)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 246;
								this.width = 30;
								this.height = 30;
								this.value = Item.sellPrice(0, 0, 10, 0);
								this.placeStyle = 18;
								return;
							}
							if (type == 1909)
							{
								this.useStyle = 1;
								this.useTime = 27;
								this.useAnimation = 27;
								this.knockBack = 5.3f;
								this.width = 24;
								this.height = 28;
								this.damage = 19;
								this.scale = 1.1f;
								this.UseSound = SoundID.Item1;
								this.rare = 1;
								this.value = 13500;
								this.melee = true;
								return;
							}
							if (type == 1910)
							{
								this.useStyle = 5;
								this.autoReuse = true;
								this.useAnimation = 30;
								this.useTime = 6;
								this.width = 50;
								this.height = 18;
								this.shoot = 85;
								this.useAmmo = AmmoID.Gel;
								this.UseSound = SoundID.Item34;
								this.damage = 53;
								this.knockBack = 0.425f;
								this.shootSpeed = 8.5f;
								this.noMelee = true;
								this.value = 500000;
								this.rare = 8;
								this.ranged = true;
								return;
							}
							if (type == 1912)
							{
								this.UseSound = SoundID.Item3;
								this.healLife = 80;
								this.useStyle = 9;
								this.useTurn = true;
								this.useAnimation = 17;
								this.useTime = 17;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.width = 14;
								this.height = 24;
								this.potion = true;
								this.value = 40;
								this.rare = 1;
								return;
							}
							if (type == 1913)
							{
								this.useStyle = 1;
								this.shootSpeed = 12f;
								this.shoot = 330;
								this.damage = 14;
								this.width = 18;
								this.height = 20;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.UseSound = SoundID.Item1;
								this.useAnimation = 15;
								this.useTime = 15;
								this.noUseGraphic = true;
								this.noMelee = true;
								this.value = 25;
								this.ranged = true;
								return;
							}
							if (type == 1914)
							{
								this.useStyle = 1;
								this.width = 16;
								this.height = 30;
								this.UseSound = SoundID.Item25;
								this.useAnimation = 20;
								this.useTime = 20;
								this.rare = 8;
								this.noMelee = true;
								this.mountType = 0;
								this.value = Item.sellPrice(0, 5, 0, 0);
								return;
							}
							if (type == 1915)
							{
								this.noUseGraphic = true;
								this.damage = 0;
								this.knockBack = 7f;
								this.useStyle = 5;
								this.shootSpeed = 11.5f;
								this.shoot = 331;
								this.width = 18;
								this.height = 28;
								this.UseSound = SoundID.Item1;
								this.useAnimation = 20;
								this.useTime = 20;
								this.rare = 7;
								this.noMelee = true;
								this.value = Item.sellPrice(0, 2, 0, 0);
								return;
							}
							if (type == 1916)
							{
								this.noUseGraphic = true;
								this.damage = 0;
								this.knockBack = 7f;
								this.useStyle = 5;
								this.shootSpeed = 15.5f;
								this.shoot = 332;
								this.width = 18;
								this.height = 28;
								this.UseSound = SoundID.Item1;
								this.useAnimation = 20;
								this.useTime = 20;
								this.rare = 7;
								this.noMelee = true;
								this.value = Item.sellPrice(0, 4, 0, 0);
								return;
							}
							if (type == 1917)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 20;
								this.useTime = 16;
								this.autoReuse = true;
								this.width = 24;
								this.height = 28;
								this.damage = 7;
								this.pick = 55;
								this.UseSound = SoundID.Item1;
								this.knockBack = 2.5f;
								this.value = 10000;
								this.melee = true;
								return;
							}
							if (type == 1918)
							{
								this.noMelee = true;
								this.useStyle = 1;
								this.shootSpeed = 11f;
								this.shoot = 333;
								this.damage = 19;
								this.knockBack = 8f;
								this.width = 14;
								this.height = 28;
								this.UseSound = SoundID.Item1;
								this.useAnimation = 15;
								this.useTime = 15;
								this.noUseGraphic = true;
								this.rare = 1;
								this.value = 50000;
								this.melee = true;
								return;
							}
							if (type == 1921)
							{
								this.width = 16;
								this.height = 24;
								this.accessory = true;
								this.rare = 2;
								this.value = 50000;
								this.handOffSlot = 2;
								this.handOnSlot = 7;
								return;
							}
							if (type == 1922)
							{
								this.width = 16;
								this.height = 24;
								return;
							}
							if (type == 1923)
							{
								this.width = 16;
								this.height = 24;
								this.accessory = true;
								this.rare = 2;
								this.value = 50000;
								return;
							}
							if (type == 1924)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 10;
								this.placeStyle = 26;
								this.width = 14;
								this.height = 28;
								this.value = 200;
								return;
							}
							if (type == 1925)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 15;
								this.placeStyle = 26;
								this.width = 12;
								this.height = 30;
								this.value = 150;
								return;
							}
							if (type == 1926)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 14;
								this.placeStyle = 23;
								this.width = 26;
								this.height = 20;
								this.value = 300;
								return;
							}
							if (type == 1927)
							{
								this.useStyle = 1;
								this.shoot = 334;
								this.width = 16;
								this.height = 30;
								this.UseSound = SoundID.Item2;
								this.useAnimation = 20;
								this.useTime = 20;
								this.rare = 3;
								this.noMelee = true;
								this.value = 0;
								this.buffType = 91;
								return;
							}
							if (type == 1928)
							{
								this.useStyle = 1;
								this.autoReuse = true;
								this.useAnimation = 23;
								this.useTime = 23;
								this.knockBack = 7f;
								this.width = 40;
								this.height = 40;
								this.damage = 86;
								this.scale = 1.1f;
								this.shoot = 907;
								this.shootSpeed = 5f;
								this.UseSound = SoundID.Item1;
								this.rare = 8;
								this.value = Item.sellPrice(0, 10, 0, 0);
								this.melee = true;
								return;
							}
							if (type == 1929)
							{
								this.useStyle = 5;
								this.autoReuse = true;
								this.useAnimation = 4;
								this.useTime = 4;
								this.width = 50;
								this.height = 18;
								this.shoot = 10;
								this.useAmmo = AmmoID.Bullet;
								this.UseSound = SoundID.Item41;
								this.damage = 31;
								this.shootSpeed = 14f;
								this.noMelee = true;
								this.value = Item.buyPrice(0, 45, 0, 0);
								this.rare = 8;
								this.knockBack = 1.75f;
								this.ranged = true;
								return;
							}
							if (type == 1930)
							{
								this.autoReuse = true;
								this.mana = 5;
								this.UseSound = SoundID.Item39;
								this.useStyle = 5;
								this.damage = 48;
								this.useAnimation = 8;
								this.useTime = 8;
								this.width = 40;
								this.height = 40;
								this.shoot = 336;
								this.shootSpeed = 12f;
								this.knockBack = 3.25f;
								this.value = Item.buyPrice(0, 45, 0, 0);
								this.magic = true;
								this.rare = 8;
								this.noMelee = true;
								return;
							}
							if (type == 1931)
							{
								this.autoReuse = true;
								this.mana = 9;
								this.useStyle = 5;
								this.damage = 58;
								this.useAnimation = 10;
								this.useTime = 5;
								this.width = 40;
								this.height = 40;
								this.shoot = 337;
								this.shootSpeed = 10f;
								this.knockBack = 4.5f;
								this.value = Item.buyPrice(0, 45, 0, 0);
								this.magic = true;
								this.rare = 8;
								this.noMelee = true;
								return;
							}
							if (type == 1932)
							{
								this.width = 18;
								this.height = 18;
								this.headSlot = 140;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1933)
							{
								this.width = 18;
								this.height = 18;
								this.bodySlot = 100;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1934)
							{
								this.width = 18;
								this.height = 18;
								this.legSlot = 84;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1935)
							{
								this.width = 18;
								this.height = 18;
								this.headSlot = 142;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1936)
							{
								this.width = 18;
								this.height = 18;
								this.bodySlot = 102;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1937)
							{
								this.width = 18;
								this.height = 18;
								this.legSlot = 86;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1940)
							{
								this.width = 18;
								this.height = 18;
								this.headSlot = 141;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1941)
							{
								this.width = 18;
								this.height = 18;
								this.bodySlot = 101;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1942)
							{
								this.width = 18;
								this.height = 18;
								this.legSlot = 85;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1938)
							{
								this.width = 18;
								this.height = 18;
								this.headSlot = 143;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1939)
							{
								this.width = 18;
								this.height = 18;
								this.bodySlot = 103;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1943)
							{
								this.width = 18;
								this.height = 18;
								this.headSlot = 144;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1944)
							{
								this.width = 18;
								this.height = 18;
								this.bodySlot = 104;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1945)
							{
								this.width = 18;
								this.height = 18;
								this.legSlot = 87;
								this.vanity = true;
								this.value = Item.buyPrice(0, 3, 0, 0);
								return;
							}
							if (type == 1946)
							{
								this.useStyle = 5;
								this.autoReuse = true;
								this.useAnimation = 15;
								this.useTime = 15;
								this.useAmmo = AmmoID.Rocket;
								this.width = 50;
								this.height = 20;
								this.shoot = 338;
								this.UseSound = SoundID.Item11;
								this.damage = 67;
								this.shootSpeed = 15f;
								this.noMelee = true;
								this.value = Item.buyPrice(0, 45, 0, 0);
								this.knockBack = 4f;
								this.rare = 8;
								this.ranged = true;
								return;
							}
							if (type == 1947)
							{
								this.useStyle = 5;
								this.useAnimation = 30;
								this.useTime = 30;
								this.shootSpeed = 4.75f;
								this.knockBack = 6.7f;
								this.width = 40;
								this.height = 40;
								this.damage = 80;
								this.scale = 1.1f;
								this.UseSound = SoundID.Item1;
								this.shoot = 342;
								this.rare = 7;
								this.value = Item.buyPrice(0, 45, 0, 0);
								this.noMelee = true;
								this.noUseGraphic = true;
								this.melee = true;
								return;
							}
							if (type >= 1948 && type <= 1957)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 7;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createWall = 116 + type - 1948;
								this.width = 12;
								this.height = 12;
								this.value = Item.buyPrice(0, 0, 0, 75);
								return;
							}
							if (type == 1958)
							{
								this.useStyle = 4;
								this.width = 22;
								this.height = 14;
								this.consumable = true;
								this.useAnimation = 45;
								this.useTime = 45;
								this.maxStack = Item.CommonMaxStack;
								this.rare = 8;
								return;
							}
							if (type == 1959)
							{
								this.useStyle = 1;
								this.shoot = 353;
								this.width = 16;
								this.height = 30;
								this.UseSound = SoundID.Item2;
								this.useAnimation = 20;
								this.useTime = 20;
								this.rare = 3;
								this.noMelee = true;
								this.value = Item.sellPrice(0, 2, 0, 0);
								this.buffType = 92;
								return;
							}
							if (type == 1960 || type == 1961 || type == 1962)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 240;
								this.width = 30;
								this.height = 30;
								this.value = Item.sellPrice(0, 1, 0, 0);
								this.rare = 1;
								this.placeStyle = 38 + type - 1960;
								return;
							}
							if (type == 1963)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.consumable = true;
								this.createTile = 139;
								this.placeStyle = 28;
								this.width = 24;
								this.height = 24;
								this.rare = 4;
								this.value = 100000;
								this.accessory = true;
								this.hasVanityEffects = true;
								return;
							}
							if (type == 1964)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.consumable = true;
								this.createTile = 139;
								this.placeStyle = 29;
								this.width = 24;
								this.height = 24;
								this.rare = 4;
								this.value = 100000;
								this.accessory = true;
								this.hasVanityEffects = true;
								return;
							}
							if (type == 1965)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.consumable = true;
								this.createTile = 139;
								this.placeStyle = 30;
								this.width = 24;
								this.height = 24;
								this.rare = 4;
								this.value = 100000;
								this.accessory = true;
								this.hasVanityEffects = true;
								return;
							}
							if (type == 1966)
							{
								this.paint = 28;
								this.width = 24;
								this.height = 24;
								this.value = 25;
								this.maxStack = Item.CommonMaxStack;
								return;
							}
							if (type == 1967)
							{
								this.paint = 29;
								this.width = 24;
								this.height = 24;
								this.value = 50;
								this.maxStack = Item.CommonMaxStack;
								return;
							}
							if (type == 1968)
							{
								this.paint = 30;
								this.width = 24;
								this.height = 24;
								this.value = 75;
								this.maxStack = Item.CommonMaxStack;
								return;
							}
							if (type == 1969)
							{
								this.width = 20;
								this.height = 20;
								this.maxStack = Item.CommonMaxStack;
								this.value = 10000;
								this.rare = 1;
								return;
							}
							if (type >= 1970 && type <= 1976)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 262 + type - 1970;
								this.width = 12;
								this.height = 12;
								return;
							}
							if (type >= 1977 && type <= 1986)
							{
								this.width = 20;
								this.height = 26;
								this.maxStack = Item.CommonMaxStack;
								this.value = Item.buyPrice(0, 5, 0, 0);
								this.rare = 2;
								if (type == 1980)
								{
									this.value = Item.buyPrice(0, 10, 0, 0);
								}
								if (type == 1984)
								{
									this.value = Item.buyPrice(0, 7, 50, 0);
								}
								if (type == 1985)
								{
									this.value = Item.buyPrice(0, 15, 0, 0);
								}
								this.UseSound = SoundID.Item3;
								this.useStyle = 9;
								this.useTurn = true;
								this.useAnimation = 17;
								this.useTime = 17;
								this.consumable = true;
								return;
							}
							if (type == 1987)
							{
								this.width = 18;
								this.height = 12;
								this.maxStack = 1;
								this.value = Item.buyPrice(0, 40, 0, 0);
								this.rare = 5;
								this.accessory = true;
								this.vanity = true;
								this.hasVanityEffects = true;
								return;
							}
							if (type == 1988)
							{
								this.width = 20;
								this.height = 14;
								this.maxStack = 1;
								this.value = Item.buyPrice(0, 3, 50, 0);
								this.vanity = true;
								this.headSlot = 145;
								return;
							}
							if (type == 1989)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 269;
								this.width = 22;
								this.height = 32;
								this.createTile = 470;
								this.placeStyle = 2;
								return;
							}
							if (type == 1990)
							{
								this.width = 20;
								this.height = 26;
								this.maxStack = Item.CommonMaxStack;
								this.value = Item.buyPrice(0, 2, 0, 0);
								this.rare = 2;
								this.UseSound = SoundID.Item3;
								this.useStyle = 9;
								this.useTurn = true;
								this.hairDye = 0;
								this.useAnimation = 17;
								this.useTime = 17;
								this.consumable = true;
								return;
							}
							if (type == 1991)
							{
								this.useTurn = true;
								this.useStyle = 1;
								this.useTime = 25;
								this.useAnimation = 25;
								this.width = 24;
								this.height = 28;
								this.UseSound = SoundID.Item1;
								this.value = Item.buyPrice(0, 0, 25, 0);
								this.autoReuse = true;
								return;
							}
							if (type == 1992)
							{
								this.useStyle = 1;
								this.autoReuse = true;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.width = 12;
								this.height = 12;
								this.makeNPC = 355;
								this.noUseGraphic = true;
								this.bait = 20;
								return;
							}
							if (type == 1993)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 270;
								this.width = 12;
								this.height = 28;
								return;
							}
							if (type >= 1994 && type <= 2001)
							{
								this.useStyle = 1;
								this.autoReuse = true;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.width = 12;
								this.height = 12;
								this.makeNPC = 356;
								this.placeStyle = 1 + type - 1994;
								this.noUseGraphic = true;
								int num = type - 1994;
								if (num == 0)
								{
									this.bait = 5;
								}
								if (num == 4)
								{
									this.bait = 10;
								}
								if (num == 6)
								{
									this.bait = 15;
								}
								if (num == 3)
								{
									this.bait = 20;
								}
								if (num == 7)
								{
									this.bait = 25;
								}
								if (num == 2)
								{
									this.bait = 30;
								}
								if (num == 1)
								{
									this.bait = 35;
								}
								if (num == 5)
								{
									this.bait = 50;
								}
							}
						}
					}
				}
			}
		}

		// Token: 0x06000610 RID: 1552 RVA: 0x0028D7B8 File Offset: 0x0028B9B8
		public void SetDefaults3(int type)
		{
			if (type == 2002)
			{
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.makeNPC = 357;
				this.noUseGraphic = true;
				this.bait = 25;
				return;
			}
			if (type == 2003)
			{
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.makeNPC = 300;
				this.noUseGraphic = true;
				return;
			}
			if (type == 2004)
			{
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.makeNPC = 358;
				this.noUseGraphic = true;
				this.bait = 35;
				return;
			}
			if (type == 2005)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 271;
				this.width = 12;
				this.height = 28;
				return;
			}
			if (type == 2006)
			{
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.makeNPC = 359;
				this.noUseGraphic = true;
				this.bait = 10;
				return;
			}
			if (type == 2007)
			{
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.makeNPC = 360;
				this.noUseGraphic = true;
				this.bait = 15;
				return;
			}
			if (type >= 2008 && type <= 2014)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 126 + type - 2008;
				this.width = 12;
				this.height = 12;
				this.value = Item.buyPrice(0, 0, 0, 75);
				return;
			}
			if (type >= 2015 && type <= 2019)
			{
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.noUseGraphic = true;
				if (type == 2015)
				{
					this.makeNPC = 74;
				}
				if (type == 2016)
				{
					this.makeNPC = 297;
				}
				if (type == 2017)
				{
					this.makeNPC = 298;
				}
				if (type == 2018)
				{
					this.makeNPC = 299;
				}
				if (type == 2019)
				{
					this.makeNPC = 46;
					return;
				}
			}
			else
			{
				if (type == 2020)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 6;
					return;
				}
				if (type == 2021)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 7;
					return;
				}
				if (type == 2022)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 8;
					return;
				}
				if (type == 2023)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 9;
					return;
				}
				if (type == 2024)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 10;
					return;
				}
				if (type == 2025)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 11;
					return;
				}
				if (type == 2026)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 12;
					return;
				}
				if (type == 2027)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 13;
					return;
				}
				if (type == 2028)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 14;
					return;
				}
				if (type == 2029)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 15;
					return;
				}
				if (type == 2030)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 16;
					return;
				}
				if (type == 2031)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 17;
					return;
				}
				if (type == 2032)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 10;
					this.value = 150;
					return;
				}
				if (type == 2033)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 11;
					this.value = 150;
					return;
				}
				if (type == 2034)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 12;
					this.value = 150;
					return;
				}
				if (type == 2035)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 13;
					this.value = 150;
					return;
				}
				if (type == 2036)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 14;
					this.value = 150;
					return;
				}
				if (type == 2037)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 15;
					this.value = 150;
					return;
				}
				if (type == 2038)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 16;
					this.value = 150;
					return;
				}
				if (type == 2039)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 17;
					this.value = 150;
					return;
				}
				if (type == 2040)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 18;
					this.value = 150;
					return;
				}
				if (type == 2041)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 19;
					this.value = 150;
					return;
				}
				if (type == 2042)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 20;
					this.value = 150;
					return;
				}
				if (type == 2043)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 21;
					this.value = 150;
					return;
				}
				if (type == 2044)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 10;
					this.placeStyle = 27;
					this.width = 14;
					this.height = 28;
					this.value = 200;
					return;
				}
				if (type >= 2045 && type <= 2054)
				{
					this.noWet = true;
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 33;
					this.width = 8;
					this.height = 18;
					this.value = Item.sellPrice(0, 0, 0, 60);
					this.placeStyle = 4 + type - 2045;
					return;
				}
				if (type >= 2055 && type <= 2065)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 34;
					this.placeStyle = 7 + type - 2055;
					this.width = 26;
					this.height = 26;
					this.value = 3000;
					return;
				}
				if (type >= 2066 && type <= 2071)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.autoReuse = true;
					this.createTile = 79;
					this.placeStyle = 13 + type - 2066;
					this.width = 28;
					this.height = 20;
					this.value = 2000;
					return;
				}
				if (type >= 2072 && type <= 2081)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 90;
					this.placeStyle = type + 1 - 2072;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					return;
				}
				if (type >= 2082 && type <= 2091)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 93;
					this.placeStyle = type + 1 - 2082;
					this.width = 10;
					this.height = 24;
					this.value = 500;
					return;
				}
				if (type >= 2092 && type <= 2103)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 100;
					this.placeStyle = type + 1 - 2092;
					this.width = 20;
					this.height = 20;
					this.value = 1500;
					return;
				}
				if (type >= 2104 && type <= 2113)
				{
					this.width = 28;
					this.height = 20;
					this.headSlot = type + 146 - 2104;
					this.rare = 1;
					this.value = Item.sellPrice(0, 0, 75, 0);
					this.vanity = true;
					return;
				}
				if (type >= 2114 && type <= 2118)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 240;
					this.width = 30;
					this.height = 30;
					this.value = Item.sellPrice(0, 0, 5, 0);
					this.placeStyle = 41 + type - 2114;
					this.maxStack = Item.CommonMaxStack;
					return;
				}
				if (type == 2119)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 273;
					this.width = 12;
					this.height = 12;
					return;
				}
				if (type == 2120)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 274;
					this.width = 12;
					this.height = 12;
					return;
				}
				if (type == 2121)
				{
					this.useStyle = 1;
					this.autoReuse = true;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.width = 12;
					this.height = 12;
					this.makeNPC = 361;
					this.noUseGraphic = true;
					return;
				}
				if (type == 2122)
				{
					this.useStyle = 1;
					this.autoReuse = true;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.width = 12;
					this.height = 12;
					this.makeNPC = 362;
					this.noUseGraphic = true;
					return;
				}
				if (type == 2123)
				{
					this.useStyle = 1;
					this.autoReuse = true;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.width = 12;
					this.height = 12;
					this.makeNPC = 364;
					this.noUseGraphic = true;
					return;
				}
				if (type >= 2124 && type <= 2128)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 90;
					this.placeStyle = type + 11 - 2124;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					return;
				}
				if (type >= 2129 && type <= 2134)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 93;
					this.placeStyle = type + 11 - 2129;
					this.width = 10;
					this.height = 24;
					this.value = 500;
					return;
				}
				if (type >= 2135 && type <= 2138)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 18 + type - 2135;
					return;
				}
				if (type == 2139)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.autoReuse = true;
					this.createTile = 79;
					this.placeStyle = 19;
					this.width = 28;
					this.height = 20;
					this.value = 2000;
					return;
				}
				if (type == 2140)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.autoReuse = true;
					this.createTile = 79;
					this.placeStyle = 20;
					this.width = 28;
					this.height = 20;
					this.value = 2000;
					return;
				}
				if (type >= 2141 && type <= 2144)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 34;
					this.placeStyle = 18 + type - 2141;
					this.width = 26;
					this.height = 26;
					this.value = 3000;
					return;
				}
				if (type >= 2145 && type <= 2148)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 22 + type - 2145;
					this.value = 150;
					return;
				}
				if (type >= 2149 && type <= 2152)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 100;
					this.placeStyle = type + 13 - 2149;
					this.width = 20;
					this.height = 20;
					this.value = 1500;
					return;
				}
				if (type >= 2153 && type <= 2155)
				{
					this.noWet = true;
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 33;
					this.width = 8;
					this.height = 18;
					this.value = Item.sellPrice(0, 0, 0, 60);
					this.placeStyle = 14 + type - 2153;
					return;
				}
				if (type == 2156)
				{
					this.useStyle = 1;
					this.autoReuse = true;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.width = 12;
					this.height = 12;
					this.makeNPC = 366;
					this.noUseGraphic = true;
					this.bait = 15;
					return;
				}
				if (type == 2157)
				{
					this.useStyle = 1;
					this.autoReuse = true;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.width = 12;
					this.height = 12;
					this.makeNPC = 367;
					this.noUseGraphic = true;
					this.bait = 10;
					return;
				}
				if (type >= 2158 && type <= 2160)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 7;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createWall = 133 + type - 2158;
					this.width = 12;
					this.height = 12;
					this.value = Item.buyPrice(0, 0, 0, 75);
					return;
				}
				if (type == 2161)
				{
					this.width = 18;
					this.height = 18;
					this.maxStack = Item.CommonMaxStack;
					this.value = 50000;
					this.rare = 5;
					return;
				}
				if (type >= 2162 && type <= 2168)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 275 + type - 2162;
					this.width = 12;
					this.height = 12;
					return;
				}
				if (type == 2169)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 7;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createWall = 136;
					this.width = 12;
					this.height = 12;
					return;
				}
				if (type == 2170)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 7;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createWall = 137;
					this.width = 12;
					this.height = 12;
					return;
				}
				if (type == 2171)
				{
					this.autoReuse = true;
					this.useTurn = true;
					this.useStyle = 1;
					this.useAnimation = 15;
					this.useTime = 10;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 199;
					this.width = 14;
					this.height = 14;
					this.value = 500;
					return;
				}
				if (type == 2172)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 283;
					this.width = 28;
					this.height = 14;
					this.value = 500;
					return;
				}
				if (type == 2173)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 284;
					this.width = 12;
					this.height = 12;
					return;
				}
				if (type >= 2174 && type <= 2175)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 285 + type - 2174;
					this.width = 12;
					this.height = 12;
					return;
				}
				if (type == 2176)
				{
					this.useStyle = 1;
					this.useAnimation = 12;
					this.useTime = 4;
					this.knockBack = 6f;
					this.useTurn = true;
					this.autoReuse = true;
					this.width = 20;
					this.height = 12;
					this.damage = 45;
					this.pick = 200;
					this.axe = 25;
					this.UseSound = SoundID.Item1;
					this.rare = 8;
					this.value = Item.sellPrice(0, 4, 0, 0);
					this.melee = true;
					this.tileBoost--;
					return;
				}
				if (type == 2177)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 287;
					this.width = 22;
					this.height = 22;
					this.value = Item.buyPrice(0, 10, 0, 0);
					this.rare = 6;
					return;
				}
				if (type >= 2178 && type <= 2187)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 288 + type - 2178;
					this.width = 12;
					this.height = 12;
					return;
				}
				if (type == 2189)
				{
					this.width = 18;
					this.height = 18;
					this.defense = 18;
					this.headSlot = 156;
					this.rare = 8;
					this.value = 375000;
					return;
				}
				if (type == 2188)
				{
					this.mana = 25;
					this.UseSound = SoundID.Item43;
					this.useStyle = 5;
					this.damage = 44;
					this.useAnimation = 30;
					this.useTime = 30;
					this.width = 40;
					this.height = 40;
					this.shoot = 355;
					this.shootSpeed = 14f;
					this.knockBack = 7f;
					this.magic = true;
					this.autoReuse = true;
					this.rare = 7;
					this.noMelee = true;
					this.value = Item.sellPrice(0, 7, 0, 0);
					return;
				}
				if (type >= 2190 && type <= 2191)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 298 + type - 2190;
					this.width = 12;
					this.height = 12;
					return;
				}
				if ((type >= 2192 && type <= 2198) || type == 2203 || type == 2204)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					if (type == 2203)
					{
						this.createTile = 307;
					}
					else if (type == 2204)
					{
						this.createTile = 308;
					}
					else
					{
						this.createTile = 300 + type - 2192;
					}
					this.width = 12;
					this.height = 12;
					this.value = Item.buyPrice(0, 10, 0, 0);
					if (type == 2194)
					{
						this.value = Item.buyPrice(0, 2, 70, 0);
						return;
					}
				}
				else
				{
					if (type == 2199)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 23;
						this.headSlot = 157;
						this.rare = 8;
						this.value = 300000;
						return;
					}
					if (type == 2200)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 20;
						this.bodySlot = 105;
						this.rare = 8;
						this.value = 240000;
						return;
					}
					if (type == 2201)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 32;
						this.bodySlot = 106;
						this.rare = 8;
						this.value = 240000;
						return;
					}
					if (type == 2202)
					{
						this.width = 18;
						this.height = 18;
						this.defense = 18;
						this.legSlot = 98;
						this.rare = 8;
						this.value = 180000;
						return;
					}
					if (type == 2205)
					{
						this.useStyle = 1;
						this.autoReuse = true;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 12;
						this.height = 12;
						this.makeNPC = 148;
						this.noUseGraphic = true;
						return;
					}
					if (type == 2206 || type == 2207)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 309 + type - 2206;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 2208)
					{
						this.width = 18;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						return;
					}
					if (type == 2209)
					{
						this.UseSound = SoundID.Item3;
						this.healMana = 300;
						this.useStyle = 9;
						this.useTurn = true;
						this.useAnimation = 17;
						this.useTime = 17;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 14;
						this.height = 24;
						this.rare = 4;
						this.value = 1500;
						return;
					}
					if (type >= 2210 && type <= 2213)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 7;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createWall = 138 + type - 2210;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type >= 2214 && type <= 2217)
					{
						this.width = 30;
						this.height = 30;
						this.accessory = true;
						this.rare = 3;
						this.value = Item.buyPrice(0, 10, 0, 0);
						return;
					}
					if (type == 2218)
					{
						this.width = 14;
						this.height = 18;
						this.maxStack = Item.CommonMaxStack;
						this.rare = 8;
						this.value = Item.sellPrice(0, 0, 50, 0);
						return;
					}
					if (type == 2219)
					{
						this.width = 24;
						this.height = 24;
						this.accessory = true;
						this.value = Item.buyPrice(0, 15, 0, 0);
						this.rare = 4;
						return;
					}
					if (type == 2220)
					{
						this.width = 24;
						this.height = 24;
						this.accessory = true;
						this.value = Item.buyPrice(0, 16, 0, 0);
						this.rare = 5;
						return;
					}
					if (type == 2221)
					{
						this.width = 24;
						this.height = 24;
						this.accessory = true;
						this.rare = 5;
						this.value = Item.buyPrice(0, 16, 0, 0);
						this.handOffSlot = 10;
						this.handOnSlot = 17;
						return;
					}
					if (type == 2222)
					{
						this.width = 18;
						this.height = 18;
						this.headSlot = 158;
						this.vanity = true;
						this.value = Item.sellPrice(0, 0, 25, 0);
						return;
					}
					if (type == 2223)
					{
						this.autoReuse = true;
						this.useStyle = 5;
						this.useAnimation = 20;
						this.useTime = 20;
						this.width = 50;
						this.height = 18;
						this.shoot = 10;
						this.useAmmo = AmmoID.Arrow;
						this.UseSound = SoundID.Item75;
						this.crit = 7;
						this.damage = 80;
						this.knockBack = 3f;
						this.shootSpeed = 7.75f;
						this.noMelee = true;
						this.value = Item.buyPrice(0, 45, 0, 0);
						this.rare = 8;
						this.ranged = true;
						return;
					}
					if (type == 2224)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 34;
						this.placeStyle = 22;
						this.width = 26;
						this.height = 26;
						this.value = 160;
						return;
					}
					if (type == 2225)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 93;
						this.placeStyle = 17;
						this.width = 10;
						this.height = 24;
						this.value = 120;
						return;
					}
					if (type == 2226)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 42;
						this.width = 12;
						this.height = 28;
						this.placeStyle = 26;
						this.value = 200;
						return;
					}
					if (type == 2227)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 100;
						this.placeStyle = 17;
						this.width = 20;
						this.height = 20;
						this.value = 120;
						return;
					}
					if (type == 2228)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 15;
						this.placeStyle = 27;
						this.width = 12;
						this.height = 30;
						this.value = 150;
						return;
					}
					if (type == 2229)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 18;
						this.placeStyle = 18;
						this.width = 28;
						this.height = 14;
						this.value = 150;
						return;
					}
					if (type == 2230)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 21;
						this.placeStyle = 28;
						this.width = 26;
						this.height = 22;
						this.value = 320;
						return;
					}
					if (type == 2231)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.autoReuse = true;
						this.createTile = 79;
						this.placeStyle = 21;
						this.width = 28;
						this.height = 20;
						this.value = 600;
						return;
					}
					if (type == 2232)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 90;
						this.placeStyle = 16;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						return;
					}
					if (type == 2233)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 101;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						this.placeStyle = 22;
						return;
					}
					if (type == 2234)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 13;
						this.placeStyle = 5;
						this.width = 16;
						this.height = 24;
						this.value = 20;
						return;
					}
					if (type == 2235)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 103;
						this.placeStyle = 1;
						this.width = 16;
						this.height = 24;
						this.value = 20;
						return;
					}
					if (type == 2236)
					{
						this.noWet = true;
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 33;
						this.width = 8;
						this.height = 18;
						this.value = Item.sellPrice(0, 0, 0, 60);
						this.placeStyle = 17;
						return;
					}
					if (type >= 2237 && type <= 2241)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 104;
						this.placeStyle = 1 + type - 2237;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						return;
					}
					if (type == 2242 || type == 2243)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 103;
						this.placeStyle = 2 + type - 2242;
						this.width = 16;
						this.height = 24;
						this.value = 20;
						if (type == 2242)
						{
							this.value = Item.buyPrice(0, 0, 20, 0);
							return;
						}
					}
					else
					{
						if (type == 2244)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 13;
							this.placeStyle = 6;
							this.width = 16;
							this.height = 24;
							this.value = 20;
							return;
						}
						if (type >= 2245 && type <= 2247)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 87;
							this.placeStyle = 5 + type - 2245;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							return;
						}
						if (type == 2248)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 14;
							this.placeStyle = 24;
							this.width = 26;
							this.height = 20;
							this.value = 300;
							return;
						}
						if (type == 2249 || type == 2250)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 21;
							this.placeStyle = 29 + type - 2249;
							this.width = 26;
							this.height = 22;
							this.value = 2500;
							return;
						}
						if (type >= 2251 && type <= 2253)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 18;
							this.placeStyle = 19 + type - 2251;
							this.width = 28;
							this.height = 14;
							this.value = 150;
							return;
						}
						if (type >= 2254 && type <= 2256)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 87;
							this.placeStyle = 8 + type - 2254;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							return;
						}
						if (type == 2257 || type == 2258)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 13;
							this.placeStyle = 7 + type - 2257;
							this.width = 16;
							this.height = 24;
							this.value = 20;
							if (type == 2258)
							{
								this.value = Item.buyPrice(0, 0, 50, 0);
								return;
							}
						}
						else
						{
							if (type == 2259)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 14;
								this.placeStyle = 25;
								this.width = 26;
								this.height = 20;
								this.value = 300;
								return;
							}
							if (type >= 2260 && type <= 2262)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 311 + type - 2260;
								this.width = 12;
								this.height = 12;
								this.value = Item.buyPrice(0, 0, 0, 50);
								return;
							}
							if (type >= 2263 && type <= 2264)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 7;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createWall = 142 + type - 2263;
								this.width = 12;
								this.height = 12;
								return;
							}
							if (type == 2265)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 10;
								this.placeStyle = 28;
								this.width = 14;
								this.height = 28;
								this.value = 200;
								return;
							}
							if (type == 2266)
							{
								this.UseSound = SoundID.Item3;
								this.useStyle = 9;
								this.useTurn = true;
								this.useAnimation = 17;
								this.useTime = 17;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.width = 10;
								this.height = 10;
								this.buffType = 25;
								this.buffTime = 14400;
								this.rare = 1;
								this.value = Item.buyPrice(0, 0, 5, 0);
								return;
							}
							if (type == 2269)
							{
								this.autoReuse = false;
								this.useStyle = 5;
								this.useAnimation = 22;
								this.useTime = 22;
								this.width = 24;
								this.height = 24;
								this.shoot = 14;
								this.knockBack = 4f;
								this.useAmmo = AmmoID.Bullet;
								this.UseSound = SoundID.Item41;
								this.damage = 20;
								this.shootSpeed = 16f;
								this.noMelee = true;
								this.value = Item.buyPrice(0, 10, 0, 0);
								this.scale = 0.85f;
								this.rare = 2;
								this.ranged = true;
								this.crit = 5;
								return;
							}
							if (type == 2270)
							{
								this.useStyle = 5;
								this.autoReuse = true;
								this.useAnimation = 7;
								this.useTime = 7;
								this.width = 50;
								this.height = 18;
								this.shoot = 10;
								this.useAmmo = AmmoID.Bullet;
								this.UseSound = SoundID.Item41;
								this.damage = 21;
								this.shootSpeed = 8f;
								this.noMelee = true;
								this.value = Item.buyPrice(0, 35, 0, 0);
								this.knockBack = 1.5f;
								this.rare = 4;
								this.ranged = true;
								return;
							}
							if (type == 2271)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 7;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createWall = 144;
								this.width = 12;
								this.height = 12;
								this.value = Item.buyPrice(0, 0, 2, 50);
								return;
							}
							if (type == 2272)
							{
								this.useStyle = 5;
								this.useAnimation = 20;
								this.useTime = 20;
								this.width = 38;
								this.height = 10;
								this.damage = 0;
								this.scale = 0.9f;
								this.shoot = 358;
								this.shootSpeed = 11f;
								this.value = Item.buyPrice(0, 1, 50, 0);
								return;
							}
							if (type == 2273)
							{
								this.autoReuse = true;
								this.useTurn = true;
								this.useStyle = 1;
								this.useAnimation = 20;
								this.knockBack = 3.5f;
								this.width = 34;
								this.height = 34;
								this.damage = 18;
								this.crit = 15;
								this.scale = 1f;
								this.UseSound = SoundID.Item1;
								this.rare = 1;
								this.value = Item.buyPrice(0, 10, 0, 0);
								this.melee = true;
								if (this.Variant == ItemVariants.StrongerVariant)
								{
									this.rare = 8;
									this.value = Item.buyPrice(0, 20, 0, 0);
									this.damage = 150;
									this.useAnimation = 15;
									this.crit = 29;
									return;
								}
							}
							else
							{
								if (type == 2274)
								{
									this.flame = true;
									this.noWet = true;
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.holdStyle = 1;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 4;
									this.placeStyle = 12;
									this.width = 10;
									this.height = 12;
									this.value = Item.buyPrice(0, 0, 3, 0);
									return;
								}
								if (type == 2275)
								{
									this.width = 18;
									this.height = 18;
									this.headSlot = 159;
									this.value = Item.buyPrice(0, 3, 0, 0);
									this.defense = 2;
									this.rare = 2;
									return;
								}
								if (type == 2276)
								{
									this.width = 24;
									this.height = 24;
									this.accessory = true;
									this.vanity = true;
									this.rare = 8;
									this.value = Item.buyPrice(2, 0, 0, 0);
									this.handOnSlot = 16;
									return;
								}
								if (type == 2277)
								{
									this.width = 18;
									this.height = 14;
									this.bodySlot = 165;
									this.value = Item.buyPrice(0, 2, 0, 0);
									this.defense = 4;
									this.rare = 1;
									return;
								}
								if (type == 2278)
								{
									this.width = 18;
									this.height = 14;
									this.bodySlot = 166;
									this.vanity = true;
									this.value = Item.buyPrice(0, 1, 0, 0);
									return;
								}
								if (type == 2279)
								{
									this.width = 18;
									this.height = 14;
									this.bodySlot = 167;
									this.value = Item.buyPrice(0, 3, 50, 0);
									this.defense = 2;
									this.rare = 1;
									return;
								}
								if (type == 2280)
								{
									this.width = 22;
									this.height = 20;
									this.accessory = true;
									this.value = 400000;
									this.rare = 7;
									this.wingSlot = 24;
									return;
								}
								if (type >= 2281 && type <= 2283)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 242;
									this.width = 30;
									this.height = 30;
									this.value = Item.buyPrice(0, 1, 0, 0);
									this.placeStyle = 22 + type - 2281;
									return;
								}
								if (type >= 2284 && type <= 2287)
								{
									this.width = 26;
									this.height = 30;
									this.maxStack = 1;
									this.value = Item.buyPrice(0, 5, 0, 0);
									this.rare = 5;
									this.accessory = true;
									this.backSlot = (sbyte)(3 + type - 2284);
									this.frontSlot = (sbyte)(1 + type - 2284);
									this.vanity = true;
									return;
								}
								if (type == 2288)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 15;
									this.placeStyle = 28;
									this.width = 12;
									this.height = 30;
									this.value = 150;
									return;
								}
								if (type == 2289 || (type >= 2291 && type <= 2296))
								{
									this.useStyle = 1;
									this.useAnimation = 8;
									this.useTime = 8;
									this.width = 24;
									this.height = 28;
									this.UseSound = SoundID.Item1;
									this.shoot = 361 + type - 2291;
									if (type == 2289)
									{
										this.fishingPole = 5;
										this.shootSpeed = 9f;
										this.shoot = 360;
										this.value = Item.sellPrice(0, 0, 0, 60);
										return;
									}
									if (type == 2291)
									{
										this.fishingPole = 15;
										this.shootSpeed = 11f;
										this.value = Item.sellPrice(0, 0, 24, 0);
										return;
									}
									if (type == 2293)
									{
										this.fishingPole = 20;
										this.shootSpeed = 13f;
										this.rare = 1;
										this.value = Item.sellPrice(0, 2, 40, 0);
										return;
									}
									if (type == 2292)
									{
										this.fishingPole = 30;
										this.shootSpeed = 14f;
										this.rare = 2;
										this.value = Item.sellPrice(0, 1, 0, 0);
										return;
									}
									if (type == 2295)
									{
										this.fishingPole = 35;
										this.shootSpeed = 15f;
										this.rare = 2;
										this.value = Item.buyPrice(0, 20, 0, 0);
										return;
									}
									if (type == 2296)
									{
										this.fishingPole = 40;
										this.shootSpeed = 16f;
										this.rare = 2;
										this.value = Item.buyPrice(0, 35, 0, 0);
										return;
									}
									if (type == 2294)
									{
										this.fishingPole = 50;
										this.shootSpeed = 17f;
										this.rare = 3;
										this.value = Item.sellPrice(0, 20, 0, 0);
										return;
									}
								}
								else if (type >= 2421 && type <= 2422)
								{
									this.useStyle = 1;
									this.useAnimation = 8;
									this.useTime = 8;
									this.width = 24;
									this.height = 28;
									this.UseSound = SoundID.Item1;
									this.shoot = 381 + type - 2421;
									if (type == 2421)
									{
										this.fishingPole = 22;
										this.shootSpeed = 13.5f;
										this.rare = 1;
										this.value = Item.sellPrice(0, 3, 12, 0);
										return;
									}
									this.fishingPole = 45;
									this.shootSpeed = 16.5f;
									this.rare = 3;
									this.value = Item.sellPrice(0, 10, 0, 0);
									return;
								}
								else
								{
									if (type == 2320)
									{
										this.autoReuse = true;
										this.width = 26;
										this.height = 26;
										this.value = Item.sellPrice(0, 1, 50, 0);
										this.useStyle = 1;
										this.useAnimation = 24;
										this.useTime = 14;
										this.hammer = 70;
										this.knockBack = 6f;
										this.damage = 24;
										this.scale = 1.05f;
										this.UseSound = SoundID.Item1;
										this.rare = 3;
										this.melee = true;
										return;
									}
									if (type == 2314)
									{
										this.maxStack = Item.CommonMaxStack;
										this.width = 26;
										this.height = 26;
										this.value = Item.sellPrice(0, 0, 15, 0);
										this.rare = 1;
										this.UseSound = SoundID.Item3;
										this.healLife = 120;
										this.useStyle = 2;
										this.useTurn = true;
										this.useAnimation = 17;
										this.useTime = 17;
										this.consumable = true;
										this.potion = true;
										return;
									}
									if (type >= 2290 && type <= 2321)
									{
										this.maxStack = Item.CommonMaxStack;
										this.width = 26;
										this.height = 26;
										this.value = Item.sellPrice(0, 0, 5, 0);
										if (type == 2308)
										{
											this.value = Item.sellPrice(0, 10, 0, 0);
											this.rare = 4;
										}
										if (type == 2312)
										{
											this.value = Item.sellPrice(0, 0, 50, 0);
											this.rare = 2;
										}
										if (type == 2317)
										{
											this.value = Item.sellPrice(0, 3, 0, 0);
											this.rare = 4;
										}
										if (type == 2310)
										{
											this.value = Item.sellPrice(0, 1, 0, 0);
											this.rare = 3;
										}
										if (type == 2321)
										{
											this.value = Item.sellPrice(0, 0, 25, 0);
											this.rare = 1;
										}
										if (type == 2315)
										{
											this.value = Item.sellPrice(0, 0, 15, 0);
											this.rare = 2;
										}
										if (type == 2303)
										{
											this.value = Item.sellPrice(0, 0, 15, 0);
											this.rare = 1;
										}
										if (type == 2304)
										{
											this.value = Item.sellPrice(0, 0, 30, 0);
											this.rare = 1;
										}
										if (type == 2316)
										{
											this.value = Item.sellPrice(0, 0, 15, 0);
										}
										if (type == 2311)
										{
											this.value = Item.sellPrice(0, 0, 15, 0);
											this.rare = 1;
										}
										if (type == 2313)
										{
											this.value = Item.sellPrice(0, 0, 15, 0);
											this.rare = 1;
										}
										if (type == 2306)
										{
											this.value = Item.sellPrice(0, 0, 15, 0);
											this.rare = 1;
										}
										if (type == 2307)
										{
											this.value = Item.sellPrice(0, 0, 25, 0);
											this.rare = 2;
										}
										if (type == 2319)
										{
											this.value = Item.sellPrice(0, 0, 15, 0);
											this.rare = 1;
										}
										if (type == 2318)
										{
											this.value = Item.sellPrice(0, 0, 15, 0);
											this.rare = 1;
										}
										if (type == 2298)
										{
											this.value = Item.sellPrice(0, 0, 7, 50);
										}
										if (type == 2309)
										{
											this.value = Item.sellPrice(0, 0, 7, 50);
											this.rare = 1;
										}
										if (type == 2300)
										{
											this.value = Item.sellPrice(0, 0, 7, 50);
										}
										if (type == 2301)
										{
											this.value = Item.sellPrice(0, 0, 7, 50);
										}
										if (type == 2302)
										{
											this.value = Item.sellPrice(0, 0, 15, 0);
										}
										if (type == 2299)
										{
											this.value = Item.sellPrice(0, 0, 7, 50);
										}
										if (type == 2305)
										{
											this.value = Item.sellPrice(0, 0, 7, 50);
											this.rare = 1;
											return;
										}
									}
									else
									{
										if (type == 2322)
										{
											this.UseSound = SoundID.Item3;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.buffType = 104;
											this.buffTime = 36000;
											this.value = 1000;
											this.rare = 1;
											return;
										}
										if (type == 2323)
										{
											this.UseSound = SoundID.Item3;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.buffType = 105;
											this.buffTime = 28800;
											this.value = 1000;
											this.rare = 1;
											return;
										}
										if (type == 2324)
										{
											this.UseSound = SoundID.Item3;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.buffType = 106;
											this.buffTime = 43200;
											this.value = 1000;
											this.rare = 1;
											return;
										}
										if (type == 2325)
										{
											this.UseSound = SoundID.Item3;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.buffType = 107;
											this.buffTime = 162000;
											this.value = 1000;
											this.rare = 1;
											return;
										}
										if (type == 2326)
										{
											this.UseSound = SoundID.Item3;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.buffType = 108;
											this.buffTime = 28800;
											this.value = 1000;
											this.rare = 1;
											return;
										}
										if (type == 2327)
										{
											this.UseSound = SoundID.Item3;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.buffType = 109;
											this.buffTime = 28800;
											this.value = 1000;
											this.rare = 1;
											return;
										}
										if (type == 2328)
										{
											this.UseSound = SoundID.Item3;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.buffType = 110;
											this.buffTime = 28800;
											this.value = 1000;
											this.rare = 1;
											return;
										}
										if (type == 2329)
										{
											this.UseSound = SoundID.Item3;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.buffType = 111;
											this.buffTime = 36000;
											this.value = 1000;
											this.rare = 1;
											return;
										}
										if (type == 2330)
										{
											this.autoReuse = true;
											this.useStyle = 1;
											this.useTime = 35;
											this.useAnimation = 35;
											this.width = 24;
											this.height = 28;
											this.damage = 35;
											this.knockBack = 8f;
											this.scale = 1.15f;
											this.UseSound = SoundID.Item1;
											this.rare = 1;
											this.value = Item.sellPrice(0, 1, 0, 0);
											this.melee = true;
											return;
										}
										if (type == 2331)
										{
											this.useStyle = 5;
											this.useAnimation = 20;
											this.useTime = 20;
											this.shootSpeed = 4f;
											this.knockBack = 6.5f;
											this.width = 40;
											this.height = 40;
											this.damage = 70;
											this.crit = 20;
											this.UseSound = SoundID.Item1;
											this.shoot = 367;
											this.rare = 7;
											this.value = Item.sellPrice(0, 1, 0, 0);
											this.noMelee = true;
											this.noUseGraphic = true;
											this.melee = true;
											return;
										}
										if (type == 2332)
										{
											this.useStyle = 5;
											this.useAnimation = 20;
											this.useTime = 20;
											this.shootSpeed = 4f;
											this.knockBack = 4.25f;
											this.width = 40;
											this.height = 40;
											this.damage = 19;
											this.UseSound = SoundID.Item1;
											this.shoot = 368;
											this.rare = 2;
											this.value = Item.sellPrice(0, 0, 50, 0);
											this.noMelee = true;
											this.noUseGraphic = true;
											this.melee = true;
											return;
										}
										if (type == 2333)
										{
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 7;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createWall = 145;
											this.width = 12;
											this.height = 12;
											return;
										}
										if (type == 2334)
										{
											this.width = 12;
											this.height = 12;
											this.rare = 1;
											this.maxStack = Item.CommonMaxStack;
											this.value = Item.sellPrice(0, 0, 10, 0);
											this.createTile = 376;
											this.placeStyle = 0;
											this.useAnimation = 15;
											this.useTime = 15;
											this.autoReuse = true;
											this.useStyle = 1;
											this.consumable = true;
											return;
										}
										if (type == 2335)
										{
											this.width = 12;
											this.height = 12;
											this.rare = 2;
											this.maxStack = Item.CommonMaxStack;
											this.value = Item.sellPrice(0, 0, 50, 0);
											this.createTile = 376;
											this.placeStyle = 1;
											this.useAnimation = 15;
											this.useTime = 15;
											this.autoReuse = true;
											this.useStyle = 1;
											this.consumable = true;
											return;
										}
										if (type == 2336)
										{
											this.width = 12;
											this.height = 12;
											this.rare = 3;
											this.maxStack = Item.CommonMaxStack;
											this.value = Item.sellPrice(0, 2, 0, 0);
											this.createTile = 376;
											this.placeStyle = 2;
											this.useAnimation = 15;
											this.useTime = 15;
											this.autoReuse = true;
											this.useStyle = 1;
											this.consumable = true;
											return;
										}
										if (type >= 2337 && type <= 2339)
										{
											this.useStyle = 1;
											this.useAnimation = 15;
											this.useTime = 10;
											this.width = 12;
											this.height = 12;
											this.rare = -1;
											this.maxStack = Item.CommonMaxStack;
											this.autoReuse = true;
											this.MakeUsableWithChlorophyteExtractinator();
											return;
										}
										if (type == 2340)
										{
											this.useStyle = 1;
											this.useAnimation = 15;
											this.useTime = 7;
											this.useTurn = true;
											this.autoReuse = true;
											this.width = 16;
											this.height = 16;
											this.maxStack = Item.CommonMaxStack;
											this.createTile = 314;
											this.placeStyle = 0;
											this.consumable = true;
											this.cartTrack = true;
											this.tileBoost = 5;
											return;
										}
										if (type == 2341)
										{
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 22;
											this.useTime = 13;
											this.autoReuse = true;
											this.width = 24;
											this.height = 28;
											this.damage = 16;
											this.pick = 59;
											this.scale = 1.15f;
											this.UseSound = SoundID.Item1;
											this.knockBack = 3f;
											this.rare = 3;
											this.value = Item.sellPrice(0, 1, 50, 0);
											this.melee = true;
											return;
										}
										if (type == 2342)
										{
											this.useStyle = 5;
											this.useAnimation = 25;
											this.useTime = 8;
											this.shootSpeed = 48f;
											this.knockBack = 2.25f;
											this.width = 20;
											this.height = 12;
											this.damage = 13;
											this.axe = 14;
											this.UseSound = SoundID.Item23;
											this.shoot = 369;
											this.rare = 3;
											this.value = Item.sellPrice(0, 1, 50, 0);
											this.noMelee = true;
											this.noUseGraphic = true;
											this.melee = true;
											this.channel = true;
											return;
										}
										if (type == 2343)
										{
											this.width = 48;
											this.height = 28;
											this.mountType = 6;
											this.rare = 1;
											this.value = Item.sellPrice(0, 0, 2, 0);
											return;
										}
										if (type == 2344)
										{
											this.UseSound = SoundID.Item3;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.buffType = 112;
											this.buffTime = 28800;
											this.value = 1000;
											this.rare = 1;
											return;
										}
										if (type == 2345)
										{
											this.UseSound = SoundID.Item3;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.buffType = 113;
											this.buffTime = 28800;
											this.value = 1000;
											this.rare = 1;
											return;
										}
										if (type == 2346)
										{
											this.UseSound = SoundID.Item3;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.buffType = 114;
											this.buffTime = 14400;
											this.value = 1000;
											this.rare = 1;
											return;
										}
										if (type == 2347)
										{
											this.UseSound = SoundID.Item3;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.buffType = 115;
											this.buffTime = 14400;
											this.value = 1000;
											this.rare = 1;
											return;
										}
										if (type == 2348)
										{
											this.UseSound = SoundID.Item3;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.buffType = 116;
											this.buffTime = 14400;
											this.value = 1000;
											this.rare = 1;
											return;
										}
										if (type == 2349)
										{
											this.UseSound = SoundID.Item3;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.buffType = 117;
											this.buffTime = 14400;
											this.value = 1000;
											this.rare = 1;
											return;
										}
										if (type == 2350)
										{
											this.UseSound = SoundID.Item6;
											this.useStyle = 6;
											this.useTurn = true;
											this.useTime = (this.useAnimation = 30);
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.value = 1000;
											this.rare = 1;
											return;
										}
										if (type == 2351)
										{
											this.UseSound = SoundID.Item6;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.value = 1000;
											this.rare = 1;
											return;
										}
										if (type == 2352)
										{
											this.useStyle = 1;
											this.shootSpeed = 9f;
											this.shoot = 370;
											this.width = 18;
											this.height = 20;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.UseSound = SoundID.Item1;
											this.useAnimation = 15;
											this.useTime = 15;
											this.noUseGraphic = true;
											this.noMelee = true;
											this.value = 200;
											return;
										}
										if (type == 2353)
										{
											this.useStyle = 1;
											this.shootSpeed = 9f;
											this.shoot = 371;
											this.width = 18;
											this.height = 20;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.UseSound = SoundID.Item1;
											this.useAnimation = 15;
											this.useTime = 15;
											this.noUseGraphic = true;
											this.noMelee = true;
											this.value = 200;
											return;
										}
										if (type == 2354)
										{
											this.UseSound = SoundID.Item3;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.buffType = 121;
											this.buffTime = 28800;
											this.rare = 1;
											this.value = 1000;
											return;
										}
										if (type == 2355)
										{
											this.UseSound = SoundID.Item3;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.buffType = 122;
											this.buffTime = 28800;
											this.value = 1000;
											this.rare = 1;
											return;
										}
										if (type == 2356)
										{
											this.UseSound = SoundID.Item3;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.buffType = 123;
											this.buffTime = 14400;
											this.value = 1000;
											this.rare = 1;
											return;
										}
										if (type == 2357)
										{
											this.autoReuse = true;
											this.useTurn = true;
											this.useStyle = 1;
											this.useAnimation = 15;
											this.useTime = 10;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 82;
											this.placeStyle = 6;
											this.width = 12;
											this.height = 14;
											this.value = 80;
											return;
										}
										if (type == 2358)
										{
											this.maxStack = Item.CommonMaxStack;
											this.width = 12;
											this.height = 14;
											this.value = 100;
											return;
										}
										if (type == 2359)
										{
											this.UseSound = SoundID.Item3;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.buffType = 124;
											this.buffTime = 54000;
											this.value = 1000;
											this.rare = 1;
											return;
										}
										if (type == 2360)
										{
											this.noUseGraphic = true;
											this.damage = 0;
											this.useStyle = 5;
											this.shootSpeed = 13f;
											this.shoot = 372;
											this.width = 18;
											this.height = 28;
											this.UseSound = SoundID.Item1;
											this.useAnimation = 20;
											this.useTime = 20;
											this.rare = 3;
											this.noMelee = true;
											this.value = 20000;
											return;
										}
										if (type == 2361)
										{
											this.width = 18;
											this.height = 18;
											this.defense = 4;
											this.headSlot = 160;
											this.rare = 3;
											this.value = Item.sellPrice(0, 0, 40, 0);
											return;
										}
										if (type == 2362)
										{
											this.width = 18;
											this.height = 18;
											this.defense = 5;
											this.bodySlot = 168;
											this.rare = 3;
											this.value = Item.sellPrice(0, 0, 60, 0);
											return;
										}
										if (type == 2363)
										{
											this.width = 18;
											this.height = 18;
											this.defense = 4;
											this.legSlot = 103;
											this.rare = 3;
											this.value = Item.sellPrice(0, 0, 50, 0);
											return;
										}
										if (type == 2364)
										{
											this.mana = 10;
											this.damage = 12;
											this.useStyle = 1;
											this.shootSpeed = 10f;
											this.shoot = 373;
											this.width = 26;
											this.height = 28;
											this.UseSound = SoundID.Item76;
											this.useAnimation = 22;
											this.useTime = 22;
											this.rare = 3;
											this.noMelee = true;
											this.knockBack = 2f;
											this.buffType = 125;
											this.value = Item.sellPrice(0, 0, 70, 0);
											this.summon = true;
											this.autoReuse = true;
											this.reuseDelay = 2;
											return;
										}
										if (type == 2365)
										{
											this.mana = 10;
											this.damage = 17;
											this.useStyle = 1;
											this.shootSpeed = 10f;
											this.shoot = 375;
											this.width = 26;
											this.height = 28;
											this.UseSound = SoundID.Item77;
											this.useAnimation = 36;
											this.useTime = 36;
											this.rare = 3;
											this.noMelee = true;
											this.knockBack = 2f;
											this.buffType = 126;
											this.value = Item.sellPrice(0, 0, 54, 0);
											this.summon = true;
											this.autoReuse = true;
											this.reuseDelay = 2;
											return;
										}
										if (type == 2366)
										{
											this.mana = 10;
											this.damage = 26;
											this.useStyle = 1;
											this.shootSpeed = 14f;
											this.shoot = 377;
											this.width = 18;
											this.height = 20;
											this.UseSound = SoundID.Item78;
											this.useAnimation = 30;
											this.useTime = 30;
											this.noMelee = true;
											this.value = Item.sellPrice(0, 5, 0, 0);
											this.knockBack = 7.5f;
											this.rare = 4;
											this.summon = true;
											this.sentry = true;
											return;
										}
										if (type == 2367)
										{
											this.width = 18;
											this.height = 18;
											this.defense = 1;
											this.headSlot = 161;
											this.rare = 1;
											this.value = Item.sellPrice(0, 1, 0, 0);
											return;
										}
										if (type == 2368)
										{
											this.width = 18;
											this.height = 18;
											this.bodySlot = 169;
											this.defense = 2;
											this.rare = 1;
											this.value = Item.sellPrice(0, 1, 0, 0);
											return;
										}
										if (type == 2369)
										{
											this.width = 18;
											this.height = 18;
											this.legSlot = 104;
											this.defense = 1;
											this.rare = 1;
											this.value = Item.sellPrice(0, 1, 0, 0);
											return;
										}
										if (type == 2370)
										{
											this.width = 18;
											this.height = 18;
											this.headSlot = 162;
											this.rare = 4;
											this.value = Item.sellPrice(0, 0, 75, 0);
											this.defense = 5;
											return;
										}
										if (type == 2371)
										{
											this.width = 18;
											this.height = 18;
											this.bodySlot = 170;
											this.rare = 4;
											this.value = Item.sellPrice(0, 0, 75, 0);
											this.defense = 8;
											return;
										}
										if (type == 2372)
										{
											this.width = 18;
											this.height = 18;
											this.legSlot = 105;
											this.rare = 4;
											this.value = Item.sellPrice(0, 0, 75, 0);
											this.defense = 7;
											return;
										}
										if (type >= 2373 && type <= 2375)
										{
											this.width = 26;
											this.height = 30;
											this.maxStack = 1;
											this.value = Item.sellPrice(0, 1, 0, 0);
											this.rare = 1;
											this.accessory = true;
											return;
										}
										if (type >= 2376 && type <= 2385)
										{
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 87;
											this.placeStyle = 11 + type - 2376;
											this.width = 20;
											this.height = 20;
											this.value = 300;
											if (type == 2379)
											{
												this.value = Item.buyPrice(0, 10, 0, 0);
												return;
											}
										}
										else if (type >= 2386 && type <= 2396)
										{
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 88;
											this.placeStyle = 5 + type - 2386;
											this.width = 20;
											this.height = 20;
											this.value = 300;
											if (type == 2389)
											{
												this.value = Item.buyPrice(0, 10, 0, 0);
												return;
											}
										}
										else
										{
											if (type >= 2397 && type <= 2416)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 89;
												this.placeStyle = 1 + type - 2397;
												this.width = 20;
												this.height = 20;
												this.value = 300;
												return;
											}
											if (type == 2417)
											{
												this.width = 18;
												this.height = 18;
												this.headSlot = 163;
												this.vanity = true;
												this.value = Item.sellPrice(0, 1, 0, 0);
												return;
											}
											if (type == 2418)
											{
												this.width = 18;
												this.height = 18;
												this.bodySlot = 171;
												this.vanity = true;
												this.value = Item.sellPrice(0, 1, 0, 0);
												return;
											}
											if (type == 2419)
											{
												this.width = 18;
												this.height = 18;
												this.legSlot = 106;
												this.vanity = true;
												this.value = Item.sellPrice(0, 1, 0, 0);
												return;
											}
											if (type == 2420)
											{
												this.damage = 0;
												this.useStyle = 1;
												this.shoot = 380;
												this.width = 16;
												this.height = 30;
												this.UseSound = SoundID.Item2;
												this.useAnimation = 20;
												this.useTime = 20;
												this.rare = 3;
												this.noMelee = true;
												this.value = Item.sellPrice(0, 3, 0, 0);
												this.buffType = 127;
												return;
											}
											if (type == 2423)
											{
												this.width = 16;
												this.height = 24;
												this.accessory = true;
												this.rare = 1;
												this.value = 50000;
												this.shoeSlot = 15;
												return;
											}
											if (type == 2424)
											{
												this.noMelee = true;
												this.useStyle = 1;
												this.shootSpeed = 20f;
												this.shoot = 383;
												this.damage = 70;
												this.knockBack = 8f;
												this.width = 34;
												this.height = 34;
												this.UseSound = SoundID.Item1;
												this.useAnimation = 20;
												this.useTime = 20;
												this.noUseGraphic = true;
												this.rare = 3;
												this.value = 50000;
												this.melee = true;
												return;
											}
											if (type == 2428)
											{
												this.useStyle = 1;
												this.width = 16;
												this.height = 30;
												this.UseSound = SoundID.Item79;
												this.useAnimation = 20;
												this.useTime = 20;
												this.rare = 8;
												this.noMelee = true;
												this.mountType = 1;
												this.value = Item.sellPrice(0, 5, 0, 0);
												return;
											}
											if (type == 2429)
											{
												this.useStyle = 1;
												this.width = 16;
												this.height = 30;
												this.UseSound = SoundID.Item80;
												this.useAnimation = 20;
												this.useTime = 20;
												this.rare = 8;
												this.noMelee = true;
												this.mountType = 2;
												this.value = Item.sellPrice(0, 5, 0, 0);
												return;
											}
											if (type == 2430)
											{
												this.useStyle = 1;
												this.width = 16;
												this.height = 30;
												this.UseSound = SoundID.Item81;
												this.useAnimation = 20;
												this.useTime = 20;
												this.rare = 8;
												this.noMelee = true;
												this.mountType = 3;
												this.value = Item.sellPrice(0, 5, 0, 0);
												return;
											}
											if (type == 2431)
											{
												this.width = 18;
												this.height = 16;
												this.maxStack = Item.CommonMaxStack;
												this.value = Item.sellPrice(0, 0, 5, 0);
												return;
											}
											if (type >= 2432 && type <= 2434)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 7;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createWall = 146 + type - 2432;
												this.width = 12;
												this.height = 12;
												if (type == 2434)
												{
													this.value = Item.buyPrice(0, 0, 0, 50);
													return;
												}
											}
											else
											{
												if (type == 2435)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 315;
													this.width = 12;
													this.height = 12;
													this.value = Item.buyPrice(0, 0, 0, 50);
													return;
												}
												if (type >= 2436 && type <= 2438)
												{
													this.useStyle = 1;
													this.autoReuse = true;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.width = 12;
													this.height = 12;
													this.noUseGraphic = true;
													this.bait = 20;
													this.value = Item.sellPrice(0, 3, 50, 0);
													return;
												}
												if (type >= 2439 && type <= 2441)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 316 + type - 2439;
													this.width = 12;
													this.height = 12;
													return;
												}
												if (type >= 2442 && type <= 2449)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 240;
													this.width = 30;
													this.height = 30;
													this.value = Item.sellPrice(0, 0, 50, 0);
													this.placeStyle = 46 + type - 2442;
													return;
												}
												if (type >= 2450 && type <= 2488)
												{
													this.DefaultToQuestFish();
													return;
												}
												if (type == 2489)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 240;
													this.width = 30;
													this.height = 30;
													this.value = Item.sellPrice(0, 1, 0, 0);
													this.placeStyle = 54;
													this.rare = 1;
													return;
												}
												if (type == 2490)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 319;
													this.width = 12;
													this.height = 12;
													this.value = Item.sellPrice(0, 3, 0, 0);
													return;
												}
												if (type == 2491)
												{
													this.useStyle = 1;
													this.width = 16;
													this.height = 30;
													this.UseSound = SoundID.Item25;
													this.useAnimation = 20;
													this.useTime = 20;
													this.rare = 8;
													this.noMelee = true;
													this.mountType = 4;
													this.value = Item.sellPrice(0, 5, 0, 0);
													return;
												}
												if (type == 2492)
												{
													this.useStyle = 1;
													this.useAnimation = 15;
													this.useTime = 7;
													this.useTurn = true;
													this.autoReuse = true;
													this.width = 16;
													this.height = 16;
													this.maxStack = Item.CommonMaxStack;
													this.createTile = 314;
													this.placeStyle = 1;
													this.consumable = true;
													this.cartTrack = true;
													this.mech = true;
													this.tileBoost = 2;
													this.value = Item.sellPrice(0, 0, 10, 0);
													return;
												}
												if (type == 2493)
												{
													this.width = 28;
													this.height = 20;
													this.headSlot = 164;
													this.rare = 1;
													this.value = Item.sellPrice(0, 0, 75, 0);
													this.vanity = true;
													return;
												}
												if (type == 2494)
												{
													this.width = 22;
													this.height = 20;
													this.accessory = true;
													this.value = Item.buyPrice(0, 40, 0, 0);
													this.rare = 4;
													this.wingSlot = 25;
													return;
												}
												if (type == 2495)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 242;
													this.width = 30;
													this.height = 30;
													this.value = Item.sellPrice(0, 1, 0, 0);
													this.placeStyle = 25;
													return;
												}
												if (type == 2496)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 320;
													this.placeStyle = 0;
													this.width = 22;
													this.height = 30;
													this.value = Item.sellPrice(0, 1, 0, 0);
													return;
												}
												if (type == 2497)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 242;
													this.width = 30;
													this.height = 30;
													this.value = Item.sellPrice(0, 0, 50, 0);
													this.placeStyle = 26;
													return;
												}
												if (type == 2498)
												{
													this.width = 18;
													this.height = 18;
													this.headSlot = 165;
													this.vanity = true;
													this.value = Item.sellPrice(0, 1, 0, 0);
													return;
												}
												if (type == 2499)
												{
													this.width = 18;
													this.height = 18;
													this.bodySlot = 172;
													this.vanity = true;
													this.value = Item.sellPrice(0, 1, 0, 0);
													return;
												}
												if (type == 2500)
												{
													this.width = 18;
													this.height = 18;
													this.legSlot = 107;
													this.vanity = true;
													this.value = Item.sellPrice(0, 1, 0, 0);
													return;
												}
												if (type == 2501)
												{
													this.width = 18;
													this.height = 12;
													this.maxStack = 1;
													this.value = Item.sellPrice(0, 1, 0, 0);
													this.rare = 5;
													this.beardSlot = 1;
													this.accessory = true;
													this.vanity = true;
													return;
												}
												if (type == 2502)
												{
													this.useStyle = 1;
													this.width = 16;
													this.height = 30;
													this.UseSound = SoundID.Item25;
													this.useAnimation = 20;
													this.useTime = 20;
													this.rare = 8;
													this.noMelee = true;
													this.mountType = 5;
													this.value = Item.sellPrice(0, 5, 0, 0);
													return;
												}
												if (type == 2503)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 321;
													this.width = 8;
													this.height = 10;
													return;
												}
												if (type == 2504)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 322;
													this.width = 8;
													this.height = 10;
													return;
												}
												if (type == 2505)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 7;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createWall = 149;
													this.width = 12;
													this.height = 12;
													return;
												}
												if (type == 2506)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 7;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createWall = 151;
													this.width = 12;
													this.height = 12;
													return;
												}
												if (type == 2507)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 7;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createWall = 150;
													this.width = 12;
													this.height = 12;
													return;
												}
												if (type == 2508)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 7;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createWall = 152;
													this.width = 12;
													this.height = 12;
													return;
												}
												if (type == 2509)
												{
													this.width = 18;
													this.height = 18;
													this.defense = 1;
													this.headSlot = 166;
													return;
												}
												if (type == 2510)
												{
													this.width = 18;
													this.height = 18;
													this.defense = 1;
													this.bodySlot = 173;
													return;
												}
												if (type == 2511)
												{
													this.width = 18;
													this.height = 18;
													this.defense = 1;
													this.legSlot = 108;
													return;
												}
												if (type == 2512)
												{
													this.width = 18;
													this.height = 18;
													this.defense = 1;
													this.headSlot = 167;
													return;
												}
												if (type == 2513)
												{
													this.width = 18;
													this.height = 18;
													this.defense = 1;
													this.bodySlot = 174;
													return;
												}
												if (type == 2514)
												{
													this.width = 18;
													this.height = 18;
													this.defense = 1;
													this.legSlot = 109;
													return;
												}
												if (type == 2517)
												{
													this.useStyle = 1;
													this.useTurn = false;
													this.useAnimation = 19;
													this.useTime = 19;
													this.width = 24;
													this.height = 28;
													this.damage = 8;
													this.knockBack = 6f;
													this.UseSound = SoundID.Item1;
													this.scale = 1f;
													this.value = 100;
													this.melee = true;
													return;
												}
												if (type == 2516)
												{
													this.autoReuse = true;
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 33;
													this.useTime = 23;
													this.hammer = 35;
													this.width = 24;
													this.height = 28;
													this.damage = 4;
													this.knockBack = 5.5f;
													this.scale = 1f;
													this.UseSound = SoundID.Item1;
													this.value = 50;
													this.melee = true;
													this.autoReuse = true;
													return;
												}
												if (type == 2515)
												{
													this.useStyle = 5;
													this.useAnimation = 29;
													this.useTime = 29;
													this.width = 12;
													this.height = 28;
													this.shoot = 1;
													this.useAmmo = AmmoID.Arrow;
													this.UseSound = SoundID.Item5;
													this.damage = 6;
													this.shootSpeed = 6.6f;
													this.noMelee = true;
													this.value = 100;
													this.ranged = true;
													return;
												}
												if (type == 2518)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 19;
													this.placeStyle = 17;
													this.width = 8;
													this.height = 10;
													return;
												}
												if (type == 2519)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 90;
													this.placeStyle = 17;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2520)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.autoReuse = true;
													this.createTile = 79;
													this.placeStyle = 22;
													this.width = 28;
													this.height = 20;
													this.value = 2000;
													return;
												}
												if (type == 2521)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 89;
													this.placeStyle = 21;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2527)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 89;
													this.placeStyle = 22;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2522)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 100;
													this.placeStyle = 18;
													this.width = 20;
													this.height = 20;
													this.value = 1500;
													return;
												}
												if (type == 2523)
												{
													this.noWet = true;
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 33;
													this.placeStyle = 18;
													this.width = 8;
													this.value = Item.sellPrice(0, 0, 0, 60);
													this.height = 18;
													return;
												}
												if (type == 2524)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 15;
													this.placeStyle = 29;
													this.width = 12;
													this.height = 30;
													this.value = 150;
													return;
												}
												if (type == 2525)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 34;
													this.placeStyle = 23;
													this.width = 26;
													this.height = 26;
													this.value = 3000;
													return;
												}
												if (type == 2526)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 21;
													this.placeStyle = 31;
													this.width = 26;
													this.height = 22;
													this.value = 500;
													return;
												}
												if (type == 2528)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 10;
													this.placeStyle = 29;
													this.width = 14;
													this.height = 28;
													this.value = 200;
													return;
												}
												if (type == 2529)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 88;
													this.placeStyle = 16;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2530)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 42;
													this.width = 12;
													this.height = 28;
													this.placeStyle = 27;
													this.value = 150;
													return;
												}
												if (type == 2531)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 87;
													this.placeStyle = 21;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2535)
												{
													this.mana = 10;
													this.damage = 24;
													this.useStyle = 1;
													this.shootSpeed = 10f;
													this.shoot = 387;
													this.width = 26;
													this.height = 28;
													this.UseSound = SoundID.Item82;
													this.useAnimation = 36;
													this.useTime = 36;
													this.rare = 5;
													this.noMelee = true;
													this.knockBack = 2f;
													this.buffType = 134;
													this.value = Item.buyPrice(0, 10, 0, 0);
													this.summon = true;
													this.autoReuse = true;
													this.reuseDelay = 2;
													return;
												}
												if (type == 2532)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 14;
													this.placeStyle = 26;
													this.width = 26;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2533)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 93;
													this.placeStyle = 18;
													this.width = 10;
													this.height = 24;
													this.value = 500;
													return;
												}
												if (type == 2534)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 18;
													this.placeStyle = 22;
													this.width = 28;
													this.height = 14;
													this.value = 150;
													return;
												}
												if (type == 2536)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 101;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													this.placeStyle = 23;
													return;
												}
												if (type == 2549)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 19;
													this.placeStyle = 18;
													this.width = 8;
													this.height = 10;
													return;
												}
												if (type == 2537)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 90;
													this.placeStyle = 18;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2538)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.autoReuse = true;
													this.createTile = 79;
													this.placeStyle = 23;
													this.width = 28;
													this.height = 20;
													this.value = 2000;
													return;
												}
												if (type == 2539)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 89;
													this.placeStyle = 23;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2540)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 101;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													this.placeStyle = 24;
													return;
												}
												if (type == 2541)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 100;
													this.placeStyle = 19;
													this.width = 20;
													this.height = 20;
													this.value = 1500;
													return;
												}
												if (type == 2542)
												{
													this.noWet = true;
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 33;
													this.placeStyle = 19;
													this.width = 8;
													this.value = Item.sellPrice(0, 0, 0, 60);
													this.height = 18;
													return;
												}
												if (type == 2543)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 34;
													this.placeStyle = 24;
													this.width = 26;
													this.height = 26;
													this.value = 3000;
													return;
												}
												if (type == 2544)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 21;
													this.placeStyle = 32;
													this.width = 26;
													this.height = 22;
													this.value = 500;
													return;
												}
												if (type == 2545)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 88;
													this.placeStyle = 17;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2547)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 93;
													this.placeStyle = 19;
													this.width = 10;
													this.height = 24;
													this.value = 500;
													return;
												}
												if (type == 2546)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 42;
													this.width = 12;
													this.height = 28;
													this.placeStyle = 28;
													this.value = 150;
													return;
												}
												if (type == 2548)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 87;
													this.placeStyle = 22;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2413)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 89;
													this.placeStyle = 23;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2550)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 14;
													this.placeStyle = 27;
													this.width = 26;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2551)
												{
													this.mana = 10;
													this.damage = 26;
													this.useStyle = 1;
													this.shootSpeed = 10f;
													this.shoot = 390;
													this.width = 26;
													this.height = 28;
													this.UseSound = SoundID.Item83;
													this.useAnimation = 36;
													this.useTime = 36;
													this.rare = 4;
													this.noMelee = true;
													this.knockBack = 3f;
													this.buffType = 133;
													this.value = Item.buyPrice(0, 5, 0, 0);
													this.summon = true;
													this.autoReuse = true;
													this.reuseDelay = 2;
													return;
												}
												if (type == 2552)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 90;
													this.placeStyle = 19;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2553)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.autoReuse = true;
													this.createTile = 79;
													this.placeStyle = 24;
													this.width = 28;
													this.height = 20;
													this.value = 2000;
													return;
												}
												if (type == 2554)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 101;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													this.placeStyle = 25;
													return;
												}
												if (type == 2555)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 100;
													this.placeStyle = 20;
													this.width = 20;
													this.height = 20;
													this.value = 1500;
													return;
												}
												if (type == 2556)
												{
													this.noWet = true;
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 33;
													this.placeStyle = 20;
													this.width = 8;
													this.value = Item.sellPrice(0, 0, 0, 60);
													this.height = 18;
													return;
												}
												if (type == 2557)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 15;
													this.placeStyle = 30;
													this.width = 12;
													this.height = 30;
													this.value = 150;
													return;
												}
												if (type == 2558)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 34;
													this.placeStyle = 25;
													this.width = 26;
													this.height = 26;
													this.value = 3000;
													return;
												}
												if (type == 2559)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 21;
													this.placeStyle = 33;
													this.width = 26;
													this.height = 22;
													this.value = 500;
													return;
												}
												if (type == 2560)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 104;
													this.placeStyle = 6;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2561)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 10;
													this.placeStyle = 30;
													this.width = 14;
													this.height = 28;
													this.value = 200;
													return;
												}
												if (type == 2562)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 88;
													this.placeStyle = 18;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2563)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 93;
													this.placeStyle = 20;
													this.width = 10;
													this.height = 24;
													this.value = 500;
													return;
												}
												if (type == 2564)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 42;
													this.placeStyle = 29;
													this.width = 12;
													this.height = 28;
													this.value = 150;
													return;
												}
												if (type == 2565)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 87;
													this.placeStyle = 23;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2566)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 19;
													this.placeStyle = 19;
													this.width = 8;
													this.height = 10;
													return;
												}
												if (type == 2567)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 90;
													this.placeStyle = 20;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2568)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.autoReuse = true;
													this.createTile = 79;
													this.placeStyle = 25;
													this.width = 28;
													this.height = 20;
													this.value = 2000;
													return;
												}
												if (type == 2569)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 101;
													this.placeStyle = 26;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2570)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 100;
													this.placeStyle = 21;
													this.width = 20;
													this.height = 20;
													this.value = 1500;
													return;
												}
												if (type == 2571)
												{
													this.noWet = true;
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 33;
													this.placeStyle = 21;
													this.width = 8;
													this.value = Item.sellPrice(0, 0, 0, 60);
													this.height = 18;
													return;
												}
												if (type == 2572)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 15;
													this.placeStyle = 31;
													this.width = 12;
													this.height = 30;
													this.value = 150;
													return;
												}
												if (type == 2573)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 34;
													this.placeStyle = 26;
													this.width = 26;
													this.height = 26;
													this.value = 3000;
													return;
												}
												if (type == 2574)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 21;
													this.placeStyle = 34;
													this.width = 26;
													this.height = 22;
													this.value = 500;
													return;
												}
												if (type == 2575)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 104;
													this.placeStyle = 7;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2576)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 10;
													this.placeStyle = 31;
													this.width = 14;
													this.height = 28;
													this.value = 200;
													return;
												}
												if (type == 2577)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 88;
													this.placeStyle = 19;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2578)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 93;
													this.placeStyle = 21;
													this.width = 10;
													this.height = 24;
													this.value = 500;
													return;
												}
												if (type == 2579)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 42;
													this.placeStyle = 30;
													this.width = 12;
													this.height = 28;
													this.value = 150;
													return;
												}
												if (type == 2580)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 87;
													this.placeStyle = 24;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2581)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 19;
													this.placeStyle = 20;
													this.width = 8;
													this.height = 10;
													return;
												}
												if (type == 2582)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 89;
													this.placeStyle = 25;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2583)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 14;
													this.placeStyle = 29;
													this.width = 26;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2584)
												{
													this.mana = 10;
													this.damage = 40;
													this.useStyle = 1;
													this.shootSpeed = 10f;
													this.shoot = 393;
													this.width = 26;
													this.height = 28;
													this.UseSound = SoundID.Item44;
													this.useAnimation = 36;
													this.useTime = 36;
													this.rare = 5;
													this.noMelee = true;
													this.knockBack = 6f;
													this.buffType = 135;
													this.value = Item.buyPrice(0, 5, 0, 0);
													this.summon = true;
													this.autoReuse = true;
													this.reuseDelay = 2;
													return;
												}
												if (type == 2585)
												{
													this.noUseGraphic = true;
													this.damage = 0;
													this.useStyle = 5;
													this.shootSpeed = 13f;
													this.shoot = 396;
													this.width = 18;
													this.height = 28;
													this.UseSound = SoundID.Item1;
													this.useAnimation = 20;
													this.useTime = 20;
													this.rare = 3;
													this.noMelee = true;
													this.value = 20000;
													return;
												}
												if (type == 2586)
												{
													this.useStyle = 5;
													this.shootSpeed = 5.5f;
													this.shoot = 397;
													this.width = 20;
													this.height = 20;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.UseSound = SoundID.Item1;
													this.useAnimation = 45;
													this.useTime = 45;
													this.noUseGraphic = true;
													this.noMelee = true;
													this.value = 75;
													this.damage = 60;
													this.knockBack = 8f;
													this.ranged = true;
													return;
												}
												if (type == 2587)
												{
													this.damage = 0;
													this.useStyle = 1;
													this.shoot = 398;
													this.width = 16;
													this.height = 30;
													this.UseSound = SoundID.Item2;
													this.useAnimation = 20;
													this.useTime = 20;
													this.rare = 3;
													this.noMelee = true;
													this.buffType = 136;
													this.value = Item.sellPrice(0, 2, 0, 0);
													return;
												}
												if (type == 2588)
												{
													this.width = 28;
													this.height = 20;
													this.headSlot = 168;
													this.rare = 1;
													this.value = Item.sellPrice(0, 0, 75, 0);
													this.vanity = true;
													return;
												}
												if (type == 2589)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 240;
													this.width = 30;
													this.height = 30;
													this.value = Item.sellPrice(0, 1, 0, 0);
													this.placeStyle = 55;
													this.rare = 1;
													return;
												}
												if (type == 2590)
												{
													this.useStyle = 5;
													this.shootSpeed = 6.5f;
													this.shoot = 399;
													this.width = 20;
													this.height = 20;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.UseSound = SoundID.Item1;
													this.useAnimation = 40;
													this.useTime = 40;
													this.noUseGraphic = true;
													this.noMelee = true;
													this.value = Item.sellPrice(0, 0, 1, 0);
													this.damage = 23;
													this.knockBack = 7f;
													this.ranged = true;
													this.rare = 1;
													return;
												}
												if (type >= 2591 && type <= 2606)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 104;
													this.placeStyle = 8 + type - 2591;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2607)
												{
													this.maxStack = Item.CommonMaxStack;
													this.width = 12;
													this.height = 12;
													this.rare = 4;
													this.value = Item.sellPrice(0, 0, 5, 0);
													return;
												}
												if (type == 2608)
												{
													this.autoReuse = true;
													this.scale = 1.05f;
													this.useStyle = 1;
													this.useTime = 20;
													this.useAnimation = 20;
													this.knockBack = 6f;
													this.width = 24;
													this.height = 28;
													this.damage = 25;
													this.scale = 1f;
													this.UseSound = SoundID.Item1;
													this.rare = 4;
													this.value = 10000;
													this.melee = true;
													return;
												}
												if (type == 2609)
												{
													this.width = 22;
													this.height = 20;
													this.accessory = true;
													this.value = Item.buyPrice(0, 40, 0, 0);
													this.rare = 8;
													this.wingSlot = 26;
													return;
												}
												if (type == 2610)
												{
													this.useStyle = 5;
													this.useAnimation = 12;
													this.useTime = 12;
													this.width = 38;
													this.height = 10;
													this.damage = 0;
													this.scale = 0.9f;
													this.shoot = 406;
													this.shootSpeed = 8f;
													this.autoReuse = true;
													this.value = Item.buyPrice(0, 1, 50, 0);
													return;
												}
												if (type == 2611)
												{
													this.autoReuse = false;
													this.useStyle = 5;
													this.useAnimation = 20;
													this.useTime = 20;
													this.autoReuse = true;
													this.knockBack = 4.5f;
													this.width = 30;
													this.height = 10;
													this.damage = 66;
													this.shoot = 404;
													this.shootSpeed = 14f;
													this.UseSound = SoundID.Item1;
													this.rare = 8;
													this.value = Item.sellPrice(0, 5, 0, 0);
													this.melee = true;
													this.noMelee = true;
													this.noUseGraphic = true;
													return;
												}
												if (type >= 2612 && type <= 2620)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 21;
													if (type <= 2614)
													{
														this.placeStyle = 35 + (type - 2612) * 2;
													}
													else
													{
														this.placeStyle = 41 + type - 2615;
													}
													this.width = 26;
													this.height = 22;
													this.value = 500;
													return;
												}
												if (type == 2621)
												{
													this.mana = 10;
													this.damage = 50;
													this.useStyle = 1;
													this.shootSpeed = 10f;
													this.shoot = 407;
													this.width = 26;
													this.height = 28;
													this.UseSound = SoundID.Item44;
													this.useAnimation = 36;
													this.useTime = 36;
													this.rare = 8;
													this.noMelee = true;
													this.knockBack = 2f;
													this.buffType = 139;
													this.value = Item.sellPrice(0, 5, 0, 0);
													this.summon = true;
													this.autoReuse = true;
													this.reuseDelay = 2;
													return;
												}
												if (type == 2624)
												{
													this.useStyle = 5;
													this.autoReuse = true;
													this.useAnimation = 24;
													this.useTime = 24;
													this.width = 50;
													this.height = 18;
													this.shoot = 1;
													this.useAmmo = AmmoID.Arrow;
													this.UseSound = SoundID.Item5;
													this.damage = 53;
													this.shootSpeed = 10f;
													this.noMelee = true;
													this.value = Item.sellPrice(0, 5, 0, 0);
													this.ranged = true;
													this.rare = 8;
													this.knockBack = 2f;
													return;
												}
												if (type == 2622)
												{
													this.mana = 20;
													this.damage = 85;
													this.useStyle = 5;
													this.shootSpeed = 6f;
													this.shoot = 409;
													this.width = 26;
													this.height = 28;
													this.UseSound = SoundID.Item84;
													this.useAnimation = 40;
													this.useTime = 40;
													this.autoReuse = true;
													this.rare = 8;
													this.noMelee = true;
													this.knockBack = 5f;
													this.scale = 0.9f;
													this.value = Item.sellPrice(0, 5, 0, 0);
													this.magic = true;
													return;
												}
												if (type == 2625 || type == 2626)
												{
													this.DefaultToSeaShell();
													return;
												}
												if (type >= 2627 && type <= 2630)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 19;
													this.placeStyle = 21 + type - 2627;
													this.width = 8;
													this.height = 10;
													return;
												}
												if (type >= 2631 && type <= 2633)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 18;
													this.placeStyle = 24 + type - 2631;
													this.width = 28;
													this.height = 14;
													this.value = 150;
													return;
												}
												if (type >= 2634 && type <= 2636)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 89;
													this.placeStyle = 26 + type - 2634;
													this.width = 20;
													this.height = 20;
													this.value = 300;
													return;
												}
												if (type == 2623)
												{
													this.autoReuse = true;
													this.mana = 5;
													this.UseSound = SoundID.Item85;
													this.useStyle = 5;
													this.damage = 70;
													this.useAnimation = 9;
													this.useTime = 9;
													this.width = 40;
													this.height = 40;
													this.shoot = 410;
													this.shootSpeed = 15f;
													this.knockBack = 3f;
													this.value = Item.sellPrice(0, 5, 0, 0);
													this.magic = true;
													this.rare = 8;
													this.noMelee = true;
													if (this.Variant == ItemVariants.WeakerVariant)
													{
														this.rare = 2;
														this.value = this.dungeonPrice;
														this.damage = 5;
														return;
													}
												}
												else
												{
													if (type >= 2637 && type <= 2640)
													{
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 88;
														this.placeStyle = 20 + type - 2637;
														this.width = 20;
														this.height = 20;
														this.value = 300;
														return;
													}
													if (type == 2641 || type == 2642)
													{
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 42;
														if (type == 2641)
														{
															this.placeStyle = 31;
														}
														else
														{
															this.placeStyle = 32;
														}
														this.width = 12;
														this.height = 28;
														this.value = 150;
														return;
													}
													if (type >= 2643 && type <= 2647)
													{
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 93;
														this.placeStyle = 22 + type - 2643;
														this.width = 10;
														this.height = 24;
														this.value = 500;
														return;
													}
													if (type >= 2648 && type <= 2651)
													{
														this.noWet = true;
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 33;
														this.width = 8;
														this.height = 18;
														this.value = Item.sellPrice(0, 0, 0, 60);
														this.placeStyle = 22 + type - 2648;
														return;
													}
													if (type >= 2652 && type <= 2657)
													{
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 34;
														this.placeStyle = 27 + type - 2652;
														this.width = 26;
														this.height = 26;
														this.value = 3000;
														return;
													}
													if (type >= 2658 && type <= 2663)
													{
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 90;
														this.placeStyle = 21 + type - 2658;
														this.width = 20;
														this.height = 20;
														this.value = 300;
														return;
													}
													if (type >= 2664 && type <= 2668)
													{
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 100;
														this.placeStyle = 22 + type - 2664;
														this.width = 20;
														this.height = 20;
														this.value = 1500;
														return;
													}
													if (type == 2669)
													{
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.autoReuse = true;
														this.createTile = 79;
														this.placeStyle = 26;
														this.width = 28;
														this.height = 20;
														this.value = 2000;
														return;
													}
													if (type == 2670)
													{
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 101;
														this.width = 20;
														this.height = 20;
														this.value = 300;
														this.placeStyle = 27;
														return;
													}
													if (type == 2671)
													{
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 87;
														this.placeStyle = 25;
														this.width = 20;
														this.height = 20;
														this.value = 300;
														return;
													}
													if (type == 2672)
													{
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 105;
														this.width = 20;
														this.height = 20;
														this.value = 300;
														this.placeStyle = 50;
														return;
													}
													if (type == 2673)
													{
														this.useStyle = 1;
														this.autoReuse = true;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.width = 12;
														this.height = 12;
														this.makeNPC = 374;
														this.noUseGraphic = true;
														this.bait = 666;
														return;
													}
													if (type >= 2674 && type <= 2676)
													{
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.width = 12;
														this.height = 12;
														if (type == 2675)
														{
															this.bait = 30;
															this.value = Item.sellPrice(0, 0, 3, 0);
															return;
														}
														if (type == 2676)
														{
															this.bait = 50;
															this.value = Item.sellPrice(0, 0, 10, 0);
															return;
														}
														this.bait = 15;
														this.value = Item.sellPrice(0, 0, 1, 0);
														return;
													}
													else
													{
														if (type >= 2677 && type <= 2690)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 7;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															switch (type)
															{
															case 2677:
																this.createWall = 153;
																break;
															case 2678:
																this.createWall = 157;
																break;
															case 2679:
																this.createWall = 154;
																break;
															case 2680:
																this.createWall = 158;
																break;
															case 2681:
																this.createWall = 155;
																break;
															case 2682:
																this.createWall = 159;
																break;
															case 2683:
																this.createWall = 156;
																break;
															case 2684:
																this.createWall = 160;
																break;
															case 2685:
																this.createWall = 164;
																break;
															case 2686:
																this.createWall = 161;
																break;
															case 2687:
																this.createWall = 165;
																break;
															case 2688:
																this.createWall = 162;
																break;
															case 2689:
																this.createWall = 166;
																break;
															case 2690:
																this.createWall = 163;
																break;
															}
															this.width = 12;
															this.height = 12;
															return;
														}
														if (type == 2691)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 7;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createWall = 167;
															this.width = 12;
															this.height = 12;
															return;
														}
														if (type == 2692)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 325;
															this.width = 12;
															this.height = 12;
															return;
														}
														if (type == 2693)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 326;
															this.width = 12;
															this.height = 12;
															return;
														}
														if (type == 2694)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 327;
															this.width = 12;
															this.height = 12;
															return;
														}
														if (type == 2695)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 328;
															this.width = 12;
															this.height = 12;
															return;
														}
														if (type == 2696)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 7;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createWall = 168;
															this.width = 12;
															this.height = 12;
															return;
														}
														if (type == 2697)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 329;
															this.width = 12;
															this.height = 12;
															return;
														}
														if (type == 2698)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 7;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createWall = 169;
															this.width = 12;
															this.height = 12;
															return;
														}
														if (type == 2699)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 471;
															this.width = 30;
															this.height = 30;
															this.value = Item.sellPrice(0, 0, 0, 50);
															return;
														}
														if (type == 2700)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 335;
															this.width = 26;
															this.height = 22;
															this.value = Item.buyPrice(0, 5, 0, 0);
															this.mech = true;
															return;
														}
														if (type == 2701)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 336;
															this.width = 12;
															this.height = 12;
															return;
														}
														if (type >= 2702 && type <= 2737)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 337;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = type - 2702;
															return;
														}
														if (type == 2738)
														{
															this.createTile = 338;
															this.placeStyle = 0;
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.width = 12;
															this.height = 30;
															this.value = Item.buyPrice(0, 3, 0, 0);
															this.mech = true;
															return;
														}
														if (type == 2739)
														{
															this.useStyle = 1;
															this.useAnimation = 15;
															this.useTime = 7;
															this.useTurn = true;
															this.autoReuse = true;
															this.width = 16;
															this.height = 16;
															this.maxStack = Item.CommonMaxStack;
															this.createTile = 314;
															this.placeStyle = 2;
															this.consumable = true;
															this.cartTrack = true;
															this.mech = true;
															this.tileBoost = 2;
															this.value = Item.buyPrice(0, 0, 50, 0);
															return;
														}
														if (type == 2740)
														{
															this.useStyle = 1;
															this.autoReuse = true;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.width = 12;
															this.height = 12;
															this.makeNPC = 377;
															this.noUseGraphic = true;
															this.bait = 10;
															return;
														}
														if (type == 2741)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 339;
															this.width = 12;
															this.height = 12;
															return;
														}
														if (type == 2742)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.consumable = true;
															this.createTile = 139;
															this.placeStyle = 31;
															this.width = 24;
															this.height = 24;
															this.rare = 4;
															this.value = 100000;
															this.accessory = true;
															this.hasVanityEffects = true;
															return;
														}
														if (type == 2743)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 14;
															this.placeStyle = 30;
															this.width = 26;
															this.height = 20;
															this.value = 300;
															return;
														}
														if (type == 2744)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 19;
															this.placeStyle = 25;
															this.width = 8;
															this.height = 10;
															return;
														}
														if (type == 2745)
														{
															this.useStyle = 1;
															this.useTurn = false;
															this.useAnimation = 20;
															this.useTime = 20;
															this.width = 24;
															this.height = 28;
															this.damage = 8;
															this.knockBack = 6f;
															this.UseSound = SoundID.Item1;
															this.scale = 1f;
															this.value = 100;
															this.melee = true;
															return;
														}
														if (type == 2746)
														{
															this.autoReuse = true;
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 33;
															this.useTime = 23;
															this.hammer = 35;
															this.width = 24;
															this.height = 28;
															this.damage = 4;
															this.knockBack = 5.5f;
															this.scale = 1f;
															this.UseSound = SoundID.Item1;
															this.value = 50;
															this.melee = true;
															return;
														}
														if (type == 2747)
														{
															this.useStyle = 5;
															this.useAnimation = 29;
															this.useTime = 29;
															this.width = 12;
															this.height = 28;
															this.shoot = 1;
															this.useAmmo = AmmoID.Arrow;
															this.UseSound = SoundID.Item5;
															this.damage = 6;
															this.shootSpeed = 6.6f;
															this.noMelee = true;
															this.value = 100;
															this.ranged = true;
															return;
														}
														if (type == 2748)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 21;
															this.placeStyle = 47;
															this.width = 26;
															this.height = 22;
															this.value = 500;
															return;
														}
														if (type == 2749)
														{
															this.mana = 10;
															this.damage = 36;
															this.useStyle = 1;
															this.shootSpeed = 10f;
															this.shoot = 423;
															this.width = 26;
															this.height = 28;
															this.UseSound = SoundID.Item44;
															this.useAnimation = 36;
															this.useTime = 36;
															this.rare = 8;
															this.noMelee = true;
															this.knockBack = 2f;
															this.buffType = 140;
															this.value = Item.sellPrice(0, 10, 0, 0);
															this.summon = true;
															this.autoReuse = true;
															this.reuseDelay = 2;
															return;
														}
														if (type == 2750)
														{
															this.autoReuse = true;
															this.mana = 9;
															this.useStyle = 5;
															this.damage = 50;
															this.useAnimation = 10;
															this.useTime = 10;
															this.width = 40;
															this.height = 40;
															this.shoot = 424;
															this.shootSpeed = 10f;
															this.knockBack = 4.5f;
															this.value = Item.sellPrice(0, 2, 0, 0);
															this.magic = true;
															this.rare = 5;
															this.noMelee = true;
															this.UseSound = SoundID.Item88;
															return;
														}
														if (type >= 2751 && type <= 2755)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 340 + type - 2751;
															this.width = 12;
															this.height = 12;
															return;
														}
														if (type == 2756)
														{
															this.UseSound = SoundID.Item6;
															this.useStyle = 9;
															this.useTurn = true;
															this.useAnimation = 17;
															this.useTime = 17;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.width = 14;
															this.height = 24;
															this.value = 1000;
															this.rare = 1;
															return;
														}
														if (type == 2757)
														{
															this.width = 18;
															this.height = 18;
															this.defense = 14;
															this.headSlot = 169;
															this.glowMask = 26;
															this.rare = 10;
															this.value = Item.sellPrice(0, 7, 0, 0);
															return;
														}
														if (type == 2758)
														{
															this.width = 18;
															this.height = 18;
															this.defense = 28;
															this.bodySlot = 175;
															this.glowMask = 27;
															this.rare = 10;
															this.value = Item.sellPrice(0, 7, 0, 0) * 2;
															return;
														}
														if (type == 2759)
														{
															this.width = 18;
															this.height = 18;
															this.defense = 20;
															this.legSlot = 110;
															this.rare = 10;
															this.value = (int)((double)Item.sellPrice(0, 7, 0, 0) * 1.5);
															return;
														}
														if (type == 2760)
														{
															this.width = 18;
															this.height = 18;
															this.defense = 14;
															this.headSlot = 170;
															this.glowMask = 28;
															this.rare = 10;
															this.value = Item.sellPrice(0, 7, 0, 0);
															return;
														}
														if (type == 2761)
														{
															this.width = 18;
															this.height = 18;
															this.defense = 18;
															this.bodySlot = 176;
															this.glowMask = 29;
															this.rare = 10;
															this.value = Item.sellPrice(0, 7, 0, 0) * 2;
															return;
														}
														if (type == 2762)
														{
															this.width = 18;
															this.height = 18;
															this.defense = 14;
															this.legSlot = 111;
															this.glowMask = 30;
															this.rare = 10;
															this.value = (int)((double)Item.sellPrice(0, 7, 0, 0) * 1.5);
															return;
														}
														if (type == 2763)
														{
															this.width = 18;
															this.height = 18;
															this.defense = 24;
															this.headSlot = 171;
															this.rare = 10;
															this.value = Item.sellPrice(0, 7, 0, 0);
															return;
														}
														if (type == 2764)
														{
															this.width = 18;
															this.height = 18;
															this.defense = 34;
															this.bodySlot = 177;
															this.rare = 10;
															this.value = Item.sellPrice(0, 7, 0, 0) * 2;
															return;
														}
														if (type == 2765)
														{
															this.width = 18;
															this.height = 18;
															this.defense = 20;
															this.legSlot = 112;
															this.rare = 10;
															this.value = (int)((double)Item.sellPrice(0, 7, 0, 0) * 1.5);
															return;
														}
														if (type == 2767)
														{
															this.useStyle = 4;
															this.width = 22;
															this.height = 14;
															this.consumable = true;
															this.useAnimation = 45;
															this.useTime = 45;
															this.maxStack = Item.CommonMaxStack;
															this.rare = 8;
															return;
														}
														if (type == 2766)
														{
															this.width = 22;
															this.height = 14;
															this.maxStack = Item.CommonMaxStack;
															this.rare = 8;
															return;
														}
														if (type == 2770)
														{
															this.width = 22;
															this.height = 20;
															this.accessory = true;
															this.value = this.eclipseMothronPrice;
															this.rare = 8;
															this.wingSlot = 27;
															return;
														}
														if (type == 2769)
														{
															this.useStyle = 1;
															this.width = 32;
															this.height = 30;
															this.UseSound = SoundID.Item25;
															this.useAnimation = 20;
															this.useTime = 20;
															this.rare = 8;
															this.noMelee = true;
															this.mountType = 7;
															this.value = Item.sellPrice(0, 5, 0, 0);
															return;
														}
														if (type == 2768)
														{
															this.useStyle = 1;
															this.width = 32;
															this.height = 30;
															this.UseSound = SoundID.Item25;
															this.useAnimation = 20;
															this.useTime = 20;
															this.rare = 8;
															this.noMelee = true;
															this.mountType = 8;
															this.value = Item.sellPrice(0, 5, 0, 0);
															return;
														}
														if (type == 2771)
														{
															this.useStyle = 1;
															this.channel = true;
															this.width = 34;
															this.height = 34;
															this.UseSound = SoundID.Item90;
															this.useAnimation = 20;
															this.useTime = 20;
															this.rare = 8;
															this.noMelee = true;
															this.mountType = 9;
															this.value = Item.sellPrice(0, 5, 0, 0);
															return;
														}
														if (type == 2772)
														{
															this.autoReuse = true;
															this.useStyle = 1;
															this.useAnimation = 25;
															this.knockBack = 6f;
															this.useTime = 7;
															this.width = 54;
															this.height = 54;
															this.damage = 100;
															this.axe = 27;
															this.UseSound = SoundID.Item1;
															this.rare = 10;
															this.scale = 1.05f;
															this.value = Item.sellPrice(0, 6, 0, 0);
															this.melee = true;
															this.glowMask = 1;
															this.tileBoost += 4;
															return;
														}
														if (type == 2773)
														{
															this.useStyle = 5;
															this.useAnimation = 25;
															this.useTime = 7;
															this.shootSpeed = 28f;
															this.knockBack = 4f;
															this.width = 56;
															this.height = 22;
															this.damage = 80;
															this.axe = 27;
															this.UseSound = SoundID.Item23;
															this.shoot = 427;
															this.rare = 10;
															this.value = Item.sellPrice(0, 6, 0, 0);
															this.noMelee = true;
															this.noUseGraphic = true;
															this.melee = true;
															this.channel = true;
															this.glowMask = 20;
															this.tileBoost += 4;
															return;
														}
														if (type == 2774)
														{
															this.useStyle = 5;
															this.useAnimation = 25;
															this.useTime = 4;
															this.shootSpeed = 32f;
															this.knockBack = 0.5f;
															this.width = 54;
															this.height = 26;
															this.damage = 50;
															this.pick = 225;
															this.UseSound = SoundID.Item23;
															this.shoot = 428;
															this.rare = 10;
															this.value = Item.sellPrice(0, 7, 0, 0);
															this.noMelee = true;
															this.noUseGraphic = true;
															this.melee = true;
															this.channel = true;
															this.glowMask = 21;
															this.tileBoost += 3;
															return;
														}
														if (type == 2776)
														{
															this.useStyle = 1;
															this.useAnimation = 12;
															this.useTime = 6;
															this.knockBack = 5.5f;
															this.useTurn = true;
															this.autoReuse = true;
															this.width = 36;
															this.height = 36;
															this.damage = 80;
															this.pick = 225;
															this.UseSound = SoundID.Item1;
															this.rare = 10;
															this.value = Item.sellPrice(0, 7, 0, 0);
															this.melee = true;
															this.glowMask = 5;
															this.tileBoost += 4;
															return;
														}
														if (type == 2775)
														{
															this.useTurn = true;
															this.autoReuse = true;
															this.useStyle = 1;
															this.useAnimation = 30;
															this.useTime = 7;
															this.knockBack = 7f;
															this.width = 44;
															this.height = 42;
															this.damage = 110;
															this.hammer = 100;
															this.UseSound = SoundID.Item1;
															this.rare = 10;
															this.value = Item.sellPrice(0, 8, 0, 0);
															this.melee = true;
															this.scale = 1.1f;
															this.glowMask = 4;
															this.tileBoost += 4;
															return;
														}
														if (type == 2777)
														{
															this.SetDefaults3(2772);
															type = 2777;
															this.glowMask = 6;
															return;
														}
														if (type == 2778)
														{
															this.SetDefaults3(2773);
															type = 2778;
															this.shoot = 429;
															this.glowMask = 22;
															return;
														}
														if (type == 2779)
														{
															this.SetDefaults3(2774);
															type = 2779;
															this.shoot = 430;
															this.glowMask = 23;
															return;
														}
														if (type == 2780)
														{
															this.SetDefaults3(2775);
															type = 2780;
															this.glowMask = 9;
															return;
														}
														if (type == 2781)
														{
															this.SetDefaults3(2776);
															type = 2781;
															this.glowMask = 10;
															return;
														}
														if (type == 2782)
														{
															this.SetDefaults3(2772);
															type = 2782;
															this.glowMask = -1;
															return;
														}
														if (type == 2783)
														{
															this.SetDefaults3(2773);
															type = 2783;
															this.shoot = 431;
															this.glowMask = -1;
															return;
														}
														if (type == 2784)
														{
															this.SetDefaults3(2774);
															type = 2784;
															this.shoot = 432;
															this.glowMask = -1;
															return;
														}
														if (type == 2785)
														{
															this.SetDefaults3(2775);
															type = 2785;
															this.glowMask = -1;
															return;
														}
														if (type == 2786)
														{
															this.SetDefaults3(2776);
															type = 2786;
															this.glowMask = -1;
															return;
														}
														if (type == 2787)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 345;
															this.width = 12;
															this.height = 12;
															return;
														}
														if (type == 2788)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 7;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createWall = 172;
															this.width = 12;
															this.height = 12;
															return;
														}
														if (type >= 2789 && type <= 2791)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 7;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createWall = 173 + type - 2789;
															this.width = 12;
															this.height = 12;
															return;
														}
														if (type >= 2792 && type <= 2794)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 346 + type - 2792;
															this.width = 12;
															this.height = 12;
															return;
														}
														if (type == 2795)
														{
															this.useStyle = 5;
															this.useAnimation = 20;
															this.useTime = 20;
															this.shootSpeed = 20f;
															this.knockBack = 2f;
															this.width = 20;
															this.height = 12;
															this.damage = 60;
															this.shoot = 439;
															this.mana = 6;
															this.rare = 8;
															this.value = Item.sellPrice(0, 10, 0, 0);
															this.noMelee = true;
															this.noUseGraphic = true;
															this.magic = true;
															this.channel = true;
															this.glowMask = 47;
															return;
														}
														if (type == 2796)
														{
															this.useStyle = 5;
															this.useAnimation = 12;
															this.useTime = 12;
															this.width = 50;
															this.height = 18;
															this.shoot = 442;
															this.useAmmo = 771;
															this.glowMask = 36;
															this.UseSound = SoundID.Item92;
															this.damage = 40;
															this.shootSpeed = 12f;
															this.noMelee = true;
															this.value = Item.sellPrice(0, 10, 0, 0);
															this.ranged = true;
															this.rare = 8;
															this.knockBack = 2f;
															return;
														}
														if (type == 2797)
														{
															this.useStyle = 5;
															this.useAnimation = 21;
															this.useTime = 21;
															this.autoReuse = true;
															this.width = 50;
															this.height = 18;
															this.shoot = 444;
															this.useAmmo = AmmoID.Bullet;
															this.glowMask = 38;
															this.UseSound = SoundID.Item95;
															this.damage = 45;
															this.shootSpeed = 12f;
															this.noMelee = true;
															this.value = Item.sellPrice(0, 10, 0, 0);
															this.ranged = true;
															this.rare = 8;
															this.knockBack = 3f;
															return;
														}
														if (type == 2798)
														{
															this.useStyle = 5;
															this.useAnimation = 25;
															this.useTime = 6;
															this.shootSpeed = 36f;
															this.knockBack = 4.75f;
															this.width = 20;
															this.height = 12;
															this.damage = 35;
															this.pick = 230;
															this.shoot = 445;
															this.rare = 8;
															this.value = Item.sellPrice(0, 10, 0, 0);
															this.tileBoost = 11;
															this.noMelee = true;
															this.noUseGraphic = true;
															this.melee = true;
															this.channel = true;
															this.glowMask = 39;
															return;
														}
														if (type == 2799)
														{
															this.width = 10;
															this.height = 26;
															this.accessory = true;
															this.value = Item.buyPrice(0, 1, 0, 0);
															this.rare = 1;
															return;
														}
														if (type == 2800)
														{
															this.noUseGraphic = true;
															this.damage = 0;
															this.knockBack = 7f;
															this.useStyle = 5;
															this.shootSpeed = 14f;
															this.shoot = 446;
															this.width = 18;
															this.height = 28;
															this.UseSound = SoundID.Item1;
															this.useAnimation = 20;
															this.useTime = 20;
															this.rare = 7;
															this.noMelee = true;
															this.value = Item.sellPrice(0, 2, 50, 0);
															return;
														}
														if (type == 2801)
														{
															this.width = 28;
															this.height = 20;
															this.headSlot = 172;
															this.rare = 1;
															this.vanity = true;
															return;
														}
														if (type == 2802)
														{
															this.width = 28;
															this.height = 20;
															this.headSlot = 173;
															this.rare = 1;
															this.vanity = true;
															return;
														}
														if (type == 2803)
														{
															this.width = 18;
															this.height = 18;
															this.headSlot = 174;
															this.vanity = true;
															this.value = Item.sellPrice(0, 1, 0, 0);
															return;
														}
														if (type == 2804)
														{
															this.width = 18;
															this.height = 18;
															this.bodySlot = 178;
															this.vanity = true;
															this.value = Item.sellPrice(0, 1, 0, 0);
															return;
														}
														if (type == 2805)
														{
															this.width = 18;
															this.height = 18;
															this.legSlot = 113;
															this.vanity = true;
															this.value = Item.sellPrice(0, 1, 0, 0);
															return;
														}
														if (type == 2806)
														{
															this.width = 18;
															this.height = 18;
															this.headSlot = 175;
															this.vanity = true;
															this.value = Item.sellPrice(0, 1, 0, 0);
															this.glowMask = 46;
															return;
														}
														if (type == 2807)
														{
															this.width = 18;
															this.height = 18;
															this.bodySlot = 179;
															this.vanity = true;
															this.value = Item.sellPrice(0, 1, 0, 0);
															this.glowMask = 45;
															return;
														}
														if (type == 2808)
														{
															this.width = 18;
															this.height = 18;
															this.legSlot = 114;
															this.vanity = true;
															this.value = Item.sellPrice(0, 1, 0, 0);
															return;
														}
														if (type == 2822)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 19;
															this.placeStyle = 26;
															this.width = 8;
															this.height = 10;
															return;
														}
														if (type == 2810)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 90;
															this.placeStyle = 27;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															return;
														}
														if (type == 2811)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.autoReuse = true;
															this.createTile = 79;
															this.placeStyle = 27;
															this.width = 28;
															this.height = 20;
															this.value = 2000;
															return;
														}
														if (type == 2823)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 89;
															this.placeStyle = 29;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															return;
														}
														if (type == 2825)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 100;
															this.placeStyle = 27;
															this.width = 20;
															this.height = 20;
															this.value = 1500;
															return;
														}
														if (type == 2818)
														{
															this.noWet = true;
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 33;
															this.placeStyle = 26;
															this.width = 8;
															this.value = Item.sellPrice(0, 0, 0, 60);
															this.height = 18;
															return;
														}
														if (type == 2812)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 15;
															this.placeStyle = 32;
															this.width = 12;
															this.height = 30;
															this.value = 150;
															return;
														}
														if (type == 2813)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 34;
															this.placeStyle = 33;
															this.width = 26;
															this.height = 26;
															this.value = 3000;
															return;
														}
														if (type == 2814)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 21;
															this.placeStyle = 48;
															this.width = 26;
															this.height = 22;
															this.value = 500;
															return;
														}
														if (type == 2815)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 10;
															this.placeStyle = 32;
															this.width = 14;
															this.height = 28;
															this.value = 200;
															return;
														}
														if (type == 2816)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 88;
															this.placeStyle = 24;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															return;
														}
														if (type == 2820)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 42;
															this.width = 12;
															this.height = 28;
															this.placeStyle = 33;
															this.value = 150;
															return;
														}
														if (type == 2821)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 87;
															this.placeStyle = 26;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															return;
														}
														if (type == 2824)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 14;
															this.placeStyle = 31;
															this.width = 26;
															this.height = 20;
															this.value = 300;
															return;
														}
														if (type == 2819)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 93;
															this.placeStyle = 27;
															this.width = 10;
															this.height = 24;
															this.value = 500;
															return;
														}
														if (type == 2826)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 18;
															this.placeStyle = 27;
															this.width = 28;
															this.height = 14;
															this.value = 150;
															return;
														}
														if (type == 2817)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 101;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 28;
															return;
														}
														if (type == 2809)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 104;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 24;
															return;
														}
														if (type >= 2827 && type <= 2855)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 172;
															this.placeStyle = type - 2827;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															if (type == 2843)
															{
																this.value = Item.buyPrice(0, 10, 0, 0);
																return;
															}
														}
														else
														{
															if (type == 2856)
															{
																this.width = 28;
																this.height = 20;
																this.headSlot = 176;
																this.rare = 1;
																this.vanity = true;
																this.value = Item.buyPrice(0, 10, 0, 0);
																return;
															}
															if (type == 2857)
															{
																this.width = 28;
																this.height = 20;
																this.headSlot = 177;
																this.rare = 1;
																this.vanity = true;
																this.value = Item.buyPrice(0, 10, 0, 0);
																return;
															}
															if (type == 2858)
															{
																this.width = 18;
																this.height = 14;
																this.bodySlot = 180;
																this.rare = 1;
																this.vanity = true;
																this.value = Item.buyPrice(0, 10, 0, 0);
																return;
															}
															if (type == 2859)
															{
																this.width = 18;
																this.height = 14;
																this.bodySlot = 181;
																this.rare = 1;
																this.vanity = true;
																this.value = Item.buyPrice(0, 10, 0, 0);
																return;
															}
															if (type == 2860)
															{
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.glowMask = 93;
																this.createTile = 350;
																this.width = 12;
																this.height = 12;
																return;
															}
															if (type == 2861)
															{
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 7;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.glowMask = 95;
																this.createWall = 176;
																this.width = 12;
																this.height = 12;
																return;
															}
															if (type == 2862)
															{
																this.width = 28;
																this.height = 12;
																this.headSlot = 178;
																this.rare = 3;
																this.value = Item.sellPrice(0, 1, 0, 0);
																this.vanity = true;
																this.glowMask = 97;
																return;
															}
															if (type == 2863)
															{
																this.width = 20;
																this.height = 26;
																this.maxStack = Item.CommonMaxStack;
																this.rare = 3;
																this.glowMask = 98;
																this.value = Item.buyPrice(0, 30, 0, 0);
																this.UseSound = SoundID.Item3;
																this.useStyle = 9;
																this.useTurn = true;
																this.useAnimation = 17;
																this.useTime = 17;
																this.consumable = true;
																return;
															}
															if (type == 2864)
															{
																this.glowMask = 99;
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 1, 50, 0);
																this.rare = 3;
																return;
															}
															if (type == 2865)
															{
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.createTile = 242;
																this.width = 30;
																this.height = 30;
																this.value = Item.buyPrice(0, 2, 0, 0);
																this.placeStyle = 27;
																return;
															}
															if (type == 2866)
															{
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.createTile = 242;
																this.width = 30;
																this.height = 30;
																this.value = Item.buyPrice(0, 2, 0, 0);
																this.placeStyle = 28;
																return;
															}
															if (type == 2867)
															{
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.createTile = 242;
																this.width = 30;
																this.height = 30;
																this.value = Item.buyPrice(0, 2, 0, 0);
																this.placeStyle = 29;
																return;
															}
															if (type == 2868)
															{
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.createTile = 351;
																this.width = 12;
																this.height = 12;
																this.value = Item.buyPrice(0, 0, 1, 0);
																return;
															}
															if (type == 2869)
															{
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 1, 50, 0);
																this.rare = 3;
																return;
															}
															if (type == 2870)
															{
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 1, 50, 0);
																this.rare = 3;
																return;
															}
															if (type == 2871)
															{
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 0, 75, 0);
																this.rare = 2;
																return;
															}
															if (type == 2872)
															{
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 0, 75, 0);
																this.rare = 2;
																return;
															}
															if (type == 2873)
															{
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 1, 50, 0);
																this.rare = 3;
																return;
															}
															if (type == 2874)
															{
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = 10000;
																this.rare = 1;
																return;
															}
															if (type == 2875)
															{
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = 10000;
																this.rare = 1;
																return;
															}
															if (type == 2876)
															{
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = 10000;
																this.rare = 1;
																return;
															}
															if (type == 2877)
															{
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = 10000;
																this.rare = 1;
																return;
															}
															if (type == 2878)
															{
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 1, 50, 0);
																this.rare = 3;
																this.glowMask = 105;
																return;
															}
															if (type == 2879)
															{
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 1, 50, 0);
																this.rare = 3;
																this.glowMask = 104;
																return;
															}
															if (type == 2880)
															{
																this.useStyle = 1;
																this.useAnimation = 20;
																this.useTime = 20;
																this.autoReuse = true;
																this.shoot = 451;
																this.shootSpeed = 11f;
																this.knockBack = 4.5f;
																this.width = 40;
																this.height = 40;
																this.damage = 100;
																this.scale = 1.05f;
																this.UseSound = SoundID.Item1;
																this.rare = 8;
																this.value = Item.sellPrice(0, 10, 0, 0);
																this.melee = true;
																return;
															}
															if (type == 2882)
															{
																this.useStyle = 5;
																this.useAnimation = 20;
																this.useTime = 20;
																this.shootSpeed = 14f;
																this.knockBack = 2f;
																this.width = 16;
																this.height = 16;
																this.damage = 100;
																this.UseSound = SoundID.Item75;
																this.shoot = 460;
																this.mana = 14;
																this.rare = 8;
																this.value = Item.sellPrice(0, 10, 0, 0);
																this.noMelee = true;
																this.noUseGraphic = true;
																this.magic = true;
																this.channel = true;
																this.glowMask = 102;
																return;
															}
															if (type == 2883)
															{
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 1, 50, 0);
																this.rare = 3;
																this.glowMask = 103;
																return;
															}
															if (type == 2885)
															{
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 1, 50, 0);
																this.rare = 3;
																this.glowMask = 106;
																return;
															}
															if (type == 2884)
															{
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 1, 50, 0);
																this.rare = 3;
																this.glowMask = 107;
																return;
															}
															if (type == 2887)
															{
																this.width = 16;
																this.height = 18;
																this.maxStack = Item.CommonMaxStack;
																this.value = 50;
																return;
															}
															if (type == 2886)
															{
																this.damage = 0;
																this.useStyle = 1;
																this.shootSpeed = 4f;
																this.shoot = 463;
																this.width = 16;
																this.height = 24;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.UseSound = SoundID.Item1;
																this.useAnimation = 15;
																this.useTime = 15;
																this.noMelee = true;
																this.value = 100;
																return;
															}
															if (type == 2888)
															{
																this.useStyle = 5;
																this.useAnimation = 23;
																this.useTime = 23;
																this.width = 12;
																this.height = 28;
																this.shoot = 469;
																this.useAmmo = AmmoID.Arrow;
																this.UseSound = SoundID.Item97;
																this.damage = 23;
																this.shootSpeed = 8f;
																this.knockBack = 3f;
																this.rare = 3;
																this.noMelee = true;
																this.value = this.queenBeePrice;
																this.ranged = true;
																return;
															}
															if (type >= 2889 && type <= 2895)
															{
																this.useStyle = 1;
																this.autoReuse = true;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.width = 12;
																this.height = 12;
																this.makeNPC = (short)(442 + type - 2889);
																this.noUseGraphic = true;
																this.value = Item.sellPrice(0, 10, 0, 0);
																this.rare = 3;
																if (type == 2895 || type == 2893 || type == 2891)
																{
																	this.bait = 50;
																	return;
																}
															}
															else
															{
																if (type == 2896)
																{
																	this.useStyle = 1;
																	this.shootSpeed = 4f;
																	this.shoot = 470;
																	this.width = 8;
																	this.height = 28;
																	this.maxStack = Item.CommonMaxStack;
																	this.consumable = true;
																	this.UseSound = SoundID.Item1;
																	this.useAnimation = 40;
																	this.useTime = 40;
																	this.noUseGraphic = true;
																	this.noMelee = true;
																	this.value = Item.buyPrice(0, 0, 20, 0);
																	this.rare = 1;
																	return;
																}
																if (type >= 2897 && type <= 2994)
																{
																	this.useStyle = 1;
																	this.useTurn = true;
																	this.useAnimation = 15;
																	this.useTime = 10;
																	this.autoReuse = true;
																	this.maxStack = Item.CommonMaxStack;
																	this.consumable = true;
																	this.createTile = 91;
																	this.placeStyle = 109 + type - 2897;
																	this.width = 10;
																	this.height = 24;
																	this.value = 1000;
																	this.rare = 1;
																	return;
																}
																if (type == 2995)
																{
																	this.useStyle = 1;
																	this.useTurn = true;
																	this.useAnimation = 15;
																	this.useTime = 10;
																	this.autoReuse = true;
																	this.maxStack = Item.CommonMaxStack;
																	this.consumable = true;
																	this.createTile = 242;
																	this.width = 30;
																	this.height = 30;
																	this.value = Item.sellPrice(0, 0, 10, 0);
																	this.placeStyle = 30;
																	return;
																}
																if (type == 2996)
																{
																	this.useStyle = 1;
																	this.useTurn = true;
																	this.useAnimation = 15;
																	this.useTime = 8;
																	this.autoReuse = true;
																	this.maxStack = Item.CommonMaxStack;
																	this.consumable = true;
																	this.createTile = 353;
																	this.width = 12;
																	this.height = 12;
																	this.tileBoost += 3;
																	return;
																}
																if (type == 2997)
																{
																	this.maxStack = Item.CommonMaxStack;
																	this.consumable = true;
																	this.width = 14;
																	this.height = 24;
																	this.value = 1000;
																	this.rare = 1;
																	return;
																}
																if (type == 2998)
																{
																	this.width = 24;
																	this.height = 24;
																	this.accessory = true;
																	this.value = 100000;
																	this.rare = 4;
																	return;
																}
																if (type == 2999)
																{
																	this.rare = 1;
																	this.useStyle = 1;
																	this.useTurn = true;
																	this.useAnimation = 15;
																	this.useTime = 10;
																	this.autoReuse = true;
																	this.maxStack = Item.CommonMaxStack;
																	this.consumable = true;
																	this.createTile = 354;
																	this.width = 12;
																	this.height = 12;
																	this.value = 100000;
																	return;
																}
																if (type == 3000)
																{
																	this.rare = 1;
																	this.useStyle = 1;
																	this.useTurn = true;
																	this.useAnimation = 15;
																	this.useTime = 10;
																	this.autoReuse = true;
																	this.maxStack = Item.CommonMaxStack;
																	this.consumable = true;
																	this.createTile = 355;
																	this.width = 12;
																	this.height = 12;
																	this.value = 100000;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}

		// Token: 0x06000611 RID: 1553 RVA: 0x00299B44 File Offset: 0x00297D44
		public void DefaultToQuestFish()
		{
			this.questItem = true;
			this.maxStack = 1;
			this.width = 26;
			this.height = 26;
			this.uniqueStack = true;
			this.rare = -11;
		}

		// Token: 0x06000612 RID: 1554 RVA: 0x00299B74 File Offset: 0x00297D74
		public void SetDefaults4(int type)
		{
			if (type == 3001)
			{
				this.rare = 1;
				this.UseSound = SoundID.Item3;
				this.healLife = 70;
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.potion = true;
				this.value = Item.buyPrice(0, 0, 5, 0);
				return;
			}
			if (type == 3061)
			{
				this.width = 30;
				this.height = 30;
				this.accessory = true;
				this.rare = 5;
				this.value = Item.buyPrice(0, 20, 0, 0);
				this.backSlot = 8;
				return;
			}
			if (type == 3002)
			{
				this.alpha = 0;
				this.color = new Color(255, 255, 255, 0);
				this.rare = 1;
				this.useStyle = 1;
				this.shootSpeed = 6f;
				this.shoot = 473;
				this.width = 12;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 15;
				this.useTime = 15;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 0, 1, 50);
				this.holdStyle = 1;
				return;
			}
			if (type == 3003)
			{
				this.shootSpeed = 3.5f;
				this.shoot = 474;
				this.damage = 8;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 2.5f;
				this.value = Item.buyPrice(0, 0, 0, 15);
				this.ranged = true;
				return;
			}
			if (type == 3004)
			{
				this.flame = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.holdStyle = 1;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 4;
				this.placeStyle = 13;
				this.width = 10;
				this.height = 12;
				this.value = Item.buyPrice(0, 0, 1, 0);
				return;
			}
			if (type == 3005)
			{
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 475;
				this.damage = 0;
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.noUseGraphic = true;
				this.noMelee = true;
				return;
			}
			if (type == 3006)
			{
				this.mana = 10;
				this.autoReuse = true;
				this.damage = 35;
				this.useStyle = 5;
				this.shootSpeed = 10f;
				this.shoot = 476;
				this.width = 26;
				this.height = 28;
				this.useAnimation = 12;
				this.useTime = 12;
				this.rare = 5;
				this.noMelee = true;
				this.knockBack = 2.5f;
				this.value = Item.sellPrice(0, 8, 0, 0);
				this.magic = true;
				return;
			}
			if (type == 3007)
			{
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 22;
				this.useTime = 22;
				this.width = 38;
				this.height = 6;
				this.shoot = 10;
				this.useAmmo = AmmoID.Dart;
				this.UseSound = SoundID.Item98;
				this.damage = 28;
				this.shootSpeed = 13f;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 8, 0, 0);
				this.knockBack = 3.5f;
				this.useAmmo = AmmoID.Dart;
				this.ranged = true;
				this.rare = 5;
				this.scale = 0.9f;
				return;
			}
			if (type == 3008)
			{
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 38;
				this.useTime = 38;
				this.width = 38;
				this.height = 6;
				this.shoot = 10;
				this.useAmmo = AmmoID.Dart;
				this.UseSound = SoundID.Item99;
				this.damage = 52;
				this.shootSpeed = 14.5f;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 8, 0, 0);
				this.knockBack = 5.5f;
				this.useAmmo = AmmoID.Dart;
				this.ranged = true;
				this.rare = 5;
				this.scale = 1f;
				return;
			}
			if (type == 3009)
			{
				this.shoot = 477;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.ammo = AmmoID.Dart;
				this.damage = 14;
				this.knockBack = 3.5f;
				this.shootSpeed = 1f;
				this.ranged = true;
				this.rare = 3;
				this.value = Item.sellPrice(0, 0, 0, 6);
				this.consumable = true;
				return;
			}
			if (type == 3010)
			{
				this.shoot = 478;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.ammo = AmmoID.Dart;
				this.damage = 9;
				this.knockBack = 2.2f;
				this.shootSpeed = 3f;
				this.ranged = true;
				this.rare = 3;
				this.value = Item.sellPrice(0, 0, 0, 6);
				this.consumable = true;
				return;
			}
			if (type == 3011)
			{
				this.shoot = 479;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.ammo = AmmoID.Dart;
				this.damage = 10;
				this.knockBack = 2.5f;
				this.shootSpeed = 3f;
				this.ranged = true;
				this.rare = 3;
				this.value = Item.sellPrice(0, 0, 0, 6);
				this.consumable = true;
				return;
			}
			if (type == 3012)
			{
				this.autoReuse = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 14;
				this.useTime = 14;
				this.knockBack = 3.25f;
				this.width = 30;
				this.height = 10;
				this.damage = 59;
				this.shoot = 481;
				this.shootSpeed = 9f;
				this.UseSound = SoundID.Item1;
				this.rare = 5;
				this.value = Item.sellPrice(0, 8, 0, 0);
				this.melee = true;
				this.noUseGraphic = true;
				this.noMelee = true;
				return;
			}
			if (type == 3013)
			{
				this.useStyle = 1;
				this.useTurn = true;
				this.autoReuse = true;
				this.useAnimation = 8;
				this.useTime = 8;
				this.width = 24;
				this.height = 28;
				this.damage = 60;
				this.knockBack = 6f;
				this.UseSound = SoundID.Item1;
				this.scale = 1f;
				this.melee = true;
				this.rare = 5;
				this.value = Item.sellPrice(0, 8, 0, 0);
				this.melee = true;
				return;
			}
			if (type == 3014)
			{
				this.mana = 40;
				this.autoReuse = true;
				this.damage = 43;
				this.useStyle = 1;
				this.shootSpeed = 15f;
				this.shoot = 482;
				this.width = 26;
				this.height = 28;
				this.UseSound = SoundID.Item100;
				this.useAnimation = 24;
				this.useTime = 24;
				this.rare = 5;
				this.noMelee = true;
				this.knockBack = 8f;
				this.value = Item.sellPrice(0, 8, 0, 0);
				this.magic = true;
				return;
			}
			if (type == 3024)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 9;
				this.value = Item.sellPrice(0, 3, 0, 0);
				return;
			}
			if (type == 3599)
			{
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 9;
				this.value = Item.sellPrice(0, 3, 0, 0);
				return;
			}
			if (type == 3015)
			{
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.value = Item.sellPrice(0, 8, 0, 0);
				this.rare = 6;
				return;
			}
			if (type == 3016)
			{
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.defense = 8;
				this.value = Item.sellPrice(0, 8, 0, 0);
				this.rare = 5;
				return;
			}
			if (type == 3017)
			{
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 7;
				this.value = Item.sellPrice(0, 6, 0, 0);
				this.shoeSlot = 16;
				return;
			}
			if (type == 3018)
			{
				this.useStyle = 1;
				this.autoReuse = true;
				this.useAnimation = 23;
				this.useTime = 23;
				this.width = 50;
				this.height = 20;
				this.shoot = 483;
				this.UseSound = SoundID.Item1;
				this.damage = 50;
				this.shootSpeed = 12f;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.knockBack = 6f;
				this.rare = 5;
				this.melee = true;
				return;
			}
			if (type == 3019)
			{
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 13;
				this.useTime = 13;
				this.width = 18;
				this.height = 46;
				this.shoot = 485;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = SoundID.Item5;
				this.damage = 22;
				this.knockBack = 5.5f;
				this.shootSpeed = 6f;
				this.noMelee = true;
				this.value = this.hellPrice;
				this.rare = 3;
				this.ranged = true;
				return;
			}
			if (type >= 3020 && type <= 3023)
			{
				this.noUseGraphic = true;
				this.damage = 0;
				this.useStyle = 5;
				this.shootSpeed = 15f;
				this.shoot = 486 + type - 3020;
				this.width = 18;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 6;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 6, 0, 0);
				if (type == 3021)
				{
					this.shootSpeed = 16f;
					return;
				}
			}
			else
			{
				if (type == 3025)
				{
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 0, 75, 0);
					this.rare = 2;
					return;
				}
				if (type == 3026)
				{
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 0, 75, 0);
					this.rare = 2;
					return;
				}
				if (type == 3027)
				{
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 0, 75, 0);
					this.rare = 2;
					return;
				}
				if (type == 3190)
				{
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 0, 75, 0);
					this.rare = 2;
					return;
				}
				if (type == 3038)
				{
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 1, 50, 0);
					this.rare = 3;
					return;
				}
				if (type == 3597)
				{
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 1, 50, 0);
					this.rare = 3;
					return;
				}
				if (type == 3600)
				{
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 1, 50, 0);
					this.rare = 3;
					return;
				}
				if (type == 3598)
				{
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 1, 50, 0);
					this.rare = 3;
					return;
				}
				if (type == 3029)
				{
					this.useStyle = 5;
					this.autoReuse = true;
					this.useAnimation = 19;
					this.useTime = 19;
					this.width = 28;
					this.height = 60;
					this.shoot = 1;
					this.useAmmo = AmmoID.Arrow;
					this.UseSound = SoundID.Item5;
					this.damage = 38;
					this.shootSpeed = 12.5f;
					this.noMelee = true;
					this.value = Item.sellPrice(0, 8, 0, 0);
					this.ranged = true;
					this.rare = 6;
					this.knockBack = 2.25f;
					return;
				}
				if (type == 3030)
				{
					this.channel = true;
					this.damage = 40;
					this.useStyle = 1;
					this.shootSpeed = 17f;
					this.shoot = 491;
					this.width = 26;
					this.height = 28;
					this.UseSound = SoundID.Item1;
					this.useAnimation = 15;
					this.useTime = 15;
					this.rare = 6;
					this.noMelee = true;
					this.knockBack = 4.5f;
					this.value = Item.sellPrice(0, 8, 0, 0);
					this.melee = true;
					this.noUseGraphic = true;
					return;
				}
				if (type == 3031 || type == 3032)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 12;
					this.useTime = 5;
					this.width = 20;
					this.height = 20;
					this.autoReuse = true;
					this.rare = 7;
					this.value = Item.sellPrice(0, 10, 0, 0);
					this.tileBoost += 2;
					return;
				}
				if (type == 3036)
				{
					this.width = 24;
					this.height = 28;
					this.rare = 3;
					this.value = Item.sellPrice(0, 3, 0, 0);
					this.accessory = true;
					return;
				}
				if (type == 3037)
				{
					this.width = 24;
					this.height = 28;
					this.rare = 1;
					this.value = Item.sellPrice(0, 1, 0, 0);
					this.accessory = true;
					return;
				}
				if (type == 3033)
				{
					this.width = 16;
					this.height = 24;
					this.accessory = true;
					this.rare = 5;
					this.value = 50000;
					return;
				}
				if (type == 3034)
				{
					this.width = 16;
					this.height = 24;
					this.accessory = true;
					this.rare = 5;
					this.value = 100000;
					return;
				}
				if (type == 3035)
				{
					this.width = 16;
					this.height = 24;
					this.accessory = true;
					this.rare = 6;
					this.value = 150000;
					return;
				}
				if (type == 3039)
				{
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 1, 50, 0);
					this.rare = 3;
					return;
				}
				if (type == 3040)
				{
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 0, 75, 0);
					this.rare = 2;
					return;
				}
				if (type == 3028)
				{
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 0, 75, 0);
					this.rare = 2;
					return;
				}
				if (type == 3041)
				{
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 0, 75, 0);
					this.rare = 2;
					return;
				}
				if (type == 3042)
				{
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 1, 50, 0);
					this.rare = 3;
					return;
				}
				if (type == 3043)
				{
					this.damage = 0;
					this.useStyle = 1;
					this.shoot = 492;
					this.width = 16;
					this.height = 30;
					this.UseSound = SoundID.Item25;
					this.useAnimation = 20;
					this.useTime = 20;
					this.rare = 3;
					this.noMelee = true;
					this.value = Item.buyPrice(0, 10, 0, 0);
					this.buffType = 152;
					return;
				}
				if (type == 3044)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.consumable = true;
					this.createTile = 139;
					this.placeStyle = 32;
					this.width = 24;
					this.height = 24;
					this.rare = 4;
					this.value = 100000;
					this.accessory = true;
					this.hasVanityEffects = true;
					return;
				}
				if (type == 3045)
				{
					this.flame = true;
					this.noWet = true;
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.holdStyle = 1;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 4;
					this.placeStyle = 14;
					this.width = 10;
					this.height = 12;
					this.value = 250;
					this.rare = 1;
					return;
				}
				if (type >= 3046 && type <= 3050)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 215;
					this.placeStyle = 1 + type - 3046;
					this.width = 12;
					this.height = 12;
					return;
				}
				if (type == 3051)
				{
					this.mana = 13;
					this.damage = 25;
					this.useStyle = 5;
					this.shootSpeed = 32f;
					this.shoot = 494;
					this.width = 26;
					this.height = 28;
					this.useAnimation = 33;
					this.useTime = 33;
					this.rare = 5;
					this.noMelee = true;
					this.knockBack = 3f;
					this.value = Item.sellPrice(0, 8, 0, 0);
					this.magic = true;
					this.autoReuse = true;
					return;
				}
				if (type == 3052)
				{
					this.autoReuse = true;
					this.useStyle = 5;
					this.useAnimation = 20;
					this.useTime = 20;
					this.width = 14;
					this.height = 32;
					this.shoot = 495;
					this.useAmmo = AmmoID.Arrow;
					this.UseSound = SoundID.Item102;
					this.damage = 47;
					this.shootSpeed = 11f;
					this.knockBack = 4.5f;
					this.rare = 5;
					this.crit = 3;
					this.noMelee = true;
					this.value = Item.sellPrice(0, 2, 0, 0);
					this.ranged = true;
					return;
				}
				if (type == 3053)
				{
					this.autoReuse = true;
					this.rare = 5;
					this.mana = 6;
					this.UseSound = SoundID.Item103;
					this.useStyle = 5;
					this.damage = 32;
					this.useAnimation = 21;
					this.useTime = 7;
					this.width = 24;
					this.height = 28;
					this.shoot = 496;
					this.shootSpeed = 9f;
					this.knockBack = 3.75f;
					this.magic = true;
					this.value = Item.sellPrice(0, 2, 0, 0);
					this.noMelee = true;
					this.noUseGraphic = true;
					this.crit = 3;
					return;
				}
				if (type == 3054)
				{
					this.crit = 3;
					this.autoReuse = true;
					this.useStyle = 1;
					this.shootSpeed = 13f;
					this.shoot = 497;
					this.damage = 38;
					this.width = 18;
					this.height = 20;
					this.UseSound = SoundID.Item1;
					this.useAnimation = 12;
					this.useTime = 12;
					this.noUseGraphic = true;
					this.noMelee = true;
					this.value = Item.sellPrice(0, 2, 0, 0);
					this.knockBack = 5.75f;
					this.melee = true;
					this.rare = 5;
					return;
				}
				if (type >= 3055 && type <= 3059)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 242;
					this.width = 30;
					this.height = 30;
					this.value = Item.sellPrice(0, 0, 10, 0);
					this.placeStyle = 31 + type - 3055;
					return;
				}
				if (type == 3060)
				{
					this.damage = 0;
					this.useStyle = 1;
					this.shoot = 499;
					this.width = 16;
					this.height = 30;
					this.UseSound = SoundID.Item2;
					this.useAnimation = 20;
					this.useTime = 20;
					this.rare = 3;
					this.noMelee = true;
					this.value = Item.sellPrice(0, 7, 50, 0);
					this.buffType = 154;
					return;
				}
				if (type == 3062)
				{
					this.channel = true;
					this.damage = 0;
					this.useStyle = 4;
					this.shoot = 500;
					this.width = 24;
					this.height = 24;
					this.UseSound = SoundID.Item8;
					this.useAnimation = 20;
					this.useTime = 20;
					this.rare = 1;
					this.noMelee = true;
					this.value = this.shadowOrbPrice;
					this.buffType = 155;
					return;
				}
				if (type == 3063)
				{
					this.rare = 10;
					this.UseSound = SoundID.Item1;
					this.useStyle = 1;
					this.damage = 200;
					this.useAnimation = 14;
					this.useTime = 14;
					this.width = 30;
					this.height = 30;
					this.shoot = 502;
					this.scale = 1.1f;
					this.shootSpeed = 12f;
					this.knockBack = 6.5f;
					this.melee = true;
					this.value = Item.sellPrice(0, 20, 0, 0);
					this.autoReuse = true;
					return;
				}
				if (type == 3064)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 356;
					this.width = 18;
					this.height = 34;
					this.value = Item.sellPrice(0, 3, 0, 0);
					this.rare = 7;
					return;
				}
				if (type == 3065)
				{
					this.rare = 10;
					this.UseSound = SoundID.Item105;
					this.useStyle = 1;
					this.damage = 170;
					this.useAnimation = 16;
					this.useTime = 16;
					this.width = 30;
					this.height = 30;
					this.shoot = 503;
					this.scale = 1.1f;
					this.shootSpeed = 8f;
					this.knockBack = 6.5f;
					this.melee = true;
					this.value = Item.sellPrice(0, 20, 0, 0);
					this.autoReuse = true;
					return;
				}
				if (type == 3066)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 357;
					this.width = 12;
					this.height = 12;
					return;
				}
				if (type == 3067)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 7;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createWall = 177;
					this.width = 12;
					this.height = 12;
					return;
				}
				if (type == 3068)
				{
					this.width = 16;
					this.height = 24;
					this.accessory = true;
					this.rare = 1;
					this.value = Item.sellPrice(0, 0, 50, 0);
					return;
				}
				if (type == 3069)
				{
					this.mana = 2;
					this.damage = 14;
					this.useStyle = 1;
					this.shootSpeed = 7f;
					this.shoot = 954;
					this.width = 26;
					this.height = 28;
					this.UseSound = SoundID.Item8;
					this.useAnimation = 26;
					this.useTime = 26;
					this.rare = 1;
					this.noMelee = true;
					this.value = 10000;
					this.magic = true;
					this.crit = 10;
					if (this.Variant == ItemVariants.StrongerVariant)
					{
						this.value = Item.sellPrice(0, 5, 0, 0);
						this.rare = 4;
						this.damage = 40;
						this.useAnimation = 10;
						this.useTime = 10;
						this.mana = 6;
						this.shootSpeed = 12f;
						this.autoReuse = true;
						return;
					}
				}
				else
				{
					if (type >= 3070 && type <= 3076)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 358 + type - 3070;
						this.width = 12;
						this.height = 12;
						this.value = Item.sellPrice(0, 10, 0, 0);
						this.rare = 3;
						return;
					}
					if (type == 3077)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 8;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 365;
						this.width = 12;
						this.height = 12;
						this.value = 10;
						this.tileBoost += 3;
						return;
					}
					if (type == 3078)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 8;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 366;
						this.width = 12;
						this.height = 12;
						this.value = 10;
						this.tileBoost += 3;
						return;
					}
					if (type == 3081)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 367;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 3082)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 7;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createWall = 183;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 3083)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 7;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createWall = 179;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 3084)
					{
						this.width = 24;
						this.height = 18;
						this.accessory = true;
						this.rare = 1;
						this.value = Item.sellPrice(0, 0, 50, 0);
						return;
					}
					if (type == 3085)
					{
						this.width = 12;
						this.height = 12;
						this.rare = 2;
						this.maxStack = Item.CommonMaxStack;
						this.value = Item.buyPrice(0, 2, 0, 0);
						return;
					}
					if (type == 3086)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 368;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 3080)
					{
						this.useStyle = 1;
						this.shootSpeed = 10f;
						this.shoot = 506;
						this.damage = 0;
						this.width = 18;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.UseSound = SoundID.Item1;
						this.useAnimation = 20;
						this.useTime = 20;
						this.noUseGraphic = true;
						this.noMelee = true;
						this.value = 100;
						return;
					}
					if (type == 3079)
					{
						this.useStyle = 1;
						this.shootSpeed = 10f;
						this.shoot = 505;
						this.damage = 0;
						this.width = 18;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.UseSound = SoundID.Item1;
						this.useAnimation = 20;
						this.useTime = 20;
						this.noUseGraphic = true;
						this.noMelee = true;
						this.value = 100;
						return;
					}
					if (type == 3087)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 369;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 3088)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 7;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createWall = 184;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 3089)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 7;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createWall = 181;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 3090)
					{
						this.width = 16;
						this.height = 24;
						this.accessory = true;
						this.rare = 2;
						this.value = 100000;
						this.expert = true;
						return;
					}
					if (type == 3091 || type == 3092)
					{
						this.width = 14;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.useAnimation = 20;
						this.useTime = 20;
						return;
					}
					if (type == 3093)
					{
						this.width = 12;
						this.height = 12;
						this.rare = 1;
						this.maxStack = Item.CommonMaxStack;
						this.value = Item.sellPrice(0, 0, 10, 0);
						return;
					}
					if (type == 3094)
					{
						this.useStyle = 1;
						this.shootSpeed = 11.5f;
						this.shoot = 507;
						this.damage = 17;
						this.width = 30;
						this.height = 30;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.UseSound = SoundID.Item1;
						this.useAnimation = 24;
						this.useTime = 24;
						this.noUseGraphic = true;
						this.noMelee = true;
						this.knockBack = 4.75f;
						this.value = Item.sellPrice(0, 0, 0, 5);
						this.ranged = true;
						return;
					}
					if (type == 3095)
					{
						this.width = 24;
						this.height = 18;
						this.accessory = true;
						this.rare = 1;
						this.value = Item.sellPrice(0, 1, 0, 0);
						return;
					}
					if (type == 3097)
					{
						this.melee = true;
						this.damage = 30;
						this.width = 24;
						this.height = 28;
						this.rare = 1;
						this.value = Item.sellPrice(0, 2, 0, 0);
						this.accessory = true;
						this.defense = 2;
						this.shieldSlot = 5;
						this.knockBack = 9f;
						this.expert = true;
						return;
					}
					if (type == 3098)
					{
						this.useStyle = 5;
						this.useAnimation = 25;
						this.useTime = 8;
						this.shootSpeed = 48f;
						this.knockBack = 8f;
						this.width = 54;
						this.height = 20;
						this.damage = 120;
						this.axe = 30;
						this.UseSound = SoundID.Item23;
						this.shoot = 509;
						this.rare = 8;
						this.value = this.eclipsePostPlanteraPrice;
						this.noMelee = true;
						this.noUseGraphic = true;
						this.melee = true;
						this.channel = true;
						return;
					}
					if (type == 3099)
					{
						this.width = 24;
						this.height = 18;
						this.accessory = true;
						this.rare = 1;
						this.value = Item.sellPrice(0, 1, 0, 0);
						return;
					}
					if (type == 3100)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 370;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 3101)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 7;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createWall = 182;
						this.width = 12;
						this.height = 12;
						return;
					}
					if (type == 3102)
					{
						this.width = 24;
						this.height = 18;
						this.accessory = true;
						this.rare = 1;
						this.value = Item.sellPrice(0, 1, 0, 0);
						return;
					}
					if (type == 3103)
					{
						this.shootSpeed = 3f;
						this.shoot = 1;
						this.damage = 5;
						this.width = 26;
						this.height = 26;
						this.ammo = AmmoID.Arrow;
						this.knockBack = 2f;
						this.value = Item.sellPrice(0, 1, 0, 0);
						this.ranged = true;
						this.rare = 2;
						return;
					}
					if (type == 3104)
					{
						this.shootSpeed = 4f;
						this.shoot = 14;
						this.damage = 7;
						this.width = 26;
						this.height = 26;
						this.ammo = AmmoID.Bullet;
						this.knockBack = 2f;
						this.value = Item.sellPrice(0, 1, 0, 0);
						this.ranged = true;
						this.rare = 2;
						return;
					}
					if (type == 3105)
					{
						this.magic = true;
						this.mana = 30;
						this.useStyle = 1;
						this.shootSpeed = 14f;
						this.rare = 8;
						this.damage = 52;
						this.shoot = 510;
						this.width = 18;
						this.height = 20;
						this.knockBack = 4f;
						this.UseSound = SoundID.Item106;
						this.useAnimation = 45;
						this.useTime = 45;
						this.noUseGraphic = true;
						this.noMelee = true;
						this.value = this.eclipsePostPlanteraPrice;
						return;
					}
					if (type == 3106)
					{
						this.autoReuse = true;
						this.useStyle = 1;
						this.useAnimation = 8;
						this.useTime = 8;
						this.knockBack = 3.5f;
						this.width = 30;
						this.height = 30;
						this.damage = 85;
						this.scale = 1.1f;
						this.UseSound = SoundID.Item1;
						this.rare = 8;
						this.value = this.eclipsePostPlanteraPrice;
						this.melee = true;
						return;
					}
					if (type == 3107)
					{
						this.useStyle = 5;
						this.autoReuse = true;
						this.useAnimation = 15;
						this.useTime = 15;
						this.width = 50;
						this.height = 18;
						this.shoot = 514;
						this.useAmmo = AmmoID.NailFriendly;
						this.UseSound = SoundID.Item108;
						this.damage = 85;
						this.shootSpeed = 10f;
						this.noMelee = true;
						this.value = this.eclipsePostPlanteraPrice;
						this.rare = 8;
						this.ranged = true;
						return;
					}
					if (type == 3108)
					{
						this.shootSpeed = 6f;
						this.shoot = 514;
						this.damage = 30;
						this.width = 8;
						this.height = 8;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.ammo = AmmoID.NailFriendly;
						this.knockBack = 3f;
						this.value = Item.buyPrice(0, 0, 1, 0);
						this.ranged = true;
						this.rare = 8;
						return;
					}
					if (type == 3109)
					{
						this.width = 22;
						this.height = 22;
						this.defense = 4;
						this.headSlot = 179;
						this.rare = 2;
						this.value = Item.sellPrice(0, 1, 0, 0);
						return;
					}
					if (type == 3110)
					{
						this.width = 16;
						this.height = 24;
						this.accessory = true;
						this.rare = 8;
						this.value = 700000;
						this.hasVanityEffects = true;
						return;
					}
					if (type == 3111)
					{
						this.width = 10;
						this.height = 12;
						this.maxStack = Item.CommonMaxStack;
						this.alpha = 100;
						this.value = 15;
						return;
					}
					if (type == 3112)
					{
						this.color = new Color(255, 255, 255, 0);
						this.useStyle = 1;
						this.shootSpeed = 6f;
						this.shoot = 515;
						this.width = 12;
						this.height = 12;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.UseSound = SoundID.Item1;
						this.useAnimation = 15;
						this.useTime = 15;
						this.noMelee = true;
						this.value = 10;
						this.holdStyle = 1;
						return;
					}
					if (type == 3113)
					{
						this.createTile = 371;
						this.width = 12;
						this.height = 12;
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						return;
					}
					if (type == 3114)
					{
						this.flame = true;
						this.noWet = true;
						this.holdStyle = 1;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 4;
						this.placeStyle = 15;
						this.width = 10;
						this.height = 12;
						this.value = 80;
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						return;
					}
					if (type == 3115)
					{
						this.useStyle = 1;
						this.shootSpeed = 5f;
						this.shoot = 516;
						this.width = 20;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.UseSound = SoundID.Item1;
						this.useAnimation = 25;
						this.useTime = 25;
						this.noUseGraphic = true;
						this.noMelee = true;
						this.value = Item.buyPrice(0, 0, 4, 0);
						this.damage = 0;
						return;
					}
					if (type == 3116)
					{
						this.useStyle = 5;
						this.shootSpeed = 6.5f;
						this.shoot = 517;
						this.width = 20;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.UseSound = SoundID.Item1;
						this.useAnimation = 40;
						this.useTime = 40;
						this.noUseGraphic = true;
						this.noMelee = true;
						this.value = 100;
						this.damage = 65;
						this.knockBack = 8f;
						this.ranged = true;
						return;
					}
					if (type == 3117)
					{
						this.flame = true;
						this.noWet = true;
						this.createTile = 372;
						this.width = 8;
						this.height = 18;
						this.holdStyle = 1;
						this.rare = 1;
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.value = Item.sellPrice(0, 0, 1, 0);
						this.consumable = true;
						return;
					}
					if (type >= 3203 && type <= 3208)
					{
						this.width = 12;
						this.height = 12;
						this.rare = 2;
						this.maxStack = Item.CommonMaxStack;
						this.createTile = 376;
						this.placeStyle = 3 + type - 3203;
						this.useAnimation = 15;
						this.useTime = 15;
						this.autoReuse = true;
						this.useStyle = 1;
						this.consumable = true;
						this.value = Item.sellPrice(0, 1, 0, 0);
						return;
					}
					if (type == 3209)
					{
						this.mana = 9;
						this.UseSound = SoundID.Item109;
						this.useStyle = 5;
						this.damage = 40;
						this.useAnimation = 29;
						this.useTime = 29;
						this.width = 36;
						this.height = 40;
						this.shoot = 521;
						this.shootSpeed = 13f;
						this.knockBack = 4.4f;
						this.magic = true;
						this.autoReuse = true;
						this.value = Item.sellPrice(0, 4, 0, 0);
						this.rare = 5;
						this.noMelee = true;
						return;
					}
					if (type == 3210)
					{
						this.UseSound = SoundID.Item111;
						this.useStyle = 5;
						this.damage = 43;
						this.useAnimation = 10;
						this.useTime = 10;
						this.width = 30;
						this.height = 28;
						this.shoot = 523;
						this.shootSpeed = 8.5f;
						this.knockBack = 3f;
						this.ranged = true;
						this.autoReuse = true;
						this.value = Item.sellPrice(0, 4, 0, 0);
						this.rare = 5;
						this.noMelee = true;
						return;
					}
					if (type == 3211)
					{
						this.useStyle = 1;
						this.useAnimation = 28;
						this.useTime = 28;
						this.knockBack = 5.75f;
						this.width = 40;
						this.height = 40;
						this.damage = 55;
						this.scale = 1.125f;
						this.UseSound = SoundID.Item1;
						this.rare = 5;
						this.autoReuse = true;
						this.value = Item.sellPrice(0, 4, 0, 0);
						this.melee = true;
						return;
					}
					if (type == 3212)
					{
						this.width = 22;
						this.height = 22;
						this.accessory = true;
						this.rare = 1;
						this.value = Item.sellPrice(0, 1, 0, 0);
						this.neckSlot = 7;
						return;
					}
					if (type == 3213)
					{
						this.useStyle = 1;
						this.shootSpeed = 4f;
						this.shoot = 525;
						this.width = 26;
						this.height = 24;
						this.UseSound = SoundID.Item59;
						this.useAnimation = 28;
						this.useTime = 28;
						this.rare = 3;
						this.value = Item.sellPrice(0, 2, 0, 0);
						return;
					}
					if (type == 3119)
					{
						this.width = 24;
						this.height = 18;
						this.accessory = true;
						this.rare = 1;
						this.value = Item.sellPrice(0, 1, 0, 0);
						return;
					}
					if (type == 3118)
					{
						this.width = 24;
						this.height = 18;
						this.accessory = true;
						this.rare = 1;
						this.value = Item.sellPrice(0, 1, 0, 0);
						return;
					}
					if (type == 3096)
					{
						this.width = 24;
						this.height = 18;
						this.accessory = true;
						this.rare = 1;
						this.value = Item.sellPrice(0, 1, 0, 0);
						return;
					}
					if (type == 3120)
					{
						this.width = 24;
						this.height = 28;
						this.rare = 1;
						this.value = Item.sellPrice(0, 1, 0, 0);
						this.accessory = true;
						return;
					}
					if (type == 3121)
					{
						this.width = 24;
						this.height = 28;
						this.rare = 3;
						this.value = Item.sellPrice(0, 3, 0, 0);
						this.accessory = true;
						return;
					}
					if (type == 3122)
					{
						this.width = 24;
						this.height = 28;
						this.rare = 3;
						this.value = Item.sellPrice(0, 3, 0, 0);
						this.accessory = true;
						return;
					}
					if (type == 3123)
					{
						this.width = 24;
						this.height = 28;
						this.rare = 5;
						this.value = Item.sellPrice(0, 5, 0, 0);
						this.accessory = true;
						return;
					}
					if (type == 3124)
					{
						this.width = 24;
						this.height = 28;
						this.rare = 7;
						this.value = Item.sellPrice(0, 8, 0, 0);
						this.useTurn = true;
						this.useStyle = 4;
						this.useTime = 90;
						this.UseSound = SoundID.Item6;
						this.useAnimation = 90;
						return;
					}
					if (type == 3159 || type == 3160 || type == 3161)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 90;
						if (type == 3159)
						{
							this.placeStyle = 28;
						}
						else if (type == 3160)
						{
							this.placeStyle = 30;
						}
						else if (type == 3161)
						{
							this.placeStyle = 29;
						}
						this.width = 20;
						this.height = 20;
						this.value = 300;
						return;
					}
					if (type == 3162 || type == 3163 || type == 3164)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.autoReuse = true;
						this.createTile = 79;
						this.width = 28;
						this.height = 20;
						this.value = 2000;
						if (type == 3162)
						{
							this.placeStyle = 28;
							return;
						}
						if (type == 3163)
						{
							this.placeStyle = 30;
							return;
						}
						if (type == 3164)
						{
							this.placeStyle = 29;
							return;
						}
					}
					else if (type == 3165 || type == 3166 || type == 3167)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 101;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						if (type == 3165)
						{
							this.placeStyle = 29;
							return;
						}
						if (type == 3166)
						{
							this.placeStyle = 31;
							return;
						}
						if (type == 3167)
						{
							this.placeStyle = 30;
							return;
						}
					}
					else if (type == 3168 || type == 3169 || type == 3170)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 100;
						this.width = 20;
						this.height = 20;
						this.value = 1500;
						if (type == 3168)
						{
							this.placeStyle = 28;
							return;
						}
						if (type == 3169)
						{
							this.placeStyle = 30;
							return;
						}
						if (type == 3170)
						{
							this.placeStyle = 29;
							return;
						}
					}
					else if (type == 3171 || type == 3172 || type == 3173)
					{
						this.noWet = true;
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 33;
						this.width = 8;
						this.height = 18;
						this.value = Item.sellPrice(0, 0, 0, 60);
						if (type == 3171)
						{
							this.placeStyle = 27;
							return;
						}
						if (type == 3172)
						{
							this.placeStyle = 29;
							return;
						}
						if (type == 3173)
						{
							this.placeStyle = 28;
							return;
						}
					}
					else if (type == 3174 || type == 3175 || type == 3176)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 15;
						this.width = 12;
						this.height = 30;
						this.value = 150;
						if (type == 3174)
						{
							this.placeStyle = 33;
							return;
						}
						if (type == 3175)
						{
							this.placeStyle = 35;
							return;
						}
						if (type == 3176)
						{
							this.placeStyle = 34;
							return;
						}
					}
					else if (type == 3177 || type == 3178 || type == 3179)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 34;
						this.width = 26;
						this.height = 26;
						this.value = 3000;
						if (type == 3177)
						{
							this.placeStyle = 34;
							return;
						}
						if (type == 3178)
						{
							this.placeStyle = 36;
							return;
						}
						if (type == 3179)
						{
							this.placeStyle = 35;
							return;
						}
					}
					else if (type == 3180 || type == 3181 || type == 3125)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 21;
						this.width = 26;
						this.height = 22;
						this.value = 500;
						if (type == 3180)
						{
							this.placeStyle = 49;
							return;
						}
						if (type == 3181)
						{
							this.placeStyle = 51;
							return;
						}
						if (type == 3125)
						{
							this.placeStyle = 50;
							return;
						}
					}
					else if (type == 3126 || type == 3127 || type == 3128)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 104;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						if (type == 3126)
						{
							this.placeStyle = 25;
							return;
						}
						if (type == 3127)
						{
							this.placeStyle = 27;
							return;
						}
						if (type == 3128)
						{
							this.placeStyle = 26;
							return;
						}
					}
					else if (type == 3129 || type == 3130 || type == 3131)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 10;
						this.width = 14;
						this.height = 28;
						this.value = 200;
						if (type == 3129)
						{
							this.placeStyle = 33;
							return;
						}
						if (type == 3130)
						{
							this.placeStyle = 35;
							return;
						}
						if (type == 3131)
						{
							this.placeStyle = 34;
							return;
						}
					}
					else if (type == 3132 || type == 3133 || type == 3134)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 88;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						if (type == 3132)
						{
							this.placeStyle = 25;
							return;
						}
						if (type == 3133)
						{
							this.placeStyle = 27;
							return;
						}
						if (type == 3134)
						{
							this.placeStyle = 26;
							return;
						}
					}
					else if (type == 3135 || type == 3136 || type == 3137)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 93;
						this.width = 10;
						this.height = 24;
						this.value = 500;
						if (type == 3135)
						{
							this.placeStyle = 28;
							return;
						}
						if (type == 3136)
						{
							this.placeStyle = 30;
							return;
						}
						if (type == 3137)
						{
							this.placeStyle = 29;
							return;
						}
					}
					else
					{
						if (type == 3138 || type == 3139 || type == 3140)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 42;
							this.width = 12;
							this.height = 28;
							if (type == 3138)
							{
								this.placeStyle = 34;
							}
							else if (type == 3139)
							{
								this.placeStyle = 36;
							}
							else if (type == 3140)
							{
								this.placeStyle = 35;
							}
							this.value = 150;
							return;
						}
						if (type == 3141 || type == 3142 || type == 3143)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 87;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							if (type == 3141)
							{
								this.placeStyle = 27;
								return;
							}
							if (type == 3142)
							{
								this.placeStyle = 29;
								return;
							}
							if (type == 3143)
							{
								this.placeStyle = 28;
								return;
							}
						}
						else if (type == 3144 || type == 3145 || type == 3146)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 19;
							this.width = 8;
							this.height = 10;
							if (type == 3144)
							{
								this.placeStyle = 27;
								return;
							}
							if (type == 3145)
							{
								this.placeStyle = 29;
								return;
							}
							if (type == 3146)
							{
								this.placeStyle = 28;
								return;
							}
						}
						else if (type == 3147 || type == 3148 || type == 3149)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 172;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							if (type == 3147)
							{
								this.placeStyle = 29;
								return;
							}
							if (type == 3148)
							{
								this.placeStyle = 31;
								return;
							}
							if (type == 3149)
							{
								this.placeStyle = 30;
								return;
							}
						}
						else if (type == 3150 || type == 3151 || type == 3152)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 89;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							if (type == 3150)
							{
								this.placeStyle = 30;
								return;
							}
							if (type == 3151)
							{
								this.placeStyle = 32;
								return;
							}
							if (type == 3152)
							{
								this.placeStyle = 31;
								return;
							}
						}
						else if (type == 3153 || type == 3154 || type == 3155)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 14;
							this.width = 26;
							this.height = 20;
							this.value = 300;
							if (type == 3153)
							{
								this.placeStyle = 32;
								return;
							}
							if (type == 3154)
							{
								this.placeStyle = 34;
								return;
							}
							if (type == 3155)
							{
								this.placeStyle = 33;
								return;
							}
						}
						else if (type == 3156 || type == 3157 || type == 3158)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 18;
							this.width = 28;
							this.height = 14;
							this.value = 150;
							if (type == 3156)
							{
								this.placeStyle = 28;
								return;
							}
							if (type == 3157)
							{
								this.placeStyle = 30;
								return;
							}
							if (type == 3158)
							{
								this.placeStyle = 29;
								return;
							}
						}
						else
						{
							if (type == 3182)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 373;
								this.width = 24;
								this.height = 24;
								this.value = Item.sellPrice(0, 0, 0, 40);
								return;
							}
							if (type == 3183)
							{
								this.useTurn = true;
								this.useStyle = 1;
								this.useTime = 18;
								this.useAnimation = 18;
								this.width = 24;
								this.height = 28;
								this.UseSound = SoundID.Item1;
								this.value = Item.sellPrice(0, 5, 0, 0);
								this.autoReuse = true;
								this.rare = 4;
								this.scale = 1.15f;
								return;
							}
							if (type == 3184)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 374;
								this.width = 24;
								this.height = 24;
								this.value = Item.sellPrice(0, 0, 0, 40);
								return;
							}
							if (type == 3185)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 375;
								this.width = 24;
								this.height = 24;
								this.value = Item.sellPrice(0, 0, 0, 40);
								return;
							}
							if (type == 3186)
							{
								this.maxStack = Item.CommonMaxStack;
								this.width = 24;
								this.height = 24;
								this.value = Item.buyPrice(0, 0, 1, 0);
								return;
							}
							if (type == 3187)
							{
								this.width = 18;
								this.height = 18;
								this.defense = 5;
								this.headSlot = 180;
								this.value = 17500;
								return;
							}
							if (type == 3188)
							{
								this.width = 18;
								this.height = 18;
								this.defense = 6;
								this.bodySlot = 182;
								this.value = 14000;
								return;
							}
							if (type == 3189)
							{
								this.width = 18;
								this.height = 18;
								this.defense = 5;
								this.legSlot = 122;
								this.value = 10500;
								return;
							}
							if (type >= 3191 && type <= 3194)
							{
								this.useStyle = 1;
								this.autoReuse = true;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.width = 12;
								this.height = 12;
								this.makeNPC = (short)(484 + type - 3191);
								this.noUseGraphic = true;
								if (type == 3192)
								{
									this.bait = 15;
									return;
								}
								if (type == 3193)
								{
									this.bait = 25;
									return;
								}
								if (type == 3194)
								{
									this.bait = 40;
									return;
								}
								this.bait = 35;
								return;
							}
							else
							{
								if (type == 3196)
								{
									this.useStyle = 1;
									this.shootSpeed = 6f;
									this.shoot = 519;
									this.width = 26;
									this.height = 26;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.UseSound = SoundID.Item1;
									this.useAnimation = 25;
									this.useTime = 25;
									this.noUseGraphic = true;
									this.noMelee = true;
									this.value = Item.sellPrice(0, 0, 2, 0);
									this.damage = 0;
									this.rare = 1;
									return;
								}
								if (type == 3197)
								{
									this.rare = 1;
									this.useStyle = 1;
									this.shootSpeed = 12.5f;
									this.shoot = 520;
									this.damage = 17;
									this.width = 28;
									this.height = 28;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.UseSound = SoundID.Item1;
									this.useAnimation = 13;
									this.useTime = 13;
									this.noUseGraphic = true;
									this.noMelee = true;
									this.value = 80;
									this.knockBack = 3.5f;
									this.ranged = true;
									return;
								}
								if (type == 3198)
								{
									this.rare = 1;
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 377;
									this.width = 28;
									this.height = 22;
									this.value = 100000;
									return;
								}
								if (type == 3199)
								{
									this.useTurn = true;
									this.width = 20;
									this.height = 20;
									this.useStyle = 4;
									this.useTime = 90;
									this.UseSound = SoundID.Item6;
									this.useAnimation = 90;
									this.rare = 1;
									this.value = 50000;
									return;
								}
								if (type == 3200)
								{
									this.width = 28;
									this.height = 24;
									this.accessory = true;
									this.rare = 1;
									this.value = 50000;
									this.shoeSlot = 17;
									return;
								}
								if (type == 3201)
								{
									this.width = 16;
									this.height = 24;
									this.accessory = true;
									this.rare = 1;
									this.value = 50000;
									this.waistSlot = 11;
									return;
								}
								if (type == 3202)
								{
									this.rare = 1;
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 378;
									this.width = 20;
									this.height = 30;
									this.value = Item.sellPrice(0, 0, 1, 0);
									return;
								}
								if (type == 3214)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 379;
									this.width = 12;
									this.height = 12;
									this.value = Item.buyPrice(0, 0, 2, 0);
									return;
								}
								if (type >= 3215 && type <= 3222)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 380;
									this.placeStyle = type - 3215;
									this.width = 24;
									this.height = 20;
									this.value = Item.buyPrice(0, 0, 1, 0);
									return;
								}
								if (type == 3223)
								{
									this.width = 22;
									this.height = 22;
									this.accessory = true;
									this.rare = 1;
									this.value = 100000;
									this.expert = true;
									return;
								}
								if (type == 3224)
								{
									this.width = 22;
									this.height = 22;
									this.accessory = true;
									this.rare = 1;
									this.value = 100000;
									this.neckSlot = 8;
									this.expert = true;
									return;
								}
								if (type == 3225)
								{
									this.width = 14;
									this.height = 28;
									this.rare = 1;
									this.value = Item.sellPrice(0, 2, 50, 0);
									this.accessory = true;
									this.balloonSlot = 11;
									return;
								}
								if (type == 3226)
								{
									this.width = 28;
									this.height = 20;
									this.headSlot = 181;
									this.rare = 9;
									this.vanity = true;
									this.value = Item.sellPrice(0, 5, 0, 0);
									return;
								}
								if (type == 3227)
								{
									this.width = 18;
									this.height = 14;
									this.bodySlot = 183;
									this.rare = 9;
									this.vanity = true;
									this.value = Item.sellPrice(0, 5, 0, 0);
									return;
								}
								if (type == 3228)
								{
									this.width = 24;
									this.height = 8;
									this.accessory = true;
									this.rare = 9;
									this.wingSlot = 28;
									this.value = 400000;
									return;
								}
								if (type >= 3229 && type <= 3233)
								{
									this.useTurn = true;
									this.useStyle = 1;
									this.useAnimation = 15;
									this.useTime = 10;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 85;
									this.placeStyle = 6 + type - 3229;
									this.width = 20;
									this.height = 20;
									return;
								}
								if (type == 3234)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 385;
									this.width = 12;
									this.height = 12;
									return;
								}
								if (type >= 3235 && type <= 3237)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.consumable = true;
									this.createTile = 139;
									this.placeStyle = 33 + type - 3235;
									this.width = 24;
									this.height = 24;
									this.rare = 4;
									this.value = 100000;
									this.accessory = true;
									this.hasVanityEffects = true;
									return;
								}
								if (type == 3238)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 7;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createWall = 186;
									this.width = 12;
									this.height = 12;
									return;
								}
								if (type == 3239)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 387;
									this.width = 20;
									this.height = 12;
									return;
								}
								if (type == 3240)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 388;
									this.width = 18;
									this.height = 26;
									return;
								}
								if (type == 3241)
								{
									this.width = 14;
									this.height = 28;
									this.rare = 1;
									this.value = Item.sellPrice(0, 3, 0, 0);
									this.accessory = true;
									this.balloonSlot = 12;
									return;
								}
								if (type == 3242)
								{
									this.width = 18;
									this.height = 18;
									this.value = Item.buyPrice(0, 3, 0, 0);
									this.vanity = true;
									this.headSlot = 182;
									return;
								}
								if (type == 3243)
								{
									this.width = 18;
									this.height = 18;
									this.value = Item.buyPrice(0, 3, 0, 0);
									this.vanity = true;
									this.bodySlot = 184;
									return;
								}
								if (type == 3244)
								{
									this.width = 18;
									this.height = 18;
									this.value = Item.buyPrice(0, 3, 0, 0);
									this.vanity = true;
									this.legSlot = 124;
									return;
								}
								if (type == 3245)
								{
									this.width = 16;
									this.height = 16;
									this.value = Item.sellPrice(0, 2, 0, 0);
									this.rare = 2;
									this.handOnSlot = 22;
									this.handOffSlot = 14;
									this.accessory = true;
									this.expert = true;
									return;
								}
								if (type == 3246)
								{
									this.width = 18;
									this.height = 18;
									this.value = Item.buyPrice(0, 3, 0, 0);
									this.vanity = true;
									this.bodySlot = 185;
									return;
								}
								if (type == 3247)
								{
									this.width = 18;
									this.height = 18;
									this.value = Item.buyPrice(0, 3, 0, 0);
									this.vanity = true;
									this.legSlot = 125;
									return;
								}
								if (type == 3248)
								{
									this.width = 18;
									this.height = 18;
									this.value = Item.buyPrice(0, 3, 0, 0);
									this.vanity = true;
									this.headSlot = 183;
									return;
								}
								if (type == 3249)
								{
									this.mana = 10;
									this.damage = 40;
									this.useStyle = 1;
									this.shootSpeed = 10f;
									this.shoot = 533;
									this.buffType = 161;
									this.width = 26;
									this.height = 28;
									this.UseSound = SoundID.Item113;
									this.useAnimation = 36;
									this.useTime = 36;
									this.rare = 8;
									this.noMelee = true;
									this.knockBack = 2f;
									this.value = this.eclipsePostPlanteraPrice;
									this.summon = true;
									this.autoReuse = true;
									this.reuseDelay = 2;
									return;
								}
								if (type == 3250 || type == 3251 || type == 3252)
								{
									this.width = 20;
									this.height = 22;
									this.rare = 4;
									this.value = Item.buyPrice(0, 15, 0, 0);
									this.accessory = true;
									this.balloonSlot = (sbyte)(13 + type - 3250);
									return;
								}
								if (type == 3253)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 390;
									this.width = 12;
									this.height = 30;
									this.value = Item.buyPrice(0, 2, 0, 0);
									this.rare = 1;
									this.glowMask = 129;
									return;
								}
								if (type >= 3254 && type <= 3257)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 391 + type - 3254;
									this.width = 12;
									this.height = 12;
									return;
								}
								if (type == 3258)
								{
									this.useStyle = 1;
									this.useAnimation = 20;
									this.useTime = 20;
									this.autoReuse = true;
									this.knockBack = 20f;
									this.width = 36;
									this.height = 36;
									this.damage = 55;
									this.scale = 1.1f;
									this.UseSound = SoundID.Item1;
									this.rare = 4;
									this.value = Item.buyPrice(0, 25, 0, 0);
									this.melee = true;
									this.crit = 15;
									return;
								}
								if (type == 3260)
								{
									this.useStyle = 4;
									this.channel = true;
									this.width = 34;
									this.height = 34;
									this.UseSound = SoundID.Item25;
									this.useAnimation = 20;
									this.useTime = 20;
									this.rare = 8;
									this.noMelee = true;
									this.mountType = 10;
									this.value = Item.sellPrice(0, 5, 0, 0);
									return;
								}
								if (type == 3259)
								{
									this.width = 20;
									this.height = 26;
									this.maxStack = Item.CommonMaxStack;
									this.rare = 3;
									this.value = Item.buyPrice(0, 30, 0, 0);
									this.UseSound = SoundID.Item3;
									this.useStyle = 9;
									this.useTurn = true;
									this.useAnimation = 17;
									this.useTime = 17;
									this.consumable = true;
									return;
								}
								if (type == 3261)
								{
									this.width = 20;
									this.height = 20;
									this.maxStack = Item.CommonMaxStack;
									this.rare = 7;
									this.value = Item.sellPrice(0, 1, 0, 0);
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.consumable = true;
									this.createTile = 239;
									this.placeStyle = 21;
									return;
								}
								if (type == 3262 || (type >= 3278 && type <= 3292) || (type >= 3315 && type <= 3317))
								{
									this.useStyle = 5;
									this.width = 24;
									this.height = 24;
									this.noUseGraphic = true;
									this.UseSound = SoundID.Item1;
									this.melee = true;
									this.channel = true;
									this.noMelee = true;
									this.shoot = 541 + type - 3278;
									this.useAnimation = 25;
									this.useTime = 25;
									this.shootSpeed = 16f;
									if (type == 3278)
									{
										this.knockBack = 2.5f;
										this.damage = 9;
										this.value = Item.sellPrice(0, 0, 1, 0);
										this.rare = 0;
										return;
									}
									if (type == 3285)
									{
										this.knockBack = 3.5f;
										this.damage = 14;
										this.value = Item.sellPrice(0, 0, 50, 0);
										this.rare = 1;
										return;
									}
									if (type == 3279)
									{
										this.knockBack = 4.5f;
										this.damage = 16;
										this.value = Item.sellPrice(0, 1, 0, 0);
										this.rare = 1;
										return;
									}
									if (type == 3280)
									{
										this.knockBack = 4f;
										this.damage = 17;
										this.value = Item.sellPrice(0, 1, 0, 0);
										this.rare = 1;
										return;
									}
									if (type == 3281)
									{
										this.knockBack = 3.75f;
										this.damage = 18;
										this.value = Item.sellPrice(0, 1, 30, 0);
										this.rare = 3;
										return;
									}
									if (type == 3317)
									{
										this.knockBack = 3.85f;
										this.damage = 28;
										this.value = this.dungeonPrice;
										this.rare = 3;
										this.shoot = 564;
										return;
									}
									if (type == 3282)
									{
										this.knockBack = 4.3f;
										this.damage = 27;
										this.value = Item.sellPrice(0, 1, 80, 0);
										this.rare = 3;
										return;
									}
									if (type == 3262)
									{
										this.knockBack = 3.25f;
										this.damage = 21;
										this.value = Item.buyPrice(0, 5, 0, 0);
										this.rare = 2;
										this.shoot = 534;
										return;
									}
									if (type == 3315)
									{
										this.knockBack = 3.25f;
										this.damage = 39;
										this.value = Item.sellPrice(0, 4, 0, 0);
										this.rare = 3;
										this.shoot = 562;
										return;
									}
									if (type == 3316)
									{
										this.knockBack = 3.8f;
										this.damage = 49;
										this.value = Item.sellPrice(0, 4, 0, 0);
										this.rare = 3;
										this.shoot = 563;
										return;
									}
									if (type == 3283)
									{
										this.knockBack = 3.3f;
										this.damage = 39;
										this.value = Item.sellPrice(0, 4, 0, 0);
										this.rare = 4;
										return;
									}
									if (type == 3289)
									{
										this.knockBack = 2.8f;
										this.damage = 43;
										this.value = Item.sellPrice(0, 4, 0, 0);
										this.rare = 4;
										return;
									}
									if (type == 3290)
									{
										this.knockBack = 4.5f;
										this.damage = 41;
										this.value = Item.sellPrice(0, 4, 0, 0);
										this.rare = 4;
										return;
									}
									if (type == 3284)
									{
										this.knockBack = 3.8f;
										this.damage = 54;
										this.value = Item.buyPrice(0, 25, 0, 0);
										this.rare = 5;
										return;
									}
									if (type == 3286)
									{
										this.knockBack = 3.1f;
										this.damage = 60;
										this.value = Item.sellPrice(0, 5, 0, 0);
										this.rare = 7;
										return;
									}
									if (type == 3291)
									{
										this.knockBack = 4.3f;
										this.damage = 95;
										this.value = Item.sellPrice(0, 11, 0, 0);
										this.rare = 8;
										this.crit += 10;
										return;
									}
									if (type == 3288 || type == 3287)
									{
										this.knockBack = 4.5f;
										this.damage = 70;
										this.rare = 9;
										this.value = Item.sellPrice(0, 4, 0, 0);
										return;
									}
									if (type == 3292)
									{
										this.knockBack = 3.5f;
										this.damage = 115;
										this.value = this.eclipseMothronPrice;
										this.rare = 8;
										return;
									}
									this.knockBack = 4f;
									this.damage = 15;
									this.rare = 2;
									this.value = Item.sellPrice(0, 1, 0, 0);
									return;
								}
								else
								{
									if (type == 3389)
									{
										this.useStyle = 5;
										this.width = 24;
										this.height = 24;
										this.noUseGraphic = true;
										this.UseSound = SoundID.Item1;
										this.melee = true;
										this.channel = true;
										this.noMelee = true;
										this.shoot = 603;
										this.useAnimation = 25;
										this.useTime = 25;
										this.shootSpeed = 16f;
										this.damage = 190;
										this.knockBack = 6.5f;
										this.value = Item.sellPrice(0, 10, 0, 0);
										this.crit = 10;
										this.rare = 10;
										return;
									}
									if (type >= 3293 && type <= 3308)
									{
										this.width = 24;
										this.height = 24;
										this.rare = 1;
										this.value = Item.sellPrice(0, 0, 3, 0);
										this.accessory = true;
										if (type == 3307)
										{
											this.stringColor = 27;
										}
										else if (type == 3306)
										{
											this.stringColor = 14;
										}
										else if (type == 3308)
										{
											this.stringColor = 13;
										}
										else if (type == 3305)
										{
											this.stringColor = 28;
										}
										else
										{
											this.stringColor = 1 + type - 3293;
										}
										this.hasVanityEffects = true;
										return;
									}
									if (type >= 3309 && type <= 3314)
									{
										this.width = 24;
										this.height = 24;
										this.rare = 2;
										this.value = Item.buyPrice(0, 5, 0, 0);
										this.accessory = true;
										return;
									}
									if (type == 3263)
									{
										this.width = 18;
										this.height = 18;
										this.value = Item.buyPrice(0, 3, 0, 0);
										this.vanity = true;
										this.headSlot = 184;
										return;
									}
									if (type == 3264)
									{
										this.width = 18;
										this.height = 18;
										this.value = Item.buyPrice(0, 3, 0, 0);
										this.vanity = true;
										this.bodySlot = 186;
										return;
									}
									if (type == 3265)
									{
										this.width = 18;
										this.height = 18;
										this.value = Item.buyPrice(0, 3, 0, 0);
										this.vanity = true;
										this.legSlot = 126;
										return;
									}
									if (type == 3266)
									{
										this.width = 18;
										this.height = 18;
										this.value = 4500;
										this.headSlot = 185;
										this.defense = 4;
										this.rare = 1;
										return;
									}
									if (type == 3267)
									{
										this.width = 18;
										this.height = 18;
										this.value = 4500;
										this.bodySlot = 187;
										this.defense = 6;
										this.rare = 1;
										return;
									}
									if (type == 3268)
									{
										this.width = 18;
										this.height = 18;
										this.value = 4500;
										this.legSlot = 127;
										this.defense = 5;
										this.rare = 1;
										return;
									}
									if (type == 3269)
									{
										this.useStyle = 4;
										this.useAnimation = 20;
										this.useTime = 20;
										this.autoReuse = true;
										this.reuseDelay = 10;
										this.shootSpeed = 1f;
										this.knockBack = 2f;
										this.width = 16;
										this.height = 16;
										this.damage = 40;
										this.UseSound = null;
										this.shoot = 535;
										this.mana = 15;
										this.rare = 4;
										this.value = Item.sellPrice(0, 4, 0, 0);
										this.noMelee = true;
										this.noUseGraphic = true;
										this.magic = true;
										this.channel = true;
										return;
									}
									if (type == 3270)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 395;
										this.width = 28;
										this.height = 28;
										return;
									}
									if (type == 3272)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 397;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 3271)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 396;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 3273)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 275;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 3344)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 308;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 3345)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 309;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 3346)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 310;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 3340)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 304;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 3341)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 305;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 3342)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 306;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 3343)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 307;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 3277)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 401;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 3276)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 400;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 3275)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 399;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 3274)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 398;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 3339)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 403;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 3338)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 402;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 3347)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 404;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type == 3348)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 311;
										this.width = 12;
										this.height = 12;
										return;
									}
									if (type >= 3318 && type <= 3332)
									{
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.width = 24;
										this.height = 24;
										this.rare = 1;
										if (type == 3320)
										{
											this.rare = 2;
										}
										if (type == 3321)
										{
											this.rare = 2;
										}
										if (type == 3322)
										{
											this.rare = 3;
										}
										if (type == 3323)
										{
											this.rare = 3;
										}
										if (type == 3324)
										{
											this.rare = 4;
										}
										if (type == 3325)
										{
											this.rare = 5;
										}
										if (type == 3326)
										{
											this.rare = 5;
										}
										if (type == 3327)
										{
											this.rare = 5;
										}
										if (type == 3328)
										{
											this.rare = 6;
										}
										if (type == 3329)
										{
											this.rare = 7;
										}
										if (type == 3330)
										{
											this.rare = 7;
										}
										if (type == 3331)
										{
											this.rare = 8;
										}
										if (type == 3332)
										{
											this.rare = 8;
										}
										this.expert = true;
										return;
									}
									if (type == 3333)
									{
										this.width = 22;
										this.height = 22;
										this.accessory = true;
										this.rare = 3;
										this.value = Item.sellPrice(0, 2, 0, 0);
										this.backSlot = 9;
										this.expert = true;
										return;
									}
									if (type == 3334)
									{
										this.width = 22;
										this.height = 22;
										this.accessory = true;
										this.rare = 4;
										this.value = Item.buyPrice(0, 50, 0, 0);
										this.handOffSlot = 11;
										this.handOnSlot = 18;
										return;
									}
									if (type == 3335)
									{
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.width = 18;
										this.height = 18;
										this.useStyle = 4;
										this.useTime = 30;
										this.UseSound = SoundID.Item4;
										this.useAnimation = 30;
										this.rare = 4;
										this.value = Item.sellPrice(0, 2, 0, 0);
										this.expert = true;
										return;
									}
									if (type == 3336)
									{
										this.width = 22;
										this.height = 22;
										this.accessory = true;
										this.rare = 8;
										this.value = Item.sellPrice(0, 4, 0, 0);
										this.expert = true;
										return;
									}
									if (type == 3337)
									{
										this.width = 22;
										this.height = 22;
										this.accessory = true;
										this.rare = 8;
										this.value = Item.sellPrice(0, 5, 0, 0);
										this.expert = true;
										return;
									}
									if (type == 3353)
									{
										this.width = 36;
										this.height = 26;
										this.mountType = 11;
										this.rare = 6;
										this.value = Item.sellPrice(0, 1, 0, 0);
										this.expert = true;
										return;
									}
									if (type == 3355 || type == 3354 || type == 3356)
									{
										this.width = 20;
										this.height = 20;
										this.maxStack = Item.CommonMaxStack;
										this.rare = 5;
										this.value = Item.sellPrice(0, 0, 50, 0);
										this.expert = true;
										return;
									}
									if (type == 3357 || type == 3358 || type == 3359)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 240;
										this.width = 30;
										this.height = 30;
										this.value = Item.sellPrice(0, 1, 0, 0);
										this.placeStyle = 56 + type - 3357;
										this.rare = 1;
										return;
									}
									if (type == 3360)
									{
										this.tileWand = 620;
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.createTile = 383;
										this.width = 8;
										this.height = 10;
										this.rare = 1;
										this.value = Item.sellPrice(0, 0, 25, 0);
										return;
									}
									if (type == 3361)
									{
										this.tileWand = 620;
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.createTile = 384;
										this.width = 8;
										this.height = 10;
										this.rare = 1;
										this.value = Item.sellPrice(0, 0, 25, 0);
										return;
									}
									if (type == 3362)
									{
										this.width = 28;
										this.height = 20;
										this.bodySlot = 188;
										this.rare = 1;
										this.vanity = true;
										this.value = Item.buyPrice(0, 25, 0, 0);
										return;
									}
									if (type == 3363)
									{
										this.width = 28;
										this.height = 20;
										this.legSlot = 128;
										this.rare = 1;
										this.vanity = true;
										this.value = Item.buyPrice(0, 25, 0, 0);
										return;
									}
									if (type == 3364)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 405;
										this.width = 28;
										this.height = 28;
										this.rare = 1;
										return;
									}
									if (type == 3365)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 406;
										this.width = 28;
										this.height = 28;
										this.rare = 1;
										return;
									}
									if (type == 3366)
									{
										this.width = 24;
										this.height = 24;
										this.rare = 4;
										this.value = Item.buyPrice(0, 50, 0, 0);
										this.accessory = true;
										return;
									}
									if (type == 3367)
									{
										this.useStyle = 4;
										this.channel = true;
										this.width = 34;
										this.height = 34;
										this.UseSound = SoundID.Item25;
										this.useAnimation = 20;
										this.useTime = 20;
										this.rare = 8;
										this.noMelee = true;
										this.mountType = 12;
										this.value = Item.sellPrice(0, 5, 0, 0);
										this.expert = true;
										return;
									}
									if (type == 3368)
									{
										this.width = 14;
										this.height = 38;
										this.useAnimation = 25;
										this.useTime = 15;
										this.useStyle = 5;
										this.rare = 9;
										this.noUseGraphic = true;
										this.channel = true;
										this.noMelee = true;
										this.damage = 25;
										this.knockBack = 4f;
										this.autoReuse = false;
										this.noMelee = true;
										this.melee = true;
										this.shoot = 595;
										this.shootSpeed = 15f;
										this.value = Item.sellPrice(0, 5, 0, 0);
										return;
									}
									if (type == 3369)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 209;
										this.placeStyle = 2;
										this.width = 12;
										this.height = 12;
										this.rare = 3;
										this.value = Item.buyPrice(0, 25, 0, 0);
										return;
									}
									if (type == 3370)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.consumable = true;
										this.createTile = 139;
										this.placeStyle = 36;
										this.width = 24;
										this.height = 24;
										this.rare = 4;
										this.value = 100000;
										this.accessory = true;
										this.hasVanityEffects = true;
										return;
									}
									if (type == 3371)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.consumable = true;
										this.createTile = 139;
										this.placeStyle = 37;
										this.width = 24;
										this.height = 24;
										this.rare = 4;
										this.value = 100000;
										this.accessory = true;
										this.hasVanityEffects = true;
										return;
									}
									if (type >= 3372 && type <= 3373)
									{
										this.width = 28;
										this.height = 20;
										this.headSlot = type + 186 - 3372;
										this.rare = 1;
										this.value = Item.sellPrice(0, 0, 75, 0);
										this.vanity = true;
										return;
									}
									if (type == 3374)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 4;
										this.headSlot = 188;
										this.rare = 1;
										this.value = Item.sellPrice(0, 0, 30, 0);
										return;
									}
									if (type == 3375)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 5;
										this.bodySlot = 189;
										this.rare = 1;
										this.value = Item.sellPrice(0, 0, 50, 0);
										return;
									}
									if (type == 3376)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 4;
										this.legSlot = 129;
										this.rare = 1;
										this.value = Item.sellPrice(0, 0, 40, 0);
										return;
									}
									if (type == 3377)
									{
										this.mana = 7;
										this.UseSound = SoundID.Item43;
										this.useStyle = 5;
										this.damage = 21;
										this.useAnimation = 28;
										this.useTime = 28;
										this.width = 40;
										this.height = 40;
										this.shoot = 597;
										this.shootSpeed = 9f;
										this.knockBack = 4.75f;
										this.magic = true;
										this.autoReuse = true;
										this.value = 20000;
										this.rare = 1;
										this.noMelee = true;
										return;
									}
									if (type == 3378)
									{
										this.shoot = 598;
										this.shootSpeed = 10f;
										this.damage = 20;
										this.knockBack = 5f;
										this.ranged = true;
										this.useStyle = 1;
										this.UseSound = SoundID.Item1;
										this.useAnimation = 25;
										this.useTime = 25;
										this.width = 30;
										this.height = 30;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.noUseGraphic = true;
										this.noMelee = true;
										this.autoReuse = true;
										this.value = 50;
										this.rare = 1;
										return;
									}
									if (type == 3379)
									{
										this.autoReuse = true;
										this.useStyle = 1;
										this.shootSpeed = 10f;
										this.shoot = 599;
										this.damage = 14;
										this.width = 18;
										this.height = 20;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.UseSound = SoundID.Item1;
										this.useAnimation = 14;
										this.useTime = 14;
										this.noUseGraphic = true;
										this.noMelee = true;
										this.value = 50;
										this.knockBack = 1.5f;
										this.ranged = true;
										this.rare = 1;
										return;
									}
									if (type == 3380)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 407;
										this.width = 12;
										this.height = 12;
										this.rare = 1;
										return;
									}
									if (type == 3381)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 10;
										this.headSlot = 189;
										this.rare = 10;
										this.value = Item.sellPrice(0, 7, 0, 0);
										return;
									}
									if (type == 3382)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 16;
										this.bodySlot = 190;
										this.rare = 10;
										this.value = Item.sellPrice(0, 7, 0, 0) * 2;
										return;
									}
									if (type == 3383)
									{
										this.width = 18;
										this.height = 18;
										this.defense = 12;
										this.legSlot = 130;
										this.rare = 10;
										this.value = (int)((double)Item.sellPrice(0, 7, 0, 0) * 1.5);
										return;
									}
									if (type == 3384)
									{
										this.useStyle = 5;
										this.useAnimation = 20;
										this.useTime = 20;
										this.shootSpeed = 24f;
										this.knockBack = 2f;
										this.width = 16;
										this.height = 16;
										this.UseSound = null;
										this.shoot = 600;
										this.rare = 8;
										this.value = Item.sellPrice(0, 10, 0, 0);
										this.noMelee = true;
										this.noUseGraphic = true;
										this.channel = true;
										this.autoReuse = true;
										return;
									}
									if (type >= 3385 && type <= 3388)
									{
										this.width = 20;
										this.height = 20;
										this.maxStack = Item.CommonMaxStack;
										this.value = 10000;
										this.rare = -11;
										this.placeStyle = type - 3385 + 8;
										this.createTile = 227;
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.consumable = true;
										return;
									}
									if (type >= 3390 && type <= 3452)
									{
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 91;
										this.placeStyle = 207 + type - 3390;
										this.width = 10;
										this.height = 24;
										this.value = 1000;
										this.rare = 1;
										return;
									}
									if (type >= 3453 && type <= 3455)
									{
										this.width = 12;
										this.height = 12;
										switch (type)
										{
										case 3453:
											this.buffType = 179;
											return;
										case 3454:
											this.buffType = 173;
											return;
										case 3455:
											this.buffType = 176;
											return;
										default:
											return;
										}
									}
									else
									{
										if (type >= 3456 && type <= 3459)
										{
											this.width = 18;
											this.height = 18;
											this.maxStack = Item.CommonMaxStack;
											this.value = Item.sellPrice(0, 0, 20, 0);
											this.rare = 9;
											return;
										}
										if (type == 3460)
										{
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 408;
											this.width = 12;
											this.height = 12;
											this.rare = 10;
											this.value = Item.sellPrice(0, 1, 20, 0) / 4;
											return;
										}
										if (type == 3461)
										{
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 409;
											this.rare = 9;
											this.width = 12;
											this.height = 12;
											return;
										}
										if (type == 3462)
										{
											this.SetDefaults3(2772);
											type = 3462;
											this.glowMask = 174;
											return;
										}
										if (type == 3463)
										{
											this.SetDefaults3(2773);
											type = 3463;
											this.shoot = 610;
											this.glowMask = 175;
											return;
										}
										if (type == 3464)
										{
											this.SetDefaults3(2774);
											type = 3464;
											this.shoot = 609;
											this.glowMask = 176;
											return;
										}
										if (type == 3465)
										{
											this.SetDefaults3(2775);
											type = 3465;
											this.glowMask = 177;
											return;
										}
										if (type == 3466)
										{
											this.SetDefaults3(2776);
											type = 3466;
											this.glowMask = 178;
											return;
										}
										if (type == 3467)
										{
											this.width = 20;
											this.height = 20;
											this.maxStack = Item.CommonMaxStack;
											this.rare = 10;
											this.value = Item.sellPrice(0, 1, 20, 0);
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.consumable = true;
											this.createTile = 239;
											this.placeStyle = 22;
											return;
										}
										if (type >= 3468 && type <= 3471)
										{
											this.width = 22;
											this.height = 20;
											this.accessory = true;
											this.value = Item.buyPrice(0, 40, 0, 0);
											this.rare = 10;
											this.wingSlot = (sbyte)(29 + type - 3468);
											return;
										}
										if (type == 3472)
										{
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 7;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createWall = 224;
											this.rare = 9;
											this.width = 12;
											this.height = 12;
											return;
										}
										if (type == 3473)
										{
											this.useStyle = 5;
											this.useAnimation = 20;
											this.useTime = 20;
											this.shootSpeed = 24f;
											this.knockBack = 2f;
											this.width = 16;
											this.height = 16;
											this.shoot = 611;
											this.rare = 10;
											this.value = Item.sellPrice(0, 10, 0, 0);
											this.noMelee = true;
											this.noUseGraphic = true;
											this.channel = true;
											this.autoReuse = true;
											this.melee = true;
											this.damage = 105;
											return;
										}
										if (type == 3474)
										{
											this.mana = 10;
											this.damage = 60;
											this.useStyle = 1;
											this.shootSpeed = 10f;
											this.shoot = 613;
											this.width = 26;
											this.height = 28;
											this.UseSound = SoundID.Item44;
											this.useAnimation = 36;
											this.useTime = 36;
											this.rare = 10;
											this.noMelee = true;
											this.knockBack = 2f;
											this.buffType = 182;
											this.value = Item.sellPrice(0, 10, 0, 0);
											this.summon = true;
											this.autoReuse = true;
											this.reuseDelay = 2;
											return;
										}
										if (type == 3475)
										{
											this.useStyle = 5;
											this.useAnimation = 20;
											this.useTime = 20;
											this.shootSpeed = 20f;
											this.knockBack = 2f;
											this.width = 20;
											this.height = 12;
											this.damage = 50;
											this.UseSound = null;
											this.shoot = 615;
											this.rare = 10;
											this.value = Item.sellPrice(0, 10, 0, 0);
											this.noMelee = true;
											this.noUseGraphic = true;
											this.ranged = true;
											this.channel = true;
											this.glowMask = 191;
											this.useAmmo = AmmoID.Bullet;
											this.autoReuse = true;
											return;
										}
										if (type == 3476)
										{
											this.mana = 30;
											this.damage = 70;
											this.useStyle = 5;
											this.shootSpeed = 7f;
											this.shoot = 617;
											this.width = 26;
											this.height = 28;
											this.UseSound = SoundID.Item117;
											this.useAnimation = 30;
											this.useTime = 30;
											this.autoReuse = true;
											this.noMelee = true;
											this.knockBack = 5f;
											this.rare = 10;
											this.value = Item.sellPrice(0, 10, 0, 0);
											this.magic = true;
											this.glowMask = 194;
											this.holdStyle = 1;
											return;
										}
										if (type == 3477)
										{
											this.useStyle = 1;
											this.shootSpeed = 9f;
											this.rare = 3;
											this.damage = 20;
											this.shoot = 621;
											this.width = 18;
											this.height = 20;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.knockBack = 3f;
											this.UseSound = SoundID.Item1;
											this.useAnimation = 15;
											this.useTime = 15;
											this.noUseGraphic = true;
											this.noMelee = true;
											this.value = 100;
											return;
										}
										if (type == 3478)
										{
											this.width = 18;
											this.height = 18;
											this.headSlot = 190;
											this.value = 5000;
											this.vanity = true;
											return;
										}
										if (type == 3479)
										{
											this.width = 18;
											this.height = 18;
											this.bodySlot = 191;
											this.value = 5000;
											this.vanity = true;
											return;
										}
										if (type >= 3522 && type <= 3525)
										{
											this.useTurn = true;
											this.autoReuse = true;
											this.useStyle = 1;
											this.useAnimation = 28;
											this.useTime = 7;
											this.knockBack = 7f;
											this.width = 42;
											this.height = 42;
											this.damage = 60;
											this.axe = 30;
											this.hammer = 100;
											this.UseSound = SoundID.Item1;
											this.rare = 10;
											this.value = Item.sellPrice(0, 5, 0, 0);
											this.melee = true;
											this.tileBoost += 4;
											switch (type)
											{
											case 3522:
												break;
											case 3523:
												this.glowMask = 196;
												return;
											case 3524:
												this.glowMask = 197;
												return;
											case 3525:
												this.glowMask = 198;
												return;
											default:
												return;
											}
										}
										else
										{
											if (type == 3521)
											{
												this.SetDefaults1(1);
												this.type = type;
												this.useTime = 17;
												this.pick = 55;
												this.useAnimation = 20;
												this.scale = 1.05f;
												this.damage = 6;
												this.value = 10000;
												return;
											}
											if (type == 3520)
											{
												this.SetDefaults1(4);
												this.type = type;
												this.useAnimation = 18;
												this.damage = 15;
												this.knockBack = 6.5f;
												this.scale = 1f;
												this.value = 9000;
												return;
											}
											if (type == 3519)
											{
												this.SetDefaults1(6);
												this.type = type;
												this.damage = 12;
												this.useAnimation = 11;
												this.useTime = 11;
												this.knockBack = 5f;
												this.shoot = 944;
												this.scale = 0.95f;
												this.value = 7000;
												return;
											}
											if (type == 3517)
											{
												this.SetDefaults1(7);
												this.type = type;
												this.useAnimation = 28;
												this.useTime = 23;
												this.scale = 1f;
												this.damage = 9;
												this.hammer = 55;
												this.value = 8000;
												return;
											}
											if (type == 3518)
											{
												this.SetDefaults1(10);
												this.type = type;
												this.useTime = 18;
												this.axe = 11;
												this.useAnimation = 26;
												this.scale = 1f;
												this.damage = 7;
												this.value = 8000;
												return;
											}
											if (type == 3516)
											{
												this.SetDefaults1(99);
												this.type = type;
												this.useAnimation = 26;
												this.useTime = 26;
												this.damage = 11;
												this.value = 7000;
												return;
											}
											if (type == 3515)
											{
												this.SetDefaults1(1);
												this.type = type;
												this.useTime = 11;
												this.pick = 45;
												this.useAnimation = 19;
												this.scale = 1.05f;
												this.damage = 6;
												this.value = 5000;
												return;
											}
											if (type == 3514)
											{
												this.SetDefaults1(4);
												this.type = type;
												this.useAnimation = 20;
												this.damage = 14;
												this.value = 4500;
												this.knockBack = 6f;
												this.scale = 1f;
												return;
											}
											if (type == 3513)
											{
												this.SetDefaults1(6);
												this.type = type;
												this.damage = 9;
												this.useAnimation = 12;
												this.useTime = 12;
												this.knockBack = 4f;
												this.shoot = 942;
												this.scale = 0.95f;
												this.value = 3500;
												return;
											}
											if (type == 3511)
											{
												this.SetDefaults1(7);
												this.type = type;
												this.useAnimation = 29;
												this.useTime = 19;
												this.scale = 1f;
												this.damage = 9;
												this.hammer = 45;
												this.value = 4000;
												return;
											}
											if (type == 3512)
											{
												this.SetDefaults1(10);
												this.type = type;
												this.useTime = 18;
												this.axe = 10;
												this.useAnimation = 26;
												this.scale = 1f;
												this.damage = 6;
												this.value = 4000;
												return;
											}
											if (type == 3510)
											{
												this.SetDefaults1(99);
												this.type = type;
												this.useAnimation = 27;
												this.useTime = 27;
												this.damage = 9;
												this.value = 3500;
												return;
											}
											if (type == 3509)
											{
												this.SetDefaults1(1);
												this.type = type;
												this.useTime = 15;
												this.pick = 35;
												this.useAnimation = 23;
												this.damage = 4;
												this.scale = 0.9f;
												this.tileBoost = -1;
												this.value = 500;
												return;
											}
											if (type == 3508)
											{
												this.SetDefaults1(4);
												this.type = type;
												this.useAnimation = 21;
												this.damage = 9;
												this.value = 450;
												this.scale = 1f;
												return;
											}
											if (type == 3507)
											{
												this.SetDefaults1(6);
												this.type = type;
												this.damage = 5;
												this.useAnimation = 13;
												this.useTime = 13;
												this.knockBack = 4f;
												this.shoot = 938;
												this.scale = 0.8f;
												this.value = 350;
												return;
											}
											if (type == 3505)
											{
												this.SetDefaults1(7);
												this.type = type;
												this.useAnimation = 33;
												this.useTime = 23;
												this.scale = 1f;
												this.damage = 4;
												this.hammer = 35;
												this.tileBoost = -1;
												this.value = 400;
												return;
											}
											if (type == 3506)
											{
												this.SetDefaults1(10);
												this.type = type;
												this.useTime = 21;
												this.axe = 7;
												this.useAnimation = 30;
												this.scale = 1f;
												this.damage = 3;
												this.tileBoost = -1;
												this.value = 400;
												return;
											}
											if (type == 3504)
											{
												this.SetDefaults1(99);
												this.type = type;
												this.useAnimation = 29;
												this.useTime = 29;
												this.damage = 6;
												this.value = 350;
												return;
											}
											if (type == 3503)
											{
												this.SetDefaults1(1);
												this.type = type;
												this.useTime = 14;
												this.pick = 35;
												this.useAnimation = 21;
												this.damage = 5;
												this.scale = 0.95f;
												this.value = 750;
												return;
											}
											if (type == 3502)
											{
												this.SetDefaults1(4);
												this.type = type;
												this.useAnimation = 20;
												this.damage = 10;
												this.value = 675;
												this.scale = 1f;
												return;
											}
											if (type == 3501)
											{
												this.SetDefaults1(6);
												this.type = type;
												this.damage = 7;
												this.useAnimation = 12;
												this.useTime = 12;
												this.knockBack = 4f;
												this.shoot = 939;
												this.scale = 0.85f;
												this.value = 525;
												return;
											}
											if (type == 3499)
											{
												this.SetDefaults1(7);
												this.type = type;
												this.useAnimation = 31;
												this.useTime = 21;
												this.scale = 1f;
												this.damage = 6;
												this.hammer = 38;
												this.value = 600;
												return;
											}
											if (type == 3500)
											{
												this.SetDefaults1(10);
												this.type = type;
												this.useTime = 20;
												this.axe = 8;
												this.useAnimation = 28;
												this.scale = 1f;
												this.damage = 4;
												this.value = 600;
												return;
											}
											if (type == 3498)
											{
												this.SetDefaults1(99);
												this.type = type;
												this.useAnimation = 28;
												this.useTime = 28;
												this.damage = 7;
												this.value = 525;
												return;
											}
											if (type == 3497)
											{
												this.SetDefaults1(1);
												this.type = type;
												this.useTime = 12;
												this.pick = 43;
												this.useAnimation = 19;
												this.damage = 6;
												this.scale = 1.025f;
												this.value = 3000;
												return;
											}
											if (type == 3496)
											{
												this.SetDefaults1(4);
												this.type = type;
												this.useAnimation = 20;
												this.damage = 13;
												this.value = 2700;
												this.scale = 1f;
												this.knockBack = 5.5f;
												return;
											}
											if (type == 3495)
											{
												this.SetDefaults1(6);
												this.type = type;
												this.damage = 9;
												this.useAnimation = 12;
												this.useTime = 12;
												this.knockBack = 4f;
												this.shoot = 941;
												this.scale = 0.925f;
												this.value = 2100;
												return;
											}
											if (type == 3493)
											{
												this.SetDefaults1(7);
												this.type = type;
												this.useAnimation = 29;
												this.useTime = 19;
												this.scale = 1f;
												this.damage = 8;
												this.hammer = 43;
												this.value = 2400;
												return;
											}
											if (type == 3494)
											{
												this.SetDefaults1(10);
												this.type = type;
												this.useTime = 19;
												this.axe = 10;
												this.useAnimation = 28;
												this.scale = 1f;
												this.damage = 6;
												this.value = 2400;
												return;
											}
											if (type == 3492)
											{
												this.SetDefaults1(99);
												this.type = type;
												this.useAnimation = 27;
												this.useTime = 27;
												this.damage = 9;
												this.value = 2100;
												return;
											}
											if (type == 3491)
											{
												this.SetDefaults1(1);
												this.type = type;
												this.useTime = 19;
												this.pick = 50;
												this.useAnimation = 21;
												this.scale = 1.05f;
												this.damage = 6;
												this.value = 7500;
												return;
											}
											if (type == 3490)
											{
												this.SetDefaults1(4);
												this.type = type;
												this.useAnimation = 19;
												this.damage = 14;
												this.knockBack = 6f;
												this.scale = 1f;
												this.value = 6750;
												return;
											}
											if (type == 3489)
											{
												this.SetDefaults1(6);
												this.type = type;
												this.damage = 10;
												this.useAnimation = 11;
												this.useTime = 11;
												this.knockBack = 4f;
												this.shoot = 943;
												this.scale = 0.95f;
												this.value = 5250;
												return;
											}
											if (type == 3487)
											{
												this.SetDefaults1(7);
												this.type = type;
												this.useAnimation = 28;
												this.useTime = 25;
												this.scale = 1f;
												this.damage = 9;
												this.hammer = 50;
												this.value = 6000;
												return;
											}
											if (type == 3488)
											{
												this.SetDefaults1(10);
												this.type = type;
												this.useTime = 18;
												this.axe = 11;
												this.useAnimation = 26;
												this.scale = 1f;
												this.damage = 7;
												this.value = 6000;
												return;
											}
											if (type == 3486)
											{
												this.SetDefaults1(99);
												this.type = type;
												this.useAnimation = 26;
												this.useTime = 26;
												this.damage = 10;
												this.value = 5250;
												return;
											}
											if (type == 3485)
											{
												this.SetDefaults1(1);
												this.type = type;
												this.useTime = 15;
												this.pick = 59;
												this.useAnimation = 19;
												this.scale = 1.05f;
												this.damage = 7;
												this.value = 15000;
												return;
											}
											if (type == 3484)
											{
												this.SetDefaults1(4);
												this.type = type;
												this.useAnimation = 17;
												this.damage = 16;
												this.knockBack = 6.5f;
												this.scale = 1f;
												this.value = 13500;
												return;
											}
											if (type == 3483)
											{
												this.SetDefaults1(6);
												this.type = type;
												this.damage = 13;
												this.useAnimation = 10;
												this.useTime = 10;
												this.knockBack = 5f;
												this.shoot = 945;
												this.scale = 0.975f;
												this.value = 10500;
												return;
											}
											if (type == 3481)
											{
												this.SetDefaults1(7);
												this.type = type;
												this.useAnimation = 27;
												this.useTime = 21;
												this.scale = 1f;
												this.damage = 10;
												this.hammer = 59;
												this.value = 12000;
												return;
											}
											if (type == 3482)
											{
												this.SetDefaults1(10);
												this.type = type;
												this.useTime = 17;
												this.axe = 12;
												this.useAnimation = 25;
												this.scale = 1f;
												this.damage = 8;
												this.value = 12000;
												return;
											}
											if (type == 3480)
											{
												this.SetDefaults1(99);
												this.type = type;
												this.useAnimation = 25;
												this.useTime = 25;
												this.damage = 13;
												this.value = 10500;
												return;
											}
											if (type == 3526)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = Item.sellPrice(0, 2, 50, 0);
												this.rare = 4;
												return;
											}
											if (type == 3527)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = Item.sellPrice(0, 2, 50, 0);
												this.rare = 4;
												return;
											}
											if (type == 3528)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = Item.sellPrice(0, 2, 50, 0);
												this.rare = 4;
												return;
											}
											if (type == 3529)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = Item.sellPrice(0, 2, 50, 0);
												this.rare = 4;
												return;
											}
											if (type == 3530)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = Item.sellPrice(0, 2, 50, 0);
												this.rare = 4;
												return;
											}
											if (type == 3531)
											{
												this.mana = 10;
												this.damage = 40;
												this.useStyle = 1;
												this.shootSpeed = 10f;
												this.shoot = 625;
												this.width = 26;
												this.height = 28;
												this.UseSound = SoundID.Item44;
												this.useAnimation = 36;
												this.useTime = 36;
												this.rare = 10;
												this.noMelee = true;
												this.knockBack = 2f;
												this.buffType = 188;
												this.value = Item.sellPrice(0, 10, 0, 0);
												this.summon = true;
												this.autoReuse = true;
												this.reuseDelay = 2;
												return;
											}
											if (type == 3540)
											{
												this.useStyle = 5;
												this.useAnimation = 12;
												this.useTime = 12;
												this.shootSpeed = 20f;
												this.knockBack = 2f;
												this.width = 20;
												this.height = 12;
												this.damage = 50;
												this.UseSound = SoundID.Item5;
												this.shoot = 630;
												this.rare = 10;
												this.value = Item.sellPrice(0, 10, 0, 0);
												this.noMelee = true;
												this.noUseGraphic = true;
												this.ranged = true;
												this.channel = true;
												this.glowMask = 200;
												this.useAmmo = AmmoID.Arrow;
												this.autoReuse = true;
												return;
											}
											if (type == 3541)
											{
												this.useStyle = 5;
												this.useAnimation = 10;
												this.useTime = 10;
												this.reuseDelay = 5;
												this.shootSpeed = 30f;
												this.knockBack = 0.25f;
												this.width = 16;
												this.height = 16;
												this.damage = 100;
												this.UseSound = null;
												this.shoot = 633;
												this.mana = 12;
												this.rare = 10;
												this.value = Item.sellPrice(0, 10, 0, 0);
												this.noMelee = true;
												this.noUseGraphic = true;
												this.magic = true;
												this.channel = true;
												return;
											}
											if (type == 3533)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = Item.sellPrice(0, 1, 50, 0);
												this.rare = 3;
												return;
											}
											if (type == 3534)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = Item.sellPrice(0, 0, 75, 0);
												this.rare = 2;
												return;
											}
											if (type == 3535)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = Item.sellPrice(0, 1, 50, 0);
												this.rare = 3;
												return;
											}
											if (type == 3536)
											{
												this.width = 22;
												this.height = 32;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 410;
												this.placeStyle = 0;
												this.rare = 9;
												this.accessory = true;
												this.vanity = true;
												this.value = Item.buyPrice(1, 0, 0, 0);
												return;
											}
											if (type == 3537)
											{
												this.width = 22;
												this.height = 32;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 410;
												this.placeStyle = 1;
												this.rare = 9;
												this.accessory = true;
												this.vanity = true;
												this.value = Item.buyPrice(1, 0, 0, 0);
												return;
											}
											if (type == 3538)
											{
												this.width = 22;
												this.height = 32;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 410;
												this.placeStyle = 2;
												this.rare = 9;
												this.accessory = true;
												this.vanity = true;
												this.value = Item.buyPrice(1, 0, 0, 0);
												return;
											}
											if (type == 3539)
											{
												this.width = 22;
												this.height = 32;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 410;
												this.placeStyle = 3;
												this.rare = 9;
												this.accessory = true;
												this.vanity = true;
												this.value = Item.buyPrice(1, 0, 0, 0);
												return;
											}
											if (type == 3542)
											{
												this.useStyle = 5;
												this.useAnimation = 12;
												this.useTime = 12;
												this.shootSpeed = 6f;
												this.knockBack = 3f;
												this.width = 16;
												this.height = 16;
												this.damage = 130;
												this.UseSound = SoundID.Item20;
												this.shoot = 634;
												this.mana = 12;
												this.rare = 10;
												this.value = Item.sellPrice(0, 10, 0, 0);
												this.noMelee = true;
												this.magic = true;
												this.autoReuse = true;
												this.noUseGraphic = true;
												this.glowMask = 207;
												return;
											}
											if (type == 3543)
											{
												this.shoot = 636;
												this.shootSpeed = 10f;
												this.damage = 150;
												this.knockBack = 5f;
												this.melee = true;
												this.useStyle = 1;
												this.UseSound = SoundID.Item1;
												this.useAnimation = 16;
												this.useTime = 16;
												this.width = 30;
												this.height = 30;
												this.noUseGraphic = true;
												this.noMelee = true;
												this.autoReuse = true;
												this.value = Item.sellPrice(0, 10, 0, 0);
												this.rare = 10;
												return;
											}
											if (type == 3544)
											{
												this.UseSound = SoundID.Item3;
												this.healLife = 200;
												this.useStyle = 9;
												this.useTurn = true;
												this.useAnimation = 17;
												this.useTime = 17;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.potion = true;
												this.width = 14;
												this.height = 24;
												this.rare = 7;
												this.value = Item.sellPrice(0, 0, 30, 0);
												return;
											}
											if (type == 3545)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 411;
												this.width = 28;
												this.height = 28;
												this.rare = 1;
												this.mech = true;
												this.value = Item.sellPrice(0, 0, 20, 0);
												return;
											}
											if (type == 3547)
											{
												this.useStyle = 1;
												this.shootSpeed = 4f;
												this.shoot = 637;
												this.width = 8;
												this.height = 28;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.UseSound = SoundID.Item1;
												this.useAnimation = 40;
												this.useTime = 40;
												this.noUseGraphic = true;
												this.noMelee = true;
												this.value = Item.buyPrice(0, 0, 20, 0);
												this.rare = 1;
												return;
											}
											if (type == 3546)
											{
												this.useStyle = 5;
												this.autoReuse = true;
												this.useAnimation = 30;
												this.useTime = 30;
												this.useAmmo = AmmoID.Rocket;
												this.width = 50;
												this.height = 20;
												this.shoot = 134;
												this.UseSound = SoundID.Item156;
												this.damage = 25;
												this.shootSpeed = 15f;
												this.noMelee = true;
												this.value = Item.buyPrice(0, 80, 0, 0);
												this.knockBack = 4f;
												this.rare = 8;
												this.ranged = true;
												return;
											}
											if (type == 3350)
											{
												this.useStyle = 5;
												this.useAnimation = 24;
												this.useTime = 9;
												this.width = 24;
												this.height = 14;
												this.shoot = 587;
												this.UseSound = null;
												this.damage = 12;
												this.shootSpeed = 10f;
												this.noMelee = true;
												this.value = Item.sellPrice(0, 0, 50, 0);
												this.knockBack = 1.25f;
												this.scale = 0.85f;
												this.rare = 2;
												this.ranged = true;
												this.crit = 7;
												return;
											}
											if (type == 3352)
											{
												this.SetDefaults1(4);
												this.type = type;
												this.useAnimation = 12;
												this.useTime = 12;
												this.damage = 14;
												this.width = (this.height = 32);
												this.knockBack = 5f;
												this.rare = 2;
												this.value = Item.sellPrice(0, 0, 50, 0);
												return;
											}
											if (type == 3351)
											{
												this.SetDefaults1(4);
												this.type = type;
												this.useAnimation = 15;
												this.useTime = 15;
												this.damage = 16;
												this.width = (this.height = 28);
												this.knockBack = 3.5f;
												this.rare = 2;
												this.value = Item.sellPrice(0, 0, 50, 0);
												return;
											}
											if (type == 3349)
											{
												this.SetDefaults1(4);
												this.type = type;
												this.useAnimation = 18;
												this.useTime = 18;
												this.damage = 20;
												this.width = (this.height = 32);
												this.knockBack = 4.25f;
												this.scale = 1f;
												this.rare = 2;
												this.value = Item.sellPrice(0, 0, 50, 0);
												return;
											}
											if (type == 3548)
											{
												this.useStyle = 5;
												this.shootSpeed = 6f;
												this.shoot = 588;
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.UseSound = SoundID.Item1;
												this.useAnimation = 20;
												this.useTime = 20;
												this.noUseGraphic = true;
												this.noMelee = true;
												this.value = Item.sellPrice(0, 0, 0, 50);
												this.damage = 30;
												this.knockBack = 6f;
												this.rare = 2;
												this.ranged = true;
												return;
											}
											if (type == 3549)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 412;
												this.width = 28;
												this.height = 28;
												this.SetShopValues(ItemRarityColor.StrongRed10, Item.sellPrice(0, 5, 0, 0));
												return;
											}
											if (type == 3563)
											{
												this.useStyle = 1;
												this.autoReuse = true;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.width = 12;
												this.height = 12;
												this.noUseGraphic = true;
												this.makeNPC = 538;
												return;
											}
											if (type == 3564)
											{
												this.useStyle = 1;
												this.autoReuse = true;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.width = 12;
												this.height = 12;
												this.makeNPC = 539;
												this.noUseGraphic = true;
												this.value = Item.sellPrice(0, 10, 0, 0);
												this.rare = 3;
												return;
											}
											if (type == 3565)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 413;
												this.width = 12;
												this.height = 12;
												return;
											}
											if (type == 3566)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 414;
												this.width = 12;
												this.height = 12;
												this.value = Item.sellPrice(0, 10, 0, 0);
												this.rare = 3;
												return;
											}
											if (type == 3550)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = 10000;
												this.rare = 1;
												return;
											}
											if (type == 3551)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = 10000;
												this.rare = 1;
												return;
											}
											if (type == 3552)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = 10000;
												this.rare = 1;
												return;
											}
											if (type == 3553)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = Item.sellPrice(0, 0, 75, 0);
												this.rare = 2;
												return;
											}
											if (type == 3554)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = Item.sellPrice(0, 0, 75, 0);
												this.rare = 2;
												return;
											}
											if (type == 3555)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = Item.sellPrice(0, 0, 75, 0);
												this.rare = 2;
												return;
											}
											if (type == 3556)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = Item.sellPrice(0, 1, 50, 0);
												this.rare = 3;
												return;
											}
											if (type == 3557)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = 10000;
												this.rare = 1;
												return;
											}
											if (type == 3558)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = 10000;
												this.rare = 1;
												return;
											}
											if (type == 3559)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = 10000;
												this.rare = 1;
												return;
											}
											if (type == 3560)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = 10000;
												this.rare = 2;
												return;
											}
											if (type == 3561)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = Item.sellPrice(0, 1, 50, 0);
												this.rare = 3;
												return;
											}
											if (type == 3562)
											{
												this.width = 20;
												this.height = 20;
												this.maxStack = Item.CommonMaxStack;
												this.value = Item.sellPrice(0, 1, 50, 0);
												this.rare = 3;
												return;
											}
											if (type == 3567)
											{
												this.shootSpeed = 2f;
												this.shoot = 638;
												this.damage = 20;
												this.width = 8;
												this.height = 8;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.ammo = AmmoID.Bullet;
												this.knockBack = 3f;
												this.value = 7;
												this.ranged = true;
												this.rare = 9;
												this.value = Item.sellPrice(0, 0, 0, 2);
												return;
											}
											if (type == 3568)
											{
												this.shootSpeed = 3f;
												this.shoot = 639;
												this.damage = 15;
												this.width = 10;
												this.height = 28;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.ammo = AmmoID.Arrow;
												this.knockBack = 3.5f;
												this.value = 5;
												this.ranged = true;
												this.rare = 9;
												this.value = Item.sellPrice(0, 0, 0, 2);
												return;
											}
											if (type == 3569)
											{
												this.mana = 10;
												this.damage = 100;
												this.useStyle = 1;
												this.shootSpeed = 14f;
												this.shoot = 641;
												this.width = 18;
												this.height = 20;
												this.UseSound = SoundID.Item78;
												this.useAnimation = 30;
												this.useTime = 30;
												this.noMelee = true;
												this.value = Item.sellPrice(0, 10, 0, 0);
												this.knockBack = 7.5f;
												this.rare = 10;
												this.summon = true;
												this.sentry = true;
												return;
											}
											if (type == 3571)
											{
												this.mana = 10;
												this.damage = 130;
												this.useStyle = 1;
												this.shootSpeed = 14f;
												this.shoot = 643;
												this.width = 18;
												this.height = 20;
												this.UseSound = SoundID.Item78;
												this.useAnimation = 30;
												this.useTime = 30;
												this.noMelee = true;
												this.value = Item.sellPrice(0, 10, 0, 0);
												this.knockBack = 7.5f;
												this.rare = 10;
												this.summon = true;
												this.sentry = true;
												return;
											}
											if (type == 3570)
											{
												this.autoReuse = true;
												this.mana = 9;
												this.useStyle = 5;
												this.damage = 100;
												this.useAnimation = 10;
												this.useTime = 10;
												this.width = 40;
												this.height = 40;
												this.shoot = 645;
												this.shootSpeed = 10f;
												this.knockBack = 4.5f;
												this.value = Item.sellPrice(0, 10, 0, 0);
												this.magic = true;
												this.rare = 10;
												this.noMelee = true;
												this.UseSound = SoundID.Item88;
												return;
											}
											if (type == 3572)
											{
												this.noUseGraphic = true;
												this.damage = 0;
												this.useStyle = 5;
												this.shootSpeed = 18f;
												this.shoot = 646;
												this.width = 18;
												this.height = 28;
												this.UseSound = SoundID.Item1;
												this.useAnimation = 20;
												this.useTime = 20;
												this.rare = 10;
												this.noMelee = true;
												this.value = Item.sellPrice(0, 10, 0, 0);
												return;
											}
											if (type >= 3573 && type <= 3576)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 415 + type - 3573;
												this.width = 12;
												this.height = 12;
												return;
											}
											if (type == 3577)
											{
												this.channel = true;
												this.damage = 0;
												this.useStyle = 4;
												this.shoot = 650;
												this.width = 24;
												this.height = 24;
												this.UseSound = SoundID.Item8;
												this.useAnimation = 20;
												this.useTime = 20;
												this.rare = 10;
												this.noMelee = true;
												this.value = Item.sellPrice(0, 10, 0, 0);
												this.buffType = 190;
												this.expert = true;
												return;
											}
											if (type == 3578)
											{
												this.width = 28;
												this.height = 20;
												this.bodySlot = 192;
												this.rare = 9;
												this.value = Item.sellPrice(0, 5, 0, 0);
												this.vanity = true;
												return;
											}
											if (type == 3579)
											{
												this.width = 18;
												this.height = 14;
												this.legSlot = 132;
												this.rare = 9;
												this.value = Item.sellPrice(0, 5, 0, 0);
												this.vanity = true;
												return;
											}
											if (type == 3580)
											{
												this.width = 18;
												this.height = 14;
												this.wingSlot = 33;
												this.rare = 9;
												this.accessory = true;
												this.value = 400000;
												return;
											}
											if (type == 3581)
											{
												this.width = 18;
												this.height = 14;
												this.rare = 9;
												this.vanity = true;
												this.value = Item.sellPrice(0, 5, 0, 0);
												this.accessory = true;
												this.hasVanityEffects = true;
												return;
											}
											if (type == 3582)
											{
												this.width = 24;
												this.height = 8;
												this.accessory = true;
												this.rare = 9;
												this.wingSlot = 34;
												this.value = 400000;
												return;
											}
											if (type == 3583)
											{
												this.width = 28;
												this.height = 20;
												this.headSlot = 191;
												this.rare = 9;
												this.value = Item.sellPrice(0, 5, 0, 0);
												this.vanity = true;
												return;
											}
											if (type == 3584)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 7;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createWall = 60;
												this.width = 12;
												this.height = 12;
												return;
											}
											if (type == 3585)
											{
												this.width = 28;
												this.height = 20;
												this.headSlot = 192;
												this.rare = 9;
												this.value = Item.sellPrice(0, 5, 0, 0);
												this.vanity = true;
												return;
											}
											if (type == 3586)
											{
												this.width = 28;
												this.height = 20;
												this.bodySlot = 193;
												this.rare = 9;
												this.value = Item.sellPrice(0, 5, 0, 0);
												this.vanity = true;
												return;
											}
											if (type == 3587)
											{
												this.width = 18;
												this.height = 14;
												this.legSlot = 133;
												this.rare = 9;
												this.value = Item.sellPrice(0, 5, 0, 0);
												this.vanity = true;
												return;
											}
											if (type == 3588)
											{
												this.width = 24;
												this.height = 8;
												this.accessory = true;
												this.rare = 9;
												this.wingSlot = 35;
												this.value = 400000;
												return;
											}
											if (type == 3589)
											{
												this.width = 28;
												this.height = 20;
												this.headSlot = 193;
												this.rare = 9;
												this.value = Item.sellPrice(0, 5, 0, 0);
												this.vanity = true;
												return;
											}
											if (type == 3590)
											{
												this.width = 28;
												this.height = 20;
												this.bodySlot = 194;
												this.rare = 9;
												this.value = Item.sellPrice(0, 5, 0, 0);
												this.vanity = true;
												return;
											}
											if (type == 3591)
											{
												this.width = 18;
												this.height = 14;
												this.legSlot = 134;
												this.rare = 9;
												this.value = Item.sellPrice(0, 5, 0, 0);
												this.vanity = true;
												return;
											}
											if (type == 3592)
											{
												this.width = 24;
												this.height = 8;
												this.accessory = true;
												this.rare = 9;
												this.wingSlot = 36;
												this.value = 400000;
												return;
											}
											if (type >= 3593 && type <= 3594)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 91;
												this.placeStyle = 270 + type - 3593;
												this.width = 10;
												this.height = 24;
												this.value = 1000;
												this.rare = 1;
												return;
											}
											if (type == 3595)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 240;
												this.width = 30;
												this.height = 30;
												this.value = Item.sellPrice(0, 1, 0, 0);
												this.placeStyle = 59;
												this.rare = 1;
												return;
											}
											if (type == 3596)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 242;
												this.width = 30;
												this.height = 30;
												this.value = Item.buyPrice(0, 3, 0, 0);
												this.placeStyle = 36;
												return;
											}
											if (type == 3601)
											{
												this.useStyle = 4;
												this.width = 22;
												this.height = 14;
												this.consumable = true;
												this.useAnimation = 45;
												this.useTime = 45;
												this.maxStack = Item.CommonMaxStack;
												this.rare = 10;
												return;
											}
											if (type == 3602)
											{
												this.createTile = 419;
												this.width = 16;
												this.height = 16;
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.mech = true;
												this.value = Item.buyPrice(0, 0, 10, 0);
												return;
											}
											if (type >= 3603 && type <= 3608)
											{
												this.createTile = 420;
												this.width = 16;
												this.height = 16;
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.placeStyle = type - 3603;
												this.mech = true;
												this.value = Item.buyPrice(0, 2, 0, 0);
												return;
											}
											if (type == 3609)
											{
												this.createTile = 421;
												this.width = 16;
												this.height = 16;
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.value = Item.buyPrice(0, 0, 5, 0);
												return;
											}
											if (type == 3610)
											{
												this.createTile = 422;
												this.width = 16;
												this.height = 16;
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.value = Item.buyPrice(0, 0, 5, 0);
												return;
											}
											if (type == 3611)
											{
												this.useStyle = 5;
												this.useAnimation = 10;
												this.useTime = 10;
												this.width = 20;
												this.height = 20;
												this.shoot = 651;
												this.channel = true;
												this.shootSpeed = 10f;
												this.value = Item.sellPrice(0, 4, 0, 0);
												this.rare = 2;
												this.UseSound = SoundID.Item64;
												this.mech = true;
												return;
											}
											if (type == 3612)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 5;
												this.autoReuse = true;
												this.width = 24;
												this.height = 28;
												this.rare = 1;
												this.value = 20000;
												this.tileBoost = 20;
												this.mech = true;
												return;
											}
											if (type >= 3613 && type <= 3615)
											{
												this.createTile = 423;
												this.width = 16;
												this.height = 16;
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.placeStyle = type - 3613;
												this.mech = true;
												return;
											}
											if (type == 3616)
											{
												this.createTile = 424;
												this.width = 16;
												this.height = 16;
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.mech = true;
												this.value = Item.buyPrice(0, 0, 2, 0);
												return;
											}
											if (type == 3617)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 425;
												this.width = 28;
												this.height = 28;
												this.mech = true;
												return;
											}
											if (type == 3618)
											{
												this.createTile = 419;
												this.placeStyle = 1;
												this.width = 16;
												this.height = 16;
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.mech = true;
												this.value = Item.buyPrice(0, 0, 10, 0);
												return;
											}
											if (type == 3619)
											{
												this.width = 24;
												this.height = 28;
												this.rare = 3;
												this.value = Item.buyPrice(0, 1, 0, 0);
												this.accessory = true;
												return;
											}
											if (type == 3620)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 5;
												this.autoReuse = true;
												this.width = 24;
												this.height = 28;
												this.rare = 1;
												this.value = 20000;
												this.tileBoost = 20;
												this.mech = true;
												return;
											}
											if (type == 3621)
											{
												this.createTile = 426;
												this.width = 16;
												this.height = 16;
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.value = Item.buyPrice(0, 0, 1, 0);
												return;
											}
											if (type == 3622)
											{
												this.createTile = 427;
												this.width = 16;
												this.height = 16;
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.value = Item.buyPrice(0, 0, 1, 0);
												return;
											}
											if (type == 3623)
											{
												this.noUseGraphic = true;
												this.damage = 0;
												this.useStyle = 5;
												this.shootSpeed = 16f;
												this.shoot = 652;
												this.width = 18;
												this.height = 28;
												this.UseSound = SoundID.Item1;
												this.useAnimation = 20;
												this.useTime = 20;
												this.rare = 10;
												this.noMelee = true;
												this.value = Item.sellPrice(0, 10, 0, 0);
												return;
											}
											if (type == 3624)
											{
												this.width = 30;
												this.height = 30;
												this.accessory = true;
												this.rare = 3;
												this.value = Item.buyPrice(0, 10, 0, 0);
												return;
											}
											if (type == 3625)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 5;
												this.autoReuse = true;
												this.width = 24;
												this.height = 28;
												this.rare = 1;
												this.value = Item.buyPrice(0, 12, 0, 0);
												this.tileBoost = 20;
												this.mech = true;
												return;
											}
											if (type == 3626)
											{
												this.createTile = 428;
												this.width = 16;
												this.height = 16;
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.placeStyle = 3;
												this.mech = true;
												return;
											}
											if (type == 3627)
											{
												this.width = 18;
												this.height = 18;
												this.headSlot = 194;
												this.value = Item.buyPrice(0, 1, 0, 0);
												this.vanity = true;
												return;
											}
											if (type == 3628)
											{
												this.channel = true;
												this.damage = 0;
												this.useStyle = 4;
												this.shoot = 653;
												this.width = 24;
												this.height = 24;
												this.UseSound = SoundID.Item8;
												this.useAnimation = 20;
												this.useTime = 20;
												this.rare = 1;
												this.noMelee = true;
												this.value = Item.buyPrice(5, 0, 0, 0);
												this.buffType = 191;
												return;
											}
											if (type == 3629)
											{
												this.createTile = 429;
												this.width = 16;
												this.height = 16;
												this.rare = 2;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.mech = true;
												this.value = Item.buyPrice(0, 5, 0, 0);
												return;
											}
											if (type == 3630)
											{
												this.createTile = 428;
												this.width = 16;
												this.height = 16;
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.placeStyle = 0;
												this.mech = true;
												return;
											}
											if (type == 3631)
											{
												this.createTile = 428;
												this.width = 16;
												this.height = 16;
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.placeStyle = 2;
												this.mech = true;
												return;
											}
											if (type == 3632)
											{
												this.createTile = 428;
												this.width = 16;
												this.height = 16;
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.placeStyle = 1;
												this.mech = true;
												return;
											}
											if (type >= 3633 && type <= 3637)
											{
												this.createTile = 430 + (type - 3633);
												this.width = 16;
												this.height = 16;
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.value = Item.buyPrice(0, 0, 1, 0);
												return;
											}
											if (type >= 3638 && type <= 3642)
											{
												this.createTile = 435 + (type - 3638);
												this.width = 16;
												this.height = 16;
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.value = Item.buyPrice(0, 0, 1, 0);
												return;
											}
											if (type == 3643)
											{
												this.width = 20;
												this.height = 20;
												this.rare = 1;
												return;
											}
											if (type >= 3644 && type <= 3650)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 440;
												this.placeStyle = type - 3644;
												this.width = 22;
												this.height = 22;
												this.value = Item.sellPrice(0, 0, 1, 0);
												return;
											}
											if (type >= 3651 && type <= 3662)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 105;
												this.width = 20;
												this.height = 20;
												this.value = 300;
												this.placeStyle = 51 + type - 3651;
												return;
											}
											if (type == 3663)
											{
												this.createTile = 419;
												this.width = 16;
												this.height = 16;
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.mech = true;
												this.placeStyle = 2;
												this.value = Item.buyPrice(0, 2, 0, 0);
												return;
											}
											if (type == 3664)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 209;
												this.placeStyle = 3;
												this.width = 12;
												this.height = 12;
												this.rare = 3;
												this.value = Item.buyPrice(0, 10, 0, 0);
												return;
											}
											if (type >= 3665 && type <= 3706)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 441;
												this.placeStyle = type - 3665 + (type > 3666).ToInt() + (type > 3667).ToInt() * 3 + (type > 3683).ToInt() * 5 + (type > 3691).ToInt() + (type > 3692).ToInt() + (type > 3693).ToInt();
												this.width = 26;
												this.height = 22;
												this.value = 500;
												return;
											}
											if (type == 3707)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 442;
												this.width = 12;
												this.height = 12;
												this.placeStyle = 0;
												this.mech = true;
												this.value = Item.buyPrice(0, 2, 0, 0);
												this.mech = true;
												return;
											}
											if (type >= 3708 && type <= 3720)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 105;
												this.width = 20;
												this.height = 20;
												this.value = 300;
												this.placeStyle = 63 + type - 3708;
												return;
											}
											if (type == 3721)
											{
												this.width = 26;
												this.height = 30;
												this.maxStack = 1;
												this.value = Item.sellPrice(0, 3, 0, 0);
												this.rare = 3;
												this.accessory = true;
												this.backSlot = 10;
												return;
											}
											if (type == 3722)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 443;
												this.width = 20;
												this.height = 12;
												this.value = 10000;
												this.mech = true;
												return;
											}
											if (type >= 3723 && type <= 3724)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 215;
												this.placeStyle = 6 + type - 3723;
												this.width = 12;
												this.height = 12;
												return;
											}
											if (type == 3725)
											{
												this.createTile = 445;
												this.width = 16;
												this.height = 16;
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.mech = true;
												this.value = Item.buyPrice(0, 0, 2, 0);
												return;
											}
											if (type >= 3726 && type <= 3729)
											{
												this.createTile = 423;
												this.width = 16;
												this.height = 16;
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.placeStyle = type - 3726 + 3;
												this.mech = true;
												return;
											}
											if (type == 3730 || type == 3731)
											{
												this.width = 20;
												this.height = 22;
												this.rare = 1;
												this.value = Item.buyPrice(0, 2, 0, 0);
												this.accessory = true;
												this.vanity = true;
												this.balloonSlot = (sbyte)(16 + type - 3730);
												return;
											}
											if (type == 3732)
											{
												this.width = 18;
												this.height = 18;
												this.headSlot = 195;
												this.value = Item.buyPrice(0, 1, 0, 0);
												this.vanity = true;
												return;
											}
											if (type == 3733)
											{
												this.width = 18;
												this.height = 18;
												this.headSlot = 196;
												this.value = Item.buyPrice(0, 3, 0, 0);
												this.vanity = true;
												return;
											}
											if (type == 3734)
											{
												this.width = 28;
												this.height = 20;
												this.bodySlot = 195;
												this.value = Item.buyPrice(0, 3, 0, 0);
												this.vanity = true;
												return;
											}
											if (type == 3735)
											{
												this.width = 18;
												this.height = 14;
												this.legSlot = 138;
												this.value = Item.buyPrice(0, 3, 0, 0);
												this.vanity = true;
												return;
											}
											if (type >= 3736 && type <= 3738)
											{
												this.createTile = 446 + (type - 3736);
												this.width = 16;
												this.height = 16;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.value = Item.buyPrice(0, 0, 1, 0);
												return;
											}
											if (type >= 3739 && type <= 3741)
											{
												this.createTile = 449 + (type - 3739);
												this.width = 16;
												this.height = 16;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.value = Item.buyPrice(0, 0, 0, 50);
												this.tileBoost += 3;
												return;
											}
											if (type == 3742)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 452;
												this.width = 26;
												this.height = 20;
												this.value = Item.buyPrice(0, 5, 0, 0);
												this.rare = 1;
												return;
											}
											if (type >= 3743 && type <= 3745)
											{
												this.createTile = 453;
												this.placeStyle = type - 3743;
												if (3744 == type)
												{
													this.placeStyle = 0;
												}
												if (3745 == type)
												{
													this.placeStyle = 2;
												}
												if (3743 == type)
												{
													this.placeStyle = 4;
												}
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.width = 12;
												this.height = 30;
												this.value = Item.buyPrice(0, 0, 10, 0);
												return;
											}
											if (type == 3746)
											{
												this.createTile = 454;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.width = 12;
												this.height = 30;
												this.value = Item.buyPrice(0, 1, 0, 0);
												return;
											}
											if (type == 3747)
											{
												this.createTile = 455;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.width = 12;
												this.height = 30;
												this.value = Item.buyPrice(0, 20, 0, 0);
												this.rare = 3;
												return;
											}
											if (type == 3748)
											{
												this.createTile = 456;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.width = 12;
												this.height = 30;
												this.value = Item.buyPrice(0, 0, 20, 0);
												return;
											}
											if (type == 3749)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 457;
												this.width = 26;
												this.height = 20;
												this.value = Item.buyPrice(0, 0, 20, 0);
												this.rare = 1;
												return;
											}
											if (type == 3750)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 621;
												this.width = 22;
												this.height = 22;
												this.value = Item.sellPrice(0, 0, 50, 0);
												this.rare = 3;
												return;
											}
											if (type == 3751)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 7;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createWall = 225;
												this.width = 12;
												this.height = 12;
												return;
											}
											if (type == 3752)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 7;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createWall = 226;
												this.width = 12;
												this.height = 12;
												return;
											}
											if (type == 3753)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 7;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createWall = 227;
												this.width = 12;
												this.height = 12;
												return;
											}
											if (type == 3754)
											{
												this.createTile = 458;
												this.width = 16;
												this.height = 16;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.value = Item.buyPrice(0, 0, 0, 5);
												return;
											}
											if (type == 3755)
											{
												this.createTile = 459;
												this.width = 16;
												this.height = 16;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												return;
											}
											if (type == 3756)
											{
												this.createTile = 460;
												this.width = 16;
												this.height = 16;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												return;
											}
											if (type == 3757)
											{
												this.width = 18;
												this.height = 18;
												this.headSlot = 197;
												this.value = Item.sellPrice(0, 0, 30, 0);
												this.vanity = true;
												this.rare = 9;
												return;
											}
											if (type == 3758)
											{
												this.width = 28;
												this.height = 20;
												this.bodySlot = 196;
												this.value = Item.sellPrice(0, 0, 30, 0);
												this.vanity = true;
												this.rare = 9;
												return;
											}
											if (type == 3759)
											{
												this.width = 18;
												this.height = 14;
												this.legSlot = 139;
												this.value = Item.sellPrice(0, 0, 30, 0);
												this.vanity = true;
												this.rare = 9;
												return;
											}
											if (type >= 3760 && type <= 3762)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 7;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createWall = 228 + (type - 3760);
												this.width = 12;
												this.height = 12;
												return;
											}
											if (type == 3763)
											{
												this.width = 18;
												this.height = 18;
												this.headSlot = 198;
												this.value = Item.sellPrice(0, 1, 0, 0);
												this.vanity = true;
												this.rare = 9;
												return;
											}
											if (type >= 3764 && type <= 3769)
											{
												this.SetDefaults(198);
												this.type = type;
												this.damage = 48;
												this.useTime = 16;
												this.useAnimation = 16;
												this.scale = 1f;
												this.autoReuse = true;
												this.useTurn = true;
												this.rare = 4;
												this.value = Item.sellPrice(0, 1, 0, 0);
												return;
											}
											if (type == 3770)
											{
												this.width = 18;
												this.height = 14;
												this.legSlot = 140;
												this.value = Item.sellPrice(0, 1, 0, 0);
												this.rare = 4;
												return;
											}
											if (type == 3771)
											{
												this.useStyle = 4;
												this.channel = true;
												this.width = 34;
												this.height = 34;
												this.UseSound = SoundID.Item25;
												this.useAnimation = 20;
												this.useTime = 20;
												this.rare = 8;
												this.noMelee = true;
												this.mountType = 14;
												this.value = Item.sellPrice(0, 5, 0, 0);
												return;
											}
											if (type == 3772)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.autoReuse = true;
												this.useAnimation = 18;
												this.useTime = 18;
												this.width = 28;
												this.height = 28;
												this.damage = 16;
												this.knockBack = 4.5f;
												this.UseSound = SoundID.Item1;
												this.scale = 1.1f;
												this.melee = true;
												this.value = Item.sellPrice(0, 0, 10, 0);
												this.rare = 2;
												return;
											}
											if (type == 3773)
											{
												this.width = 18;
												this.height = 18;
												this.headSlot = 199;
												this.rare = 3;
												this.vanity = true;
												this.value = Item.sellPrice(0, 0, 50, 0);
												return;
											}
											if (type == 3774)
											{
												this.width = 18;
												this.height = 18;
												this.bodySlot = 197;
												this.rare = 3;
												this.vanity = true;
												this.value = Item.sellPrice(0, 0, 50, 0);
												return;
											}
											if (type == 3775)
											{
												this.width = 18;
												this.height = 18;
												this.legSlot = 141;
												this.rare = 3;
												this.vanity = true;
												this.value = Item.sellPrice(0, 0, 50, 0);
												return;
											}
											if (type == 3776)
											{
												this.width = 18;
												this.height = 18;
												this.defense = 6;
												this.headSlot = 200;
												this.rare = 5;
												this.value = 250000;
												return;
											}
											if (type == 3777)
											{
												this.width = 18;
												this.height = 18;
												this.defense = 12;
												this.bodySlot = 198;
												this.rare = 5;
												this.value = 200000;
												return;
											}
											if (type == 3778)
											{
												this.width = 18;
												this.height = 18;
												this.defense = 8;
												this.legSlot = 142;
												this.rare = 5;
												this.value = 150000;
												return;
											}
											if (type == 3779)
											{
												this.mana = 14;
												this.damage = 85;
												this.useStyle = 5;
												this.shootSpeed = 3f;
												this.shoot = 659;
												this.width = 26;
												this.height = 28;
												this.UseSound = SoundID.Item117;
												this.useAnimation = 22;
												this.useTime = 22;
												this.autoReuse = true;
												this.noMelee = true;
												this.knockBack = 5f;
												this.rare = 4;
												this.value = Item.sellPrice(0, 1, 0, 0);
												this.magic = true;
												this.glowMask = 218;
												return;
											}
											if (type == 3780)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 91;
												this.placeStyle = 272;
												this.width = 10;
												this.height = 24;
												this.value = 1000;
												this.rare = 1;
												return;
											}
											if (type == 3781)
											{
												this.width = 24;
												this.height = 28;
												this.rare = 3;
												this.value = 100000;
												this.accessory = true;
												return;
											}
											if (type == 3784)
											{
												this.width = 18;
												this.height = 18;
												this.legSlot = 143;
												this.rare = 3;
												this.vanity = true;
												this.value = Item.sellPrice(0, 0, 50, 0);
												return;
											}
											if (type == 3785)
											{
												this.width = 18;
												this.height = 18;
												this.bodySlot = 199;
												this.rare = 3;
												this.vanity = true;
												this.value = Item.sellPrice(0, 0, 50, 0);
												return;
											}
											if (type == 3786)
											{
												this.width = 18;
												this.height = 18;
												this.headSlot = 201;
												this.rare = 3;
												this.vanity = true;
												this.value = Item.sellPrice(0, 0, 50, 0);
												return;
											}
											if (type == 3782)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 461;
												this.width = 24;
												this.height = 24;
												this.value = Item.sellPrice(0, 0, 0, 40);
												return;
											}
											if (type == 3787)
											{
												this.useStyle = 5;
												this.useAnimation = 12;
												this.useTime = 4;
												this.reuseDelay = this.useAnimation + 6;
												this.shootSpeed = 14f;
												this.knockBack = 6f;
												this.width = 16;
												this.height = 16;
												this.damage = 38;
												this.UseSound = SoundID.Item9;
												this.crit = 20;
												this.shoot = 660;
												this.mana = 17;
												this.rare = 4;
												this.value = 300000;
												this.noMelee = true;
												this.magic = true;
												this.autoReuse = true;
												return;
											}
											if (type == 3788)
											{
												this.knockBack = 6.5f;
												this.useStyle = 5;
												this.useAnimation = 48;
												this.useTime = 48;
												this.width = 50;
												this.height = 14;
												this.shoot = 10;
												this.useAmmo = AmmoID.Bullet;
												this.UseSound = SoundID.Item36;
												this.damage = 24;
												this.shootSpeed = 7f;
												this.noMelee = true;
												this.value = 250000;
												this.rare = 4;
												this.ranged = true;
												return;
											}
											if (type == 3783)
											{
												this.width = 18;
												this.height = 18;
												this.maxStack = Item.CommonMaxStack;
												this.value = 50000;
												this.rare = 5;
												return;
											}
											if (type >= 3789 && type <= 3793)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 91;
												this.placeStyle = 273 + type - 3789;
												this.width = 10;
												this.height = 24;
												this.value = 1000;
												this.rare = 1;
												return;
											}
											if (type == 3794)
											{
												this.width = 18;
												this.height = 18;
												this.maxStack = Item.CommonMaxStack;
												this.value = Item.sellPrice(0, 0, 1, 0);
												this.rare = 1;
												return;
											}
											if (type == 3795)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 462;
												this.width = 26;
												this.height = 18;
												this.value = Item.sellPrice(0, 0, 50, 0);
												this.rare = 3;
												return;
											}
											if (type == 3796)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.consumable = true;
												this.createTile = 139;
												this.placeStyle = 38;
												this.width = 24;
												this.height = 24;
												this.rare = 4;
												this.value = 100000;
												this.accessory = true;
												this.hasVanityEffects = true;
												return;
											}
											if (type == 3797)
											{
												this.width = 18;
												this.height = 18;
												this.headSlot = 203;
												this.rare = 8;
												this.defense = 7;
												this.value = Item.sellPrice(0, 3, 0, 0);
												return;
											}
											if (type == 3798)
											{
												this.width = 18;
												this.height = 18;
												this.bodySlot = 200;
												this.rare = 8;
												this.defense = 15;
												this.value = Item.sellPrice(0, 3, 0, 0);
												return;
											}
											if (type == 3799)
											{
												this.width = 18;
												this.height = 18;
												this.legSlot = 144;
												this.rare = 8;
												this.defense = 10;
												this.value = Item.sellPrice(0, 3, 0, 0);
												return;
											}
											if (type == 3800)
											{
												this.width = 18;
												this.height = 18;
												this.headSlot = 204;
												this.rare = 8;
												this.defense = 13;
												this.value = Item.sellPrice(0, 3, 0, 0);
												return;
											}
											if (type == 3801)
											{
												this.width = 18;
												this.height = 18;
												this.bodySlot = 201;
												this.rare = 8;
												this.defense = 27;
												this.value = Item.sellPrice(0, 3, 0, 0);
												return;
											}
											if (type == 3802)
											{
												this.width = 18;
												this.height = 18;
												this.legSlot = 145;
												this.rare = 8;
												this.defense = 18;
												this.value = Item.sellPrice(0, 3, 0, 0);
												return;
											}
											if (type == 3803)
											{
												this.width = 18;
												this.height = 18;
												this.headSlot = 205;
												this.rare = 8;
												this.defense = 7;
												this.value = Item.sellPrice(0, 3, 0, 0);
												return;
											}
											if (type == 3804)
											{
												this.width = 18;
												this.height = 18;
												this.bodySlot = 202;
												this.rare = 8;
												this.defense = 17;
												this.value = Item.sellPrice(0, 3, 0, 0);
												return;
											}
											if (type == 3805)
											{
												this.width = 18;
												this.height = 18;
												this.legSlot = 146;
												this.rare = 8;
												this.defense = 12;
												this.value = Item.sellPrice(0, 3, 0, 0);
												return;
											}
											if (type == 3806)
											{
												this.width = 18;
												this.height = 18;
												this.headSlot = 206;
												this.rare = 8;
												this.defense = 8;
												this.value = Item.sellPrice(0, 3, 0, 0);
												return;
											}
											if (type == 3807)
											{
												this.width = 18;
												this.height = 18;
												this.bodySlot = 203;
												this.rare = 8;
												this.defense = 22;
												this.value = Item.sellPrice(0, 3, 0, 0);
												return;
											}
											if (type == 3808)
											{
												this.width = 18;
												this.height = 18;
												this.legSlot = 148;
												this.rare = 8;
												this.defense = 16;
												this.value = Item.sellPrice(0, 3, 0, 0);
												return;
											}
											if (type == 3809)
											{
												this.width = 22;
												this.height = 22;
												this.accessory = true;
												this.rare = 5;
												this.value = Item.sellPrice(0, 3, 0, 0);
												this.neckSlot = 9;
												return;
											}
											if (type == 3810)
											{
												this.width = 22;
												this.height = 22;
												this.accessory = true;
												this.rare = 5;
												this.value = Item.sellPrice(0, 3, 0, 0);
												this.shieldSlot = 6;
												return;
											}
											if (type == 3811)
											{
												this.width = 22;
												this.height = 22;
												this.accessory = true;
												this.rare = 5;
												this.value = Item.sellPrice(0, 3, 0, 0);
												this.handOnSlot = 19;
												return;
											}
											if (type == 3812)
											{
												this.width = 22;
												this.height = 22;
												this.accessory = true;
												this.rare = 5;
												this.value = Item.sellPrice(0, 3, 0, 0);
												this.waistSlot = 12;
												return;
											}
											if (type == 3813)
											{
												this.rare = 3;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 463;
												this.width = 12;
												this.height = 12;
												this.value = 100000;
												this.glowMask = 244;
												return;
											}
											if (type == 3814)
											{
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 464;
												this.width = 12;
												this.height = 12;
												this.value = 100000;
												return;
											}
											if (type == 3815)
											{
												this.rare = 1;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 465;
												this.width = 12;
												this.height = 12;
												this.value = 100000;
												return;
											}
											if (type == 3816)
											{
												this.rare = 3;
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 466;
												this.width = 12;
												this.height = 12;
												this.value = Item.buyPrice(0, 1, 0, 0);
												return;
											}
											if (type == 3817)
											{
												this.width = 12;
												this.height = 12;
												this.maxStack = Item.CommonMaxStack;
												this.value = 0;
												this.rare = 3;
												return;
											}
											if (type == 3818 || type == 3819 || type == 3820 || type == 3824 || type == 3825 || type == 3826 || type == 3829 || type == 3830 || type == 3831 || type == 3832 || type == 3833 || type == 3834)
											{
												this.width = 18;
												this.height = 20;
												this.UseSound = SoundID.DD2_DefenseTowerSpawn;
												this.useStyle = 1;
												this.useAnimation = 30;
												this.useTime = 30;
												this.shootSpeed = 1f;
												this.noMelee = true;
												this.value = Item.sellPrice(0, 1, 0, 0);
												this.rare = 3;
												this.shoot = 663;
												this.summon = true;
												this.damage = 17;
												this.knockBack = 3f;
												this.mana = 5;
												this.DD2Summon = true;
												this.sentry = true;
												switch (type)
												{
												case 3819:
													this.shoot = 665;
													this.damage = 42;
													this.rare = 5;
													this.mana = 10;
													this.value = Item.sellPrice(0, 5, 0, 0);
													return;
												case 3820:
													this.shoot = 667;
													this.damage = 88;
													this.rare = 8;
													this.mana = 15;
													this.value = Item.sellPrice(0, 15, 0, 0);
													return;
												case 3821:
												case 3822:
												case 3823:
												case 3827:
												case 3828:
													break;
												case 3824:
													this.shoot = 677;
													this.damage = 30;
													this.knockBack = 4.7f;
													return;
												case 3825:
													this.shoot = 678;
													this.damage = 74;
													this.rare = 5;
													this.mana = 10;
													this.knockBack = 4.7f;
													this.value = Item.sellPrice(0, 5, 0, 0);
													return;
												case 3826:
													this.shoot = 679;
													this.damage = 156;
													this.rare = 8;
													this.mana = 15;
													this.knockBack = 4.7f;
													this.value = Item.sellPrice(0, 15, 0, 0);
													return;
												case 3829:
													this.shoot = 688;
													this.damage = 4;
													this.knockBack = 0.25f;
													return;
												case 3830:
													this.shoot = 689;
													this.damage = 11;
													this.rare = 5;
													this.mana = 10;
													this.knockBack = 0.25f;
													this.value = Item.sellPrice(0, 5, 0, 0);
													return;
												case 3831:
													this.shoot = 690;
													this.damage = 34;
													this.rare = 8;
													this.mana = 15;
													this.knockBack = 0.25f;
													this.value = Item.sellPrice(0, 15, 0, 0);
													return;
												case 3832:
													this.shoot = 691;
													this.damage = 24;
													this.knockBack = 0.5f;
													return;
												case 3833:
													this.shoot = 692;
													this.damage = 59;
													this.rare = 5;
													this.mana = 10;
													this.knockBack = 0.5f;
													this.value = Item.sellPrice(0, 5, 0, 0);
													return;
												case 3834:
													this.shoot = 693;
													this.damage = 126;
													this.rare = 8;
													this.mana = 15;
													this.knockBack = 0.5f;
													this.value = Item.sellPrice(0, 15, 0, 0);
													return;
												default:
													return;
												}
											}
											else
											{
												if (type == 3821)
												{
													this.shootSpeed = 6.5f;
													this.shoot = 669;
													this.width = 20;
													this.height = 20;
													this.maxStack = 1;
													this.UseSound = SoundID.Item1;
													this.useStyle = 5;
													this.useAnimation = 40;
													this.useTime = 40;
													this.noUseGraphic = true;
													this.noMelee = true;
													this.value = Item.sellPrice(0, 0, 1, 0);
													this.damage = 20;
													this.knockBack = 7f;
													this.ranged = true;
													this.rare = 1;
													this.useAmmo = 353;
													return;
												}
												if (type == 3822)
												{
													this.width = 12;
													this.height = 12;
													this.maxStack = Item.CommonMaxStack;
													this.value = 0;
													return;
												}
												if (type == 3823)
												{
													this.UseSound = SoundID.Item1;
													this.useStyle = 1;
													this.damage = 95;
													this.useAnimation = 20;
													this.useTime = 20;
													this.width = 34;
													this.height = 34;
													this.scale = 1.1f;
													this.knockBack = 6.5f;
													this.melee = true;
													this.rare = 5;
													this.value = Item.sellPrice(0, 1, 0, 0);
													this.autoReuse = true;
													this.flame = true;
													this.useTurn = true;
													return;
												}
												if (type == 3828)
												{
													this.rare = 3;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.width = 22;
													this.height = 18;
													this.value = Item.buyPrice(0, 0, 25, 0);
													return;
												}
												if (type == 3835)
												{
													this.useStyle = 5;
													this.useAnimation = 30;
													this.useTime = 30;
													this.shootSpeed = 24f;
													this.knockBack = 7f;
													this.width = 16;
													this.height = 16;
													this.UseSound = SoundID.DD2_MonkStaffSwing;
													this.shoot = 697;
													this.rare = 5;
													this.value = Item.sellPrice(0, 1, 0, 0);
													this.noMelee = true;
													this.noUseGraphic = true;
													this.channel = true;
													this.autoReuse = true;
													this.melee = true;
													this.damage = 50;
													return;
												}
												if (type == 3836)
												{
													this.useStyle = 5;
													this.useAnimation = 27;
													this.useTime = 27;
													this.shootSpeed = 42f;
													this.knockBack = 7f;
													this.width = 16;
													this.height = 16;
													this.UseSound = SoundID.DD2_GhastlyGlaivePierce;
													this.shoot = 699;
													this.rare = 5;
													this.value = Item.sellPrice(0, 1, 0, 0);
													this.noMelee = true;
													this.noUseGraphic = true;
													this.channel = true;
													this.melee = true;
													this.damage = 45;
													return;
												}
												if (type >= 3837 && type <= 3846)
												{
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 91;
													this.placeStyle = 278 + type - 3837;
													this.width = 10;
													this.height = 24;
													this.value = 1000;
													this.rare = 1;
													return;
												}
												if (type == 3855 || type == 3856 || type == 3857)
												{
													this.damage = 0;
													this.useStyle = 1;
													this.width = 16;
													this.height = 30;
													this.UseSound = SoundID.Item2;
													this.useAnimation = 20;
													this.useTime = 20;
													this.rare = 3;
													this.noMelee = true;
													this.value = Item.sellPrice(0, 2, 0, 0);
													this.buffType = 200;
													this.shoot = 703;
													if (type == 3856)
													{
														this.buffType = 201;
														this.shoot = 702;
														return;
													}
													if (type != 3857)
													{
														return;
													}
													this.buffType = 202;
													this.shoot = 701;
													return;
												}
												else
												{
													if (type == 3854)
													{
														this.useStyle = 5;
														this.useAnimation = 18;
														this.useTime = 18;
														this.shootSpeed = 20f;
														this.knockBack = 2f;
														this.width = 20;
														this.height = 12;
														this.damage = 32;
														this.UseSound = SoundID.Item5;
														this.shoot = 705;
														this.rare = 5;
														this.value = Item.sellPrice(0, 1, 0, 0);
														this.noMelee = true;
														this.noUseGraphic = true;
														this.ranged = true;
														this.channel = true;
														this.useAmmo = AmmoID.Arrow;
														this.autoReuse = true;
														return;
													}
													if (type == 3827)
													{
														this.rare = 8;
														this.UseSound = SoundID.DD2_SonicBoomBladeSlash;
														this.useStyle = 1;
														this.damage = 180;
														this.useAnimation = 20;
														this.useTime = 20;
														this.width = 30;
														this.height = 30;
														this.knockBack = 5.5f;
														this.melee = true;
														this.value = Item.sellPrice(0, 5, 0, 0);
														this.autoReuse = true;
														this.useTurn = false;
														this.glowMask = 227;
														this.shoot = 684;
														this.shootSpeed = 17f;
														return;
													}
													if (type == 3852)
													{
														this.useStyle = 5;
														this.useAnimation = 25;
														this.useTime = 3;
														this.shootSpeed = 11f;
														this.knockBack = 9f;
														this.width = 16;
														this.height = 16;
														this.damage = 36;
														this.UseSound = SoundID.DD2_BookStaffCast;
														this.shoot = 712;
														this.mana = 20;
														this.rare = 5;
														this.value = Item.sellPrice(0, 1, 0, 0);
														this.noMelee = true;
														this.magic = true;
														this.autoReuse = true;
														return;
													}
													if (type == 3858)
													{
														this.useStyle = 5;
														this.useAnimation = 30;
														this.useTime = 30;
														this.shootSpeed = 24f;
														this.knockBack = 5f;
														this.width = 16;
														this.height = 16;
														this.UseSound = SoundID.DD2_SkyDragonsFurySwing;
														this.shoot = 707;
														this.rare = 8;
														this.value = Item.sellPrice(0, 5, 0, 0);
														this.noMelee = true;
														this.noUseGraphic = true;
														this.channel = true;
														this.autoReuse = true;
														this.melee = true;
														this.damage = 140;
														return;
													}
													if (type == 3859)
													{
														this.autoReuse = true;
														this.useStyle = 5;
														this.useAnimation = 30;
														this.useTime = 30;
														this.width = 14;
														this.height = 32;
														this.shoot = 710;
														this.useAmmo = AmmoID.Arrow;
														this.UseSound = SoundID.Item102;
														this.damage = 39;
														this.shootSpeed = 11f;
														this.knockBack = 4.5f;
														this.rare = 8;
														this.crit = 3;
														this.noMelee = true;
														this.value = Item.sellPrice(0, 5, 0, 0);
														this.ranged = true;
														this.glowMask = 234;
														return;
													}
													if (type == 3860 || type == 3862 || type == 3861)
													{
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.width = 24;
														this.height = 24;
														this.rare = 1;
														if (type == 3860)
														{
															this.rare = 8;
														}
														if (type == 3862)
														{
															this.rare = 3;
														}
														if (type == 3861)
														{
															this.rare = 5;
														}
														this.expert = true;
														return;
													}
													if (type >= 3863 && type <= 3865)
													{
														this.width = 28;
														this.height = 20;
														this.rare = 1;
														this.vanity = true;
														this.value = Item.sellPrice(0, 0, 75, 0);
														switch (type)
														{
														case 3863:
															this.headSlot = 207;
															return;
														case 3864:
															this.headSlot = 208;
															return;
														case 3865:
															this.headSlot = 209;
															return;
														default:
															return;
														}
													}
													else
													{
														if (type == 3866 || type == 3867 || type == 3868)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 240;
															this.width = 30;
															this.height = 30;
															this.value = Item.sellPrice(0, 1, 0, 0);
															this.placeStyle = 60;
															if (type == 3866)
															{
																this.placeStyle = 61;
															}
															if (type == 3868)
															{
																this.placeStyle = 62;
															}
															this.rare = 1;
															return;
														}
														if (type == 3869)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.consumable = true;
															this.createTile = 139;
															this.placeStyle = 39;
															this.width = 24;
															this.height = 24;
															this.rare = 4;
															this.value = 100000;
															this.accessory = true;
															this.hasVanityEffects = true;
															return;
														}
														if (type == 3870)
														{
															this.useStyle = 5;
															this.useAnimation = 20;
															this.useTime = 20;
															this.reuseDelay = 10;
															this.shootSpeed = 14f;
															this.knockBack = 7f;
															this.width = 16;
															this.height = 16;
															this.damage = 100;
															this.UseSound = SoundID.DD2_BetsysWrathShot;
															this.shoot = 711;
															this.mana = 14;
															this.rare = 8;
															this.value = Item.sellPrice(0, 5, 0, 0);
															this.noMelee = true;
															this.magic = true;
															this.autoReuse = true;
															this.glowMask = 238;
															return;
														}
														if (type == 3871)
														{
															this.width = 18;
															this.height = 18;
															this.rare = 8;
															this.defense = 20;
															this.value = Item.sellPrice(0, 3, 0, 0);
															this.headSlot = 210;
															return;
														}
														if (type == 3872)
														{
															this.width = 18;
															this.height = 18;
															this.rare = 8;
															this.defense = 24;
															this.value = Item.sellPrice(0, 3, 0, 0);
															this.bodySlot = 204;
															return;
														}
														if (type == 3873)
														{
															this.width = 18;
															this.height = 18;
															this.rare = 8;
															this.defense = 24;
															this.value = Item.sellPrice(0, 3, 0, 0);
															this.legSlot = 152;
															return;
														}
														if (type == 3874)
														{
															this.width = 18;
															this.height = 18;
															this.rare = 8;
															this.defense = 7;
															this.value = Item.sellPrice(0, 3, 0, 0);
															this.headSlot = 211;
															return;
														}
														if (type == 3875)
														{
															this.width = 18;
															this.height = 18;
															this.rare = 8;
															this.defense = 21;
															this.value = Item.sellPrice(0, 3, 0, 0);
															this.bodySlot = 205;
															return;
														}
														if (type == 3876)
														{
															this.width = 18;
															this.height = 18;
															this.rare = 8;
															this.defense = 14;
															this.value = Item.sellPrice(0, 3, 0, 0);
															this.legSlot = 153;
															return;
														}
														if (type == 3877)
														{
															this.width = 18;
															this.height = 18;
															this.rare = 8;
															this.defense = 8;
															this.value = Item.sellPrice(0, 3, 0, 0);
															this.headSlot = 212;
															return;
														}
														if (type == 3878)
														{
															this.width = 18;
															this.height = 18;
															this.rare = 8;
															this.defense = 24;
															this.value = Item.sellPrice(0, 3, 0, 0);
															this.bodySlot = 206;
															return;
														}
														if (type == 3879)
														{
															this.width = 18;
															this.height = 18;
															this.rare = 8;
															this.defense = 16;
															this.value = Item.sellPrice(0, 3, 0, 0);
															this.legSlot = 154;
															return;
														}
														if (type == 3880)
														{
															this.width = 18;
															this.height = 18;
															this.rare = 8;
															this.defense = 10;
															this.value = Item.sellPrice(0, 3, 0, 0);
															this.headSlot = 213;
															return;
														}
														if (type == 3881)
														{
															this.width = 18;
															this.height = 18;
															this.rare = 8;
															this.defense = 26;
															this.value = Item.sellPrice(0, 3, 0, 0);
															this.bodySlot = 207;
															return;
														}
														if (type == 3882)
														{
															this.width = 18;
															this.height = 18;
															this.rare = 8;
															this.defense = 18;
															this.value = Item.sellPrice(0, 3, 0, 0);
															this.legSlot = 156;
															return;
														}
														if (type == 3883)
														{
															this.width = 22;
															this.height = 20;
															this.accessory = true;
															this.value = Item.buyPrice(0, 40, 0, 0);
															this.rare = 8;
															this.wingSlot = 37;
															return;
														}
														if (type == 3884)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 467;
															this.width = 26;
															this.height = 22;
															this.value = 500;
															this.placeStyle = 0;
															return;
														}
														if (type == 3885)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 467;
															this.width = 26;
															this.height = 22;
															this.value = Item.buyPrice(0, 10, 0, 0);
															this.placeStyle = 1;
															return;
														}
														if (type == 3886)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 468;
															this.width = 26;
															this.height = 22;
															this.value = 500;
															this.placeStyle = 0;
															return;
														}
														if (type == 3887)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 468;
															this.width = 26;
															this.height = 22;
															this.value = 500;
															this.placeStyle = 1;
															return;
														}
														if (type == 3888)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 10;
															this.width = 14;
															this.height = 28;
															this.value = 200;
															this.placeStyle = 36;
															return;
														}
														if (type == 3889)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 15;
															this.width = 12;
															this.height = 30;
															this.placeStyle = 36;
															this.value = 150;
															return;
														}
														if (type == 3890)
														{
															this.noWet = true;
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 33;
															this.width = 8;
															this.height = 18;
															this.value = Item.sellPrice(0, 0, 0, 60);
															this.placeStyle = 30;
															return;
														}
														if (type == 3891)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 42;
															this.width = 12;
															this.height = 28;
															this.placeStyle = 37;
															this.value = 150;
															return;
														}
														if (type == 3892)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 93;
															this.width = 10;
															this.height = 24;
															this.value = 500;
															this.placeStyle = 31;
															return;
														}
														if (type == 3893)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 100;
															this.width = 20;
															this.height = 20;
															this.value = 1500;
															this.placeStyle = 31;
															return;
														}
														if (type == 3894)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 34;
															this.width = 26;
															this.height = 26;
															this.value = 3000;
															this.placeStyle = 37;
															return;
														}
														if (type == 3895)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 90;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 31;
															return;
														}
														if (type == 3896)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 172;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 32;
															return;
														}
														if (type == 3897)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.autoReuse = true;
															this.createTile = 79;
															this.width = 28;
															this.height = 20;
															this.value = 2000;
															this.placeStyle = 31;
															return;
														}
														if (type >= 3898 && type <= 3902)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 104;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 28 + type - 3898;
															return;
														}
														if (type >= 3903 && type <= 3908)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 19;
															this.width = 8;
															this.height = 10;
															this.placeStyle = 30 + type - 3903;
															return;
														}
														if (type == 3909)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 18;
															this.width = 28;
															this.height = 14;
															this.value = 150;
															this.placeStyle = 31;
															return;
														}
														if (type == 3910)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 18;
															this.width = 28;
															this.height = 14;
															this.value = Item.buyPrice(0, 10, 0, 0);
															this.placeStyle = 32;
															return;
														}
														if (type >= 3911 && type <= 3914)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 88;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 28 + type - 3911;
															return;
														}
														if (type >= 3915 && type <= 3916)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 87;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 30 + type - 3915;
															return;
														}
														if (type == 3917)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 101;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 32;
															return;
														}
														if (type == 3918)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 89;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 33;
															return;
														}
														if (type == 3919)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 89;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 34;
															return;
														}
														if (type == 3920)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 469;
															this.width = 26;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 0;
															return;
														}
														if (type == 3921)
														{
															this.width = 28;
															this.height = 20;
															this.headSlot = 214;
															this.rare = 9;
															this.value = Item.sellPrice(0, 5, 0, 0);
															this.vanity = true;
															return;
														}
														if (type == 3922)
														{
															this.width = 28;
															this.height = 20;
															this.bodySlot = 208;
															this.rare = 9;
															this.value = Item.sellPrice(0, 5, 0, 0);
															this.vanity = true;
															return;
														}
														if (type == 3923)
														{
															this.width = 18;
															this.height = 14;
															this.legSlot = 158;
															this.rare = 9;
															this.value = Item.sellPrice(0, 5, 0, 0);
															this.vanity = true;
															return;
														}
														if (type == 3924)
														{
															this.width = 24;
															this.height = 8;
															this.accessory = true;
															this.rare = 9;
															this.wingSlot = 38;
															this.value = 400000;
															return;
														}
														if (type == 3925)
														{
															this.width = 28;
															this.height = 20;
															this.headSlot = 215;
															this.rare = 9;
															this.value = Item.sellPrice(0, 5, 0, 0);
															this.vanity = true;
															return;
														}
														if (type == 3926)
														{
															this.width = 28;
															this.height = 20;
															this.bodySlot = 209;
															this.rare = 9;
															this.value = Item.sellPrice(0, 5, 0, 0);
															this.vanity = true;
															return;
														}
														if (type == 3927)
														{
															this.width = 18;
															this.height = 14;
															this.legSlot = 159;
															this.rare = 9;
															this.value = Item.sellPrice(0, 5, 0, 0);
															this.vanity = true;
															return;
														}
														if (type == 3928)
														{
															this.width = 24;
															this.height = 8;
															this.accessory = true;
															this.rare = 9;
															this.wingSlot = 39;
															this.value = 400000;
															return;
														}
														if (type == 3929)
														{
															this.width = 18;
															this.height = 14;
															this.rare = 9;
															this.vanity = true;
															this.value = Item.sellPrice(0, 5, 0, 0);
															this.accessory = true;
															this.hasVanityEffects = true;
															return;
														}
														if (type == 3930)
														{
															this.useStyle = 5;
															this.useAnimation = 6;
															this.useTime = 6;
															this.shootSpeed = 17f;
															this.knockBack = 10f;
															this.width = 20;
															this.height = 12;
															this.damage = 50;
															this.UseSound = null;
															this.shoot = 714;
															this.rare = 10;
															this.value = Item.sellPrice(0, 10, 0, 0);
															this.noMelee = true;
															this.noUseGraphic = true;
															this.ranged = true;
															this.channel = true;
															this.autoReuse = true;
															this.useAmmo = AmmoID.Rocket;
															return;
														}
														if (type == 3931)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 90;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 32;
															return;
														}
														if (type == 3932)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.autoReuse = true;
															this.createTile = 79;
															this.width = 28;
															this.height = 20;
															this.value = 2000;
															this.placeStyle = 32;
															return;
														}
														if (type == 3933)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 101;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 33;
															return;
														}
														if (type == 3934)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 88;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 32;
															return;
														}
														if (type == 3935)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 100;
															this.width = 20;
															this.height = 20;
															this.value = 1500;
															this.placeStyle = 32;
															return;
														}
														if (type == 3936)
														{
															this.noWet = true;
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 33;
															this.width = 8;
															this.height = 18;
															this.value = Item.sellPrice(0, 0, 0, 60);
															this.placeStyle = 31;
															return;
														}
														if (type == 3937)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 15;
															this.width = 12;
															this.height = 30;
															this.placeStyle = 37;
															this.value = 150;
															return;
														}
														if (type == 3938)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 34;
															this.width = 26;
															this.height = 26;
															this.value = 3000;
															this.placeStyle = 38;
															return;
														}
														if (type == 3939)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 467;
															this.width = 26;
															this.height = 22;
															this.value = 500;
															this.placeStyle = 2;
															return;
														}
														if (type == 3940)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 104;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 33;
															return;
														}
														if (type == 3941)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 10;
															this.width = 14;
															this.height = 28;
															this.value = 200;
															this.placeStyle = 37;
															return;
														}
														if (type == 3942)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 93;
															this.width = 10;
															this.height = 24;
															this.value = 500;
															this.placeStyle = 32;
															return;
														}
														if (type == 3943)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 42;
															this.width = 12;
															this.height = 28;
															this.placeStyle = 38;
															this.value = 150;
															return;
														}
														if (type == 3944)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 87;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 32;
															return;
														}
														if (type == 3945)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 19;
															this.width = 8;
															this.height = 10;
															this.placeStyle = 36;
															return;
														}
														if (type == 3946)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 172;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 33;
															return;
														}
														if (type == 3947)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 89;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 35;
															return;
														}
														if (type == 3948)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 469;
															this.width = 26;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 1;
															return;
														}
														if (type == 3949)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 18;
															this.width = 28;
															this.height = 14;
															this.value = 150;
															this.placeStyle = 33;
															return;
														}
														if (type == 3950)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 468;
															this.width = 26;
															this.height = 22;
															this.value = 500;
															this.placeStyle = 2;
															return;
														}
														if (type == 3951)
														{
															this.createTile = 472;
															this.width = 16;
															this.height = 16;
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															return;
														}
														if (type == 3952)
														{
															this.createWall = 231;
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 7;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.width = 12;
															this.height = 12;
															return;
														}
														if (type == 3953)
														{
															this.createTile = 473;
															this.width = 16;
															this.height = 16;
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															return;
														}
														if (type == 3954)
														{
															this.createWall = 232;
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 7;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.width = 12;
															this.height = 12;
															return;
														}
														if (type == 3955)
														{
															this.createTile = 474;
															this.width = 16;
															this.height = 16;
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															return;
														}
														if (type == 3956)
														{
															this.createWall = 233;
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 7;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.width = 12;
															this.height = 12;
															return;
														}
														if (type == 3957)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 19;
															this.width = 8;
															this.height = 10;
															this.placeStyle = 37;
															return;
														}
														if (type == 3958)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 90;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 33;
															return;
														}
														if (type == 3959)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.autoReuse = true;
															this.createTile = 79;
															this.width = 28;
															this.height = 20;
															this.value = 2000;
															this.placeStyle = 33;
															return;
														}
														if (type == 3960)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 101;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 34;
															return;
														}
														if (type == 3968)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 88;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 33;
															return;
														}
														if (type == 3961)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 100;
															this.width = 20;
															this.height = 20;
															this.value = 1500;
															this.placeStyle = 33;
															return;
														}
														if (type == 3962)
														{
															this.noWet = true;
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 33;
															this.width = 8;
															this.height = 18;
															this.value = Item.sellPrice(0, 0, 0, 60);
															this.placeStyle = 32;
															return;
														}
														if (type == 3963)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 15;
															this.width = 12;
															this.height = 30;
															this.placeStyle = 38;
															this.value = 150;
															return;
														}
														if (type == 3964)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 34;
															this.width = 26;
															this.height = 26;
															this.value = 3000;
															this.placeStyle = 39;
															return;
														}
														if (type == 3965)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 467;
															this.width = 26;
															this.height = 22;
															this.value = 500;
															this.placeStyle = 3;
															return;
														}
														if (type == 3966)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 104;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 34;
															return;
														}
														if (type == 3967)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 10;
															this.width = 14;
															this.height = 28;
															this.value = 200;
															this.placeStyle = 38;
															return;
														}
														if (type == 3969)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 93;
															this.width = 10;
															this.height = 24;
															this.value = 500;
															this.placeStyle = 33;
															return;
														}
														if (type == 3970)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 42;
															this.width = 12;
															this.height = 28;
															this.placeStyle = 39;
															this.value = 150;
															return;
														}
														if (type == 3971)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 87;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 33;
															return;
														}
														if (type == 3972)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 172;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 34;
															return;
														}
														if (type == 3973)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 89;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 36;
															return;
														}
														if (type == 3974)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 469;
															this.width = 26;
															this.height = 20;
															this.value = 300;
															this.placeStyle = 2;
															return;
														}
														if (type == 3975)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 18;
															this.width = 28;
															this.height = 14;
															this.value = 150;
															this.placeStyle = 34;
															return;
														}
														if (type == 3976)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 468;
															this.width = 26;
															this.height = 22;
															this.value = 500;
															this.placeStyle = 3;
															return;
														}
														if (type == 3977)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 269;
															this.width = 22;
															this.height = 32;
															this.createTile = 475;
															return;
														}
														if (type == 3978)
														{
															this.width = 20;
															this.height = 20;
															this.maxStack = Item.CommonMaxStack;
															this.value = Item.sellPrice(0, 1, 50, 0);
															this.rare = 3;
															return;
														}
														if (type == 3979)
														{
															this.width = 12;
															this.height = 12;
															this.rare = 1;
															this.maxStack = Item.CommonMaxStack;
															this.value = Item.sellPrice(0, 0, 10, 0);
															this.createTile = 376;
															this.placeStyle = 9;
															this.useAnimation = 15;
															this.useTime = 15;
															this.autoReuse = true;
															this.useStyle = 1;
															this.consumable = true;
															return;
														}
														if (type == 3980)
														{
															this.width = 12;
															this.height = 12;
															this.rare = 2;
															this.maxStack = Item.CommonMaxStack;
															this.value = Item.sellPrice(0, 0, 50, 0);
															this.createTile = 376;
															this.placeStyle = 10;
															this.useAnimation = 15;
															this.useTime = 15;
															this.autoReuse = true;
															this.useStyle = 1;
															this.consumable = true;
															return;
														}
														if (type == 3981)
														{
															this.width = 12;
															this.height = 12;
															this.rare = 3;
															this.maxStack = Item.CommonMaxStack;
															this.value = Item.sellPrice(0, 2, 0, 0);
															this.createTile = 376;
															this.placeStyle = 11;
															this.useAnimation = 15;
															this.useTime = 15;
															this.autoReuse = true;
															this.useStyle = 1;
															this.consumable = true;
															return;
														}
														if (type >= 3982 && type <= 3987)
														{
															this.width = 12;
															this.height = 12;
															this.rare = 2;
															this.maxStack = Item.CommonMaxStack;
															this.createTile = 376;
															this.placeStyle = 12 + type - 3982;
															this.useAnimation = 15;
															this.useTime = 15;
															this.autoReuse = true;
															this.useStyle = 1;
															this.consumable = true;
															this.value = Item.sellPrice(0, 1, 0, 0);
															return;
														}
														if (type == 3988)
														{
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 467;
															this.width = 26;
															this.height = 22;
															this.value = 500;
															this.placeStyle = 4;
															return;
														}
														if (type == 3989)
														{
															this.DefaultToGolfBall(721);
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}

		// Token: 0x06000613 RID: 1555 RVA: 0x002A8F78 File Offset: 0x002A7178
		public void DefaultToGolfBall(int projid)
		{
			this.shoot = projid;
			this.useStyle = 1;
			this.shootSpeed = 12f;
			this.width = 18;
			this.height = 20;
			this.maxStack = 1;
			this.UseSound = SoundID.Item1;
			this.useAnimation = 15;
			this.useTime = 15;
			this.noUseGraphic = true;
			this.noMelee = true;
			this.value = 0;
			this.accessory = true;
			this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 1, 0, 0));
			this.hasVanityEffects = true;
		}

		// Token: 0x06000614 RID: 1556 RVA: 0x002A9004 File Offset: 0x002A7204
		public void SetDefaults5(int type)
		{
			switch (type)
			{
			case 3990:
				this.DefaultToAccessory(36, 28);
				this.shoeSlot = 18;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 2, 0, 0));
				return;
			case 3991:
				this.DefaultToAccessory(30, 42);
				this.faceSlot = 9;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				return;
			case 3992:
				this.defense = 8;
				this.DefaultToAccessory(20, 40);
				this.handOnSlot = 20;
				this.handOffSlot = 12;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				return;
			case 3993:
				this.DefaultToAccessory(34, 30);
				this.shoeSlot = 19;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 8, 0, 0));
				return;
			case 3994:
				this.DefaultToAccessory(24, 30);
				this.shoeSlot = 20;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 2, 0, 0));
				return;
			case 3995:
				this.DefaultToAccessory(34, 32);
				this.handOnSlot = 21;
				this.handOffSlot = 13;
				this.shoeSlot = 20;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 5, 0, 0));
				return;
			case 3996:
				this.DefaultToAccessory(28, 30);
				this.handOnSlot = 21;
				this.handOffSlot = 13;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 2, 0, 0));
				return;
			case 3997:
				this.defense = 6;
				this.DefaultToAccessory(36, 38);
				this.shieldSlot = 7;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 8, 0, 0));
				return;
			case 3998:
				this.defense = 10;
				this.DefaultToAccessory(36, 40);
				this.shieldSlot = 8;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				return;
			case 3999:
				this.DefaultToAccessory(22, 32);
				this.faceSlot = 10;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 2, 50, 0));
				return;
			case 4000:
				this.DefaultToAccessory(28, 32);
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 4, 0, 0));
				return;
			case 4001:
				this.DefaultToAccessory(26, 36);
				this.backSlot = 14;
				this.frontSlot = 5;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 3, 0, 0));
				return;
			case 4002:
				this.DefaultToAccessory(34, 36);
				this.backSlot = 15;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 7, 50, 0));
				return;
			case 4003:
				this.DefaultToAccessory(30, 34);
				this.faceSlot = 11;
				this.SetShopValues(ItemRarityColor.LightPurple6, Item.sellPrice(0, 5, 0, 0));
				return;
			case 4004:
				this.DefaultToAccessory(30, 32);
				this.faceSlot = 13;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 3, 0, 0));
				return;
			case 4005:
				this.DefaultToAccessory(30, 30);
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				return;
			case 4006:
				this.DefaultToAccessory(36, 38);
				this.backSlot = 16;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				return;
			case 4007:
				this.DefaultToAccessory(26, 30);
				this.neckSlot = 10;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 3, 0, 0));
				return;
			case 4008:
				this.defense = 4;
				this.DefaultToHeadgear(24, 22, 216);
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 2, 0, 0));
				return;
			case 4009:
			case 4010:
			case 4011:
			case 4012:
			case 4013:
			case 4014:
			case 4015:
			case 4016:
			case 4017:
			case 4018:
			case 4019:
			case 4020:
			case 4021:
			case 4022:
			case 4023:
			case 4024:
			case 4025:
			case 4026:
			case 4027:
			case 4028:
			case 4029:
			case 4030:
			case 4031:
			case 4032:
			case 4033:
			case 4034:
			case 4035:
			case 4036:
			case 4037:
			case 4282:
			case 4283:
			case 4284:
			case 4285:
			case 4286:
			case 4287:
			case 4288:
			case 4289:
			case 4290:
			case 4291:
			case 4292:
			case 4293:
			case 4294:
			case 4295:
			case 4296:
			case 4297:
			case 4403:
			case 4411:
			case 4614:
			case 4615:
			case 4616:
			case 4617:
			case 4618:
			case 4619:
			case 4620:
			case 4621:
			case 4622:
			case 4623:
			case 4624:
			case 4625:
			case 5009:
			case 5013:
			case 5041:
			case 5042:
			case 5092:
			case 5093:
			case 5275:
			case 5277:
			case 5278:
				break;
			case 4038:
				this.DefaultToAccessory(28, 34);
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 7, 50, 0));
				this.neckSlot = 12;
				return;
			case 4039:
				this.DefaultToGolfClub(20, 20);
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 1, 0, 0));
				return;
			case 4040:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 476;
				this.width = 12;
				this.height = 12;
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 1, 0, 0));
				return;
			case 4041:
			case 4042:
			case 4043:
			case 4044:
			case 4045:
			case 4046:
			case 4047:
			case 4048:
			case 4241:
				this.DefaultToPlaceableTile(3, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 5, 0));
				this.autoReuse = false;
				this.useTime = this.useAnimation;
				return;
			case 4049:
				this.DefaultToLawnMower(20, 20);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
				return;
			case 4050:
				this.DefaultToPlaceableTile(478, 0);
				return;
			case 4051:
				this.DefaultToPlaceableTile(479, 0);
				return;
			case 4052:
				this.DefaultToPlaceableWall(234);
				return;
			case 4053:
				this.DefaultToPlaceableWall(235);
				return;
			case 4054:
				this.DefaultToPlaceableTile(480, 0);
				this.width = 22;
				this.height = 32;
				this.rare = 3;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.accessory = true;
				this.vanity = true;
				return;
			case 4055:
				this.DefaultToAccessory(34, 30);
				this.shoeSlot = 21;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4056:
				this.DefaultToAccessory(30, 30);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4057:
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 1, 0, 0));
				this.DefaultToGuitar(24, 24);
				return;
			case 4058:
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 10, 0, 0));
				this.DefaultToBow(17, 11f, false);
				this.SetWeaponValues(8, 5f, 0);
				return;
			case 4059:
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 30, 0));
				this.SetWeaponValues(8, 4f, 0);
				this.width = 16;
				this.height = 16;
				this.melee = true;
				this.autoReuse = true;
				this.useTurn = true;
				this.useTime = 14;
				this.useAnimation = 18;
				this.useStyle = 1;
				this.pick = 55;
				this.UseSound = SoundID.Item1;
				return;
			case 4060:
				this.width = 42;
				this.height = 20;
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 50, 0, 0));
				this.DefaultToRangedWeapon(728, AmmoID.FallenStar, 18, 20f, true);
				this.SetWeaponValues(60, 5f, 0);
				if (this.Variant == ItemVariants.RebalancedVariant)
				{
					this.damage = (int)((double)this.damage * 0.9);
					this.useTime = (int)((double)this.useTime * 1.1);
					return;
				}
				break;
			case 4061:
				this.DefaultToSpear(730, 3.5f, 28);
				this.SetWeaponValues(14, 6f, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 30, 0));
				return;
			case 4062:
				this.DefaultToStaff(731, 8f, 17, 7);
				this.SetWeaponValues(20, 3f, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 30, 0));
				return;
			case 4063:
				this.DefaultToPlaceableTile(486, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4064:
				this.DefaultToPlaceableTile(487, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 0, 80));
				return;
			case 4065:
				this.DefaultToPlaceableTile(487, 1);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 1, 0));
				return;
			case 4066:
				this.DefaultToMount(15);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				return;
			case 4067:
				this.DefaultToMount(16);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4068:
				this.DefaultToCapturedCritter(583);
				this.rare = 1;
				this.value = Item.sellPrice(0, 1, 0, 0);
				return;
			case 4069:
				this.DefaultToCapturedCritter(584);
				this.rare = 1;
				this.value = Item.sellPrice(0, 1, 0, 0);
				return;
			case 4070:
				this.DefaultToCapturedCritter(585);
				this.rare = 1;
				this.value = Item.sellPrice(0, 1, 0, 0);
				return;
			case 4071:
			case 4072:
			case 4073:
				this.DefaultToSeaShell();
				return;
			case 4074:
				this.DefaultToPlaceableTile(489, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 20, 0));
				return;
			case 4075:
				this.DefaultToPlaceableTile(490, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 10, 0));
				return;
			case 4076:
				this.rare = 3;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 491;
				this.width = 12;
				this.height = 12;
				this.value = 100000;
				return;
			case 4077:
				this.DefaultToMusicBox(43);
				return;
			case 4078:
				this.DefaultToMusicBox(41);
				return;
			case 4079:
				this.DefaultToMusicBox(42);
				return;
			case 4080:
				this.DefaultToMusicBox(44);
				return;
			case 4081:
				this.DefaultToMusicBox(45);
				return;
			case 4082:
				this.DefaultToMusicBox(40);
				return;
			case 4083:
			case 4084:
			case 4085:
			case 4086:
			case 4087:
			case 4088:
				this.DefaultToPlaceableTile(493, type - 4083);
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 20, 0));
				return;
			case 4089:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 494;
				this.width = 12;
				this.height = 12;
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 1, 0, 0));
				return;
			case 4090:
				this.DefaultToPlaceableTile(495, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 1, 0));
				return;
			case 4091:
				this.DefaultToPlaceableTile(496, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 1, 0));
				return;
			case 4092:
				this.DefaultToGolfClub(20, 20);
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 1, 0, 0));
				return;
			case 4093:
				this.DefaultToGolfClub(20, 20);
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 1, 0, 0));
				return;
			case 4094:
				this.DefaultToGolfClub(20, 20);
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 1, 0, 0));
				return;
			case 4095:
				this.maxStack = 1;
				this.consumable = false;
				this.width = 18;
				this.height = 18;
				this.useStyle = 4;
				this.useTime = 10;
				this.UseSound = SoundID.Item128;
				this.useAnimation = 10;
				this.rare = 4;
				this.value = Item.sellPrice(0, 2, 0, 0);
				return;
			case 4096:
			case 4097:
			case 4098:
			case 4099:
			case 4100:
			case 4101:
			case 4102:
			case 4103:
			case 4104:
			case 4105:
			case 4106:
			case 4107:
			case 4108:
			case 4109:
			case 4110:
			case 4111:
			case 4112:
			case 4113:
			case 4114:
			case 4115:
			case 4116:
			case 4117:
			case 4118:
			case 4119:
			case 4120:
			case 4121:
			case 4122:
			case 4123:
			case 4124:
			case 4125:
			case 4126:
				this.DefaultToPlaceableTile(497, type - 4096);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 4127:
				this.DefaultToPlaceableTile(497, type - 4096);
				this.maxStack = Item.CommonMaxStack;
				this.value = 100000;
				return;
			case 4128:
				this.width = 18;
				this.height = 18;
				this.headSlot = 217;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4129:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 210;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4130:
				this.width = 18;
				this.height = 18;
				this.legSlot = 180;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4131:
			case 5325:
				this.useStyle = 1;
				this.shootSpeed = 4f;
				this.shoot = 734;
				this.width = 26;
				this.height = 24;
				this.UseSound = SoundID.Item130;
				this.useAnimation = 28;
				this.useTime = 28;
				this.rare = 3;
				this.value = Item.sellPrice(0, 2, 0, 0);
				return;
			case 4132:
				this.width = 18;
				this.height = 18;
				this.headSlot = 218;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4133:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 211;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4134:
				this.width = 18;
				this.height = 18;
				this.legSlot = 184;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4135:
				this.width = 18;
				this.height = 18;
				this.headSlot = 219;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4136:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 212;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4137:
				this.width = 18;
				this.height = 18;
				this.legSlot = 185;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4138:
				this.width = 18;
				this.height = 18;
				this.headSlot = 220;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4139:
				this.DefaultToPlaceableTile(498, 0);
				this.SetShopValues(ItemRarityColor.White0, 0);
				return;
			case 4140:
				this.DefaultToPlaceableWall(236);
				this.SetShopValues(ItemRarityColor.White0, 0);
				return;
			case 4141:
				this.DefaultToPlaceableTile(497, 32);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 4142:
				this.DefaultToPlaceableTile(499, 0);
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.White0, 100000);
				return;
			case 4143:
				this.width = 12;
				this.height = 12;
				return;
			case 4144:
				this.width = 14;
				this.height = 38;
				this.useAnimation = 25;
				this.useTime = 15;
				this.useStyle = 5;
				this.rare = 2;
				this.noUseGraphic = true;
				this.channel = true;
				this.noMelee = true;
				this.damage = 17;
				this.knockBack = 3f;
				this.autoReuse = false;
				this.noMelee = true;
				this.melee = true;
				this.shoot = 735;
				this.shootSpeed = 15f;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4145:
				this.DefaultToPlaceableTile(90, 34);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4146:
				this.DefaultToPlaceableTile(79, 34);
				this.SetShopValues(ItemRarityColor.White0, 2000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 20;
				return;
			case 4147:
				this.DefaultToPlaceableTile(101, 35);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4148:
				this.DefaultToPlaceableTile(88, 34);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4149:
				this.DefaultToPlaceableTile(100, 34);
				this.SetShopValues(ItemRarityColor.White0, 1500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4150:
				this.DefaultToPlaceableTile(33, 33);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.noWet = true;
				return;
			case 4151:
				this.DefaultToPlaceableTile(15, 39);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 30;
				return;
			case 4152:
				this.DefaultToPlaceableTile(34, 40);
				this.SetShopValues(ItemRarityColor.White0, 3000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 4153:
				this.DefaultToPlaceableTile(467, 5);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4154:
				this.DefaultToPlaceableTile(104, 35);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4155:
				this.DefaultToPlaceableTile(10, 39);
				this.SetShopValues(ItemRarityColor.White0, 200);
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 4156:
				this.DefaultToPlaceableTile(93, 34);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 10;
				this.height = 24;
				return;
			case 4157:
				this.DefaultToPlaceableTile(42, 40);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 28;
				return;
			case 4158:
				this.DefaultToPlaceableTile(87, 34);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4159:
				this.DefaultToPlaceableTile(19, 38);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 4160:
				this.DefaultToPlaceableTile(172, 35);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4161:
				this.DefaultToPlaceableTile(89, 37);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4162:
				this.DefaultToPlaceableTile(469, 3);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 20;
				return;
			case 4163:
				this.DefaultToPlaceableTile(18, 35);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 14;
				return;
			case 4164:
				this.DefaultToPlaceableTile(468, 5);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4165:
				this.DefaultToPlaceableTile(497, 33);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 4166:
				this.DefaultToPlaceableTile(90, 35);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4167:
				this.DefaultToPlaceableTile(79, 35);
				this.SetShopValues(ItemRarityColor.White0, 2000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 20;
				return;
			case 4168:
				this.DefaultToPlaceableTile(101, 36);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4169:
				this.DefaultToPlaceableTile(88, 35);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4170:
				this.DefaultToPlaceableTile(100, 35);
				this.SetShopValues(ItemRarityColor.White0, 1500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4171:
				this.DefaultToPlaceableTile(33, 34);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.noWet = true;
				return;
			case 4172:
				this.DefaultToPlaceableTile(15, 40);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 30;
				return;
			case 4173:
				this.DefaultToPlaceableTile(34, 41);
				this.SetShopValues(ItemRarityColor.White0, 3000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 4174:
				this.DefaultToPlaceableTile(467, 6);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4175:
				this.DefaultToPlaceableTile(104, 36);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4176:
				this.DefaultToPlaceableTile(10, 40);
				this.SetShopValues(ItemRarityColor.White0, 200);
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 4177:
				this.DefaultToPlaceableTile(93, 35);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 10;
				this.height = 24;
				return;
			case 4178:
				this.DefaultToPlaceableTile(42, 41);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 28;
				return;
			case 4179:
				this.DefaultToPlaceableTile(87, 35);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4180:
				this.DefaultToPlaceableTile(19, 39);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 4181:
				this.DefaultToPlaceableTile(172, 36);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4182:
				this.DefaultToPlaceableTile(89, 38);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4183:
				this.DefaultToPlaceableTile(469, 4);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 20;
				return;
			case 4184:
				this.DefaultToPlaceableTile(18, 36);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 14;
				return;
			case 4185:
				this.DefaultToPlaceableTile(468, 6);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4186:
				this.DefaultToPlaceableTile(497, 34);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 4187:
				this.DefaultToPlaceableTile(90, 36);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4188:
				this.DefaultToPlaceableTile(79, 36);
				this.SetShopValues(ItemRarityColor.White0, 2000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 20;
				return;
			case 4189:
				this.DefaultToPlaceableTile(101, 37);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4190:
				this.DefaultToPlaceableTile(88, 36);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4191:
				this.DefaultToPlaceableTile(100, 36);
				this.SetShopValues(ItemRarityColor.White0, 1500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4192:
				this.DefaultToPlaceableTile(33, 35);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.noWet = true;
				return;
			case 4193:
				this.DefaultToPlaceableTile(15, 41);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 30;
				return;
			case 4194:
				this.DefaultToPlaceableTile(34, 42);
				this.SetShopValues(ItemRarityColor.White0, 3000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 4195:
				this.DefaultToPlaceableTile(467, 7);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4196:
				this.DefaultToPlaceableTile(104, 37);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4197:
				this.DefaultToPlaceableTile(10, 41);
				this.SetShopValues(ItemRarityColor.White0, 200);
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 4198:
				this.DefaultToPlaceableTile(93, 36);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 10;
				this.height = 24;
				return;
			case 4199:
				this.DefaultToPlaceableTile(42, 42);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 28;
				return;
			case 4200:
				this.DefaultToPlaceableTile(87, 36);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4201:
				this.DefaultToPlaceableTile(19, 40);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 4202:
				this.DefaultToPlaceableTile(172, 37);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4203:
				this.DefaultToPlaceableTile(89, 39);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4204:
				this.DefaultToPlaceableTile(469, 5);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 20;
				return;
			case 4205:
				this.DefaultToPlaceableTile(18, 37);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 14;
				return;
			case 4206:
				this.DefaultToPlaceableTile(468, 7);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4207:
				this.DefaultToPlaceableTile(497, 35);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 4208:
				this.DefaultToPlaceableTile(90, 37);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4209:
				this.DefaultToPlaceableTile(79, 37);
				this.SetShopValues(ItemRarityColor.White0, 2000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 20;
				return;
			case 4210:
				this.DefaultToPlaceableTile(101, 38);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4211:
				this.DefaultToPlaceableTile(88, 37);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4212:
				this.DefaultToPlaceableTile(100, 37);
				this.SetShopValues(ItemRarityColor.White0, 1500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4213:
				this.DefaultToPlaceableTile(33, 36);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.noWet = true;
				return;
			case 4214:
				this.DefaultToPlaceableTile(15, 42);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 30;
				return;
			case 4215:
				this.DefaultToPlaceableTile(34, 43);
				this.SetShopValues(ItemRarityColor.White0, 3000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 4216:
				this.DefaultToPlaceableTile(467, 8);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4217:
				this.DefaultToPlaceableTile(104, 38);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4218:
				this.DefaultToPlaceableTile(10, 42);
				this.SetShopValues(ItemRarityColor.White0, 200);
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 4219:
				this.DefaultToPlaceableTile(93, 37);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 10;
				this.height = 24;
				return;
			case 4220:
				this.DefaultToPlaceableTile(42, 43);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 28;
				return;
			case 4221:
				this.DefaultToPlaceableTile(87, 37);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4222:
				this.DefaultToPlaceableTile(19, 41);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 4223:
				this.DefaultToPlaceableTile(172, 38);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4224:
				this.DefaultToPlaceableTile(89, 40);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4225:
				this.DefaultToPlaceableTile(469, 6);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 20;
				return;
			case 4226:
				this.DefaultToPlaceableTile(18, 38);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 14;
				return;
			case 4227:
				this.DefaultToPlaceableTile(468, 8);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4228:
				this.DefaultToPlaceableTile(497, 36);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 4229:
				this.DefaultToPlaceableTile(500, 0);
				return;
			case 4230:
				this.DefaultToPlaceableTile(501, 0);
				return;
			case 4231:
				this.DefaultToPlaceableTile(502, 0);
				return;
			case 4232:
				this.DefaultToPlaceableTile(503, 0);
				return;
			case 4233:
				this.DefaultToPlaceableWall(237);
				return;
			case 4234:
				this.DefaultToPlaceableWall(238);
				return;
			case 4235:
				this.DefaultToPlaceableWall(239);
				return;
			case 4236:
				this.DefaultToPlaceableWall(240);
				return;
			case 4237:
				this.DefaultToMusicBox(46);
				return;
			case 4238:
				this.DefaultToPlaceableTile(481, 0);
				return;
			case 4239:
				this.DefaultToPlaceableTile(482, 0);
				return;
			case 4240:
				this.DefaultToPlaceableTile(483, 0);
				return;
			case 4242:
				this.DefaultToGolfBall(739);
				return;
			case 4243:
				this.DefaultToGolfBall(740);
				return;
			case 4244:
				this.DefaultToGolfBall(741);
				return;
			case 4245:
				this.DefaultToGolfBall(742);
				return;
			case 4246:
				this.DefaultToGolfBall(743);
				return;
			case 4247:
				this.DefaultToGolfBall(744);
				return;
			case 4248:
				this.DefaultToGolfBall(745);
				return;
			case 4249:
				this.DefaultToGolfBall(746);
				return;
			case 4250:
				this.DefaultToGolfBall(747);
				return;
			case 4251:
				this.DefaultToGolfBall(748);
				return;
			case 4252:
				this.DefaultToGolfBall(749);
				return;
			case 4253:
				this.DefaultToGolfBall(750);
				return;
			case 4254:
				this.DefaultToGolfBall(751);
				return;
			case 4255:
				this.DefaultToGolfBall(752);
				return;
			case 4256:
				this.defense = 3;
				this.width = 18;
				this.height = 14;
				this.bodySlot = 213;
				this.value = Item.sellPrice(0, 0, 50, 0) * 6;
				this.rare = 2;
				return;
			case 4257:
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 12.5f;
				this.shoot = 753;
				this.width = 18;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = 20000;
				return;
			case 4258:
				this.useStyle = 1;
				this.useTime = 18;
				this.useAnimation = 18;
				this.knockBack = 3f;
				this.width = 40;
				this.height = 40;
				this.damage = 26;
				this.scale = 1f;
				this.UseSound = SoundID.Item15;
				this.rare = 1;
				this.value = 27000;
				this.melee = true;
				return;
			case 4259:
				this.SetDefaults(198);
				this.type = type;
				this.damage = 48;
				this.useTime = 16;
				this.useAnimation = 16;
				this.scale = 1f;
				this.autoReuse = true;
				this.useTurn = true;
				this.rare = 4;
				this.value = Item.sellPrice(0, 1, 0, 0);
				return;
			case 4260:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 241;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 1, 60);
				return;
			case 4261:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 135;
				this.width = 12;
				this.height = 12;
				this.placeStyle = 7;
				this.mech = true;
				this.value = 5000;
				return;
			case 4262:
				this.useTurn = true;
				this.width = 20;
				this.height = 20;
				this.useStyle = 5;
				this.useTime = 90;
				this.UseSound = SoundID.Item151;
				this.useAnimation = 90;
				this.rare = 1;
				this.value = 50000;
				this.shoot = 754;
				return;
			case 4263:
				this.useTurn = true;
				this.width = 20;
				this.height = 20;
				this.useStyle = 4;
				this.useTime = 90;
				this.UseSound = SoundID.Item6;
				this.useAnimation = 90;
				this.rare = 1;
				this.value = 50000;
				return;
			case 4264:
				this.useStyle = 4;
				this.channel = true;
				this.width = 34;
				this.height = 34;
				this.UseSound = SoundID.Item25;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 8;
				this.noMelee = true;
				this.mountType = 17;
				this.value = Item.sellPrice(0, 10, 0, 0);
				return;
			case 4265:
				this.DefaultToPlaceableTile(467, 9);
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 3, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4266:
				this.DefaultToPlaceableTile(468, 9);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4267:
				this.DefaultToPlaceableTile(467, 10);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4268:
				this.DefaultToPlaceableTile(468, 10);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4269:
				this.mana = 10;
				this.damage = 35;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 755;
				this.buffType = 213;
				this.width = 26;
				this.height = 28;
				this.UseSound = SoundID.Item83;
				this.useAnimation = 36;
				this.useTime = 36;
				this.rare = 4;
				this.noMelee = true;
				this.knockBack = 3f;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			case 4270:
				this.mana = 20;
				this.damage = 34;
				this.useStyle = 4;
				this.shootSpeed = 32f;
				this.shoot = 756;
				this.width = 26;
				this.height = 28;
				this.useAnimation = 33;
				this.useTime = 11;
				this.rare = 4;
				this.noMelee = true;
				this.knockBack = 1f;
				this.value = Item.sellPrice(0, 4, 0, 0);
				this.magic = true;
				this.autoReuse = true;
				return;
			case 4271:
				this.useStyle = 4;
				this.width = 22;
				this.height = 14;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 2;
				return;
			case 4272:
				this.noMelee = true;
				this.useStyle = 5;
				this.useAnimation = 40;
				this.useTime = 40;
				this.knockBack = 6.5f;
				this.width = 30;
				this.height = 10;
				this.damage = 55;
				this.scale = 1.1f;
				this.noUseGraphic = true;
				this.shoot = 757;
				this.shootSpeed = 15.9f;
				this.UseSound = SoundID.Item1;
				this.rare = 4;
				this.value = Item.sellPrice(0, 4, 0, 0);
				this.melee = true;
				this.channel = true;
				return;
			case 4273:
				this.mana = 10;
				this.damage = 11;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 758;
				this.width = 26;
				this.height = 28;
				this.UseSound = SoundID.Item44;
				this.useAnimation = 36;
				this.useTime = 36;
				this.noMelee = true;
				this.knockBack = 5f;
				this.buffType = 214;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.rare = 3;
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			case 4274:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.noUseGraphic = true;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				this.makeNPC = 592;
				return;
			case 4275:
				this.width = 18;
				this.height = 18;
				this.headSlot = 221;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				this.vanity = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 505;
				this.width = 12;
				this.height = 12;
				return;
			case 4276:
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 506;
				this.width = 20;
				this.height = 20;
				return;
			case 4277:
				this.DefaultToPlaceableTile(507, 0);
				return;
			case 4278:
				this.DefaultToPlaceableTile(508, 0);
				return;
			case 4279:
				this.DefaultToPlaceableWall(242);
				return;
			case 4280:
				this.DefaultToPlaceableWall(243);
				return;
			case 4281:
				this.mana = 10;
				this.damage = 7;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 759;
				this.buffType = 216;
				this.width = 26;
				this.height = 28;
				this.UseSound = SoundID.Item44;
				this.useAnimation = 36;
				this.useTime = 36;
				this.rare = 1;
				this.noMelee = true;
				this.knockBack = 4f;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			case 4298:
				this.DefaultToPlaceableTile(90, 38);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4299:
				this.DefaultToPlaceableTile(79, 38);
				this.SetShopValues(ItemRarityColor.White0, 2000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 20;
				return;
			case 4300:
				this.DefaultToPlaceableTile(101, 39);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4301:
				this.DefaultToPlaceableTile(88, 38);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4302:
				this.DefaultToPlaceableTile(100, 38);
				this.SetShopValues(ItemRarityColor.White0, 1500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4303:
				this.DefaultToPlaceableTile(33, 37);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.noWet = true;
				return;
			case 4304:
				this.DefaultToPlaceableTile(15, 43);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 30;
				return;
			case 4305:
				this.DefaultToPlaceableTile(34, 44);
				this.SetShopValues(ItemRarityColor.White0, 3000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 4306:
				this.DefaultToPlaceableTile(104, 39);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4307:
				this.DefaultToPlaceableTile(10, 43);
				this.SetShopValues(ItemRarityColor.White0, 200);
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 4308:
				this.DefaultToPlaceableTile(93, 38);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 10;
				this.height = 24;
				return;
			case 4309:
				this.DefaultToPlaceableTile(42, 44);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 28;
				return;
			case 4310:
				this.DefaultToPlaceableTile(87, 38);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4311:
				this.DefaultToPlaceableTile(19, 42);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 4312:
				this.DefaultToPlaceableTile(172, 39);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4313:
				this.DefaultToPlaceableTile(89, 41);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4314:
				this.DefaultToPlaceableTile(469, 7);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 20;
				return;
			case 4315:
				this.DefaultToPlaceableTile(18, 39);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 14;
				return;
			case 4316:
				this.DefaultToPlaceableTile(497, 37);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 4317:
				this.SetShopValues(ItemRarityColor.LightRed4, Item.sellPrice(0, 2, 0, 0));
				this.SetWeaponValues(30, 7f, 0);
				this.melee = true;
				this.autoReuse = true;
				this.useTime = 11;
				this.useAnimation = 27;
				this.useStyle = 1;
				this.hammer = 80;
				this.axe = 30;
				this.UseSound = SoundID.Item1;
				this.width = 20;
				this.height = 20;
				return;
			case 4318:
				this.DefaultToPlaceableTile(509, 0);
				this.width = 22;
				this.height = 32;
				this.rare = 9;
				this.value = Item.sellPrice(0, 25, 0, 0);
				this.accessory = true;
				this.vanity = true;
				return;
			case 4319:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 510;
				this.width = 28;
				this.height = 28;
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 20, 0));
				return;
			case 4320:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 511;
				this.width = 28;
				this.height = 28;
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 20, 0));
				return;
			case 4321:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 214;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.buyPrice(0, 5, 0, 0);
				return;
			case 4322:
				this.width = 18;
				this.height = 18;
				this.legSlot = 188;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.buyPrice(0, 5, 0, 0);
				return;
			case 4323:
				this.width = 18;
				this.height = 18;
				this.headSlot = 222;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.buyPrice(0, 50, 0, 0);
				return;
			case 4324:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 215;
				this.value = Item.buyPrice(0, 50, 0, 0);
				this.rare = 3;
				this.vanity = true;
				return;
			case 4325:
				this.useStyle = 1;
				this.useAnimation = 8;
				this.useTime = 8;
				this.width = 24;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.shoot = 760;
				this.fishingPole = 25;
				this.shootSpeed = 15f;
				this.rare = 2;
				this.value = Item.sellPrice(0, 2, 0, 0);
				return;
			case 4326:
				this.DefaultToPlaceableTile(520, 0);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 4327:
			case 4328:
			case 4329:
			case 4330:
			case 4331:
			case 4332:
				this.DefaultToPlaceableTile((ushort)(type - 4327 + 521), 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4333:
				this.DefaultToPlaceableTile(527, 0);
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4334:
			case 4335:
			case 4336:
			case 4337:
			case 4338:
			case 4339:
				this.DefaultToCapturedCritter((short)(type - 4334 + 595));
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 10, 0));
				this.width = 20;
				this.height = 20;
				this.bait = 20;
				return;
			case 4340:
				this.DefaultToCapturedCritter(601);
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				this.width = 20;
				this.height = 20;
				this.bait = 50;
				return;
			case 4341:
				this.DefaultToAccessory(30, 30);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				return;
			case 4342:
				this.DefaultToPlaceableTile(105, 78);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 60));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4343:
				this.width = 22;
				this.height = 16;
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 10, 0));
				this.DefaultToThrownWeapon(761, 17, 5f, false);
				this.SetWeaponValues(4, 2f, 0);
				return;
			case 4344:
				this.width = 22;
				this.height = 16;
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 10, 0));
				this.DefaultToThrownWeapon(762, 17, 5f, false);
				this.SetWeaponValues(4, 2f, 0);
				return;
			case 4345:
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 5, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 12;
				return;
			case 4346:
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
				this.width = 30;
				this.height = 30;
				return;
			case 4347:
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 17, 0, 0));
				this.DefaultToMagicWeapon(876, 36, 15f, false);
				this.mana = 16;
				this.width = 40;
				this.height = 40;
				this.knockBack = 6f;
				this.scale = 0.75f;
				this.damage = 42;
				this.UseSound = SoundID.Item158;
				return;
			case 4348:
				this.SetShopValues(ItemRarityColor.Pink5, Item.buyPrice(0, 50, 0, 0));
				this.DefaultToMagicWeapon(876, 36, 15f, false);
				this.mana = 16;
				this.width = 40;
				this.height = 40;
				this.knockBack = 6f;
				this.scale = 0.75f;
				this.damage = 100;
				this.UseSound = SoundID.Item158;
				return;
			case 4349:
			case 4350:
			case 4351:
			case 4352:
			case 4353:
				this.DefaultToPlaceableTile(179 + type - 4349, 0);
				return;
			case 4354:
				this.DefaultToPlaceableTile(381, 0);
				this.rare = 1;
				return;
			case 4355:
				this.DefaultToPlaceableTile(531, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 60));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4356:
				this.DefaultToMusicBox(47);
				return;
			case 4357:
				this.DefaultToMusicBox(48);
				return;
			case 4358:
				this.DefaultToMusicBox(49);
				return;
			case 4359:
				this.DefaultToCapturedCritter(602);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 7, 50));
				this.width = 20;
				this.height = 20;
				return;
			case 4360:
				this.DefaultToPlaceableTile(105, 77);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 60));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4361:
				this.DefaultToCapturedCritter(604);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 10, 0));
				this.width = 20;
				this.height = 20;
				this.bait = 17;
				return;
			case 4362:
				this.DefaultToCapturedCritter(605);
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				this.width = 20;
				this.height = 20;
				this.bait = 50;
				return;
			case 4363:
				this.DefaultToCapturedCritter(606);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 5, 0));
				this.width = 12;
				this.height = 12;
				this.bait = 22;
				return;
			case 4364:
				this.DefaultToPlaceableTile(532, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4365:
				this.DefaultToVanitypet(764, 217);
				this.SetShopValues(ItemRarityColor.Pink5, Item.buyPrice(1, 0, 0, 0));
				return;
			case 4366:
				this.DefaultToVanitypet(765, 218);
				return;
			case 4367:
			case 4368:
			case 4369:
			case 4370:
			case 4371:
				this.DefaultTokite(type - 4367 + 766);
				return;
			case 4372:
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 1, 0, 0));
				this.DefaultToGuitar(24, 24);
				return;
			case 4373:
				this.DefaultToCapturedCritter(607);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 7, 50));
				this.width = 12;
				this.height = 12;
				return;
			case 4374:
				this.DefaultToCapturedCritter(608);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 7, 50));
				this.width = 12;
				this.height = 12;
				return;
			case 4375:
				this.DefaultToCapturedCritter(610);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 10, 0));
				this.width = 12;
				this.height = 12;
				return;
			case 4376:
				this.DefaultToPlaceableTile(533, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4377:
				this.DefaultToPlaceableTile(534, 0);
				this.rare = 1;
				return;
			case 4378:
				this.DefaultToPlaceableTile(536, 0);
				this.rare = 1;
				return;
			case 4379:
				this.DefaultTokite(771);
				return;
			case 4380:
				this.DefaultToPlaceableTile(538, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4381:
				this.DefaultToBow(19, 9f, true);
				this.SetWeaponValues(14, 3f, 0);
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.rare = 3;
				return;
			case 4382:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = SoundID.Item92;
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 2;
				return;
			case 4383:
				this.DefaultToTorch(16, false);
				return;
			case 4384:
				this.DefaultToTorch(17, true);
				return;
			case 4385:
				this.DefaultToTorch(18, false);
				return;
			case 4386:
				this.DefaultToTorch(19, false);
				return;
			case 4387:
				this.DefaultToTorch(20, false);
				return;
			case 4388:
				this.DefaultToTorch(21, false);
				return;
			case 4389:
				this.DefaultToPlaceableTile(539, 0);
				this.rare = 1;
				return;
			case 4390:
				this.DefaultToPlaceableTile(484, 0);
				return;
			case 4391:
				this.DefaultToPlaceableTile(162, 0);
				return;
			case 4392:
				this.DefaultToPlaceableTile(541, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 10, 0));
				return;
			case 4393:
			case 4394:
				this.DefaultToQuestFish();
				return;
			case 4395:
				this.DefaultToCapturedCritter(611);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 10, 0));
				this.width = 12;
				this.height = 12;
				return;
			case 4396:
				this.DefaultToPlaceableTile(542, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4397:
				this.DefaultToPlaceableTile(105, 76);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 60));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4398:
				this.DefaultToPlaceableTile(543, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				this.value = Item.sellPrice(0, 0, 20, 0);
				return;
			case 4399:
				this.DefaultToPlaceableTile(544, 0);
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4400:
				this.useStyle = 1;
				this.shootSpeed = 7f;
				this.shoot = 772;
				this.width = 22;
				this.height = 22;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 15;
				this.noUseGraphic = true;
				this.useTime = 15;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 5, 0);
				this.consumable = true;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4401:
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 7, 50));
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 4402:
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 50, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 4404:
				this.DefaultToAccessory(20, 12);
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 1, 0, 0));
				this.hasVanityEffects = true;
				return;
			case 4405:
			case 4406:
			case 4407:
			case 4408:
				this.DefaultToPlaceableTile(376, 18 + type - 4405);
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 1, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4409:
				this.DefaultToAccessory(28, 24);
				this.faceSlot = 14;
				this.SetShopValues(ItemRarityColor.Pink5, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4410:
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 1, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 32;
				this.height = 22;
				return;
			case 4412:
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 22;
				this.height = 22;
				return;
			case 4413:
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 3, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 22;
				this.height = 22;
				return;
			case 4414:
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 15, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 22;
				this.height = 22;
				return;
			case 4415:
				this.DefaultToPlaceableTile(10, 44);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 40));
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 4416:
				this.DefaultToPlaceableTile(19, 43);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 4417:
				this.DefaultToPlaceableTile(207, 9);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 4, 0, 0));
				this.width = 8;
				this.height = 10;
				return;
			case 4418:
				this.DefaultToCapturedCritter(612);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 10, 0));
				this.width = 20;
				this.height = 20;
				this.bait = 17;
				return;
			case 4419:
				this.DefaultToCapturedCritter(613);
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				this.width = 20;
				this.height = 20;
				this.bait = 50;
				return;
			case 4420:
				this.DefaultToPlaceableTile(545, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 5, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4421:
				this.DefaultToMusicBox(50);
				return;
			case 4422:
				this.DefaultToPlaceableTile(546, 0);
				return;
			case 4423:
				this.useStyle = 1;
				this.shootSpeed = 5f;
				this.shoot = 773;
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.UseSound = SoundID.Item1;
				this.consumable = true;
				this.useAnimation = 25;
				this.noUseGraphic = true;
				this.useTime = 25;
				this.value = Item.sellPrice(0, 0, 3, 0);
				this.rare = 1;
				return;
			case 4424:
				this.DefaultToPlaceableWall(245);
				return;
			case 4425:
				this.DefaultToVanitypet(774, 219);
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4426:
				this.DefaultToMount(18);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4427:
				this.DefaultToMount(19);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				return;
			case 4428:
				this.DefaultToMount(20);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4429:
				this.DefaultToMount(21);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				return;
			case 4430:
				this.DefaultToPlaceableTile(547, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4431:
				this.DefaultToPlaceableTile(547, 1);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4432:
				this.DefaultToPlaceableTile(547, 2);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4433:
				this.DefaultToPlaceableTile(547, 3);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4434:
				this.DefaultToPlaceableTile(547, 4);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4435:
				this.DefaultToPlaceableTile(548, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4436:
				this.DefaultToPlaceableTile(548, 1);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4437:
				this.DefaultToPlaceableTile(548, 2);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4438:
				this.DefaultToPlaceableTile(548, 3);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4439:
				this.DefaultToPlaceableTile(548, 4);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4440:
				this.DefaultToPlaceableTile(548, 5);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4441:
				this.DefaultToPlaceableTile(548, 6);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4442:
				this.useStyle = 1;
				this.useAnimation = 8;
				this.useTime = 8;
				this.width = 24;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.shoot = 775;
				this.fishingPole = 30;
				this.shootSpeed = 15f;
				this.rare = 1;
				this.value = Item.sellPrice(0, 2, 0, 0);
				return;
			case 4443:
				this.DefaultToMount(22);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4444:
				this.useStyle = 4;
				this.channel = true;
				this.width = 34;
				this.height = 34;
				this.UseSound = SoundID.Item25;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 8;
				this.noMelee = true;
				this.mountType = 23;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.expert = true;
				return;
			case 4445:
				this.damage = 50;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 4f;
				this.value = Item.buyPrice(0, 0, 7, 50);
				this.ranged = true;
				return;
			case 4446:
				this.damage = 50;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 4f;
				this.value = Item.buyPrice(0, 0, 15, 0);
				this.ranged = true;
				return;
			case 4447:
				this.damage = 40;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 4f;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.ranged = true;
				return;
			case 4448:
				this.damage = 40;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 4f;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.ranged = true;
				return;
			case 4449:
				this.damage = 40;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 4f;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.ranged = true;
				return;
			case 4450:
				this.DefaultToMount(24);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4451:
				this.DefaultToMount(25);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4452:
				this.DefaultToMount(26);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4453:
				this.DefaultToMount(27);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4454:
				this.DefaultToMount(28);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4455:
				this.DefaultToMount(29);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4456:
				this.DefaultToMount(30);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4457:
				this.damage = 75;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 4f;
				this.value = Item.buyPrice(0, 0, 5, 0);
				this.ranged = true;
				return;
			case 4458:
				this.damage = 75;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 4f;
				this.value = Item.buyPrice(0, 0, 10, 0);
				this.ranged = true;
				return;
			case 4459:
				this.damage = 40;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 4f;
				this.value = Item.buyPrice(0, 0, 50, 0);
				this.ranged = true;
				return;
			case 4460:
				this.tileWand = 169;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.createTile = 552;
				this.width = 8;
				this.height = 10;
				this.rare = 1;
				this.value = Item.sellPrice(0, 1, 0, 0);
				return;
			case 4461:
				this.DefaultToPlaceableTile(550, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4462:
				this.DefaultToPlaceableTile(551, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4463:
				this.autoReuse = false;
				this.useStyle = 13;
				this.useAnimation = 21;
				this.useTime = 7;
				this.width = 50;
				this.height = 18;
				this.shoot = 802;
				this.UseSound = SoundID.Item1;
				this.damage = 15;
				this.shootSpeed = 2.4f;
				this.noMelee = true;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 30, 0));
				this.melee = true;
				this.knockBack = 3f;
				this.noUseGraphic = true;
				return;
			case 4464:
				this.DefaultToCapturedCritter(616);
				this.value = Item.sellPrice(0, 0, 10, 0);
				return;
			case 4465:
				this.DefaultToCapturedCritter(617);
				this.value = Item.sellPrice(0, 0, 10, 0);
				return;
			case 4466:
				this.DefaultToPlaceableTile(105, 79);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 60));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4467:
				this.DefaultToMount(31);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4468:
				this.DefaultToMount(32);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 4, 0, 0));
				return;
			case 4469:
				this.DefaultToMount(33);
				this.SetShopValues(ItemRarityColor.StrongRed10, Item.sellPrice(0, 10, 0, 0));
				return;
			case 4470:
				this.DefaultToMount(34);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4471:
				this.DefaultToMount(35);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4472:
				this.DefaultToMount(36);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4473:
				this.DefaultToPlaceableTile(553, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4474:
				this.DefaultToPlaceableTile(554, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4475:
				this.DefaultToPlaceableTile(555, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4476:
				this.DefaultToPlaceableTile(556, 0);
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				return;
			case 4477:
				this.UseSound = SoundID.Item3;
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 257;
				this.buffTime = 18000;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4478:
				this.UseSound = SoundID.Item3;
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 257;
				this.buffTime = 36000;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 5, 0, 0));
				return;
			case 4479:
				this.UseSound = SoundID.Item3;
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 257;
				this.buffTime = 54000;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 25, 0, 0));
				return;
			case 4480:
				this.DefaultToCapturedCritter(626);
				this.value = Item.sellPrice(0, 0, 15, 0);
				return;
			case 4481:
				this.DefaultToPlaceableTile(558, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4482:
				this.DefaultToCapturedCritter(627);
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				return;
			case 4483:
				this.DefaultToPlaceableTile(559, 0);
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4484:
			case 4485:
				this.mech = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 144;
				this.placeStyle = type - 4484 + 3;
				this.width = 10;
				this.height = 12;
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 2, 0, 0));
				return;
			case 4486:
			case 4487:
			case 4488:
			case 4489:
			case 4490:
			case 4491:
			case 4492:
			case 4493:
			case 4494:
			case 4495:
			case 4496:
			case 4497:
			case 4498:
			case 4499:
			case 4500:
			case 4501:
			case 4502:
			case 4503:
				this.DefaultToPlaceableWall((ushort)(246 + type - 4486));
				return;
			case 4504:
			case 4505:
				this.DefaultToPlaceableWall((ushort)(264 + type - 4504));
				this.value = 250;
				return;
			case 4506:
			case 4507:
				this.DefaultToPlaceableWall((ushort)(266 + type - 4506));
				return;
			case 4508:
				this.DefaultToPlaceableWall((ushort)(268 + type - 4508));
				this.value = 250;
				return;
			case 4509:
			case 4510:
			case 4511:
				this.DefaultToPlaceableWall((ushort)(269 + type - 4509));
				return;
			case 4512:
				this.DefaultToPlaceableWall(274);
				return;
			case 4513:
			case 4514:
			case 4515:
			case 4516:
			case 4517:
			case 4518:
			case 4519:
			case 4520:
			case 4521:
			case 4522:
			case 4523:
			case 4524:
			case 4525:
			case 4526:
			case 4527:
			case 4528:
			case 4529:
			case 4530:
			case 4531:
			case 4532:
			case 4533:
			case 4534:
			case 4535:
			case 4536:
			case 4537:
			case 4538:
			case 4539:
			case 4540:
				this.DefaultToPlaceableWall((ushort)(276 + type - 4513));
				return;
			case 4541:
			case 4542:
			case 4543:
			case 4544:
			case 4545:
			case 4546:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 288 + (type - 4541);
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				this.rare = 1;
				return;
			case 4547:
				this.DefaultToPlaceableTile(563, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 20));
				return;
			case 4548:
				this.DefaultToPlaceableWall(313);
				return;
			case 4549:
				this.width = 18;
				this.height = 18;
				this.headSlot = 223;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4550:
				this.DefaultToVanitypet(825, 262);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(1, 0, 0, 0));
				return;
			case 4551:
				this.DefaultToVanitypet(821, 261);
				return;
			case 4552:
				this.DefaultToPlaceableTile(565, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 4, 0, 0));
				return;
			case 4553:
				this.DefaultToPlaceableTile(564, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
				return;
			case 4554:
				this.DefaultToPlaceableTile(561, 0);
				return;
			case 4555:
				this.width = 18;
				this.height = 18;
				this.headSlot = 227;
				this.rare = 0;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4556:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 216;
				this.rare = 0;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4557:
				this.width = 18;
				this.height = 18;
				this.legSlot = 190;
				this.rare = 0;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4558:
				this.width = 18;
				this.height = 18;
				this.headSlot = 228;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.buyPrice(0, 2, 0, 0);
				return;
			case 4559:
				this.width = 18;
				this.height = 18;
				this.headSlot = 229;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.buyPrice(0, 2, 0, 0);
				return;
			case 4560:
				this.width = 18;
				this.height = 18;
				this.headSlot = 224;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 3, 0, 0);
				return;
			case 4561:
				this.width = 18;
				this.height = 18;
				this.headSlot = 225;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4562:
				this.width = 18;
				this.height = 18;
				this.headSlot = 226;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4563:
				this.DefaultToAccessory(18, 18);
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				this.hasVanityEffects = true;
				return;
			case 4564:
				this.DefaultToPlaceableTile(562, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 1, 0));
				return;
			case 4565:
				this.DefaultToPlaceableWall(312);
				return;
			case 4566:
				this.DefaultToPlaceableTile(90, 39);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4567:
				this.DefaultToPlaceableTile(79, 39);
				this.SetShopValues(ItemRarityColor.White0, 2000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 20;
				return;
			case 4568:
				this.DefaultToPlaceableTile(101, 40);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4569:
				this.DefaultToPlaceableTile(88, 39);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4570:
				this.DefaultToPlaceableTile(100, 39);
				this.SetShopValues(ItemRarityColor.White0, 1500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4571:
				this.DefaultToPlaceableTile(33, 38);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.noWet = true;
				return;
			case 4572:
				this.DefaultToPlaceableTile(15, 44);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 30;
				return;
			case 4573:
				this.DefaultToPlaceableTile(34, 45);
				this.SetShopValues(ItemRarityColor.White0, 3000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 4574:
				this.DefaultToPlaceableTile(467, 11);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4575:
				this.DefaultToPlaceableTile(104, 40);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4576:
				this.DefaultToPlaceableTile(10, 45);
				this.SetShopValues(ItemRarityColor.White0, 200);
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 4577:
				this.DefaultToPlaceableTile(93, 39);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 10;
				this.height = 24;
				return;
			case 4578:
				this.DefaultToPlaceableTile(42, 45);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 28;
				return;
			case 4579:
				this.DefaultToPlaceableTile(87, 39);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4580:
				this.DefaultToPlaceableTile(19, 44);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 4581:
				this.DefaultToPlaceableTile(172, 40);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4582:
				this.DefaultToPlaceableTile(89, 42);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4583:
				this.DefaultToPlaceableTile(469, 8);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 20;
				return;
			case 4584:
				this.DefaultToPlaceableTile(18, 40);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 14;
				return;
			case 4585:
				this.DefaultToPlaceableTile(468, 11);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4586:
				this.DefaultToPlaceableTile(497, 38);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 4587:
			case 4588:
			case 4589:
			case 4590:
				this.DefaultToGolfClub(20, 20);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 10, 0));
				return;
			case 4591:
			case 4592:
			case 4593:
			case 4594:
				this.DefaultToGolfClub(20, 20);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4595:
			case 4596:
			case 4597:
			case 4598:
				this.DefaultToGolfClub(20, 20);
				this.SetShopValues(ItemRarityColor.LightRed4, Item.buyPrice(0, 25, 0, 0));
				return;
			case 4599:
			case 4600:
			case 4601:
				this.DefaultToPlaceableTile(560, type - 4599);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 1, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4602:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 294;
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				this.rare = 1;
				return;
			case 4603:
				this.DefaultToVanitypet(815, 258);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(1, 0, 0, 0));
				return;
			case 4604:
				this.DefaultToVanitypet(816, 259);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(1, 0, 0, 0));
				return;
			case 4605:
				this.DefaultToVanitypet(817, 260);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(1, 0, 0, 0));
				return;
			case 4606:
				this.DefaultToMusicBox(51);
				return;
			case 4607:
				this.mana = 10;
				this.damage = 41;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 831;
				this.buffType = 263;
				this.width = 26;
				this.height = 28;
				this.UseSound = SoundID.Item44;
				this.useAnimation = 36;
				this.useTime = 36;
				this.rare = 8;
				this.noMelee = true;
				this.knockBack = 4f;
				this.value = Item.sellPrice(0, 20, 0, 0);
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			case 4608:
				this.useStyle = 1;
				this.shootSpeed = 7f;
				this.shoot = 820;
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 19;
				this.useTime = 19;
				this.noMelee = true;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 5, 0));
				return;
			case 4609:
				this.DefaultToPlaceableTile(567, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4610:
				this.DefaultTokite(822);
				return;
			case 4611:
				this.DefaultTokite(823);
				return;
			case 4612:
				this.DefaultTokite(824);
				return;
			case 4613:
				this.DefaultTokite(826);
				return;
			case 4626:
			case 4627:
			case 4628:
			case 4629:
			case 4630:
			case 4631:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 63 + (type - 4626);
				return;
			case 4632:
			case 4633:
			case 4634:
			case 4635:
			case 4636:
			case 4637:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 37 + (type - 4632);
				return;
			case 4638:
			case 4639:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 245;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 7 + (type - 4638);
				return;
			case 4640:
				this.DefaultToPlaceableTile(67, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 1, 0));
				return;
			case 4641:
				this.DefaultToPlaceableTile(66, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 1, 0));
				return;
			case 4642:
				this.DefaultToPlaceableTile(63, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 1, 0));
				return;
			case 4643:
				this.DefaultToPlaceableTile(65, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 1, 0));
				return;
			case 4644:
				this.DefaultToPlaceableTile(64, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 1, 0));
				return;
			case 4645:
				this.DefaultToPlaceableTile(68, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 1, 0));
				return;
			case 4646:
				this.DefaultToPlaceableTile(566, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 1, 0));
				return;
			case 4647:
				this.DefaultToPlaceableWall(314);
				return;
			case 4648:
			case 4649:
			case 4650:
			case 4651:
				this.DefaultTokite(827 + (type - 4648));
				return;
			case 4652:
				this.width = 18;
				this.height = 18;
				this.headSlot = 230;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4653:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 217;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4654:
				this.width = 18;
				this.height = 18;
				this.legSlot = 191;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4655:
				this.DefaultToPlaceableTile(568, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4656:
				this.DefaultToPlaceableTile(569, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4657:
				this.DefaultToPlaceableTile(570, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4658:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 43;
				return;
			case 4659:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 245;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 9;
				return;
			case 4660:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 69;
				return;
			case 4661:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 246;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 19;
				return;
			case 4662:
			case 4663:
			case 4778:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.sellPrice(0, 1, 50, 0);
				this.rare = 3;
				return;
			case 4664:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 218;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.buyPrice(0, 20, 0, 0);
				return;
			case 4665:
				this.width = 18;
				this.height = 18;
				this.legSlot = 193;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.buyPrice(0, 20, 0, 0);
				return;
			case 4666:
				this.width = 18;
				this.height = 18;
				this.headSlot = 232;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.buyPrice(0, 15, 0, 0);
				return;
			case 4667:
				this.DefaultToPlaceableWall(315);
				return;
			case 4668:
				this.paintCoating = 1;
				this.width = 24;
				this.height = 24;
				this.value = Item.buyPrice(0, 0, 2, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4669:
				this.DefaultTokite(838);
				return;
			case 4670:
				this.DefaultTokite(839);
				return;
			case 4671:
				this.DefaultTokite(840);
				return;
			case 4672:
				this.DefaultToWhip(841, 14, 1f, 4f, 30);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4673:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 12;
				this.useTime = 12;
				this.width = 16;
				this.height = 16;
				this.scale = 1f;
				this.value = Item.buyPrice(0, 0, 50, 0);
				return;
			case 4674:
				this.DefaultTokite(843);
				return;
			case 4675:
				this.DefaultTokite(844);
				return;
			case 4676:
				this.DefaultTokite(845);
				this.value = Item.buyPrice(0, 2, 0, 0);
				return;
			case 4677:
				this.DefaultTokite(846);
				return;
			case 4678:
				this.DefaultToWhip(847, 55, 2f, 4f, 28);
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 4, 60, 0));
				return;
			case 4679:
				this.DefaultToWhip(848, 165, 11f, 4f, 35);
				this.SetShopValues(ItemRarityColor.Yellow8, Item.sellPrice(0, 6, 0, 0));
				this.crit = 10;
				return;
			case 4680:
				this.DefaultToWhip(849, 100, 3f, 4f, 27);
				this.SetShopValues(ItemRarityColor.Yellow8, Item.sellPrice(0, 10, 0, 0));
				return;
			case 4681:
				this.DefaultTokite(850);
				this.value = Item.buyPrice(0, 2, 0, 0);
				return;
			case 4682:
				this.width = 20;
				this.height = 24;
				this.DefaultToThrownWeapon(851, 25, 4f, false);
				this.value = Item.buyPrice(0, 0, 1, 0);
				this.ranged = false;
				this.noUseGraphic = true;
				return;
			case 4683:
				this.DefaultTokite(852);
				return;
			case 4684:
				this.DefaultTokite(853);
				return;
			case 4685:
				this.width = 18;
				this.height = 18;
				this.headSlot = 231;
				this.vanity = true;
				this.value = Item.buyPrice(0, 10, 0, 0);
				return;
			case 4686:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 219;
				this.vanity = true;
				this.value = Item.buyPrice(0, 10, 0, 0);
				return;
			case 4687:
			case 4688:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 295 + (type - 4687);
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				this.rare = 1;
				return;
			case 4689:
			case 4690:
			case 4691:
			case 4692:
			case 4693:
			case 4694:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 215;
				this.placeStyle = 8 + type - 4689;
				this.width = 12;
				this.height = 12;
				return;
			case 4695:
			case 4696:
			case 4697:
			case 4698:
			case 4699:
			case 4700:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 572;
				this.placeStyle = type - 4695;
				this.width = 12;
				this.height = 28;
				if (type >= 4695 && type <= 4697)
				{
					this.value = 1000;
					return;
				}
				this.value = 40000;
				return;
			case 4701:
				this.DefaultToVanitypet(854, 264);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 50, 0, 0));
				return;
			case 4702:
				this.width = 20;
				this.height = 24;
				this.DefaultToThrownWeapon(855, 25, 4f, false);
				this.value = Item.buyPrice(0, 0, 1, 0);
				this.ranged = false;
				this.noUseGraphic = true;
				return;
			case 4703:
				this.DefaultToRangedWeapon(14, AmmoID.Bullet, 55, 7f, false);
				this.knockBack = 6.5f;
				this.width = 50;
				this.height = 14;
				this.UseSound = SoundID.Item36;
				this.damage = 14;
				this.value = Item.buyPrice(0, 35, 0, 0);
				this.rare = 3;
				return;
			case 4704:
				this.width = 18;
				this.height = 18;
				this.headSlot = 233;
				this.vanity = true;
				this.value = Item.buyPrice(0, 10, 0, 0);
				return;
			case 4705:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 220;
				this.vanity = true;
				this.value = Item.buyPrice(0, 10, 0, 0);
				return;
			case 4706:
				this.width = 18;
				this.height = 18;
				this.legSlot = 197;
				this.vanity = true;
				this.value = Item.buyPrice(0, 10, 0, 0);
				return;
			case 4707:
				this.width = 44;
				this.height = 44;
				this.rare = 2;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.holdStyle = 2;
				this.useStyle = 3;
				this.useAnimation = 22;
				this.useTime = 22;
				this.damage = 15;
				this.knockBack = 5f;
				this.UseSound = SoundID.Item1;
				this.melee = true;
				return;
			case 4708:
				this.width = 18;
				this.height = 18;
				this.headSlot = 234;
				this.vanity = true;
				this.value = Item.buyPrice(0, 10, 0, 0);
				return;
			case 4709:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 221;
				this.vanity = true;
				this.value = Item.buyPrice(0, 10, 0, 0);
				return;
			case 4710:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 573;
				this.width = 28;
				this.height = 28;
				return;
			case 4711:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 22;
				this.useTime = 14;
				this.autoReuse = true;
				this.width = 24;
				this.height = 28;
				this.damage = 12;
				this.UseSound = SoundID.Item1;
				this.knockBack = 3.5f;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.melee = true;
				return;
			case 4712:
				this.DefaultToPlaceableTile(467, 12);
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 25, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4713:
				this.DefaultToPlaceableTile(468, 12);
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 5, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4714:
				this.width = 14;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 8;
				return;
			case 4715:
				this.SetShopValues(ItemRarityColor.Pink5, Item.buyPrice(0, 50, 0, 0));
				this.DefaultToGuitar(24, 24);
				this.useAnimation = (this.useTime = 12);
				this.useTime /= 2;
				this.shoot = 856;
				this.damage = 85;
				this.magic = true;
				this.shootSpeed = 1f;
				this.crit = 20;
				this.knockBack = 1.5f;
				this.mana = 12;
				this.noMelee = true;
				return;
			case 4716:
				this.useStyle = 4;
				this.channel = true;
				this.width = 34;
				this.height = 34;
				this.UseSound = SoundID.Item43;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 8;
				this.noMelee = true;
				this.mountType = 37;
				this.value = Item.buyPrice(0, 20, 0, 0);
				return;
			case 4717:
			case 4718:
			case 4719:
			case 4720:
			case 4721:
				this.DefaultToPlaceableTile(574 + type - 4717, 0);
				return;
			case 4722:
				this.useStyle = 5;
				this.width = 24;
				this.height = 24;
				this.noUseGraphic = true;
				this.UseSound = SoundID.Item1;
				this.autoReuse = true;
				this.melee = true;
				this.channel = true;
				this.noMelee = true;
				this.shoot = 857;
				this.useAnimation = 35;
				this.useTime = this.useAnimation / 5;
				this.shootSpeed = 16f;
				this.damage = 190;
				this.knockBack = 6.5f;
				this.value = Item.sellPrice(0, 20, 0, 0);
				this.crit = 10;
				this.rare = 10;
				this.glowMask = 271;
				return;
			case 4723:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 70;
				return;
			case 4724:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 71;
				return;
			case 4725:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 44;
				return;
			case 4726:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 245;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 10;
				return;
			case 4727:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 245;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 11;
				return;
			case 4728:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 245;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 12;
				return;
			case 4729:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 246;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 20;
				return;
			case 4730:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.rare = 9;
				this.wingSlot = 40;
				this.value = 400000;
				return;
			case 4731:
				this.DefaultToPlaceableTile(497, 39);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				this.rare = 8;
				return;
			case 4732:
				this.width = 18;
				this.height = 18;
				this.headSlot = 235;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4733:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 222;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4734:
				this.width = 18;
				this.height = 18;
				this.legSlot = 203;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4735:
				this.DefaultToVanitypet(858, 266);
				this.value = Item.buyPrice(0, 50, 0, 0);
				return;
			case 4736:
				this.DefaultToVanitypet(859, 267);
				this.value = Item.buyPrice(0, 30, 0, 0);
				return;
			case 4737:
				this.DefaultToVanitypet(860, 268);
				return;
			case 4738:
				this.width = 18;
				this.height = 18;
				this.headSlot = 236;
				this.rare = 2;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4739:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 223;
				this.rare = 2;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4740:
				this.width = 18;
				this.height = 18;
				this.headSlot = 237;
				this.rare = 2;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4741:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 224;
				this.rare = 2;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4742:
				this.width = 18;
				this.height = 18;
				this.legSlot = 205;
				this.rare = 2;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4743:
				this.useStyle = 1;
				this.shootSpeed = 11f;
				this.shoot = 861;
				this.damage = 0;
				this.width = 10;
				this.height = 10;
				this.maxStack = 1;
				this.consumable = true;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 15;
				this.useTime = 15;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = 20;
				return;
			case 4744:
				this.DefaultToAccessory(26, 36);
				this.backSlot = 24;
				this.frontSlot = 8;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 3, 0, 0));
				this.vanity = true;
				return;
			case 4745:
				this.DefaultToMount(38);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 20, 0));
				return;
			case 4746:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.rare = 9;
				this.wingSlot = 41;
				this.value = 400000;
				return;
			case 4747:
				this.width = 18;
				this.height = 18;
				this.headSlot = 238;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4748:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 225;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4749:
				this.width = 18;
				this.height = 18;
				this.legSlot = 208;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4750:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.rare = 9;
				this.wingSlot = 42;
				this.value = 400000;
				return;
			case 4751:
				this.width = 18;
				this.height = 18;
				this.headSlot = 239;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4752:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 226;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4753:
				this.width = 18;
				this.height = 18;
				this.legSlot = 209;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4754:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.rare = 9;
				this.wingSlot = 43;
				this.value = 400000;
				return;
			case 4755:
				this.width = 18;
				this.height = 18;
				this.headSlot = 240;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4756:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 227;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4757:
				this.width = 18;
				this.height = 18;
				this.legSlot = 210;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4758:
				this.mana = 10;
				this.damage = 6;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 864;
				this.buffType = 271;
				this.width = 26;
				this.height = 28;
				this.UseSound = SoundID.Item44;
				this.useAnimation = 36;
				this.useTime = 36;
				this.rare = 5;
				this.noMelee = true;
				this.knockBack = 0f;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			case 4759:
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 11.5f;
				this.shoot = 865;
				this.width = 18;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = 20000;
				return;
			case 4760:
				this.damage = 80;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 866;
				this.width = 26;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 36;
				this.useTime = 36;
				this.rare = 5;
				this.noMelee = true;
				this.knockBack = 2f;
				this.value = Item.buyPrice(0, 35, 0, 0);
				this.melee = true;
				this.noUseGraphic = true;
				return;
			case 4761:
				this.width = 12;
				this.height = 12;
				this.headSlot = 241;
				this.rare = 3;
				this.vanity = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 579;
				return;
			case 4762:
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.vanity = true;
				this.rare = 1;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.hasVanityEffects = true;
				return;
			case 4763:
				this.DefaultToMount(39);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 50, 0, 0));
				return;
			case 4764:
				this.noMelee = true;
				this.useStyle = 1;
				this.shootSpeed = 10.5f;
				this.shoot = 867;
				this.damage = 23;
				this.knockBack = 7f;
				this.width = 14;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.noUseGraphic = true;
				this.rare = 1;
				this.value = 30000;
				this.melee = true;
				return;
			case 4765:
			case 4766:
				this.DefaultToThrownWeapon(type - 4765 + 868, 20, 8f, false);
				this.UseSound = SoundID.Item106;
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 3, 0, 0));
				this.width = 18;
				this.height = 18;
				return;
			case 4767:
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
				this.width = 30;
				this.height = 30;
				return;
			case 4768:
				this.width = 18;
				this.height = 18;
				this.headSlot = 242;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 3, 0, 0);
				return;
			case 4769:
				this.DefaultToAccessory(18, 18);
				this.backSlot = 25;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 3, 0, 0);
				return;
			case 4770:
				this.width = 18;
				this.height = 18;
				this.headSlot = 243;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 3, 0, 0);
				return;
			case 4771:
				this.DefaultToAccessory(18, 18);
				this.backSlot = 26;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 3, 0, 0);
				return;
			case 4772:
				this.width = 18;
				this.height = 18;
				this.headSlot = 244;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 3, 0, 0);
				return;
			case 4773:
				this.DefaultToAccessory(18, 18);
				this.backSlot = 27;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 3, 0, 0);
				return;
			case 4774:
				this.width = 18;
				this.height = 18;
				this.headSlot = 245;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4775:
				this.DefaultToAccessory(18, 18);
				this.backSlot = 28;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 3, 0, 0);
				return;
			case 4776:
				this.color = new Color(255, 255, 255, 0);
				this.useStyle = 1;
				this.shootSpeed = 6f;
				this.shoot = 870;
				this.width = 12;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 15;
				this.useTime = 15;
				this.noMelee = true;
				this.rare = 1;
				this.value = Item.buyPrice(0, 0, 0, 75);
				this.holdStyle = 1;
				return;
			case 4777:
				this.DefaultToVanitypet(875, 274);
				this.value = Item.buyPrice(0, 50, 0, 0);
				return;
			case 4779:
				this.width = 18;
				this.height = 18;
				this.headSlot = 250;
				this.rare = 1;
				this.vanity = true;
				return;
			case 4780:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 228;
				this.rare = 1;
				this.vanity = true;
				return;
			case 4781:
				this.width = 18;
				this.height = 18;
				this.legSlot = 211;
				this.rare = 1;
				this.vanity = true;
				return;
			case 4782:
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 24;
				this.height = 24;
				this.rare = 6;
				this.expert = true;
				return;
			case 4783:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.rare = 1;
				this.placeStyle = 72;
				return;
			case 4784:
				this.width = 18;
				this.height = 18;
				this.headSlot = 251;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 75, 0);
				this.vanity = true;
				return;
			case 4785:
			case 4786:
			case 4787:
				this.useStyle = 4;
				this.channel = true;
				this.width = 34;
				this.height = 34;
				this.UseSound = SoundID.Item76;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 8;
				this.noMelee = true;
				this.mountType = 40 + (type - 4785);
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4788:
				this.DefaultToSpear(877, 3.5f, 24);
				this.SetWeaponValues(60, 12f, 0);
				this.SetShopValues(ItemRarityColor.LightRed4, Item.buyPrice(0, 6, 0, 0));
				this.channel = true;
				return;
			case 4789:
				this.DefaultToSpear(878, 3.5f, 24);
				this.SetWeaponValues(130, 14f, 0);
				this.SetShopValues(ItemRarityColor.Yellow8, Item.sellPrice(0, 10, 0, 0));
				this.channel = true;
				return;
			case 4790:
				this.DefaultToSpear(879, 3.5f, 24);
				this.SetWeaponValues(90, 13f, 0);
				this.SetShopValues(ItemRarityColor.Pink5, 230000);
				this.channel = true;
				return;
			case 4791:
				this.useStyle = 4;
				this.channel = true;
				this.width = 10;
				this.height = 32;
				this.UseSound = SoundID.Item25;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 8;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.mountType = 43;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4792:
			case 4793:
			case 4794:
			case 4795:
			case 4796:
				this.useStyle = 4;
				this.channel = true;
				this.width = 10;
				this.height = 32;
				this.UseSound = SoundID.Item25;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = -13;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.mountType = 44 + type - 4792;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4797:
			case 4798:
			case 4799:
			case 4800:
			case 4801:
			case 4802:
			case 4803:
			case 4804:
			case 4805:
			case 4806:
			case 4807:
			case 4808:
			case 4809:
			case 4810:
			case 4811:
			case 4812:
			case 4813:
			case 4814:
			case 4815:
			case 4816:
			case 4817:
				this.DefaultToVanitypet(881 + type - 4797, 284 + type - 4797);
				this.value = Item.buyPrice(0, 25, 0, 0);
				this.rare = -13;
				return;
			case 4818:
				this.noMelee = true;
				this.useStyle = 1;
				this.shootSpeed = 8.5f;
				this.shoot = 902;
				this.damage = 25;
				this.knockBack = 3.5f;
				this.width = 14;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 15;
				this.useTime = 15;
				this.noUseGraphic = true;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 50, 0);
				this.melee = true;
				return;
			case 4819:
				this.useTurn = true;
				this.width = 20;
				this.height = 20;
				this.useStyle = 4;
				this.useTime = 90;
				this.UseSound = SoundID.Item6;
				this.useAnimation = 90;
				this.SetShopValues(ItemRarityColor.LightRed4, Item.buyPrice(0, 5, 0, 0));
				return;
			case 4820:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 12;
				this.useTime = 5;
				this.width = 20;
				this.height = 20;
				this.autoReuse = true;
				this.rare = 7;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.tileBoost += 2;
				return;
			case 4821:
				this.useTurn = true;
				this.useStyle = 1;
				this.useTime = 21;
				this.useAnimation = 21;
				this.width = 24;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.autoReuse = true;
				this.rare = 3;
				this.scale = 0.85f;
				return;
			case 4822:
				this.DefaultToAccessory(34, 30);
				this.shoeSlot = 22;
				this.SetShopValues(ItemRarityColor.Orange3, Item.sellPrice(0, 2, 0, 0));
				this.vanity = true;
				return;
			case 4823:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.rare = 9;
				this.wingSlot = 44;
				this.value = Item.buyPrice(0, 40, 0, 0);
				return;
			case 4824:
			case 4825:
			case 4826:
			case 4827:
				this.useStyle = 1;
				this.shootSpeed = 5f;
				this.shoot = 903 + (type - 4824);
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.UseSound = SoundID.Item1;
				this.consumable = true;
				this.useAnimation = 25;
				this.noUseGraphic = true;
				this.useTime = 25;
				this.value = Item.sellPrice(0, 0, 5, 0);
				this.rare = 1;
				return;
			case 4828:
				this.useStyle = 4;
				this.channel = true;
				this.width = 10;
				this.height = 32;
				this.UseSound = SoundID.Item25;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 8;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.mountType = 49;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4829:
			case 4830:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = SoundID.Item92;
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 5, 0, 0));
				return;
			case 4831:
			case 4832:
			case 4833:
			case 4834:
			case 4835:
			case 4836:
			case 4837:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.noUseGraphic = true;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.makeNPC = (short)(639 + (type - 4831));
				return;
			case 4838:
			case 4839:
			case 4840:
			case 4841:
			case 4842:
			case 4843:
			case 4844:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.noUseGraphic = true;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.makeNPC = (short)(646 + (type - 4838));
				return;
			case 4845:
				this.DefaultToCapturedCritter(653);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 20, 0));
				this.width = 12;
				this.height = 12;
				this.bait = 15;
				return;
			case 4846:
				this.DefaultToPlaceableTile(580, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4847:
				this.DefaultToCapturedCritter(654);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 20, 0));
				this.width = 12;
				this.height = 12;
				this.bait = 25;
				return;
			case 4848:
				this.DefaultToPlaceableTile(581, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4849:
				this.DefaultToCapturedCritter(655);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				this.width = 12;
				this.height = 12;
				this.bait = 35;
				return;
			case 4850:
				this.DefaultToPlaceableTile(582, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4851:
				this.DefaultToPlaceableTile(590, 0);
				this.value = Item.sellPrice(0, 0, 7, 50);
				return;
			case 4852:
				this.DefaultToPlaceableTile(590, 1);
				this.value = Item.sellPrice(0, 0, 3, 75);
				return;
			case 4853:
				this.DefaultToPlaceableTile(590, 2);
				this.value = Item.sellPrice(0, 0, 11, 25);
				return;
			case 4854:
				this.DefaultToPlaceableTile(590, 3);
				this.value = Item.sellPrice(0, 0, 15, 0);
				return;
			case 4855:
				this.DefaultToPlaceableTile(590, 4);
				this.value = Item.sellPrice(0, 0, 22, 50);
				return;
			case 4856:
				this.DefaultToPlaceableTile(590, 5);
				this.value = Item.sellPrice(0, 0, 30, 0);
				return;
			case 4857:
				this.DefaultToPlaceableTile(590, 6);
				this.value = Item.sellPrice(0, 0, 30, 0);
				return;
			case 4858:
			case 4859:
			case 4860:
			case 4861:
			case 4862:
			case 4863:
			case 4864:
			case 4865:
			case 4866:
				this.DefaultToPlaceableTile(591, type - 4858);
				this.value = Item.sellPrice(0, 0, 25, 0);
				return;
			case 4867:
				this.DefaultToPlaceableTile(592, 0);
				this.value = Item.sellPrice(0, 0, 25, 0);
				return;
			case 4868:
			case 4869:
				this.DefaultToPlaceableTile(593 + (type - 4868), 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
				return;
			case 4870:
				this.UseSound = SoundID.Item6;
				this.useStyle = 6;
				this.useTurn = true;
				this.useTime = (this.useAnimation = 30);
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.value = 1000;
				this.rare = 1;
				return;
			case 4871:
				this.DefaultToPlaceableTile(595, 0);
				this.value = Item.buyPrice(0, 1, 0, 0);
				return;
			case 4872:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 12;
				this.useTime = 5;
				this.width = 20;
				this.height = 20;
				this.autoReuse = true;
				this.rare = 7;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.tileBoost += 2;
				return;
			case 4873:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.headSlot = 254;
				this.rare = 5;
				this.value = 250000;
				return;
			case 4874:
				this.DefaultToAccessory(34, 30);
				this.shoeSlot = 23;
				this.SetShopValues(ItemRarityColor.Lime7, Item.sellPrice(0, 4, 0, 0));
				this.hasVanityEffects = true;
				return;
			case 4875:
				this.DefaultToPlaceableTile(597, 1);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4876:
				this.DefaultToPlaceableTile(597, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4877:
			case 4878:
				this.DefaultToPlaceableTile(376, 22 + type - 4877);
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 1, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4879:
				this.width = 12;
				this.height = 12;
				this.rare = 2;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.buyPrice(0, 2, 0, 0);
				return;
			case 4880:
				this.DefaultToPlaceableTile(598, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				this.value = Item.sellPrice(0, 0, 20, 0);
				return;
			case 4881:
				this.DefaultToAccessory(34, 30);
				this.SetShopValues(ItemRarityColor.Lime7, Item.sellPrice(0, 2, 0, 0));
				return;
			case 4882:
			case 4883:
			case 4884:
			case 4885:
			case 4886:
			case 4887:
			case 4888:
			case 4889:
			case 4890:
			case 4891:
			case 4892:
			case 4893:
			case 4894:
			case 4895:
				this.DefaultToPlaceableTile(599 + (type - 4882), 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4896:
				this.width = 18;
				this.height = 18;
				this.defense = 24;
				this.headSlot = 255;
				this.rare = 5;
				this.value = 250000;
				return;
			case 4897:
				this.width = 18;
				this.height = 18;
				this.defense = 9;
				this.headSlot = 256;
				this.rare = 5;
				this.value = 250000;
				return;
			case 4898:
				this.width = 18;
				this.height = 18;
				this.defense = 5;
				this.headSlot = 257;
				this.rare = 5;
				this.value = 250000;
				return;
			case 4899:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.headSlot = 258;
				this.rare = 5;
				this.value = 250000;
				return;
			case 4900:
				this.width = 18;
				this.height = 18;
				this.defense = 15;
				this.bodySlot = 229;
				this.rare = 5;
				this.value = 200000;
				return;
			case 4901:
				this.width = 18;
				this.height = 18;
				this.defense = 11;
				this.legSlot = 212;
				this.rare = 5;
				this.value = 150000;
				return;
			case 4902:
				this.DefaultToPlaceableTile(548, 7);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4903:
				this.DefaultToPlaceableTile(548, 8);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4904:
				this.DefaultToPlaceableTile(613, 0);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4905:
				this.DefaultToPlaceableTile(613, 1);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4906:
				this.DefaultToPlaceableTile(614, 0);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4907:
				this.DefaultToPlaceableTile(615, 0);
				this.value = Item.buyPrice(0, 1, 0, 0);
				return;
			case 4908:
			case 4909:
				this.useStyle = 1;
				this.shootSpeed = 5f;
				this.shoot = 910 + (type - 4908);
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.UseSound = SoundID.Item1;
				this.consumable = true;
				this.useAnimation = 25;
				this.noUseGraphic = true;
				this.useTime = 25;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.rare = 1;
				return;
			case 4910:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = SoundID.Item92;
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 5, 0, 0));
				return;
			case 4911:
				this.DefaultToWhip(912, 45, 1.5f, 4f, 30);
				this.SetShopValues(ItemRarityColor.LightRed4, Item.sellPrice(0, 4, 0, 0));
				return;
			case 4912:
				this.DefaultToWhip(913, 37, 2f, 4f, 30);
				this.SetShopValues(ItemRarityColor.LightRed4, Item.sellPrice(0, 3, 0, 0));
				return;
			case 4913:
				this.DefaultToWhip(914, 18, 1.5f, 4f, 30);
				this.SetShopValues(ItemRarityColor.Orange3, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4914:
				this.DefaultToWhip(915, 180, 4f, 4f, 30);
				this.SetShopValues(ItemRarityColor.Yellow8, Item.sellPrice(0, 5, 0, 0));
				return;
			case 4915:
				this.shootSpeed = 4.5f;
				this.shoot = 14;
				this.damage = 9;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Bullet;
				this.knockBack = 4f;
				this.value = 18;
				this.ranged = true;
				return;
			case 4916:
				this.DefaultToPlaceableTile(597, 2);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4917:
				this.DefaultToPlaceableTile(597, 3);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4918:
				this.DefaultToPlaceableTile(597, 4);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4919:
				this.DefaultToPlaceableTile(597, 5);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4920:
				this.DefaultToPlaceableTile(597, 6);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4921:
				this.DefaultToPlaceableTile(597, 7);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4922:
				this.DefaultToPlaceableTile(207, 8);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 4, 0, 0));
				this.width = 8;
				this.height = 10;
				return;
			case 4923:
				this.width = 14;
				this.height = 38;
				this.rare = 8;
				this.noUseGraphic = true;
				this.channel = true;
				this.noMelee = true;
				this.damage = 80;
				this.crit = 10;
				this.knockBack = 4f;
				this.autoReuse = false;
				this.noMelee = true;
				this.melee = true;
				this.shoot = 927;
				this.shootSpeed = 15f;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.useStyle = 13;
				this.useAnimation = 18;
				this.useTime = 6;
				return;
			case 4924:
			case 4925:
			case 4926:
			case 4927:
			case 4928:
			case 4929:
			case 4930:
			case 4931:
			case 4932:
			case 4933:
			case 4934:
			case 4935:
			case 4936:
			case 4937:
			case 4938:
			case 4939:
			case 4940:
			case 4941:
			case 4942:
			case 4943:
			case 4944:
			case 4945:
			case 4946:
			case 4947:
			case 4948:
			case 4949:
			case 4950:
				this.DefaultToPlaceableTile(617, type - 4924);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
				this.rare = -13;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4951:
				this.DefaultToPlaceableTile(597, 8);
				this.SetShopValues(ItemRarityColor.Cyan9, Item.buyPrice(1, 0, 0, 0));
				return;
			case 4952:
				this.autoReuse = true;
				this.useStyle = 14;
				this.holdStyle = 6;
				this.scale = 0.7f;
				this.useAnimation = 36;
				this.useTime = 2;
				this.width = 36;
				this.height = 22;
				this.shoot = 931;
				this.mana = 23;
				this.UseSound = SoundID.Item82;
				this.knockBack = 2.5f;
				this.damage = 50;
				this.shootSpeed = 17f;
				this.noMelee = true;
				this.rare = 8;
				this.magic = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.flame = true;
				return;
			case 4953:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 30;
				this.useTime = 2;
				this.width = 50;
				this.height = 18;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = SoundID.Item5;
				this.damage = 50;
				this.shootSpeed = 10f;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.ranged = true;
				this.rare = 8;
				this.knockBack = 2f;
				return;
			case 4954:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.rare = 9;
				this.wingSlot = 45;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.expert = true;
				return;
			case 4955:
				this.width = 18;
				this.height = 18;
				this.headSlot = 259;
				this.value = Item.buyPrice(0, 15, 0, 0);
				this.rare = 5;
				this.vanity = true;
				return;
			case 4956:
				this.useStyle = 1;
				this.width = 24;
				this.height = 24;
				this.UseSound = null;
				this.autoReuse = true;
				this.melee = true;
				this.melee = true;
				this.shoot = 933;
				this.useAnimation = 30;
				this.useTime = this.useAnimation / 3;
				this.shootSpeed = 16f;
				this.damage = 190;
				this.knockBack = 6.5f;
				this.value = Item.sellPrice(0, 20, 0, 0);
				this.crit = 10;
				this.rare = 10;
				this.noUseGraphic = true;
				this.noMelee = true;
				return;
			case 4957:
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 24;
				this.height = 24;
				this.rare = 6;
				this.expert = true;
				return;
			case 4958:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.rare = 1;
				this.placeStyle = 73;
				return;
			case 4959:
				this.width = 18;
				this.height = 18;
				this.headSlot = 260;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 75, 0);
				this.vanity = true;
				return;
			case 4960:
				this.DefaultToVanitypet(934, 317);
				this.value = Item.buyPrice(0, 25, 0, 0);
				this.rare = -13;
				return;
			case 4961:
				this.DefaultToCapturedCritter(661);
				this.SetShopValues(ItemRarityColor.Orange3, Item.sellPrice(0, 5, 0, 0));
				this.width = 12;
				this.height = 12;
				return;
			case 4962:
				this.DefaultToPlaceableTile(618, 0);
				return;
			case 4963:
				this.DefaultToPlaceableTile(619, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4964:
				this.DefaultToPlaceableTile(620, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4965:
			case 4966:
			case 4967:
			case 4968:
			case 4969:
			case 4970:
			case 4971:
			case 4972:
			case 4973:
			case 4974:
			case 4975:
			case 4976:
			case 4977:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 297 + (type - 4965);
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				this.rare = 1;
				return;
			case 4978:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.rare = 0;
				this.wingSlot = 46;
				this.value = 2000;
				return;
			case 4979:
				this.DefaultToMusicBox(52);
				return;
			case 4980:
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 4f;
				this.shoot = 935;
				this.width = 18;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 5;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4981:
				this.useStyle = 4;
				this.channel = true;
				this.width = 10;
				this.height = 32;
				this.UseSound = SoundID.Item25;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 8;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.mountType = 50;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4982:
				this.width = 18;
				this.height = 18;
				this.defense = 12;
				this.headSlot = 261;
				this.rare = 5;
				this.value = Item.sellPrice(0, 2, 0, 0);
				return;
			case 4983:
				this.width = 18;
				this.height = 18;
				this.defense = 14;
				this.bodySlot = 230;
				this.rare = 5;
				this.value = Item.sellPrice(0, 2, 0, 0);
				return;
			case 4984:
				this.width = 18;
				this.height = 18;
				this.defense = 10;
				this.legSlot = 213;
				this.rare = 5;
				this.value = Item.sellPrice(0, 2, 0, 0);
				return;
			case 4985:
				this.DefaultToMusicBox(53);
				return;
			case 4986:
				this.useStyle = 1;
				this.shootSpeed = 9f;
				this.shoot = 936;
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 15;
				this.useTime = 15;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = 200;
				return;
			case 4987:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 6;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.expert = true;
				return;
			case 4988:
				this.useStyle = 4;
				this.width = 20;
				this.height = 20;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 6;
				this.value = Item.sellPrice(0, 1, 0, 0);
				return;
			case 4989:
				this.width = 22;
				this.height = 22;
				this.accessory = true;
				this.rare = 1;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.expert = true;
				return;
			case 4990:
				this.DefaultToMusicBox(54);
				return;
			case 4991:
				this.DefaultToMusicBox(55);
				return;
			case 4992:
				this.DefaultToMusicBox(56);
				return;
			case 4993:
				this.DefaultToPlaceableTile(89, 43);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				this.rare = 9;
				return;
			case 4994:
				this.width = 18;
				this.height = 14;
				this.headSlot = 262;
				this.rare = 2;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.vanity = true;
				return;
			case 4995:
				this.width = 18;
				this.height = 14;
				this.headSlot = 263;
				this.rare = 2;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.vanity = true;
				return;
			case 4996:
				this.width = 18;
				this.height = 14;
				this.headSlot = 264;
				this.rare = 2;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.vanity = true;
				return;
			case 4997:
				this.width = 18;
				this.height = 14;
				this.vanity = true;
				this.bodySlot = 231;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.rare = 2;
				return;
			case 4998:
				this.width = 18;
				this.height = 14;
				this.vanity = true;
				this.bodySlot = 232;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.rare = 2;
				return;
			case 4999:
				this.width = 18;
				this.height = 14;
				this.vanity = true;
				this.bodySlot = 233;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.rare = 2;
				return;
			case 5000:
				this.DefaultToAccessory(34, 30);
				this.shoeSlot = 24;
				this.SetShopValues(ItemRarityColor.Lime7, Item.sellPrice(0, 15, 0, 0));
				this.hasVanityEffects = true;
				return;
			case 5001:
				this.width = 18;
				this.height = 14;
				this.defense = 3;
				this.legSlot = 217;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.rare = 2;
				return;
			case 5002:
			case 5003:
				this.DefaultToPlaceableTile(376, 24 + type - 5002);
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 1, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5004:
				this.width = 18;
				this.height = 14;
				this.headSlot = 265;
				this.rare = 9;
				this.value = Item.sellPrice(0, 0, 30, 0);
				this.vanity = true;
				return;
			case 5005:
				this.mana = 10;
				this.damage = 90;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 946;
				this.buffType = 322;
				this.width = 26;
				this.height = 28;
				this.UseSound = SoundID.Item82;
				this.useAnimation = 36;
				this.useTime = 36;
				this.rare = 5;
				this.noMelee = true;
				this.knockBack = 4f;
				this.value = Item.sellPrice(0, 20, 0, 0);
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			case 5006:
				this.DefaultToMusicBox(57);
				return;
			case 5007:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 234;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.vanity = true;
				return;
			case 5008:
				this.DefaultToPlaceableTile(622, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 2, 0));
				return;
			case 5010:
				this.DefaultToAccessory(34, 30);
				this.waistSlot = 16;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 3, 0, 0));
				return;
			case 5011:
			case 5012:
				this.noMelee = true;
				this.useStyle = 5;
				this.useAnimation = 45;
				this.useTime = 45;
				this.knockBack = 4.6f;
				this.width = 28;
				this.height = 28;
				this.damage = 9;
				this.scale = 1f;
				this.noUseGraphic = true;
				this.shoot = 947;
				if (type == 5012)
				{
					this.shoot = 948;
				}
				this.shootSpeed = 11f;
				this.UseSound = SoundID.Item1;
				this.rare = 1;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.melee = true;
				this.channel = true;
				return;
			case 5014:
				this.DefaultToMusicBox(58);
				return;
			case 5015:
				this.DefaultToMusicBox(59);
				return;
			case 5016:
				this.DefaultToMusicBox(60);
				return;
			case 5017:
				this.DefaultToMusicBox(61);
				return;
			case 5018:
				this.DefaultToMusicBox(62);
				return;
			case 5019:
				this.DefaultToMusicBox(63);
				return;
			case 5020:
				this.DefaultToMusicBox(64);
				return;
			case 5021:
				this.DefaultToMusicBox(65);
				return;
			case 5022:
				this.DefaultToMusicBox(66);
				return;
			case 5023:
				this.DefaultToMusicBox(67);
				return;
			case 5024:
				this.DefaultToMusicBox(68);
				return;
			case 5025:
				this.DefaultToMusicBox(69);
				return;
			case 5026:
				this.DefaultToMusicBox(70);
				return;
			case 5027:
				this.DefaultToMusicBox(71);
				return;
			case 5028:
				this.DefaultToMusicBox(72);
				return;
			case 5029:
				this.DefaultToMusicBox(73);
				return;
			case 5030:
				this.DefaultToMusicBox(74);
				return;
			case 5031:
				this.DefaultToMusicBox(75);
				return;
			case 5032:
				this.DefaultToMusicBox(76);
				return;
			case 5033:
				this.DefaultToMusicBox(77);
				return;
			case 5034:
				this.DefaultToMusicBox(78);
				return;
			case 5035:
				this.DefaultToMusicBox(79);
				return;
			case 5036:
				this.DefaultToMusicBox(80);
				return;
			case 5037:
				this.DefaultToMusicBox(81);
				return;
			case 5038:
				this.DefaultToMusicBox(82);
				return;
			case 5039:
				this.DefaultToMusicBox(83);
				return;
			case 5040:
				this.DefaultToMusicBox(84);
				return;
			case 5043:
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 18;
				this.height = 18;
				this.useStyle = 4;
				this.useTime = 30;
				this.UseSound = SoundID.Item4;
				this.useAnimation = 30;
				this.rare = 4;
				this.value = Item.sellPrice(0, 2, 0, 0);
				return;
			case 5044:
				this.DefaultToMusicBox(85);
				return;
			case 5045:
				this.width = 18;
				this.height = 14;
				this.headSlot = 266;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5046:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 235;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5047:
				this.width = 18;
				this.height = 14;
				this.legSlot = 218;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5048:
				this.width = 18;
				this.height = 14;
				this.headSlot = 267;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5049:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 236;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5050:
				this.width = 18;
				this.height = 14;
				this.legSlot = 219;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5051:
				this.width = 18;
				this.height = 14;
				this.headSlot = 268;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5052:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 237;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5053:
				this.width = 18;
				this.height = 14;
				this.legSlot = 222;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5054:
				this.width = 18;
				this.height = 14;
				this.headSlot = 269;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5055:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 238;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5056:
				this.width = 18;
				this.height = 14;
				this.legSlot = 224;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5057:
				this.width = 18;
				this.height = 14;
				this.headSlot = 270;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5058:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 239;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5059:
				this.width = 18;
				this.height = 14;
				this.legSlot = 225;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5060:
				this.width = 18;
				this.height = 14;
				this.legSlot = 226;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5061:
				this.width = 18;
				this.height = 14;
				this.headSlot = 271;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5062:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 240;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5063:
				this.width = 18;
				this.height = 14;
				this.legSlot = 227;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5064:
				this.width = 26;
				this.height = 30;
				this.maxStack = 1;
				this.value = Item.sellPrice(0, 4, 0, 0);
				this.rare = 8;
				this.accessory = true;
				this.backSlot = 33;
				return;
			case 5065:
				this.DefaultToStaff(950, 10f, 25, 18);
				this.SetWeaponValues(70, 5f, 0);
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				return;
			case 5066:
				this.DefaultToPlaceableTile(444, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 50));
				return;
			case 5067:
				this.DefaultToPlaceableTile(485, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 50));
				return;
			case 5068:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 241;
				this.defense = 1;
				this.rare = 2;
				this.value = Item.sellPrice(0, 2, 50, 0);
				return;
			case 5069:
				this.mana = 5;
				this.damage = 8;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 951;
				this.buffType = 325;
				this.width = 26;
				this.height = 28;
				this.UseSound = SoundID.Item44;
				this.useAnimation = 36;
				this.useTime = 36;
				this.rare = 3;
				this.noMelee = true;
				this.knockBack = 2f;
				this.value = Item.sellPrice(0, 0, 50, 0);
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			case 5070:
				this.width = 16;
				this.height = 16;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.buyPrice(0, 0, 5, 0);
				this.rare = 1;
				return;
			case 5071:
				this.width = 18;
				this.height = 14;
				this.headSlot = 272;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				this.vanity = true;
				return;
			case 5072:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 242;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				this.vanity = true;
				return;
			case 5073:
				this.width = 18;
				this.height = 14;
				this.legSlot = 228;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				this.vanity = true;
				return;
			case 5074:
				this.DefaultToWhip(952, 27, 2f, 5f, 30);
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 1, 50, 0));
				return;
			case 5075:
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.vanity = true;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 1, 0, 0));
				this.hasVanityEffects = true;
				return;
			case 5076:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.vanity = true;
				this.balloonSlot = 18;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 20, 0, 0));
				this.hasVanityEffects = true;
				return;
			case 5077:
				this.width = 16;
				this.height = 16;
				this.accessory = true;
				this.vanity = true;
				this.shoeSlot = 25;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 20, 0, 0));
				return;
			case 5078:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 243;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				this.vanity = true;
				return;
			case 5079:
				this.width = 18;
				this.height = 14;
				this.legSlot = 230;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				this.vanity = true;
				return;
			case 5080:
				this.width = 16;
				this.height = 16;
				this.accessory = true;
				this.vanity = true;
				this.frontSlot = 11;
				this.backSlot = 34;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				return;
			case 5081:
				this.DefaultToPlaceableTile(623, 0);
				this.SetShopValues(ItemRarityColor.Pink5, Item.buyPrice(0, 10, 0, 0));
				return;
			case 5082:
				this.DefaultToPlaceableTile(623, 1);
				this.SetShopValues(ItemRarityColor.Pink5, Item.buyPrice(0, 10, 0, 0));
				return;
			case 5083:
				this.DefaultToPlaceableTile(623, 2);
				this.SetShopValues(ItemRarityColor.Pink5, Item.buyPrice(0, 10, 0, 0));
				return;
			case 5084:
				this.DefaultToPlaceableTile(623, 3);
				this.SetShopValues(ItemRarityColor.Pink5, Item.buyPrice(0, 10, 0, 0));
				return;
			case 5085:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.placeStyle = 45;
				return;
			case 5086:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 245;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.placeStyle = 13;
				return;
			case 5087:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.placeStyle = 74;
				return;
			case 5088:
				this.DefaultToVanitypet(956, 327);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 25, 0, 0));
				this.value = Item.buyPrice(0, 25, 0, 0);
				return;
			case 5089:
				this.DefaultToVanitypet(957, 328);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 25, 0, 0));
				this.value = Item.buyPrice(0, 25, 0, 0);
				return;
			case 5090:
				this.DefaultToVanitypet(958, 329);
				this.value = Item.buyPrice(0, 25, 0, 0);
				this.rare = -13;
				return;
			case 5091:
				this.DefaultToVanitypet(959, 330);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 5, 0, 0));
				return;
			case 5094:
				this.useStyle = 1;
				this.useTurn = false;
				this.useAnimation = 21;
				this.useTime = 21;
				this.width = 24;
				this.height = 28;
				this.damage = 20;
				this.knockBack = 5.5f;
				this.UseSound = SoundID.Item1;
				this.scale = 1.2f;
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 0, 50, 0));
				this.melee = true;
				return;
			case 5095:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useAnimation = 15;
				this.useTime = 15;
				this.width = 24;
				this.height = 28;
				this.damage = 27;
				this.knockBack = 5f;
				this.UseSound = SoundID.Item1;
				this.scale = 1.2f;
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 1, 50, 0));
				this.melee = true;
				this.axe = 30;
				this.crit = 10;
				return;
			case 5096:
				this.useStyle = 1;
				this.useTurn = true;
				this.autoReuse = true;
				this.useAnimation = 20;
				this.useTime = 20;
				this.width = 24;
				this.height = 28;
				this.damage = 57;
				this.knockBack = 6.5f;
				this.UseSound = SoundID.Item1;
				this.scale = 1.2f;
				this.SetShopValues(ItemRarityColor.LightRed4, Item.sellPrice(0, 1, 0, 0));
				this.melee = true;
				return;
			case 5097:
				this.useStyle = 1;
				this.useTurn = false;
				this.useAnimation = 45;
				this.useTime = 45;
				this.width = 24;
				this.height = 28;
				this.damage = 36;
				this.knockBack = 5.5f;
				this.UseSound = SoundID.Item1;
				this.scale = 1.15f;
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 0, 25, 0));
				this.melee = true;
				return;
			case 5098:
				this.DefaultToVanitypet(960, 331);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 10, 0, 0));
				return;
			case 5099:
				this.width = 18;
				this.height = 14;
				this.headSlot = 273;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 1, 0));
				this.vanity = true;
				return;
			case 5100:
				this.width = 18;
				this.height = 14;
				this.faceSlot = 19;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 2, 0, 0));
				this.accessory = true;
				this.expert = true;
				return;
			case 5101:
				this.width = 28;
				this.height = 20;
				this.headSlot = 275;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				this.vanity = true;
				return;
			case 5102:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 244;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 40, 0));
				this.vanity = true;
				return;
			case 5103:
				this.width = 18;
				this.height = 14;
				this.legSlot = 231;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 40, 0));
				this.vanity = true;
				return;
			case 5104:
			case 5105:
			case 5106:
				this.width = 18;
				this.height = 14;
				this.maxStack = 1;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				this.beardSlot = (sbyte)(2 + (type - 5104));
				this.color = Main.player[Main.myPlayer].hairColor;
				this.accessory = true;
				this.vanity = true;
				return;
			case 5107:
				this.DefaultToAccessory(26, 30);
				this.neckSlot = 11;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 5108:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.rare = 1;
				this.placeStyle = 75;
				return;
			case 5109:
				this.width = 18;
				this.height = 18;
				this.headSlot = 276;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 75, 0);
				this.vanity = true;
				return;
			case 5110:
				this.DefaultToPlaceableTile(617, 27);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
				this.rare = -13;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5111:
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 24;
				this.height = 24;
				this.rare = 3;
				this.expert = true;
				return;
			case 5112:
				this.DefaultToMusicBox(86);
				return;
			case 5113:
				this.DefaultToAccessory(26, 30);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				this.vanity = true;
				this.hasVanityEffects = true;
				return;
			case 5114:
				this.mana = 10;
				this.damage = 6;
				this.useStyle = 4;
				this.shootSpeed = 10f;
				this.shoot = 970;
				this.buffType = 335;
				this.width = 26;
				this.height = 28;
				this.UseSound = SoundID.AbigailSummon;
				this.useAnimation = 36;
				this.useTime = 36;
				this.rare = 3;
				this.noMelee = true;
				this.knockBack = 2f;
				this.value = Item.sellPrice(0, 0, 50, 0);
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			case 5115:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 245;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 40, 0));
				this.vanity = true;
				return;
			case 5116:
				this.width = 18;
				this.height = 14;
				this.legSlot = 232;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 40, 0));
				this.vanity = true;
				return;
			case 5117:
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 1, 50, 0));
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 15;
				this.useTime = 15;
				this.width = 24;
				this.height = 24;
				this.shoot = 968;
				this.UseSound = SoundID.Item61;
				this.useAmmo = AmmoID.Bullet;
				this.damage = 20;
				this.shootSpeed = 14f;
				this.knockBack = 1f;
				this.ranged = true;
				this.noMelee = true;
				return;
			case 5118:
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 1, 50, 0));
				this.useStyle = 5;
				this.useAnimation = 45;
				this.useTime = 45;
				this.width = 24;
				this.height = 24;
				this.shoot = 969;
				this.UseSound = SoundID.Item66;
				this.damage = 13;
				this.shootSpeed = 1f;
				this.knockBack = 1f;
				this.magic = true;
				this.noMelee = true;
				this.mana = 30;
				return;
			case 5119:
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 1, 50, 0));
				this.useStyle = 1;
				this.shootSpeed = 14f;
				this.shoot = 966;
				this.damage = 24;
				this.width = 18;
				this.height = 20;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 30;
				this.useTime = 30;
				this.noMelee = true;
				this.knockBack = 7.5f;
				this.summon = true;
				this.mana = 20;
				this.sentry = true;
				return;
			case 5120:
				this.SetShopValues(ItemRarityColor.Blue1, 0);
				this.useStyle = 4;
				this.width = 22;
				this.height = 14;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5121:
			case 5122:
			case 5123:
			case 5124:
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 20, 0));
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.placeStyle = 46 + (type - 5121);
				return;
			case 5125:
				this.DefaultToMount(51);
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 0, 50, 0));
				return;
			case 5126:
				this.DefaultToAccessory(26, 30);
				this.SetShopValues(ItemRarityColor.LightPurple6, Item.sellPrice(0, 8, 0, 0));
				this.backSlot = 35;
				this.handOnSlot = 23;
				this.handOffSlot = 15;
				return;
			case 5127:
				this.DefaultToPlaceableTile(625, 0);
				this.SetShopValues(ItemRarityColor.Blue1, 0);
				return;
			case 5128:
				this.DefaultToPlaceableTile(627, 0);
				this.SetShopValues(ItemRarityColor.Blue1, 0);
				return;
			case 5129:
				this.SetWeaponValues(15, 5f, 0);
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 0, 35, 0));
				this.useStyle = 1;
				this.useTurn = false;
				this.useAnimation = 17;
				this.useTime = 17;
				this.width = 24;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.scale = 1f;
				this.melee = true;
				return;
			case 5130:
				this.useStyle = 4;
				this.channel = true;
				this.width = 10;
				this.height = 32;
				this.UseSound = SoundID.Item25;
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 8;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.mountType = 52;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 5131:
				this.DefaultToVanitypet(881, 341);
				this.value = Item.buyPrice(0, 25, 0, 0);
				this.rare = -13;
				return;
			case 5132:
				this.DefaultToCapturedCritter(669);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 10, 0));
				this.width = 20;
				this.height = 20;
				this.bait = 10;
				return;
			case 5133:
				this.DefaultToPlaceableTile(629, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5134:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 30;
				this.useTime = 5;
				this.width = 50;
				this.height = 18;
				this.shoot = 145;
				this.useAmmo = AmmoID.Solution;
				this.UseSound = SoundID.Item34;
				this.knockBack = 0.3f;
				this.shootSpeed = 11f;
				this.noMelee = true;
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(2, 0, 0, 0));
				this.rare = 10;
				return;
			case 5135:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 137;
				this.placeStyle = 5;
				this.width = 12;
				this.height = 12;
				this.mech = true;
				this.SetShopValues(ItemRarityColor.LightRed4, Item.sellPrice(0, 0, 60, 0));
				return;
			case 5136:
				this.width = 18;
				this.height = 18;
				this.headSlot = 274;
				this.color = Main.player[Main.myPlayer].skinColor;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 5137:
				this.DefaultToPlaceableTile(630, 0);
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 0, 10, 0));
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5138:
				this.DefaultToPlaceableTile(631, 0);
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 0, 10, 0));
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5139:
				this.DefaultToAccessory(14, 30);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				return;
			case 5140:
			case 5141:
			case 5142:
			case 5143:
			case 5144:
			case 5145:
			case 5146:
				this.DefaultToAccessory(14, 30);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				switch (type)
				{
				case 5140:
					this.glowMask = 318;
					return;
				case 5141:
					this.glowMask = 319;
					return;
				case 5142:
					this.glowMask = 320;
					return;
				case 5143:
					this.glowMask = 321;
					return;
				case 5144:
					this.glowMask = 322;
					return;
				case 5145:
					this.glowMask = 323;
					return;
				case 5146:
					this.glowMask = 324;
					return;
				default:
					return;
				}
				break;
			case 5147:
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 15, 0));
				this.useStyle = 1;
				this.useAnimation = 26;
				this.useTime = 26;
				this.width = 26;
				this.height = 28;
				this.shoot = 979;
				this.UseSound = SoundID.Item8;
				this.damage = 15;
				this.shootSpeed = 7f;
				this.magic = true;
				this.noMelee = true;
				this.mana = 2;
				this.crit = 10;
				if (this.Variant == ItemVariants.StrongerVariant)
				{
					this.value = Item.sellPrice(0, 5, 5, 0);
					this.rare = 4;
					this.damage = 42;
					this.useAnimation = 10;
					this.useTime = 10;
					this.mana = 6;
					this.shootSpeed = 12f;
					this.autoReuse = true;
					return;
				}
				break;
			case 5148:
				this.DefaultToPlaceableTile(90, 40);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5149:
				this.DefaultToPlaceableTile(79, 40);
				this.SetShopValues(ItemRarityColor.White0, 2000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 20;
				return;
			case 5150:
				this.DefaultToPlaceableTile(101, 41);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5151:
				this.DefaultToPlaceableTile(88, 40);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5152:
				this.DefaultToPlaceableTile(100, 40);
				this.SetShopValues(ItemRarityColor.White0, 1500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5153:
				this.DefaultToPlaceableTile(33, 39);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.noWet = true;
				return;
			case 5154:
				this.DefaultToPlaceableTile(15, 45);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 30;
				return;
			case 5155:
				this.DefaultToPlaceableTile(34, 46);
				this.SetShopValues(ItemRarityColor.White0, 3000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 5156:
				this.DefaultToPlaceableTile(467, 14);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 5157:
				this.DefaultToPlaceableTile(104, 41);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5158:
				this.DefaultToPlaceableTile(10, 46);
				this.SetShopValues(ItemRarityColor.White0, 200);
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 5159:
				this.DefaultToPlaceableTile(93, 40);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 10;
				this.height = 24;
				return;
			case 5160:
				this.DefaultToPlaceableTile(42, 46);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 28;
				return;
			case 5161:
				this.DefaultToPlaceableTile(87, 40);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5162:
				this.DefaultToPlaceableTile(19, 45);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 5163:
				this.DefaultToPlaceableTile(172, 41);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5164:
				this.DefaultToPlaceableTile(89, 44);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5165:
				this.DefaultToPlaceableTile(469, 9);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 20;
				return;
			case 5166:
				this.DefaultToPlaceableTile(18, 41);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 14;
				return;
			case 5167:
				this.DefaultToPlaceableTile(468, 14);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 5168:
				this.DefaultToPlaceableTile(497, 40);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 5169:
				this.DefaultToPlaceableTile(90, 41);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5170:
				this.DefaultToPlaceableTile(79, 41);
				this.SetShopValues(ItemRarityColor.White0, 2000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 20;
				return;
			case 5171:
				this.DefaultToPlaceableTile(101, 42);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5172:
				this.DefaultToPlaceableTile(88, 41);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5173:
				this.DefaultToPlaceableTile(100, 41);
				this.SetShopValues(ItemRarityColor.White0, 1500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5174:
				this.DefaultToPlaceableTile(33, 40);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.noWet = true;
				return;
			case 5175:
				this.DefaultToPlaceableTile(15, 46);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 30;
				return;
			case 5176:
				this.DefaultToPlaceableTile(34, 47);
				this.SetShopValues(ItemRarityColor.White0, 3000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 5177:
				this.DefaultToPlaceableTile(467, 15);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 5178:
				this.DefaultToPlaceableTile(104, 42);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5179:
				this.DefaultToPlaceableTile(10, 47);
				this.SetShopValues(ItemRarityColor.White0, 200);
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 5180:
				this.DefaultToPlaceableTile(93, 41);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 10;
				this.height = 24;
				return;
			case 5181:
				this.DefaultToPlaceableTile(42, 47);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 28;
				return;
			case 5182:
				this.DefaultToPlaceableTile(87, 41);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5183:
				this.DefaultToPlaceableTile(19, 46);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 5184:
				this.DefaultToPlaceableTile(172, 42);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5185:
				this.DefaultToPlaceableTile(89, 45);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5186:
				this.DefaultToPlaceableTile(469, 10);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 20;
				return;
			case 5187:
				this.DefaultToPlaceableTile(18, 42);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 14;
				return;
			case 5188:
				this.DefaultToPlaceableTile(468, 15);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 5189:
				this.DefaultToPlaceableTile(497, 41);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 5190:
				this.DefaultToPlaceableTile(90, 42);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5191:
				this.DefaultToPlaceableTile(79, 42);
				this.SetShopValues(ItemRarityColor.White0, 2000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 20;
				return;
			case 5192:
				this.DefaultToPlaceableTile(101, 43);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5193:
				this.DefaultToPlaceableTile(88, 42);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5194:
				this.DefaultToPlaceableTile(100, 42);
				this.SetShopValues(ItemRarityColor.White0, 1500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5195:
				this.DefaultToPlaceableTile(33, 41);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.noWet = true;
				return;
			case 5196:
				this.DefaultToPlaceableTile(15, 47);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 30;
				return;
			case 5197:
				this.DefaultToPlaceableTile(34, 48);
				this.SetShopValues(ItemRarityColor.White0, 3000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 5198:
				this.DefaultToPlaceableTile(467, 16);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 5199:
				this.DefaultToPlaceableTile(104, 43);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5200:
				this.DefaultToPlaceableTile(10, 48);
				this.SetShopValues(ItemRarityColor.White0, 200);
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 5201:
				this.DefaultToPlaceableTile(93, 42);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 10;
				this.height = 24;
				return;
			case 5202:
				this.DefaultToPlaceableTile(42, 48);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 28;
				return;
			case 5203:
				this.DefaultToPlaceableTile(87, 42);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5204:
				this.DefaultToPlaceableTile(19, 47);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 5205:
				this.DefaultToPlaceableTile(172, 43);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5206:
				this.DefaultToPlaceableTile(89, 46);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5207:
				this.DefaultToPlaceableTile(469, 11);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 20;
				return;
			case 5208:
				this.DefaultToPlaceableTile(18, 43);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 14;
				return;
			case 5209:
				this.DefaultToPlaceableTile(468, 16);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 5210:
				this.DefaultToPlaceableTile(497, 42);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 5211:
				this.UseSound = SoundID.Item3;
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 343;
				this.buffTime = 18000;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 0, 2, 0));
				return;
			case 5212:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.noUseGraphic = true;
				this.makeNPC = 671;
				return;
			case 5213:
				this.DefaultToPlaceableTile(632, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5214:
				this.autoReuse = true;
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 633;
				this.width = 14;
				this.height = 14;
				this.value = 150;
				return;
			case 5215:
				this.DefaultToPlaceableTile(635, 0);
				return;
			case 5216:
				this.DefaultToPlaceableWall(316);
				return;
			case 5217:
				this.DefaultToPlaceableWall(317);
				return;
			case 5218:
			case 5219:
			case 5220:
			case 5221:
			case 5222:
			case 5223:
			case 5224:
			case 5225:
			case 5226:
			case 5227:
			case 5228:
			case 5229:
			case 5230:
			case 5231:
			case 5232:
			case 5233:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 76 + (type - 5218);
				if (type == 5231)
				{
					this.value = Item.sellPrice(0, 0, 20, 0);
				}
				if (type == 5228)
				{
					this.value = Item.sellPrice(0, 2, 0, 0);
				}
				if (type == 5222)
				{
					this.value = Item.sellPrice(0, 2, 0, 0);
					return;
				}
				break;
			case 5234:
			case 5235:
			case 5236:
			case 5237:
			case 5238:
			case 5239:
			case 5240:
			case 5241:
			case 5242:
			case 5243:
			case 5244:
			case 5245:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 50 + (type - 5234);
				if (type == 5243)
				{
					this.value = Item.sellPrice(0, 0, 60, 0);
				}
				if (type == 5245)
				{
					this.value = Item.sellPrice(0, 0, 20, 0);
				}
				if (type == 5235)
				{
					this.value = Item.sellPrice(0, 0, 50, 0);
					return;
				}
				break;
			case 5246:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 245;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 14;
				return;
			case 5247:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 245;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 15;
				return;
			case 5248:
			case 5249:
			case 5250:
			case 5251:
			case 5252:
			case 5253:
			case 5254:
			case 5255:
			case 5256:
			case 5257:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 245;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 19 + (type - 5248);
				if (type == 5251)
				{
					this.value = Item.sellPrice(0, 0, 20, 0);
				}
				if (type == 5253)
				{
					this.value = Item.sellPrice(0, 0, 20, 0);
				}
				if (type == 5257)
				{
					this.value = Item.sellPrice(0, 0, 20, 0);
				}
				if (type == 5252)
				{
					this.value = Item.sellPrice(0, 0, 50, 0);
				}
				if (type == 5256)
				{
					this.value = Item.sellPrice(0, 0, 50, 0);
					return;
				}
				break;
			case 5258:
			case 5259:
			case 5260:
			case 5261:
			case 5262:
			case 5263:
			case 5264:
			case 5265:
			case 5266:
			case 5267:
			case 5268:
			case 5269:
			case 5270:
			case 5271:
			case 5272:
			case 5273:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 246;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 21 + (type - 5258);
				if (type == 5266)
				{
					this.value = Item.sellPrice(0, 2, 0, 0);
				}
				if (type == 5259)
				{
					this.value = Item.sellPrice(0, 0, 50, 0);
				}
				if (type == 5265)
				{
					this.value = Item.sellPrice(0, 0, 50, 0);
				}
				if (type == 5264)
				{
					this.value = Item.sellPrice(0, 0, 50, 0);
				}
				if (type == 5263)
				{
					this.value = Item.sellPrice(0, 0, 50, 0);
					return;
				}
				break;
			case 5274:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 62;
				return;
			case 5276:
				this.DefaultToVanitypet(994, 345);
				this.width = 32;
				this.height = 32;
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 1, 0, 0));
				return;
			case 5279:
				this.width = 18;
				this.height = 18;
				this.defense = 2;
				this.headSlot = 278;
				if (this.Variant == ItemVariants.WeakerVariant)
				{
					this.defense = 1;
					return;
				}
				break;
			case 5280:
				this.width = 18;
				this.height = 18;
				this.defense = 3;
				this.bodySlot = 246;
				if (this.Variant == ItemVariants.WeakerVariant)
				{
					this.defense = 1;
					return;
				}
				break;
			case 5281:
				this.width = 18;
				this.height = 18;
				this.defense = 2;
				this.legSlot = 234;
				if (this.Variant == ItemVariants.WeakerVariant)
				{
					this.defense = 1;
					return;
				}
				break;
			case 5282:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 25;
				this.width = 12;
				this.height = 28;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = SoundID.Item5;
				this.damage = 10;
				this.shootSpeed = 6.6f;
				this.noMelee = true;
				this.value = 100;
				this.ranged = true;
				if (this.Variant == ItemVariants.WeakerVariant)
				{
					this.damage = 6;
					this.useAnimation = 29;
					this.useTime = 29;
					return;
				}
				break;
			case 5283:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 30;
				this.useTime = 20;
				this.hammer = 45;
				this.width = 24;
				this.height = 28;
				this.damage = 9;
				this.knockBack = 5.5f;
				this.scale = 1f;
				this.UseSound = SoundID.Item1;
				this.value = 50;
				this.melee = true;
				if (this.Variant == ItemVariants.WeakerVariant)
				{
					this.damage = 4;
					this.hammer = 35;
					return;
				}
				break;
			case 5284:
				this.useStyle = 1;
				this.useTurn = false;
				this.useAnimation = 17;
				this.useTime = 17;
				this.width = 24;
				this.height = 28;
				this.damage = 13;
				this.knockBack = 5f;
				this.UseSound = SoundID.Item1;
				this.scale = 1f;
				this.value = Item.sellPrice(0, 0, 0, 20);
				this.melee = true;
				if (this.Variant == ItemVariants.WeakerVariant)
				{
					this.damage = 8;
					this.useAnimation = 23;
					this.useTime = 23;
					return;
				}
				break;
			case 5285:
				this.DefaultToThrownWeapon(996, 20, 8f, false);
				this.UseSound = SoundID.Item106;
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 3, 0, 0));
				this.width = 18;
				this.height = 18;
				return;
			case 5286:
				this.DefaultToPlaceableTile(12, 0);
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 7, 50, 0));
				return;
			case 5287:
				this.DefaultToPlaceableTile(639, 0);
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 0, 25, 0));
				return;
			case 5288:
				this.DefaultToMount(53);
				this.SetShopValues(ItemRarityColor.Yellow8, Item.buyPrice(0, 5, 0, 0));
				return;
			case 5289:
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 2, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 18;
				this.height = 18;
				this.useStyle = 4;
				this.useTime = 30;
				this.UseSound = SoundID.Item4;
				this.useAnimation = 30;
				this.expert = true;
				return;
			case 5290:
				this.width = 28;
				this.height = 20;
				this.headSlot = 279;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				this.vanity = true;
				return;
			case 5291:
				this.DefaultToPlaceableWall(318);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 0, 50));
				return;
			case 5292:
				this.DefaultToPlaceableTile(19, 48);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 1, 0));
				this.width = 8;
				this.height = 10;
				return;
			case 5293:
				this.DefaultToTorch(22, false);
				return;
			case 5294:
				this.useStyle = 5;
				this.width = 24;
				this.height = 24;
				this.noUseGraphic = true;
				this.UseSound = SoundID.Item1;
				this.melee = true;
				this.channel = true;
				this.noMelee = true;
				this.shoot = 999;
				this.useAnimation = 25;
				this.useTime = 25;
				this.shootSpeed = 10f;
				this.knockBack = 3.75f;
				this.damage = 24;
				this.value = Item.sellPrice(0, 0, 70, 0);
				this.rare = 3;
				return;
			case 5295:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useAnimation = 24;
				this.useTime = 12;
				this.width = 24;
				this.height = 28;
				this.damage = 20;
				this.knockBack = 5f;
				this.UseSound = SoundID.Item1;
				this.scale = 1f;
				this.SetShopValues(ItemRarityColor.LightRed4, Item.sellPrice(0, 1, 50, 0));
				this.melee = true;
				this.axe = 30;
				this.createTile = 2;
				return;
			case 5296:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 642;
				this.width = 26;
				this.height = 20;
				this.rare = 7;
				this.value = 100000;
				return;
			case 5297:
				this.DefaultToVanitypet(998, 349);
				this.width = 32;
				this.height = 32;
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 25, 0, 0));
				return;
			case 5298:
				this.noMelee = true;
				this.useStyle = 1;
				this.shootSpeed = 11.5f;
				this.shoot = 1000;
				this.damage = 21;
				this.knockBack = 4.5f;
				this.width = 14;
				this.height = 28;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.noUseGraphic = true;
				this.SetShopValues(ItemRarityColor.Orange3, Item.sellPrice(0, 2, 0, 0));
				this.melee = true;
				this.autoReuse = true;
				return;
			case 5299:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 215;
				this.placeStyle = 14;
				this.width = 12;
				this.height = 12;
				return;
			case 5300:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.noUseGraphic = true;
				this.makeNPC = 672;
				return;
			case 5301:
				this.DefaultToPlaceableTile(640, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5302:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 12;
				this.useTime = 5;
				this.width = 20;
				this.height = 20;
				this.autoReuse = true;
				this.rare = 7;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.tileBoost += 2;
				return;
			case 5303:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 12;
				this.useTime = 5;
				this.width = 20;
				this.height = 20;
				this.autoReuse = true;
				this.rare = 7;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.tileBoost += 2;
				return;
			case 5304:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 8;
				this.useTime = 3;
				this.width = 20;
				this.height = 20;
				this.autoReuse = true;
				this.rare = 8;
				this.value = Item.sellPrice(0, 30, 0, 0);
				this.tileBoost += 3;
				return;
			case 5305:
				this.width = 18;
				this.height = 18;
				this.headSlot = 277;
				this.color = Main.player[Main.myPlayer].skinColor;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 5306:
				this.DefaultToPlaceableTile(641, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 0, 20));
				return;
			case 5307:
				this.DefaultToPlaceableWall(319);
				return;
			case 5308:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 63;
				return;
			case 5309:
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
				this.width = 30;
				this.height = 30;
				return;
			case 5310:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.placeStyle = 64;
				return;
			case 5311:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.noUseGraphic = true;
				this.makeNPC = 673;
				return;
			case 5312:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.noUseGraphic = true;
				this.makeNPC = 674;
				return;
			case 5313:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.noUseGraphic = true;
				this.makeNPC = 675;
				return;
			case 5314:
				this.DefaultToPlaceableTile(643, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5315:
				this.DefaultToPlaceableTile(644, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5316:
				this.DefaultToPlaceableTile(645, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5317:
				this.DefaultToPlaceableTile(105, 80);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 60));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5318:
				this.DefaultToPlaceableTile(105, 81);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 60));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5319:
				this.DefaultToPlaceableTile(105, 82);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 60));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5320:
				this.DefaultToPlaceableTile(13, 1);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 60));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5321:
				this.DefaultToPlaceableTile(13, 2);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 20));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5322:
				this.DefaultToPlaceableTile(646, 0);
				this.SetShopValues(ItemRarityColor.Blue1, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.holdStyle = 1;
				this.noWet = true;
				this.flame = true;
				return;
			case 5323:
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 10, 0, 0));
				this.width = 30;
				this.height = 30;
				return;
			case 5324:
			case 5329:
			case 5330:
				this.DefaultToPlaceableTile(647, 0);
				this.maxStack = 1;
				this.SetShopValues(ItemRarityColor.StrongRed10, Item.sellPrice(0, 5, 0, 0));
				this.consumable = false;
				this.tileBoost = 3;
				return;
			case 5326:
				this.DefaultToFood(22, 22, 0, 0, false, 17);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 10, 0, 0));
				this.maxStack = 1;
				return;
			case 5327:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 654;
				this.width = 28;
				this.height = 14;
				return;
			case 5328:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 8;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				return;
			case 5331:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.balloonSlot = 19;
				this.SetShopValues(ItemRarityColor.Yellow8, Item.sellPrice(0, 4, 0, 0));
				this.hasVanityEffects = true;
				return;
			case 5332:
				this.DefaultToVanitypet(1003, 351);
				this.width = 32;
				this.height = 32;
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 10, 0, 0));
				return;
			case 5333:
				this.DefaultToVanitypet(1004, 352);
				this.width = 32;
				this.height = 32;
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 10, 0, 0));
				return;
			case 5334:
				this.width = 22;
				this.height = 14;
				if (this.Variant == ItemVariants.EnabledVariant)
				{
					this.useStyle = 4;
					this.consumable = true;
					this.useAnimation = 45;
					this.useTime = 45;
				}
				this.maxStack = Item.CommonMaxStack;
				this.rare = 3;
				return;
			case 5335:
				this.autoReuse = false;
				this.useStyle = 1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.width = 20;
				this.height = 20;
				this.UseSound = SoundID.Item8;
				this.SetShopValues(ItemRarityColor.StrongRed10, Item.sellPrice(0, 10, 0, 0));
				return;
			case 5336:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = SoundID.Item92;
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.LightPurple6, 0);
				return;
			case 5337:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = SoundID.Item92;
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.LightPurple6, Item.sellPrice(0, 1, 50, 0));
				return;
			case 5338:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = SoundID.Item92;
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.LightPurple6, Item.sellPrice(0, 2, 0, 0));
				return;
			case 5339:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = SoundID.Item92;
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.LightPurple6, Item.sellPrice(0, 0, 25, 0));
				return;
			case 5340:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = SoundID.Item92;
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.LightPurple6, Item.sellPrice(0, 15, 0, 0));
				return;
			case 5341:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = SoundID.Item92;
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.LightPurple6, Item.sellPrice(0, 10, 0, 0));
				return;
			case 5342:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = SoundID.Item92;
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.LightPurple6, Item.sellPrice(0, 0, 50, 0));
				return;
			case 5343:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = SoundID.Item92;
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.LightPurple6, Item.sellPrice(0, 0, 25, 0));
				return;
			case 5344:
				this.paintCoating = 2;
				this.width = 24;
				this.height = 24;
				this.value = Item.buyPrice(0, 0, 2, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5345:
				this.DefaultToPlaceableTile(657, 0);
				this.width = 22;
				this.height = 32;
				this.rare = 9;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.accessory = true;
				this.vanity = true;
				return;
			case 5346:
				this.width = 18;
				this.height = 18;
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 0, 30, 0));
				return;
			case 5347:
				this.DefaultToPlaceableTile(658, 0);
				this.width = 22;
				this.height = 32;
				this.rare = 9;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.accessory = true;
				this.vanity = true;
				return;
			case 5348:
				this.shootSpeed = 3f;
				this.shoot = 1006;
				this.damage = 12;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 2f;
				this.ranged = true;
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 0, 0, 10));
				return;
			case 5349:
				this.DefaultToPlaceableTile(659, 0);
				this.rare = 1;
				return;
			case 5350:
				this.DefaultToCapturedCritter(677);
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 0, 2, 50));
				this.width = 12;
				this.height = 12;
				return;
			case 5351:
				this.DefaultToPlaceableTile(660, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5352:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 310;
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				this.rare = 1;
				return;
			case 5353:
				this.DefaultToTorch(23, false);
				return;
			case 5354:
				this.DefaultToAccessory(28, 32);
				this.faceSlot = 20;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 2, 0, 0));
				return;
			case 5355:
				this.DefaultToAccessory(26, 36);
				this.backSlot = 36;
				this.frontSlot = 12;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 2, 0, 0));
				return;
			case 5356:
				this.width = 18;
				this.height = 18;
				this.SetShopValues(ItemRarityColor.TrashMinus1, 0);
				return;
			case 5357:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 215;
				this.placeStyle = 15;
				this.width = 12;
				this.height = 12;
				return;
			case 5358:
			case 5437:
				this.useTurn = true;
				this.width = 20;
				this.height = 20;
				this.useStyle = 4;
				this.useTime = 90;
				this.UseSound = SoundID.Item6;
				this.useAnimation = 90;
				this.SetShopValues(ItemRarityColor.Yellow8, Item.sellPrice(0, 10, 0, 0));
				return;
			case 5359:
				this.useTurn = true;
				this.width = 20;
				this.height = 20;
				this.useStyle = 4;
				this.useTime = 90;
				this.UseSound = SoundID.Item6;
				this.useAnimation = 90;
				this.SetShopValues(ItemRarityColor.Yellow8, Item.sellPrice(0, 10, 0, 0));
				return;
			case 5360:
				this.useTurn = true;
				this.width = 20;
				this.height = 20;
				this.useStyle = 4;
				this.useTime = 90;
				this.UseSound = SoundID.Item6;
				this.useAnimation = 90;
				this.SetShopValues(ItemRarityColor.Yellow8, Item.sellPrice(0, 10, 0, 0));
				return;
			case 5361:
				this.useTurn = true;
				this.width = 20;
				this.height = 20;
				this.useStyle = 4;
				this.useTime = 90;
				this.UseSound = SoundID.Item6;
				this.useAnimation = 90;
				this.SetShopValues(ItemRarityColor.Yellow8, Item.sellPrice(0, 10, 0, 0));
				return;
			case 5362:
				this.DefaultToMusicBox(87);
				return;
			case 5363:
				this.DefaultToPlaceableWall(62);
				return;
			case 5364:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 12;
				this.useTime = 5;
				this.width = 20;
				this.height = 20;
				this.autoReuse = true;
				this.rare = 10;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.tileBoost += 2;
				return;
			case 5365:
				this.DefaultToPlaceableWall(7);
				return;
			case 5366:
				this.DefaultToPlaceableWall(94);
				return;
			case 5367:
				this.DefaultToPlaceableWall(95);
				return;
			case 5368:
				this.DefaultToPlaceableWall(9);
				return;
			case 5369:
				this.DefaultToPlaceableWall(96);
				return;
			case 5370:
				this.DefaultToPlaceableWall(97);
				return;
			case 5371:
				this.DefaultToPlaceableWall(8);
				return;
			case 5372:
				this.DefaultToPlaceableWall(98);
				return;
			case 5373:
				this.DefaultToPlaceableWall(99);
				return;
			case 5374:
				this.DefaultToPlaceableWall(187);
				return;
			case 5375:
				this.DefaultToPlaceableWall(216);
				return;
			case 5376:
				this.DefaultToPlaceableWall(87);
				return;
			case 5377:
				this.shootSpeed = 6f;
				this.shoot = 1008;
				this.damage = 1;
				this.width = 12;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Flare;
				this.knockBack = 1.5f;
				this.rare = 1;
				this.value = Item.buyPrice(0, 0, 1, 50);
				this.ranged = true;
				return;
			case 5378:
				this.shootSpeed = 6f;
				this.shoot = 1009;
				this.damage = 1;
				this.width = 12;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Flare;
				this.knockBack = 1.5f;
				this.value = 7;
				this.ranged = true;
				return;
			case 5379:
				this.shootSpeed = 6f;
				this.shoot = 1010;
				this.damage = 1;
				this.width = 12;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Flare;
				this.knockBack = 1.5f;
				this.value = 7;
				this.ranged = true;
				return;
			case 5380:
				this.shootSpeed = 6f;
				this.shoot = 1011;
				this.damage = 1;
				this.width = 12;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Flare;
				this.knockBack = 1.5f;
				this.value = 7;
				this.ranged = true;
				return;
			case 5381:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 663;
				this.width = 18;
				this.height = 34;
				this.SetShopValues(ItemRarityColor.Lime7, Item.sellPrice(0, 3, 0, 0));
				return;
			case 5382:
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 3, 0, 0));
				this.autoReuse = true;
				this.UseSound = SoundID.Item1;
				this.useStyle = 1;
				this.damage = 50;
				this.useAnimation = 23;
				this.useTime = 23;
				this.width = 30;
				this.height = 30;
				this.shoot = 1012;
				this.shootSpeed = 11f;
				this.knockBack = 4.75f;
				this.melee = true;
				this.shootsEveryUse = true;
				return;
			case 5383:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 664;
				this.width = 18;
				this.height = 18;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 0, 0, 15));
				return;
			case 5384:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 665;
				this.width = 18;
				this.height = 18;
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 7, 50, 0));
				return;
			case 5385:
				this.width = 28;
				this.height = 20;
				this.headSlot = 280;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				this.vanity = true;
				return;
			case 5386:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 247;
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 1, 0, 0));
				this.vanity = true;
				return;
			case 5387:
				this.width = 18;
				this.height = 14;
				this.legSlot = 235;
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 1, 0, 0));
				this.vanity = true;
				return;
			case 5388:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 92;
				return;
			case 5389:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 65;
				return;
			case 5390:
				this.width = 28;
				this.height = 20;
				this.headSlot = 281;
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 1, 0, 0));
				this.vanity = true;
				return;
			case 5391:
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
				this.width = 30;
				this.height = 30;
				return;
			case 5392:
				this.DefaultToSolution(1015);
				return;
			case 5393:
				this.DefaultToSolution(1016);
				return;
			case 5394:
				this.DefaultToSolution(1017);
				return;
			case 5395:
				this.DefaultToPlaceableTile(666, 0);
				return;
			case 5396:
				this.DefaultToPlaceableWall(320);
				return;
			case 5397:
				this.DefaultToPlaceableWall(321);
				return;
			case 5398:
				this.DefaultToPlaceableTile(667, 0);
				this.rare = 1;
				return;
			case 5399:
				this.DefaultToPlaceableWall(322);
				return;
			case 5400:
				this.DefaultToVanitypet(1018, 354);
				this.width = 16;
				this.height = 16;
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 10, 0));
				return;
			case 5401:
				this.DefaultToPlaceableTile(669, 0);
				this.rare = 9;
				return;
			case 5402:
				this.DefaultToPlaceableTile(670, 0);
				this.rare = 9;
				return;
			case 5403:
				this.DefaultToPlaceableTile(671, 0);
				this.rare = 9;
				return;
			case 5404:
				this.DefaultToPlaceableTile(672, 0);
				this.rare = 9;
				return;
			case 5405:
				this.DefaultToPlaceableTile(673, 0);
				this.rare = 9;
				return;
			case 5406:
				this.DefaultToPlaceableTile(674, 0);
				this.rare = 9;
				return;
			case 5407:
				this.DefaultToPlaceableTile(675, 0);
				this.rare = 9;
				return;
			case 5408:
				this.DefaultToPlaceableTile(676, 0);
				this.rare = 9;
				return;
			case 5409:
				this.DefaultToPlaceableWall(323);
				this.rare = 9;
				return;
			case 5410:
				this.DefaultToPlaceableWall(324);
				this.rare = 9;
				return;
			case 5411:
				this.DefaultToPlaceableWall(325);
				this.rare = 9;
				return;
			case 5412:
				this.DefaultToPlaceableWall(326);
				this.rare = 9;
				return;
			case 5413:
				this.DefaultToPlaceableWall(327);
				this.rare = 9;
				return;
			case 5414:
				this.DefaultToPlaceableWall(328);
				this.rare = 9;
				return;
			case 5415:
				this.DefaultToPlaceableWall(329);
				this.rare = 9;
				return;
			case 5416:
				this.DefaultToPlaceableWall(330);
				this.rare = 9;
				return;
			case 5417:
				this.DefaultToPlaceableTile(677, 0);
				return;
			case 5418:
				this.DefaultToPlaceableWall(331);
				return;
			case 5419:
				this.DefaultToPlaceableTile(678, 0);
				return;
			case 5420:
				this.DefaultToPlaceableWall(332);
				return;
			case 5421:
				this.DefaultToPlaceableTile(679, 0);
				return;
			case 5422:
				this.DefaultToPlaceableWall(333);
				return;
			case 5423:
				this.DefaultToPlaceableTile(680, 0);
				return;
			case 5424:
				this.DefaultToPlaceableWall(334);
				return;
			case 5425:
				this.DefaultToPlaceableTile(681, 0);
				return;
			case 5426:
				this.DefaultToPlaceableWall(335);
				return;
			case 5427:
				this.DefaultToPlaceableTile(682, 0);
				return;
			case 5428:
				this.DefaultToPlaceableWall(336);
				return;
			case 5429:
				this.DefaultToPlaceableTile(685, 0);
				return;
			case 5430:
				this.DefaultToPlaceableWall(339);
				return;
			case 5431:
				this.DefaultToPlaceableTile(686, 0);
				return;
			case 5432:
				this.DefaultToPlaceableWall(340);
				return;
			case 5433:
				this.DefaultToPlaceableTile(683, 0);
				return;
			case 5434:
				this.DefaultToPlaceableWall(337);
				return;
			case 5435:
				this.DefaultToPlaceableTile(684, 0);
				return;
			case 5436:
				this.DefaultToPlaceableWall(338);
				return;
			case 5438:
				this.useStyle = 1;
				this.shootSpeed = 3f;
				this.shoot = 1019;
				this.width = 16;
				this.height = 24;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = SoundID.Item1;
				this.useAnimation = 15;
				this.value = Item.sellPrice(0, 0, 0, 10);
				this.useTime = 15;
				this.noMelee = true;
				return;
			case 5439:
				this.DefaultToPlaceableTile(687, 0);
				return;
			case 5440:
				this.DefaultToPlaceableTile(688, 0);
				return;
			case 5441:
				this.DefaultToPlaceableTile(689, 0);
				return;
			case 5442:
				this.DefaultToPlaceableTile(690, 0);
				return;
			case 5443:
				this.DefaultToPlaceableTile(691, 0);
				return;
			case 5444:
				this.DefaultToPlaceableTile(692, 0);
				return;
			case 5445:
				this.DefaultToPlaceableWall(341);
				return;
			case 5446:
				this.DefaultToPlaceableWall(342);
				return;
			case 5447:
				this.DefaultToPlaceableWall(343);
				return;
			case 5448:
				this.DefaultToPlaceableWall(344);
				return;
			case 5449:
				this.DefaultToPlaceableWall(345);
				return;
			case 5450:
				this.DefaultToPlaceableWall(346);
				return;
			case 5451:
				this.useStyle = 1;
				this.autoReuse = false;
				this.useAnimation = 32;
				this.holdStyle = 7;
				this.useTime = 32;
				this.width = 32;
				this.height = 20;
				this.noUseGraphic = true;
				this.shoot = 1020;
				this.UseSound = SoundID.Item1;
				this.shootSpeed = 9f;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.rare = 3;
				return;
			case 5452:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 3;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.faceSlot = 21;
				return;
			case 5453:
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
				this.width = 30;
				this.height = 30;
				return;
			case 5454:
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
				this.width = 30;
				this.height = 30;
				return;
			case 5455:
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 10, 0, 0));
				this.width = 30;
				this.height = 30;
				break;
			default:
				return;
			}
		}

		// Token: 0x06000615 RID: 1557 RVA: 0x002B7CD4 File Offset: 0x002B5ED4
		public void DefaultToSolution(int projectileId)
		{
			this.shoot = projectileId - 145;
			this.ammo = AmmoID.Solution;
			this.width = 10;
			this.height = 12;
			this.value = Item.buyPrice(0, 0, 15, 0);
			this.rare = 3;
			this.maxStack = Item.CommonMaxStack;
			this.consumable = true;
		}

		// Token: 0x06000616 RID: 1558 RVA: 0x002B7D34 File Offset: 0x002B5F34
		public void DefaultToWhip(int projectileId, int dmg, float kb, float shootspeed, int animationTotalTime = 30)
		{
			this.autoReuse = false;
			this.useStyle = 1;
			this.useAnimation = animationTotalTime;
			this.useTime = animationTotalTime;
			this.width = 18;
			this.height = 18;
			this.shoot = projectileId;
			this.UseSound = SoundID.Item152;
			this.noMelee = true;
			this.summon = true;
			this.noUseGraphic = true;
			this.damage = dmg;
			this.knockBack = kb;
			this.shootSpeed = shootspeed;
		}

		// Token: 0x06000617 RID: 1559 RVA: 0x002B7DAC File Offset: 0x002B5FAC
		public void DefaultTokite(int projId)
		{
			this.width = 20;
			this.height = 28;
			this.DefaultToThrownWeapon(projId, 30, 2f, false);
			this.consumable = false;
			this.ranged = false;
			this.noUseGraphic = true;
			this.maxStack = 1;
			this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
		}

		// Token: 0x06000618 RID: 1560 RVA: 0x002B7E04 File Offset: 0x002B6004
		public void ChangeItemType(int to)
		{
			bool flag = this.favorited;
			this.SetDefaults(to);
			this.favorited = flag;
		}

		// Token: 0x06000619 RID: 1561 RVA: 0x002B7E28 File Offset: 0x002B6028
		public void DefaultToVanitypet(int projId, int buffID)
		{
			this.damage = 0;
			this.useStyle = 1;
			this.width = 16;
			this.height = 30;
			this.UseSound = SoundID.Item2;
			this.useAnimation = 20;
			this.useTime = 20;
			this.rare = 3;
			this.noMelee = true;
			this.value = Item.sellPrice(0, 2, 0, 0);
			this.buffType = buffID;
			this.shoot = projId;
		}

		// Token: 0x170000D0 RID: 208
		// (get) Token: 0x0600061A RID: 1562 RVA: 0x002B7E9C File Offset: 0x002B609C
		public bool IsACoin
		{
			get
			{
				int num = this.type;
				return num - 71 <= 3;
			}
		}

		// Token: 0x0600061B RID: 1563 RVA: 0x002B7EBC File Offset: 0x002B60BC
		public static bool IsAGolfingItem(Item item)
		{
			if (ProjectileID.Sets.IsAGolfBall[item.shoot])
			{
				return true;
			}
			int num = item.type;
			return num == 4039 || num - 4092 <= 3 || num - 4587 <= 11;
		}

		// Token: 0x0600061C RID: 1564 RVA: 0x002B7F00 File Offset: 0x002B6100
		private void DefaultToSeaShell()
		{
			this.useStyle = 1;
			this.autoReuse = true;
			this.useAnimation = 15;
			this.useTime = 10;
			this.maxStack = Item.CommonMaxStack;
			this.consumable = true;
			this.createTile = 324;
			this.width = 22;
			this.height = 22;
			int num = this.type;
			if (num == 2626)
			{
				this.placeStyle = 1;
				this.value = Item.sellPrice(0, 0, 10, 0);
				return;
			}
			switch (num)
			{
			case 4071:
				this.placeStyle = 4;
				this.value = Item.sellPrice(0, 1, 0, 0);
				return;
			case 4072:
				this.placeStyle = 2;
				this.value = Item.sellPrice(0, 0, 20, 0);
				return;
			case 4073:
				this.placeStyle = 3;
				this.value = Item.sellPrice(0, 0, 20, 0);
				return;
			default:
				this.value = Item.sellPrice(0, 0, 5, 0);
				return;
			}
		}

		// Token: 0x0600061D RID: 1565 RVA: 0x002B7FF0 File Offset: 0x002B61F0
		public void DefaultToCapturedCritter(short npcIdToSpawnOnUse)
		{
			this.useStyle = 1;
			this.autoReuse = true;
			this.useTurn = true;
			this.useAnimation = 15;
			this.useTime = 10;
			this.maxStack = Item.CommonMaxStack;
			this.consumable = true;
			this.width = 12;
			this.height = 12;
			this.noUseGraphic = true;
			this.makeNPC = npcIdToSpawnOnUse;
		}

		// Token: 0x0600061E RID: 1566 RVA: 0x002B8052 File Offset: 0x002B6252
		public void DefaultToStaff(int projType, float pushForwardSpeed, int singleShotTime, int manaPerShot)
		{
			this.DefaultToMagicWeapon(projType, singleShotTime, pushForwardSpeed, true);
			this.mana = manaPerShot;
			this.width = 40;
			this.height = 40;
			this.UseSound = SoundID.Item43;
		}

		// Token: 0x0600061F RID: 1567 RVA: 0x002B8084 File Offset: 0x002B6284
		public void DefaultToSpear(int projType, float pushForwardSpeed, int animationTime)
		{
			this.useStyle = 5;
			this.useAnimation = 31;
			this.useTime = 31;
			this.shootSpeed = pushForwardSpeed;
			this.width = 32;
			this.height = 32;
			this.UseSound = SoundID.Item1;
			this.shoot = projType;
			this.noMelee = true;
			this.noUseGraphic = true;
			this.melee = true;
			this.useTime = animationTime;
			this.useAnimation = animationTime;
		}

		// Token: 0x06000620 RID: 1568 RVA: 0x002B80F8 File Offset: 0x002B62F8
		private void SetFoodDefaults(int type)
		{
			if (type <= 3195)
			{
				if (type <= 1911)
				{
					if (type <= 967)
					{
						if (type != 353)
						{
							if (type != 357)
							{
								if (type == 967)
								{
									this.DefaultToFood(12, 12, 26, 3600, false, 17);
									this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 1, 0));
									this.useStyle = 9;
								}
							}
							else
							{
								this.DefaultToFood(22, 22, 206, 28800, true, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							}
						}
						else
						{
							this.DefaultToFood(22, 22, 25, 7200, true, 17);
							this.SetShopValues(ItemRarityColor.White0, 100);
							this.maxStack = Item.CommonMaxStack;
							this.holdStyle = 1;
							this.ammo = 353;
							this.notAmmo = true;
						}
					}
					else if (type != 969)
					{
						if (type != 1787)
						{
							if (type == 1911)
							{
								this.DefaultToFood(22, 22, 207, 14400, true, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 10, 0));
							}
						}
						else
						{
							this.DefaultToFood(22, 22, 206, 28800, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 10, 0));
						}
					}
					else
					{
						this.DefaultToFood(12, 12, 26, 36000, false, 17);
						this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 2, 0));
						this.useStyle = 9;
					}
				}
				else if (type <= 1920)
				{
					if (type != 1912)
					{
						if (type != 1919)
						{
							if (type == 1920)
							{
								this.DefaultToFood(22, 22, 207, 14400, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 25, 0));
							}
						}
						else
						{
							this.DefaultToFood(22, 22, 207, 14400, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 25, 0));
						}
					}
					else
					{
						this.DefaultToHealingPotion(22, 22, 80, 17);
						this.SetShopValues(ItemRarityColor.Blue1, 40);
					}
				}
				else
				{
					switch (type)
					{
					case 2266:
						this.DefaultToFood(22, 22, 25, 14400, true, 17);
						this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 5, 0));
						break;
					case 2267:
						this.DefaultToFood(22, 22, 206, 28800, false, 17);
						this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 55, 0));
						break;
					case 2268:
						this.DefaultToFood(22, 22, 206, 36000, true, 17);
						this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 75, 0));
						break;
					default:
						switch (type)
						{
						case 2425:
							this.DefaultToFood(22, 22, 26, 28800, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 25, 0));
							break;
						case 2426:
							this.DefaultToFood(22, 22, 206, 36000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 75, 0));
							break;
						case 2427:
							this.DefaultToFood(22, 22, 206, 28800, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 25, 0));
							break;
						default:
							if (type == 3195)
							{
								this.DefaultToFood(22, 22, 206, 50400, true, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							}
							break;
						}
						break;
					}
				}
			}
			else if (type <= 4625)
			{
				if (type <= 4297)
				{
					if (type != 3532)
					{
						switch (type)
						{
						case 4009:
							this.DefaultToFood(22, 22, 26, 18000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4010:
							break;
						case 4011:
							this.DefaultToFood(22, 22, 207, 57600, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
							break;
						case 4012:
							this.DefaultToFood(22, 22, 206, 36000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4013:
							this.DefaultToFood(22, 22, 207, 86400, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
							break;
						case 4014:
							this.DefaultToFood(22, 22, 26, 36000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4015:
							this.DefaultToFood(22, 22, 207, 28800, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4016:
							this.DefaultToFood(22, 22, 206, 50400, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4017:
							this.DefaultToFood(22, 22, 206, 72000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
							break;
						case 4018:
							this.DefaultToFood(22, 22, 206, 57600, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4019:
							this.DefaultToFood(22, 22, 206, 36000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4020:
							this.DefaultToFood(22, 22, 206, 50400, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4021:
							this.DefaultToFood(22, 22, 206, 36000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4022:
							this.DefaultToFood(22, 22, 207, 172800, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 50, 0, 0));
							break;
						case 4023:
							this.DefaultToFood(22, 22, 206, 57600, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4024:
							this.DefaultToFood(22, 22, 26, 36000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4025:
							this.DefaultToFood(22, 22, 207, 43200, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
							break;
						case 4026:
							this.DefaultToFood(22, 22, 206, 50400, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4027:
							this.DefaultToFood(22, 22, 207, 57600, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
							break;
						case 4028:
							this.DefaultToFood(22, 22, 206, 57600, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4029:
							this.DefaultToFood(22, 22, 207, 28800, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4030:
							this.DefaultToFood(22, 22, 26, 90000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 50, 0));
							break;
						case 4031:
							this.DefaultToFood(22, 22, 26, 36000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4032:
							this.DefaultToFood(22, 22, 206, 36000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4033:
							this.DefaultToFood(22, 22, 26, 36000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 50, 0));
							break;
						case 4034:
							this.DefaultToFood(22, 22, 206, 50400, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 50, 0));
							break;
						case 4035:
							this.DefaultToFood(22, 22, 206, 64800, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 50, 0));
							break;
						case 4036:
							this.DefaultToFood(22, 22, 207, 28800, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4037:
							this.DefaultToFood(22, 22, 207, 57600, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
							break;
						default:
							switch (type)
							{
							case 4282:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4283:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4284:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4285:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4286:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4287:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4288:
								this.DefaultToFood(22, 22, 206, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4289:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4290:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4291:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4292:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4293:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4294:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4295:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4296:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4297:
								this.DefaultToFood(22, 22, 206, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							}
							break;
						}
					}
					else
					{
						this.DefaultToFood(22, 22, 207, 86400, false, 17);
						this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
					}
				}
				else if (type != 4403)
				{
					if (type != 4411)
					{
						switch (type)
						{
						case 4614:
							this.DefaultToFood(22, 22, 26, 36000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4615:
							this.DefaultToFood(22, 22, 207, 57600, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 4, 0, 0));
							break;
						case 4616:
							this.DefaultToFood(22, 22, 26, 36000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4617:
							this.DefaultToFood(22, 22, 26, 54000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4618:
							this.DefaultToFood(22, 22, 26, 36000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4619:
							this.DefaultToFood(22, 22, 26, 72000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4620:
							this.DefaultToFood(22, 22, 26, 72000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4621:
							this.DefaultToFood(22, 22, 26, 72000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4622:
							this.DefaultToFood(22, 22, 26, 72000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4623:
							this.DefaultToFood(22, 22, 206, 72000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4624:
							this.DefaultToFood(22, 22, 26, 54000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4625:
							this.DefaultToFood(22, 22, 26, 90000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
							break;
						}
					}
					else
					{
						this.DefaultToFood(22, 22, 26, 36000, false, 17);
						this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
					}
				}
				else
				{
					this.DefaultToFood(22, 22, 206, 36000, false, 17);
					this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
				}
			}
			else if (type <= 5042)
			{
				if (type != 5009)
				{
					if (type != 5041)
					{
						if (type == 5042)
						{
							this.DefaultToFood(22, 22, 206, 36000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
						}
					}
					else
					{
						this.DefaultToFood(22, 22, 26, 72000, true, 17);
						this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
					}
				}
				else
				{
					this.DefaultToFood(22, 22, 26, 18000, true, 17);
					this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 0, 20));
				}
			}
			else if (type != 5092)
			{
				if (type != 5093)
				{
					switch (type)
					{
					case 5275:
						this.DefaultToFood(22, 22, 26, 7200, true, 17);
						this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 1, 25));
						break;
					case 5277:
						this.DefaultToFood(22, 22, 26, 18000, false, 17);
						this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
						break;
					case 5278:
						this.DefaultToFood(22, 22, 26, 18000, false, 17);
						this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
						break;
					}
				}
				else
				{
					this.DefaultToFood(22, 22, 206, 21600, false, 17);
					this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
				}
			}
			else
			{
				this.DefaultToFood(22, 22, 206, 28800, false, 17);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 50, 0));
			}
			float num = 0f;
			if (this.buffType == 207)
			{
				num += 12f;
			}
			else if (this.buffType == 206)
			{
				num += 8f;
			}
			else
			{
				num += 3f;
			}
			num += (float)(this.buffTime / 14400);
			this.rare = (int)(num / 4f);
		}

		// Token: 0x06000621 RID: 1569 RVA: 0x002B91CE File Offset: 0x002B73CE
		public void DefaultToMount(int mount)
		{
			this.width = 36;
			this.height = 26;
			this.mountType = mount;
		}

		// Token: 0x06000622 RID: 1570 RVA: 0x002B91E8 File Offset: 0x002B73E8
		public void DefaultToPlaceableWall(ushort wallToPlace)
		{
			this.useStyle = 1;
			this.useTurn = true;
			this.useAnimation = 15;
			this.useTime = 7;
			this.autoReuse = true;
			this.maxStack = Item.CommonMaxStack;
			this.consumable = true;
			this.createWall = (int)wallToPlace;
			this.width = 12;
			this.height = 12;
		}

		// Token: 0x06000623 RID: 1571 RVA: 0x002B9242 File Offset: 0x002B7442
		public void SetWeaponValues(int dmg, float knockback, int bonusCritChance = 0)
		{
			this.damage = dmg;
			this.knockBack = knockback;
			this.crit = bonusCritChance;
		}

		// Token: 0x06000624 RID: 1572 RVA: 0x002B9259 File Offset: 0x002B7459
		public void DefaultToBow(int singleShotTime, float shotVelocity, bool hasAutoReuse = false)
		{
			this.DefaultToRangedWeapon(1, AmmoID.Arrow, singleShotTime, shotVelocity, hasAutoReuse);
			this.width = 14;
			this.height = 30;
			this.UseSound = SoundID.Item5;
		}

		// Token: 0x06000625 RID: 1573 RVA: 0x002B9285 File Offset: 0x002B7485
		public void DefaultToMagicWeapon(int projType, int singleShotTime, float shotVelocity, bool hasAutoReuse = false)
		{
			this.autoReuse = hasAutoReuse;
			this.useStyle = 5;
			this.useAnimation = singleShotTime;
			this.useTime = singleShotTime;
			this.shoot = projType;
			this.shootSpeed = shotVelocity;
			this.noMelee = true;
			this.magic = true;
		}

		// Token: 0x06000626 RID: 1574 RVA: 0x002B92C0 File Offset: 0x002B74C0
		public void DefaultToRangedWeapon(int baseProjType, int ammoID, int singleShotTime, float shotVelocity, bool hasAutoReuse = false)
		{
			this.autoReuse = hasAutoReuse;
			this.useStyle = 5;
			this.useAnimation = singleShotTime;
			this.useTime = singleShotTime;
			this.shoot = baseProjType;
			this.useAmmo = ammoID;
			this.shootSpeed = shotVelocity;
			this.noMelee = true;
			this.ranged = true;
		}

		// Token: 0x06000627 RID: 1575 RVA: 0x002B9310 File Offset: 0x002B7510
		public void DefaultToThrownWeapon(int baseProjType, int singleShotTime, float shotVelocity, bool hasAutoReuse = false)
		{
			this.autoReuse = hasAutoReuse;
			this.useStyle = 1;
			this.useAnimation = singleShotTime;
			this.useTime = singleShotTime;
			this.shoot = baseProjType;
			this.shootSpeed = shotVelocity;
			this.noMelee = true;
			this.ranged = true;
			this.consumable = true;
			this.maxStack = Item.CommonMaxStack;
		}

		// Token: 0x06000628 RID: 1576 RVA: 0x002B9368 File Offset: 0x002B7568
		private void DefaultToTorch(int tileStyleToPlace, bool allowWaterPlacement = false)
		{
			this.flame = true;
			this.noWet = !allowWaterPlacement;
			this.holdStyle = 1;
			this.autoReuse = true;
			this.maxStack = Item.CommonMaxStack;
			this.consumable = true;
			this.createTile = 4;
			this.placeStyle = tileStyleToPlace;
			this.width = 10;
			this.height = 12;
			this.value = 60;
			this.useStyle = 1;
			this.useTurn = true;
			this.useAnimation = 15;
			this.useTime = 10;
		}

		// Token: 0x06000629 RID: 1577 RVA: 0x002B93EA File Offset: 0x002B75EA
		public void DefaultToPlaceableTile(int tileIDToPlace, int tileStyleToPlace = 0)
		{
			this.DefaultToPlaceableTile((ushort)tileIDToPlace, tileStyleToPlace);
		}

		// Token: 0x0600062A RID: 1578 RVA: 0x002B93F8 File Offset: 0x002B75F8
		public void DefaultToPlaceableTile(ushort tileIDToPlace, int tileStyleToPlace = 0)
		{
			this.createTile = (int)tileIDToPlace;
			this.placeStyle = tileStyleToPlace;
			this.width = 14;
			this.height = 14;
			this.useStyle = 1;
			this.useAnimation = 15;
			this.useTime = 10;
			this.maxStack = Item.CommonMaxStack;
			this.useTurn = true;
			this.autoReuse = true;
			this.consumable = true;
		}

		// Token: 0x0600062B RID: 1579 RVA: 0x002B945A File Offset: 0x002B765A
		public void MakeUsableWithChlorophyteExtractinator()
		{
			this.useStyle = 1;
			this.useAnimation = 15;
			this.useTime = 10;
			this.chlorophyteExtractinatorConsumable = true;
			this.autoReuse = true;
			this.consumable = true;
		}

		// Token: 0x0600062C RID: 1580 RVA: 0x002B9488 File Offset: 0x002B7688
		public void DefaultToGolfClub(int newwidth, int newheight)
		{
			this.width = newwidth;
			this.height = newheight;
			this.channel = true;
			this.useStyle = 8;
			this.holdStyle = 4;
			this.shootSpeed = 6f;
			this.shoot = 722;
			this.UseSound = null;
			this.useAnimation = (this.useTime = 12);
			this.noMelee = true;
		}

		// Token: 0x0600062D RID: 1581 RVA: 0x002B94F0 File Offset: 0x002B76F0
		public void DefaultToLawnMower(int newwidth, int newheight)
		{
			this.width = newwidth;
			this.height = newheight;
			this.holdStyle = 1;
			this.useStyle = 11;
			this.useAnimation = 30;
			this.useTime = 10;
			this.UseSound = SoundID.Item23;
			this.autoReuse = true;
		}

		// Token: 0x0600062E RID: 1582 RVA: 0x002B953C File Offset: 0x002B773C
		public void DefaultToFood(int newwidth, int newheight, int foodbuff, int foodbuffduration, bool useGulpSound = false, int animationTime = 17)
		{
			if (useGulpSound)
			{
				this.UseSound = SoundID.Item3;
			}
			else
			{
				this.UseSound = SoundID.Item2;
			}
			if (useGulpSound)
			{
				this.useStyle = 9;
			}
			else
			{
				this.useStyle = 2;
			}
			this.useTurn = true;
			this.useTime = animationTime;
			this.useAnimation = animationTime;
			this.maxStack = Item.CommonMaxStack;
			this.consumable = true;
			this.width = newwidth;
			this.height = newheight;
			this.buffType = foodbuff;
			this.buffTime = foodbuffduration;
			this.rare = 1;
			this.value = Item.buyPrice(0, 0, 20, 0);
		}

		// Token: 0x0600062F RID: 1583 RVA: 0x002B95D8 File Offset: 0x002B77D8
		public void DefaultToHealingPotion(int newwidth, int newheight, int healingAmount, int animationTime = 17)
		{
			this.UseSound = SoundID.Item3;
			this.useStyle = 9;
			this.useTurn = true;
			this.useTime = animationTime;
			this.useAnimation = animationTime;
			this.maxStack = Item.CommonMaxStack;
			this.consumable = true;
			this.width = newwidth;
			this.height = newheight;
			this.rare = 1;
			this.value = Item.buyPrice(0, 0, 20, 0);
			this.potion = true;
			this.healLife = healingAmount;
		}

		// Token: 0x06000630 RID: 1584 RVA: 0x002B9655 File Offset: 0x002B7855
		public void SetShopValues(ItemRarityColor rarity, int coinValue)
		{
			this.rare = (int)rarity;
			this.value = coinValue;
		}

		// Token: 0x06000631 RID: 1585 RVA: 0x002B9665 File Offset: 0x002B7865
		public void DefaultToHeadgear(int newwidth, int newheight, int helmetArtID)
		{
			this.width = newwidth;
			this.height = newheight;
			this.headSlot = helmetArtID;
		}

		// Token: 0x06000632 RID: 1586 RVA: 0x002B967C File Offset: 0x002B787C
		public void DefaultToAccessory(int newwidth = 24, int newheight = 24)
		{
			this.width = newwidth;
			this.height = newheight;
			this.accessory = true;
		}

		// Token: 0x06000633 RID: 1587 RVA: 0x002B9694 File Offset: 0x002B7894
		public void DefaultToGuitar(int newwidth = 24, int newheight = 24)
		{
			this.width = newwidth;
			this.height = newheight;
			this.autoReuse = true;
			this.holdStyle = 5;
			this.useStyle = 12;
			this.useAnimation = (this.useTime = 12);
		}

		// Token: 0x06000634 RID: 1588 RVA: 0x002B96D8 File Offset: 0x002B78D8
		public void DefaultToMusicBox(int style)
		{
			this.useStyle = 1;
			this.useTurn = true;
			this.useAnimation = 15;
			this.useTime = 10;
			this.autoReuse = true;
			this.consumable = true;
			this.createTile = 139;
			this.placeStyle = style;
			this.width = 24;
			this.height = 24;
			this.rare = 4;
			this.value = 100000;
			this.accessory = true;
			this.hasVanityEffects = true;
		}

		// Token: 0x06000635 RID: 1589 RVA: 0x002B9753 File Offset: 0x002B7953
		public void SetDefaults(int Type = 0)
		{
			this.SetDefaults(Type, false, null);
		}

		// Token: 0x06000636 RID: 1590 RVA: 0x002B9760 File Offset: 0x002B7960
		public void SetDefaults(int Type, bool noMatCheck = false, ItemVariant variant = null)
		{
			if (Type < 0)
			{
				this.netDefaults(Type);
				return;
			}
			if (Main.netMode == 1 || Main.netMode == 2)
			{
				this.playerIndexTheItemIsReservedFor = 255;
			}
			else
			{
				this.playerIndexTheItemIsReservedFor = Main.myPlayer;
			}
			this.ResetStats(Type);
			if (this.type >= (int)ItemID.Count)
			{
				this.type = 0;
			}
			if (variant == null)
			{
				variant = ItemVariants.SelectVariant(Type);
			}
			else if (!ItemVariants.HasVariant(Type, variant))
			{
				variant = null;
			}
			this.Variant = variant;
			if (this.type == 0)
			{
				this.netID = 0;
				this.stack = 0;
			}
			else if (ItemID.Sets.IsFood[this.type])
			{
				this.SetFoodDefaults(this.type);
			}
			else if (this.type <= 1000)
			{
				this.SetDefaults1(this.type);
			}
			else if (this.type <= 2001)
			{
				this.SetDefaults2(this.type);
			}
			else if (this.type <= 3000)
			{
				this.SetDefaults3(this.type);
			}
			else if (this.type <= 3989)
			{
				this.SetDefaults4(this.type);
			}
			else
			{
				this.SetDefaults5(this.type);
			}
			this.dye = (byte)GameShaders.Armor.GetShaderIdFromItemId(this.type);
			if (this.hairDye != 0)
			{
				this.hairDye = GameShaders.Hair.GetShaderIdFromItemId(this.type);
			}
			if (this.type == 2015)
			{
				this.value = Item.sellPrice(0, 0, 5, 0);
			}
			if (this.type == 2016)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 2017)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 5212)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 5300)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 5311)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 5312)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 5313)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 2019)
			{
				this.value = Item.sellPrice(0, 0, 5, 0);
			}
			if (this.type == 2018)
			{
				this.value = Item.sellPrice(0, 0, 5, 0);
			}
			if (this.type == 3563)
			{
				this.value = Item.sellPrice(0, 0, 5, 0);
			}
			if (this.type == 261)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 2205)
			{
				this.value = Item.sellPrice(0, 0, 12, 50);
			}
			if (this.type == 2123)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 2122)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 2003)
			{
				this.value = Item.sellPrice(0, 0, 10, 0);
			}
			if (this.type == 2156)
			{
				this.value = Item.sellPrice(0, 0, 15, 0);
			}
			if (this.type == 2157)
			{
				this.value = Item.sellPrice(0, 0, 15, 0);
			}
			if (this.type == 2121)
			{
				this.value = Item.sellPrice(0, 0, 10, 0);
			}
			if (this.type == 1992)
			{
				this.value = Item.sellPrice(0, 0, 3, 0);
			}
			if (this.type == 2004)
			{
				this.value = Item.sellPrice(0, 0, 5, 0);
			}
			if (this.type == 2002)
			{
				this.value = Item.sellPrice(0, 0, 5, 0);
			}
			if (this.type == 2740)
			{
				this.value = Item.sellPrice(0, 0, 2, 50);
			}
			if (this.type == 2006)
			{
				this.value = Item.sellPrice(0, 0, 10, 0);
			}
			if (this.type == 3191)
			{
				this.value = Item.sellPrice(0, 0, 20, 0);
			}
			if (this.type == 3192)
			{
				this.value = Item.sellPrice(0, 0, 2, 50);
			}
			if (this.type == 3193)
			{
				this.value = Item.sellPrice(0, 0, 5, 0);
			}
			if (this.type == 3194)
			{
				this.value = Item.sellPrice(0, 0, 10, 0);
			}
			if (this.type == 2007)
			{
				this.value = Item.sellPrice(0, 0, 50, 0);
			}
			if (this.type == 2673)
			{
				this.value = Item.sellPrice(0, 10, 0, 0);
			}
			if (this.bait > 0)
			{
				if (this.bait >= 50)
				{
					this.rare = 3;
				}
				else if (this.bait >= 30)
				{
					this.rare = 2;
				}
				else if (this.bait >= 15)
				{
					this.rare = 1;
				}
			}
			if (this.type >= 1994 && this.type <= 2001)
			{
				int num = this.type - 1994;
				if (num == 0)
				{
					this.value = Item.sellPrice(0, 0, 5, 0);
				}
				if (num == 4)
				{
					this.value = Item.sellPrice(0, 0, 10, 0);
				}
				if (num == 6)
				{
					this.value = Item.sellPrice(0, 0, 15, 0);
				}
				if (num == 3)
				{
					this.value = Item.sellPrice(0, 0, 20, 0);
				}
				if (num == 7)
				{
					this.value = Item.sellPrice(0, 0, 30, 0);
				}
				if (num == 2)
				{
					this.value = Item.sellPrice(0, 0, 40, 0);
				}
				if (num == 1)
				{
					this.value = Item.sellPrice(0, 0, 75, 0);
				}
				if (num == 5)
				{
					this.value = Item.sellPrice(0, 1, 0, 0);
				}
			}
			if (this.type == 2663 || this.type == 1720 || this.type == 2137 || this.type == 2155 || this.type == 2151 || this.type == 1704 || this.type == 2143 || this.type == 1710 || this.type == 2238 || this.type == 2133 || this.type == 2147 || this.type == 2405 || this.type == 1716 || this.type == 1705)
			{
				this.value = Item.sellPrice(0, 2, 0, 0);
			}
			if (Main.projHook[this.shoot])
			{
				this.useStyle = 0;
				this.useTime = 0;
				this.useAnimation = 0;
			}
			if (ItemID.Sets.IsDrill[this.type] || ItemID.Sets.IsChainsaw[this.type] || this.type == 1262)
			{
				this.useTime = (int)((double)this.useTime * 0.6);
				if (this.useTime < 1)
				{
					this.useTime = 1;
				}
				this.useAnimation = (int)((double)this.useAnimation * 0.6);
				if (this.useAnimation < 1)
				{
					this.useAnimation = 1;
				}
				this.tileBoost--;
			}
			if (ItemID.Sets.IsFood[this.type])
			{
				this.holdStyle = 1;
			}
			if (this.type >= 1803 && this.type <= 1807)
			{
				this.SetDefaults(1533 + this.type - 1803);
			}
			if (this.dye > 0)
			{
				this.maxStack = Item.CommonMaxStack;
			}
			if (this.createTile == 19)
			{
				this.maxStack = Item.CommonMaxStack;
			}
			this.netID = this.type;
			if (!noMatCheck)
			{
				this.material = ItemID.Sets.IsAMaterial[this.type];
			}
			this.RebuildTooltip();
			if (this.type > 0 && this.type < (int)ItemID.Count && ItemID.Sets.Deprecated[this.type])
			{
				this.netID = 0;
				this.type = 0;
				this.stack = 0;
			}
		}

		// Token: 0x06000637 RID: 1591 RVA: 0x002B9F72 File Offset: 0x002B8172
		public void OnCreated(ItemCreationContext context)
		{
			if (this.type == 5437)
			{
				this.SetDefaults(5358);
			}
		}

		// Token: 0x06000638 RID: 1592 RVA: 0x002B9F8C File Offset: 0x002B818C
		public void ResetStats(int Type)
		{
			this.tooltipContext = -1;
			this.BestiaryNotes = null;
			this.sentry = false;
			this.hasVanityEffects = false;
			this.DD2Summon = false;
			this.shopSpecialCurrency = -1;
			this.shopCustomPrice = null;
			this.expert = false;
			this.isAShopItem = false;
			this.expertOnly = false;
			this.instanced = false;
			this.questItem = false;
			this.fishingPole = 0;
			this.bait = 0;
			this.hairDye = -1;
			this.makeNPC = 0;
			this.dye = 0;
			this.paint = 0;
			this.paintCoating = 0;
			this.tileWand = -1;
			this.notAmmo = false;
			this.netID = 0;
			this.prefix = 0;
			this.crit = 0;
			this.mech = false;
			this.flame = false;
			this.reuseDelay = 0;
			this.melee = false;
			this.magic = false;
			this.ranged = false;
			this.summon = false;
			this.placeStyle = 0;
			this.buffTime = 0;
			this.buffType = 0;
			this.mountType = -1;
			this.cartTrack = false;
			this.material = false;
			this.noWet = false;
			this.vanity = false;
			this.mana = 0;
			this.wet = false;
			this.wetCount = 0;
			this.lavaWet = false;
			this.channel = false;
			this.manaIncrease = 0;
			this.timeSinceTheItemHasBeenReservedForSomeone = 0;
			this.noMelee = false;
			this.noUseGraphic = false;
			this.lifeRegen = 0;
			this.shootSpeed = 0f;
			this.active = true;
			this.alpha = 0;
			this.ammo = AmmoID.None;
			this.useAmmo = AmmoID.None;
			this.autoReuse = false;
			this.accessory = false;
			this.axe = 0;
			this.healMana = 0;
			this.bodySlot = -1;
			this.legSlot = -1;
			this.headSlot = -1;
			this.potion = false;
			this.color = default(Color);
			this.glowMask = -1;
			this.consumable = false;
			this.chlorophyteExtractinatorConsumable = false;
			this.createTile = -1;
			this.createWall = -1;
			this.damage = -1;
			this.defense = 0;
			this.hammer = 0;
			this.healLife = 0;
			this.holdStyle = 0;
			this.knockBack = 0f;
			this.maxStack = 1;
			this.pick = 0;
			this.rare = 0;
			this.scale = 1f;
			this.shoot = 0;
			this.stack = 1;
			this.ToolTip = null;
			this.tileBoost = 0;
			this.useStyle = 0;
			this.UseSound = null;
			this.useTime = 100;
			this.useAnimation = 100;
			this.value = 0;
			this.useTurn = false;
			this.buy = false;
			this.handOnSlot = -1;
			this.handOffSlot = -1;
			this.backSlot = -1;
			this.frontSlot = -1;
			this.shoeSlot = -1;
			this.waistSlot = -1;
			this.wingSlot = -1;
			this.shieldSlot = -1;
			this.neckSlot = -1;
			this.faceSlot = -1;
			this.balloonSlot = -1;
			this.beardSlot = -1;
			this.uniqueStack = false;
			this.favorited = false;
			this.shootsEveryUse = false;
			this.Variant = null;
			this.type = Type;
		}

		// Token: 0x06000639 RID: 1593 RVA: 0x002BA2A0 File Offset: 0x002B84A0
		public Color GetAlpha(Color newColor)
		{
			if (ItemID.Sets.BossBag[this.type])
			{
				return Color.Lerp(newColor, Color.White, 0.4f);
			}
			int num = this.type;
			if (num > 1572)
			{
				if (num <= 3580)
				{
					if (num <= 2786)
					{
						if (num <= 1826)
						{
							if (num - 1734 <= 1)
							{
								goto IL_40A;
							}
							if (num != 1826)
							{
								goto IL_6DF;
							}
							return new Color(255, 255, 255, 200);
						}
						else
						{
							if (num - 1867 <= 1)
							{
								goto IL_40A;
							}
							if (num - 2763 > 2 && num - 2782 > 4)
							{
								goto IL_6DF;
							}
						}
					}
					else if (num <= 3455)
					{
						if (num == 3065)
						{
							goto IL_36B;
						}
						if (num == 3191)
						{
							return new Color(250, 250, 250, 200);
						}
						if (num - 3453 > 2)
						{
							goto IL_6DF;
						}
						goto IL_3F3;
					}
					else
					{
						if (num - 3456 <= 3)
						{
							goto IL_3D9;
						}
						if (num != 3522)
						{
							if (num != 3580)
							{
								goto IL_6DF;
							}
							goto IL_3F3;
						}
					}
					return new Color(250, 250, 250, 255 - this.alpha);
				}
				if (num <= 4354)
				{
					if (num <= 3858)
					{
						if (num - 3764 <= 5)
						{
							goto IL_4EF;
						}
						if (num == 3822)
						{
							return Color.Lerp(Color.White, newColor, 0.5f) * ((255f - (float)this.alpha) / 255f);
						}
						if (num != 3858)
						{
							goto IL_6DF;
						}
						goto IL_38E;
					}
					else
					{
						if (num == 4143)
						{
							return Color.Lerp(Color.White, newColor, 0f) * ((255f - (float)this.alpha) / 255f);
						}
						if (num - 4258 <= 1)
						{
							goto IL_4EF;
						}
						if (num != 4354)
						{
							goto IL_6DF;
						}
					}
				}
				else if (num <= 4956)
				{
					if (num - 4377 > 1 && num != 4389)
					{
						if (num != 4956)
						{
							goto IL_6DF;
						}
						goto IL_36B;
					}
				}
				else
				{
					if (num == 5043)
					{
						return new Color(255, 255, 255, (int)newColor.A - this.alpha);
					}
					if (num - 5127 > 1)
					{
						if (num == 5335)
						{
							goto IL_337;
						}
						goto IL_6DF;
					}
				}
				Color result = default(Color);
				num = this.type;
				if (num <= 4378)
				{
					if (num == 4377)
					{
						result = new Color(50, 255, 50, 200);
						goto IL_664;
					}
					if (num == 4378)
					{
						result = new Color(50, 200, 255, 255);
						goto IL_664;
					}
				}
				else
				{
					if (num == 4389)
					{
						result = new Color(255, 50, 125, 200);
						goto IL_664;
					}
					if (num == 5127)
					{
						result = new Color(150, 50, 250, 200);
						goto IL_664;
					}
					if (num == 5128)
					{
						result = new Color(Main.DiscoR, Main.DiscoG, Main.DiscoB, 200);
						goto IL_664;
					}
				}
				result = new Color(255, 150, 150, 200);
				IL_664:
				if (newColor.R > result.R)
				{
					result.R = newColor.R;
				}
				if (newColor.G > result.G)
				{
					result.G = newColor.G;
				}
				if (newColor.B > result.B)
				{
					result.B = newColor.B;
				}
				if (newColor.A > result.A)
				{
					result.A = newColor.A;
				}
				return result;
				IL_36B:
				return new Color(255, 255, 255, (int)newColor.A - this.alpha);
			}
			if (num <= 549)
			{
				if (num <= 184)
				{
					if (num <= 58)
					{
						if (num == 51)
						{
							return new Color(255, 255, 255, 0);
						}
						if (num != 58)
						{
							goto IL_6DF;
						}
						goto IL_40A;
					}
					else
					{
						if (num == 75)
						{
							goto IL_38E;
						}
						if (num - 119 > 3)
						{
							if (num != 184)
							{
								goto IL_6DF;
							}
							goto IL_40A;
						}
					}
				}
				else if (num <= 501)
				{
					if (num - 198 <= 5)
					{
						goto IL_4EF;
					}
					if (num - 217 > 3)
					{
						if (num != 501)
						{
							goto IL_6DF;
						}
						return new Color(200, 200, 200, 50);
					}
				}
				else
				{
					if (num == 502)
					{
						return new Color(255, 255, 255, 150);
					}
					if (num - 520 > 2 && num - 547 > 2)
					{
						goto IL_6DF;
					}
					goto IL_3F3;
				}
				return new Color(255, 255, 255, 255);
			}
			if (num > 1326)
			{
				if (num <= 1507)
				{
					if (num == 1332)
					{
						goto IL_3F3;
					}
					if (num != 1446 && num - 1506 > 1)
					{
						goto IL_6DF;
					}
				}
				else
				{
					if (num == 1508)
					{
						return new Color(200, 200, 200, 0);
					}
					if (num - 1543 > 2)
					{
						if (num != 1572)
						{
							goto IL_6DF;
						}
						return new Color(200, 200, 255, 125);
					}
				}
				return new Color((int)newColor.R, (int)newColor.G, (int)newColor.B, (int)Main.gFade);
			}
			if (num <= 787)
			{
				if (num == 575)
				{
					goto IL_3F3;
				}
				if (num == 757)
				{
					goto IL_3D9;
				}
				if (num != 787)
				{
					goto IL_6DF;
				}
				return new Color(255, 255, 255, 175);
			}
			else
			{
				if (num == 1260)
				{
					return new Color(255, 255, 255, 175);
				}
				if (num == 1306)
				{
					goto IL_3D9;
				}
				if (num != 1326)
				{
					goto IL_6DF;
				}
			}
			IL_337:
			return Color.Lerp(newColor, Color.White, 0.75f);
			IL_38E:
			return new Color(255, 255, 255, 255);
			IL_3D9:
			return new Color(255, 255, 255, 200);
			IL_3F3:
			return new Color(255, 255, 255, 50);
			IL_40A:
			return new Color(200, 200, 200, 200);
			IL_4EF:
			return Color.White;
			IL_6DF:
			float num2 = (float)(255 - this.alpha) / 255f;
			int r = (int)((float)newColor.R * num2);
			int g = (int)((float)newColor.G * num2);
			int b = (int)((float)newColor.B * num2);
			int num3 = (int)newColor.A - this.alpha;
			if (num3 < 0)
			{
				num3 = 0;
			}
			if (num3 > 255)
			{
				num3 = 255;
			}
			return new Color(r, g, b, num3);
		}

		// Token: 0x0600063A RID: 1594 RVA: 0x002BA9F0 File Offset: 0x002B8BF0
		public Color GetColor(Color newColor)
		{
			int num = (int)(this.color.R - (byte.MaxValue - newColor.R));
			int num2 = (int)(this.color.G - (byte.MaxValue - newColor.G));
			int num3 = (int)(this.color.B - (byte.MaxValue - newColor.B));
			int num4 = (int)(this.color.A - (byte.MaxValue - newColor.A));
			if (num < 0)
			{
				num = 0;
			}
			if (num > 255)
			{
				num = 255;
			}
			if (num2 < 0)
			{
				num2 = 0;
			}
			if (num2 > 255)
			{
				num2 = 255;
			}
			if (num3 < 0)
			{
				num3 = 0;
			}
			if (num3 > 255)
			{
				num3 = 255;
			}
			if (num4 < 0)
			{
				num4 = 0;
			}
			if (num4 > 255)
			{
				num4 = 255;
			}
			return new Color(num, num2, num3, num4);
		}

		// Token: 0x0600063B RID: 1595 RVA: 0x002BAAC0 File Offset: 0x002B8CC0
		public static bool MechSpawn(float x, float y, int type)
		{
			int num = 0;
			int num2 = 0;
			int num3 = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.item[i].active && Main.item[i].type == type)
				{
					num++;
					Vector2 vector = new Vector2(x, y);
					float num4 = Main.item[i].position.X - vector.X;
					float num5 = Main.item[i].position.Y - vector.Y;
					float num6 = (float)Math.Sqrt((double)(num4 * num4 + num5 * num5));
					if (num6 < 300f)
					{
						num2++;
					}
					if (num6 < 800f)
					{
						num3++;
					}
				}
			}
			return num2 < 3 && num3 < 6 && num < 10;
		}

		// Token: 0x0600063C RID: 1596 RVA: 0x002BAB7D File Offset: 0x002B8D7D
		public static int buyPrice(int platinum = 0, int gold = 0, int silver = 0, int copper = 0)
		{
			return copper + silver * 100 + gold * 100 * 100 + platinum * 100 * 100 * 100;
		}

		// Token: 0x0600063D RID: 1597 RVA: 0x002BAB98 File Offset: 0x002B8D98
		public static int sellPrice(int platinum = 0, int gold = 0, int silver = 0, int copper = 0)
		{
			return (copper + silver * 100 + gold * 100 * 100 + platinum * 100 * 100 * 100) * 5;
		}

		// Token: 0x0600063E RID: 1598 RVA: 0x002BABB8 File Offset: 0x002B8DB8
		public bool CanShimmer()
		{
			int shimmerEquivalentType = this.GetShimmerEquivalentType();
			if (ShimmerTransforms.IsItemTransformLocked(shimmerEquivalentType))
			{
				return false;
			}
			bool flag = false;
			if ((this.type == 1326 || this.type == 779 || this.type == 3031 || this.type == 5364) && NPC.downedMoonlord)
			{
				flag = true;
			}
			if (this.type == 4986 && !NPC.unlockedSlimeRainbowSpawn)
			{
				flag = true;
			}
			if (this.type == 3461 || this.createTile == 139)
			{
				flag = true;
			}
			return flag || ItemID.Sets.ShimmerTransformToItem[shimmerEquivalentType] > 0 || this.FindDecraftAmount() > 0 || ItemID.Sets.CommonCoin[this.type] || this.makeNPC > 0;
		}

		// Token: 0x0600063F RID: 1599 RVA: 0x002BAC78 File Offset: 0x002B8E78
		private void Shimmering()
		{
			if (this.CanShimmer())
			{
				int num = (int)(base.Center.X / 16f);
				int num2 = (int)(this.position.Y / 16f - 1f);
				if (WorldGen.InWorld(num, num2, 0) && Main.tile[num, num2] != null && Main.tile[num, num2].liquid > 0 && Main.tile[num, num2].shimmer())
				{
					if (this.playerIndexTheItemIsReservedFor == Main.myPlayer && Main.netMode != 1)
					{
						this.shimmerTime += 0.01f;
						if (this.shimmerTime > 0.9f)
						{
							this.shimmerTime = 0.9f;
							this.GetShimmered();
							return;
						}
					}
					else
					{
						this.shimmerTime += 0.01f;
						if (this.shimmerTime > 1f)
						{
							this.shimmerTime = 1f;
							return;
						}
					}
				}
			}
			else if (this.shimmerTime > 0f)
			{
				this.shimmerTime -= 0.01f;
				if (this.shimmerTime < 0f)
				{
					this.shimmerTime = 0f;
				}
			}
		}

		// Token: 0x06000640 RID: 1600 RVA: 0x002BADB0 File Offset: 0x002B8FB0
		private int FindDecraftAmount()
		{
			int decraftingRecipeIndex = ShimmerTransforms.GetDecraftingRecipeIndex(this.GetShimmerEquivalentType());
			if (decraftingRecipeIndex < 0)
			{
				return -1;
			}
			return this.stack / Main.recipe[decraftingRecipeIndex].createItem.stack;
		}

		// Token: 0x06000641 RID: 1601 RVA: 0x002BADE7 File Offset: 0x002B8FE7
		private int GetShimmerEquivalentType()
		{
			if (ItemID.Sets.ShimmerCountsAsItem[this.type] != -1)
			{
				return ItemID.Sets.ShimmerCountsAsItem[this.type];
			}
			return this.type;
		}

		// Token: 0x06000642 RID: 1602 RVA: 0x002BAE0C File Offset: 0x002B900C
		private void GetShimmered()
		{
			int shimmerEquivalentType = this.GetShimmerEquivalentType();
			int decraftingRecipeIndex = ShimmerTransforms.GetDecraftingRecipeIndex(shimmerEquivalentType);
			if (ItemID.Sets.CommonCoin[shimmerEquivalentType])
			{
				if (shimmerEquivalentType == 72)
				{
					this.stack *= 100;
				}
				else if (shimmerEquivalentType == 73)
				{
					this.stack *= 10000;
				}
				else if (shimmerEquivalentType == 74)
				{
					if (this.stack > 1)
					{
						this.stack = 1;
					}
					this.stack *= 1000000;
				}
				Main.player[Main.myPlayer].AddCoinLuck(base.Center, this.stack);
				NetMessage.SendData(146, -1, -1, null, 1, (float)((int)base.Center.X), (float)((int)base.Center.Y), (float)this.stack, 0, 0, 0);
				this.type = 0;
				this.stack = 0;
			}
			else if (shimmerEquivalentType == 1326 && NPC.downedMoonlord)
			{
				int num = this.stack;
				this.SetDefaults(5335);
				this.stack = num;
				this.shimmered = true;
			}
			else if (shimmerEquivalentType == 779 && NPC.downedMoonlord)
			{
				int num2 = this.stack;
				this.SetDefaults(5134);
				this.stack = num2;
				this.shimmered = true;
			}
			else if (shimmerEquivalentType == 3031 && NPC.downedMoonlord)
			{
				int num3 = this.stack;
				this.SetDefaults(5364);
				this.stack = num3;
				this.shimmered = true;
			}
			else if (shimmerEquivalentType == 5364 && NPC.downedMoonlord)
			{
				int num4 = this.stack;
				this.SetDefaults(3031);
				this.stack = num4;
				this.shimmered = true;
			}
			else if (shimmerEquivalentType == 3461)
			{
				short defaults;
				switch (Main.GetMoonPhase())
				{
				case MoonPhase.Full:
					defaults = 5408;
					break;
				case MoonPhase.ThreeQuartersAtLeft:
					defaults = 5401;
					break;
				case MoonPhase.HalfAtLeft:
					defaults = 5403;
					break;
				case MoonPhase.QuarterAtLeft:
					defaults = 5402;
					break;
				default:
					defaults = 5406;
					break;
				case MoonPhase.QuarterAtRight:
					defaults = 5407;
					break;
				case MoonPhase.HalfAtRight:
					defaults = 5405;
					break;
				case MoonPhase.ThreeQuartersAtRight:
					defaults = 5404;
					break;
				}
				int num5 = this.stack;
				this.SetDefaults((int)defaults);
				this.stack = num5;
				this.shimmered = true;
			}
			else if (this.createTile == 139)
			{
				int num6 = this.stack;
				this.SetDefaults(576);
				this.stack = num6;
				this.shimmered = true;
			}
			else if (ItemID.Sets.ShimmerTransformToItem[shimmerEquivalentType] > 0)
			{
				int num7 = this.stack;
				this.SetDefaults(ItemID.Sets.ShimmerTransformToItem[shimmerEquivalentType]);
				this.stack = num7;
				this.shimmered = true;
			}
			else if (this.type == 4986)
			{
				if (NPC.unlockedSlimeRainbowSpawn)
				{
					return;
				}
				NPC.unlockedSlimeRainbowSpawn = true;
				NetMessage.SendData(7, -1, -1, null, 0, 0f, 0f, 0f, 0, 0, 0);
				int num8 = NPC.NewNPC(this.GetNPCSource_FromThis(), (int)base.Center.X + 4, (int)base.Center.Y, 681, 0, 0f, 0f, 0f, 0f, 255);
				if (num8 >= 0)
				{
					NPC npc = Main.npc[num8];
					npc.velocity = this.velocity;
					npc.netUpdate = true;
					npc.shimmerTransparency = 1f;
					NetMessage.SendData(146, -1, -1, null, 2, (float)num8, 0f, 0f, 0, 0, 0);
				}
				WorldGen.CheckAchievement_RealEstateAndTownSlimes();
				this.stack--;
				if (this.stack <= 0)
				{
					this.type = 0;
				}
			}
			else if (this.makeNPC > 0)
			{
				int num9 = 50;
				int highestNPCSlotIndexWeWillPick = 200;
				int num10 = NPC.GetAvailableAmountOfNPCsToSpawnUpToSlot(this.stack, highestNPCSlotIndexWeWillPick);
				while (num9 > 0 && num10 > 0 && this.stack > 0)
				{
					num9--;
					num10--;
					this.stack--;
					int num11;
					if (NPCID.Sets.ShimmerTransformToNPC[(int)this.makeNPC] >= 0)
					{
						num11 = NPC.ReleaseNPC((int)base.Center.X, (int)base.Bottom.Y, NPCID.Sets.ShimmerTransformToNPC[(int)this.makeNPC], 0, Main.myPlayer);
					}
					else
					{
						num11 = NPC.ReleaseNPC((int)base.Center.X, (int)base.Bottom.Y, (int)this.makeNPC, this.placeStyle, Main.myPlayer);
					}
					if (num11 >= 0)
					{
						Main.npc[num11].shimmerTransparency = 1f;
						NetMessage.SendData(146, -1, -1, null, 2, (float)num11, 0f, 0f, 0, 0, 0);
					}
				}
				this.shimmered = true;
				if (this.stack <= 0)
				{
					this.type = 0;
				}
			}
			else if (decraftingRecipeIndex >= 0)
			{
				int num12 = this.FindDecraftAmount();
				Recipe recipe = Main.recipe[decraftingRecipeIndex];
				int num13 = 0;
				bool flag = recipe.requiredItem[1].stack > 0;
				IEnumerable<Item> enumerable = recipe.requiredItem;
				if (recipe.customShimmerResults != null)
				{
					enumerable = recipe.customShimmerResults;
				}
				int num14 = 0;
				foreach (Item item in enumerable)
				{
					if (item.type <= 0)
					{
						break;
					}
					num14++;
					int i = num12 * item.stack;
					if (recipe.alchemy)
					{
						for (int j = i; j > 0; j--)
						{
							if (Main.rand.Next(3) == 0)
							{
								i--;
							}
						}
					}
					while (i > 0)
					{
						int num15 = i;
						if (num15 > 9999)
						{
							num15 = 9999;
						}
						i -= num15;
						int num16 = Item.NewItem(this.GetItemSource_Misc(8), (int)this.position.X, (int)this.position.Y, this.width, this.height, item.type, 1, false, 0, false, false);
						Item item2 = Main.item[num16];
						item2.stack = num15;
						item2.shimmerTime = 1f;
						item2.shimmered = true;
						item2.shimmerWet = true;
						item2.wet = true;
						item2.velocity *= 0.1f;
						item2.playerIndexTheItemIsReservedFor = Main.myPlayer;
						if (flag)
						{
							item2.velocity.X = 1f * (float)num14;
							Item item3 = item2;
							item3.velocity.X = item3.velocity.X * (1f + (float)num14 * 0.05f);
							if (num13 % 2 == 0)
							{
								Item item4 = item2;
								item4.velocity.X = item4.velocity.X * -1f;
							}
						}
						NetMessage.SendData(145, -1, -1, null, num16, 1f, 0f, 0f, 0, 0, 0);
					}
				}
				this.stack -= num12 * recipe.createItem.stack;
				if (this.stack <= 0)
				{
					this.stack = 0;
					this.type = 0;
				}
			}
			if (this.stack > 0)
			{
				this.shimmerTime = 1f;
			}
			else
			{
				this.shimmerTime = 0f;
			}
			this.shimmerWet = true;
			this.wet = true;
			this.velocity *= 0.1f;
			if (Main.netMode == 0)
			{
				Item.ShimmerEffect(base.Center);
			}
			else
			{
				NetMessage.SendData(146, -1, -1, null, 0, (float)((int)base.Center.X), (float)((int)base.Center.Y), 0f, 0, 0, 0);
				NetMessage.SendData(145, -1, -1, null, this.whoAmI, 1f, 0f, 0f, 0, 0, 0);
			}
			AchievementsHelper.NotifyProgressionEvent(27);
			if (this.stack == 0)
			{
				this.makeNPC = -1;
				this.active = false;
			}
		}

		// Token: 0x06000643 RID: 1603 RVA: 0x002BB604 File Offset: 0x002B9804
		public static void ShimmerEffect(Vector2 shimmerPositon)
		{
			SoundEngine.PlaySound(SoundID.Item176, (int)shimmerPositon.X, (int)shimmerPositon.Y);
			for (int i = 0; i < 20; i++)
			{
				int num = Dust.NewDust(shimmerPositon, 1, 1, 309, 0f, 0f, 0, default(Color), 1f);
				Main.dust[num].scale *= 1.2f;
				int num2 = Main.rand.Next(6);
				if (num2 == 0)
				{
					Main.dust[num].color = new Color(255, 255, 210);
				}
				else if (num2 == 1)
				{
					Main.dust[num].color = new Color(190, 245, 255);
				}
				else if (num2 == 2)
				{
					Main.dust[num].color = new Color(255, 150, 255);
				}
				else
				{
					Main.dust[num].color = new Color(190, 175, 255);
				}
			}
		}

		// Token: 0x06000644 RID: 1604 RVA: 0x002BB71C File Offset: 0x002B991C
		public void FixAgainstExploit()
		{
			if (ItemID.Sets.ItemsThatShouldNotBeInInventory[this.type])
			{
				this.SetDefaults(0);
				return;
			}
			if (this.stack > this.maxStack)
			{
				this.stack = this.maxStack;
			}
			if (this.prefix != 0 && !this.CanRollPrefix((int)this.prefix))
			{
				this.ResetPrefix();
			}
		}

		// Token: 0x06000645 RID: 1605 RVA: 0x002BB778 File Offset: 0x002B9978
		public void UpdateItem(int i)
		{
			this.whoAmI = i;
			if (Main.timeItemSlotCannotBeReusedFor[i] > 0)
			{
				if (Main.netMode == 2)
				{
					Main.timeItemSlotCannotBeReusedFor[i]--;
					return;
				}
				Main.timeItemSlotCannotBeReusedFor[i] = 0;
			}
			if (!this.active)
			{
				return;
			}
			if (this.instanced)
			{
				if (Main.netMode == 2)
				{
					this.active = false;
					return;
				}
				this.keepTime = 6000;
				this.ownTime = 0;
				this.noGrabDelay = 0;
				this.playerIndexTheItemIsReservedFor = Main.myPlayer;
			}
			if (Main.netMode == 0)
			{
				this.playerIndexTheItemIsReservedFor = Main.myPlayer;
			}
			float gravity = 0.1f;
			float maxFallSpeed = 7f;
			if (Main.netMode == 1)
			{
				int num = (int)(this.position.X + (float)(this.width / 2)) / 16;
				int num2 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
				if (num >= 0 && num2 >= 0 && num < Main.maxTilesX && num2 < Main.maxTilesY && Main.tile[num, num2] == null)
				{
					gravity = 0f;
					this.velocity.X = 0f;
					this.velocity.Y = 0f;
				}
			}
			Vector2 value = this.velocity * 0.5f;
			if (this.shimmerWet)
			{
				gravity = 0.065f;
				maxFallSpeed = 4f;
				value = this.velocity * 0.375f;
			}
			else if (this.honeyWet)
			{
				gravity = 0.05f;
				maxFallSpeed = 3f;
				value = this.velocity * 0.25f;
			}
			else if (this.wet)
			{
				gravity = 0.08f;
				maxFallSpeed = 5f;
			}
			if (this.ownTime > 0)
			{
				this.ownTime--;
			}
			else
			{
				this.ownIgnore = -1;
			}
			if (this.keepTime > 0)
			{
				this.keepTime--;
			}
			if (!this.beingGrabbed)
			{
				if (this.shimmered)
				{
					if (Main.rand.Next(30) == 0)
					{
						int num3 = Dust.NewDust(this.position, this.width, this.height, 309, 0f, 0f, 0, default(Color), 1f);
						Dust dust = Main.dust[num3];
						dust.position.X = dust.position.X + (float)Main.rand.Next(-8, 5);
						Dust dust2 = Main.dust[num3];
						dust2.position.Y = dust2.position.Y + (float)Main.rand.Next(-8, 5);
						Main.dust[num3].scale *= 1.1f;
						Main.dust[num3].velocity *= 0.3f;
						int num4 = Main.rand.Next(6);
						if (num4 == 0)
						{
							Main.dust[num3].color = new Color(255, 255, 210);
						}
						else if (num4 == 1)
						{
							Main.dust[num3].color = new Color(190, 245, 255);
						}
						else if (num4 == 2)
						{
							Main.dust[num3].color = new Color(255, 150, 255);
						}
						else
						{
							Main.dust[num3].color = new Color(190, 175, 255);
						}
					}
					Lighting.AddLight(base.Center, (1f - this.shimmerTime) * 0.8f, (1f - this.shimmerTime) * 0.8f, (1f - this.shimmerTime) * 0.8f);
					gravity = 0f;
					if (this.shimmerWet)
					{
						if (this.velocity.Y > -4f)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
					}
					else
					{
						int num5 = 2;
						int num6 = (int)(base.Center.X / 16f);
						int num7 = (int)(base.Center.Y / 16f);
						bool flag = false;
						for (int j = num7; j < num7 + num5; j++)
						{
							if (WorldGen.InWorld(num6, j, 0) && Main.tile[num6, j] != null && Main.tile[num6, j].shimmer() && Main.tile[num6, j].liquid > 0)
							{
								flag = true;
								break;
							}
						}
						if (flag)
						{
							if (this.velocity.Y > -4f)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
						}
						else
						{
							this.velocity.Y = this.velocity.Y * 0.9f;
						}
					}
				}
				if (this.shimmerWet && !this.shimmered)
				{
					this.Shimmering();
				}
				else if (this.shimmerTime > 0f)
				{
					this.shimmerTime -= 0.01f;
					if (this.shimmerTime < 0f)
					{
						this.shimmerTime = 0f;
					}
				}
				if (this.shimmerTime == 0f)
				{
					this.TryCombiningIntoNearbyItems(i);
				}
				if (this.timeLeftInWhichTheItemCannotBeTakenByEnemies > 0)
				{
					this.timeLeftInWhichTheItemCannotBeTakenByEnemies--;
				}
				if (this.timeLeftInWhichTheItemCannotBeTakenByEnemies == 0 && Main.netMode != 2 && this.playerIndexTheItemIsReservedFor == Main.myPlayer)
				{
					this.GetPickedUpByMonsters_Special(i);
					if (Main.expertMode && this.IsACoin)
					{
						this.GetPickedUpByMonsters_Money(i);
					}
				}
				this.MoveInWorld(gravity, maxFallSpeed, ref value, i);
				if (this.lavaWet)
				{
					this.CheckLavaDeath(i);
				}
				this.DespawnIfMeetingConditions(i);
			}
			else
			{
				this.beingGrabbed = false;
			}
			this.UpdateItem_VisualEffects();
			if (this.timeSinceItemSpawned < 2147483547)
			{
				int num8 = ItemID.Sets.ItemSpawnDecaySpeed[this.type];
				this.timeSinceItemSpawned += num8;
			}
			if (Main.netMode == 2 && this.playerIndexTheItemIsReservedFor != Main.myPlayer)
			{
				this.timeSinceTheItemHasBeenReservedForSomeone++;
				if (this.timeSinceTheItemHasBeenReservedForSomeone >= 300)
				{
					this.timeSinceTheItemHasBeenReservedForSomeone = 0;
					NetMessage.SendData(39, this.playerIndexTheItemIsReservedFor, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
					this.playerIndexTheItemIsReservedFor = 255;
				}
			}
			if (this.wet)
			{
				this.position += value;
			}
			else
			{
				this.position += this.velocity;
			}
			if (this.noGrabDelay > 0)
			{
				this.noGrabDelay--;
			}
		}

		// Token: 0x06000646 RID: 1606 RVA: 0x002BBDE0 File Offset: 0x002B9FE0
		private void DespawnIfMeetingConditions(int i)
		{
			if (this.type == 75 && Main.dayTime && !Main.remixWorld && !this.shimmered && !this.beingGrabbed)
			{
				for (int j = 0; j < 10; j++)
				{
					Dust.NewDust(this.position, this.width, this.height, 15, this.velocity.X, this.velocity.Y, 150, default(Color), 1.2f);
				}
				for (int k = 0; k < 3; k++)
				{
					Gore.NewGore(this.position, new Vector2(this.velocity.X, this.velocity.Y), Main.rand.Next(16, 18), 1f);
				}
				this.active = false;
				this.type = 0;
				this.stack = 0;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(21, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			if (this.type == 4143 && this.timeSinceItemSpawned > 300)
			{
				for (int l = 0; l < 20; l++)
				{
					Dust.NewDust(this.position, this.width, this.height, 15, this.velocity.X, this.velocity.Y, 150, Color.Lerp(Color.CornflowerBlue, Color.Indigo, Main.rand.NextFloat()), 1.2f);
				}
				this.active = false;
				this.type = 0;
				this.stack = 0;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(21, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			if (this.type == 3822 && !DD2Event.Ongoing)
			{
				int num = Main.rand.Next(18, 24);
				for (int m = 0; m < num; m++)
				{
					int num2 = Dust.NewDust(base.Center, 0, 0, 61, 0f, 0f, 0, default(Color), 1.7f);
					Main.dust[num2].velocity *= 8f;
					Dust dust = Main.dust[num2];
					dust.velocity.Y = dust.velocity.Y - 1f;
					Main.dust[num2].position = Vector2.Lerp(Main.dust[num2].position, base.Center, 0.5f);
					Main.dust[num2].noGravity = true;
					Main.dust[num2].noLight = true;
				}
				this.active = false;
				this.type = 0;
				this.stack = 0;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(21, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
				}
			}
		}

		// Token: 0x06000647 RID: 1607 RVA: 0x002BC0D4 File Offset: 0x002BA2D4
		public void TryCombiningIntoNearbyItems(int i)
		{
			bool flag = true;
			int num = this.type;
			if (num - 71 <= 3)
			{
				flag = false;
			}
			if (ItemID.Sets.NebulaPickup[this.type])
			{
				flag = false;
			}
			if (this.playerIndexTheItemIsReservedFor == Main.myPlayer && flag)
			{
				this.CombineWithNearbyItems(i);
			}
		}

		// Token: 0x06000648 RID: 1608 RVA: 0x002BC11C File Offset: 0x002BA31C
		public FlexibleTileWand GetFlexibleTileWand()
		{
			int num = this.type;
			if (num == 5324)
			{
				return FlexibleTileWand.RubblePlacementSmall;
			}
			if (num == 5329)
			{
				return FlexibleTileWand.RubblePlacementMedium;
			}
			if (num != 5330)
			{
				return null;
			}
			return FlexibleTileWand.RubblePlacementLarge;
		}

		// Token: 0x06000649 RID: 1609 RVA: 0x002BC15C File Offset: 0x002BA35C
		private void CheckLavaDeath(int i)
		{
			if (this.type == 267)
			{
				if (Main.netMode != 1)
				{
					int num = this.stack;
					this.active = false;
					this.type = 0;
					this.stack = 0;
					bool flag = false;
					for (int j = 0; j < 200; j++)
					{
						if (Main.npc[j].active && Main.npc[j].type == 22)
						{
							int num2 = -Main.npc[j].direction;
							if (Main.npc[j].IsNPCValidForBestiaryKillCredit())
							{
								Main.BestiaryTracker.Kills.RegisterKill(Main.npc[j]);
							}
							Main.npc[j].StrikeNPCNoInteraction(9999, 10f, -num2, false, false, false);
							num--;
							flag = true;
							if (Main.netMode == 2)
							{
								NetMessage.SendData(28, -1, -1, null, j, 9999f, 10f, (float)(-(float)num2), 0, 0, 0);
							}
							NPC.SpawnWOF(this.position);
						}
					}
					if (flag)
					{
						List<int> list = new List<int>();
						for (int k = 0; k < 200; k++)
						{
							if (num <= 0)
							{
								break;
							}
							NPC npc = Main.npc[k];
							if (npc.active && npc.isLikeATownNPC)
							{
								list.Add(k);
							}
						}
						while (num > 0 && list.Count > 0)
						{
							int index = Main.rand.Next(list.Count);
							int num3 = list[index];
							list.RemoveAt(index);
							int num4 = -Main.npc[num3].direction;
							if (Main.npc[num3].IsNPCValidForBestiaryKillCredit())
							{
								Main.BestiaryTracker.Kills.RegisterKill(Main.npc[num3]);
							}
							Main.npc[num3].StrikeNPCNoInteraction(9999, 10f, -num4, false, false, false);
							num--;
							if (Main.netMode == 2)
							{
								NetMessage.SendData(28, -1, -1, null, num3, 9999f, 10f, (float)(-(float)num4), 0, 0, 0);
							}
						}
					}
					NetMessage.SendData(21, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
					return;
				}
			}
			else if (this.playerIndexTheItemIsReservedFor == Main.myPlayer && this.rare == 0 && this.type >= 0 && this.type < (int)ItemID.Count && !ItemID.Sets.IsLavaImmuneRegardlessOfRarity[this.type])
			{
				this.active = false;
				this.type = 0;
				this.stack = 0;
				if (Main.netMode != 0)
				{
					NetMessage.SendData(21, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
				}
			}
		}

		// Token: 0x0600064A RID: 1610 RVA: 0x002BC3F8 File Offset: 0x002BA5F8
		private void MoveInWorld(float gravity, float maxFallSpeed, ref Vector2 wetVelocity, int i)
		{
			if (!this.shimmered && ItemID.Sets.ItemNoGravity[this.type])
			{
				this.velocity.X = this.velocity.X * 0.95f;
				if ((double)this.velocity.X < 0.1 && (double)this.velocity.X > -0.1)
				{
					this.velocity.X = 0f;
				}
				this.velocity.Y = this.velocity.Y * 0.95f;
				if ((double)this.velocity.Y < 0.1 && (double)this.velocity.Y > -0.1)
				{
					this.velocity.Y = 0f;
				}
			}
			else
			{
				bool flag = false;
				if (this.shimmered && this.active)
				{
					int num = 50;
					for (int j = 0; j < 400; j++)
					{
						if (i != j && Main.item[j].active && Main.item[j].shimmered)
						{
							if (num-- <= 0)
							{
								break;
							}
							float num2 = (float)((this.width + Main.item[j].width) / 2);
							if (Math.Abs(base.Center.X - Main.item[j].Center.X) <= num2 && Math.Abs(base.Center.Y - Main.item[j].Center.Y) <= num2)
							{
								flag = true;
								float num3 = Vector2.Distance(base.Center, Main.item[j].Center);
								num2 /= num3;
								if (num2 > 10f)
								{
									num2 = 10f;
								}
								if (base.Center.X < Main.item[j].Center.X)
								{
									if (this.velocity.X > -3f * num2)
									{
										this.velocity.X = this.velocity.X - 0.1f * num2;
									}
									if (Main.item[j].velocity.X < 3f)
									{
										Item item = Main.item[j];
										item.velocity.X = item.velocity.X + 0.1f * num2;
									}
								}
								else if (base.Center.X > Main.item[j].Center.X)
								{
									if (this.velocity.X < 3f * num2)
									{
										this.velocity.X = this.velocity.X + 0.1f * num2;
									}
									if (Main.item[j].velocity.X > -3f)
									{
										Item item2 = Main.item[j];
										item2.velocity.X = item2.velocity.X - 0.1f * num2;
									}
								}
								else if (i < j)
								{
									if (this.velocity.X > -3f * num2)
									{
										this.velocity.X = this.velocity.X - 0.1f * num2;
									}
									if (Main.item[j].velocity.X < 3f * num2)
									{
										Item item3 = Main.item[j];
										item3.velocity.X = item3.velocity.X + 0.1f * num2;
									}
								}
							}
						}
					}
				}
				this.velocity.Y = this.velocity.Y + gravity;
				if (this.velocity.Y > maxFallSpeed)
				{
					this.velocity.Y = maxFallSpeed;
				}
				this.velocity.X = this.velocity.X * 0.95f;
				if ((double)this.velocity.X < 0.1 && (double)this.velocity.X > -0.1)
				{
					this.velocity.X = 0f;
				}
				if (flag)
				{
					this.velocity.X = this.velocity.X * 0.8f;
				}
			}
			bool flag2 = Collision.LavaCollision(this.position, this.width, this.height);
			if (flag2)
			{
				this.lavaWet = true;
			}
			bool flag3 = Collision.WetCollision(this.position, this.width, this.height);
			if (Collision.honey)
			{
				this.honeyWet = true;
			}
			if (Collision.shimmer)
			{
				this.shimmerWet = true;
			}
			if (flag3)
			{
				if (!this.wet)
				{
					if (this.wetCount == 0)
					{
						this.wetCount = 20;
						if (!flag2)
						{
							if (this.shimmerWet)
							{
								for (int k = 0; k < 10; k++)
								{
									int num4 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 308, 0f, 0f, 0, default(Color), 1f);
									Dust dust = Main.dust[num4];
									dust.velocity.Y = dust.velocity.Y - 4f;
									Dust dust2 = Main.dust[num4];
									dust2.velocity.X = dust2.velocity.X * 2.5f;
									Main.dust[num4].scale = 0.8f;
									Main.dust[num4].noGravity = true;
									int num5 = Main.rand.Next(6);
									if (num5 == 0)
									{
										Main.dust[num4].color = new Color(255, 255, 210);
									}
									else if (num5 == 1)
									{
										Main.dust[num4].color = new Color(190, 245, 255);
									}
									else if (num5 == 2)
									{
										Main.dust[num4].color = new Color(255, 150, 255);
									}
									else
									{
										Main.dust[num4].color = new Color(190, 175, 255);
									}
								}
								SoundEngine.PlaySound(19, (int)this.position.X, (int)this.position.Y, 4, 1f, 0f);
							}
							else if (this.honeyWet)
							{
								for (int l = 0; l < 5; l++)
								{
									int num6 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 152, 0f, 0f, 0, default(Color), 1f);
									Dust dust3 = Main.dust[num6];
									dust3.velocity.Y = dust3.velocity.Y - 1f;
									Dust dust4 = Main.dust[num6];
									dust4.velocity.X = dust4.velocity.X * 2.5f;
									Main.dust[num6].scale = 1.3f;
									Main.dust[num6].alpha = 100;
									Main.dust[num6].noGravity = true;
								}
								SoundEngine.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
							}
							else
							{
								for (int m = 0; m < 10; m++)
								{
									int num7 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
									Dust dust5 = Main.dust[num7];
									dust5.velocity.Y = dust5.velocity.Y - 4f;
									Dust dust6 = Main.dust[num7];
									dust6.velocity.X = dust6.velocity.X * 2.5f;
									Main.dust[num7].scale *= 0.8f;
									Main.dust[num7].alpha = 100;
									Main.dust[num7].noGravity = true;
								}
								SoundEngine.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
							}
						}
						else
						{
							for (int n = 0; n < 5; n++)
							{
								int num8 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 35, 0f, 0f, 0, default(Color), 1f);
								Dust dust7 = Main.dust[num8];
								dust7.velocity.Y = dust7.velocity.Y - 1.5f;
								Dust dust8 = Main.dust[num8];
								dust8.velocity.X = dust8.velocity.X * 2.5f;
								Main.dust[num8].scale = 1.3f;
								Main.dust[num8].alpha = 100;
								Main.dust[num8].noGravity = true;
							}
							SoundEngine.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
						}
					}
					this.wet = true;
				}
			}
			else if (this.wet)
			{
				this.wet = false;
				if (this.wetCount == 0)
				{
					this.wetCount = 20;
					if (!this.lavaWet)
					{
						if (this.shimmerWet)
						{
							for (int num9 = 0; num9 < 10; num9++)
							{
								int num10 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 308, 0f, 0f, 0, default(Color), 1f);
								Dust dust9 = Main.dust[num10];
								dust9.velocity.Y = dust9.velocity.Y - 4f;
								Dust dust10 = Main.dust[num10];
								dust10.velocity.X = dust10.velocity.X * 2.5f;
								Main.dust[num10].scale = 0.8f;
								Main.dust[num10].noGravity = true;
								int num11 = Main.rand.Next(6);
								if (num11 == 0)
								{
									Main.dust[num10].color = new Color(255, 255, 210);
								}
								else if (num11 == 1)
								{
									Main.dust[num10].color = new Color(190, 245, 255);
								}
								else if (num11 == 2)
								{
									Main.dust[num10].color = new Color(255, 150, 255);
								}
								else
								{
									Main.dust[num10].color = new Color(190, 175, 255);
								}
							}
							SoundEngine.PlaySound(19, (int)this.position.X, (int)this.position.Y, 5, 1f, 0f);
						}
						else if (this.honeyWet)
						{
							for (int num12 = 0; num12 < 5; num12++)
							{
								int num13 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 152, 0f, 0f, 0, default(Color), 1f);
								Dust dust11 = Main.dust[num13];
								dust11.velocity.Y = dust11.velocity.Y - 1f;
								Dust dust12 = Main.dust[num13];
								dust12.velocity.X = dust12.velocity.X * 2.5f;
								Main.dust[num13].scale = 1.3f;
								Main.dust[num13].alpha = 100;
								Main.dust[num13].noGravity = true;
							}
							SoundEngine.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
						}
						else
						{
							for (int num14 = 0; num14 < 10; num14++)
							{
								int num15 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2)), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
								Dust dust13 = Main.dust[num15];
								dust13.velocity.Y = dust13.velocity.Y - 4f;
								Dust dust14 = Main.dust[num15];
								dust14.velocity.X = dust14.velocity.X * 2.5f;
								Main.dust[num15].scale *= 0.8f;
								Main.dust[num15].alpha = 100;
								Main.dust[num15].noGravity = true;
							}
							SoundEngine.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
						}
					}
					else
					{
						for (int num16 = 0; num16 < 5; num16++)
						{
							int num17 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 35, 0f, 0f, 0, default(Color), 1f);
							Dust dust15 = Main.dust[num17];
							dust15.velocity.Y = dust15.velocity.Y - 1.5f;
							Dust dust16 = Main.dust[num17];
							dust16.velocity.X = dust16.velocity.X * 2.5f;
							Main.dust[num17].scale = 1.3f;
							Main.dust[num17].alpha = 100;
							Main.dust[num17].noGravity = true;
						}
						SoundEngine.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					}
				}
			}
			if (!this.wet)
			{
				this.lavaWet = false;
				this.honeyWet = false;
				this.shimmerWet = false;
			}
			if (this.wetCount > 0)
			{
				this.wetCount -= 1;
			}
			if (this.wet)
			{
				if (this.wet)
				{
					Vector2 velocity = this.velocity;
					this.velocity = Collision.TileCollision(this.position, this.velocity, this.width, this.height, false, false, 1);
					if (this.velocity.X != velocity.X)
					{
						wetVelocity.X = this.velocity.X;
					}
					if (this.velocity.Y != velocity.Y)
					{
						wetVelocity.Y = this.velocity.Y;
					}
				}
			}
			else
			{
				this.velocity = Collision.TileCollision(this.position, this.velocity, this.width, this.height, false, false, 1);
			}
			Vector4 vector = Collision.SlopeCollision(this.position, this.velocity, this.width, this.height, gravity, false);
			this.position.X = vector.X;
			this.position.Y = vector.Y;
			this.velocity.X = vector.Z;
			this.velocity.Y = vector.W;
			Collision.StepConveyorBelt(this, 1f);
		}

		// Token: 0x0600064B RID: 1611 RVA: 0x002BD3B0 File Offset: 0x002BB5B0
		private void GetPickedUpByMonsters_Special(int i)
		{
			bool flag = false;
			bool flag2 = false;
			int num = this.type;
			if ((num == 89 || num == 3507) && !NPC.unlockedSlimeCopperSpawn)
			{
				flag = true;
				flag2 = true;
			}
			if (!flag2)
			{
				return;
			}
			bool flag3 = false;
			Rectangle hitbox = base.Hitbox;
			for (int j = 0; j < 200; j++)
			{
				NPC npc = Main.npc[j];
				if (npc.active && flag && npc.type >= 0 && npc.type < (int)NPCID.Count && NPCID.Sets.CanConvertIntoCopperSlimeTownNPC[npc.type] && hitbox.Intersects(npc.Hitbox))
				{
					flag3 = true;
					NPC.TransformCopperSlime(j);
					break;
				}
			}
			if (flag3)
			{
				this.SetDefaults(0);
				this.active = false;
				NetMessage.SendData(21, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
			}
		}

		// Token: 0x0600064C RID: 1612 RVA: 0x002BD48C File Offset: 0x002BB68C
		private void GetPickedUpByMonsters_Money(int i)
		{
			Rectangle rectangle = new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
			for (int j = 0; j < 200; j++)
			{
				NPC npc = Main.npc[j];
				if (npc.active && npc.lifeMax > 5 && !npc.friendly && !npc.immortal && !npc.dontTakeDamage && !NPCID.Sets.CantTakeLunchMoney[npc.type])
				{
					float num = (float)this.stack;
					float num2 = 1f;
					if (this.type == 72)
					{
						num2 = 100f;
					}
					if (this.type == 73)
					{
						num2 = 10000f;
					}
					if (this.type == 74)
					{
						num2 = 1000000f;
					}
					num *= num2;
					float num3 = (float)npc.extraValue;
					int num4 = npc.realLife;
					if (num4 >= 0 && Main.npc[num4].active)
					{
						num3 = (float)Main.npc[num4].extraValue;
					}
					else
					{
						num4 = -1;
					}
					if (num3 < num && num3 + num < 999000000f)
					{
						Rectangle rectangle2 = new Rectangle((int)npc.position.X, (int)npc.position.Y, npc.width, npc.height);
						if (rectangle.Intersects(rectangle2))
						{
							float num5 = (float)Main.rand.Next(50, 76) * 0.01f;
							if (this.type == 71)
							{
								num5 += (float)Main.rand.Next(51) * 0.01f;
							}
							if (this.type == 72)
							{
								num5 += (float)Main.rand.Next(26) * 0.01f;
							}
							if (num5 > 1f)
							{
								num5 = 1f;
							}
							int num6 = (int)((float)this.stack * num5);
							if (num6 < 1)
							{
								num6 = 1;
							}
							if (num6 > this.stack)
							{
								num6 = this.stack;
							}
							this.stack -= num6;
							int num7 = (int)((float)num6 * num2);
							int number = j;
							if (num4 >= 0)
							{
								number = num4;
							}
							npc.extraValue += num7;
							if (Main.netMode == 0)
							{
								npc.moneyPing(this.position);
							}
							else
							{
								NetMessage.SendData(92, -1, -1, null, number, (float)num7, this.position.X, this.position.Y, 0, 0, 0);
							}
							if (this.stack <= 0)
							{
								this.SetDefaults(0);
								this.active = false;
							}
							NetMessage.SendData(21, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
						}
					}
				}
			}
		}

		// Token: 0x0600064D RID: 1613 RVA: 0x002BD734 File Offset: 0x002BB934
		private void CombineWithNearbyItems(int myItemIndex)
		{
			if (!this.CanCombineStackInWorld())
			{
				return;
			}
			if (this.stack >= this.maxStack)
			{
				return;
			}
			for (int i = myItemIndex + 1; i < 400; i++)
			{
				Item item = Main.item[i];
				if (item.active && item.type == this.type && item.shimmered == this.shimmered && item.stack > 0 && item.playerIndexTheItemIsReservedFor == this.playerIndexTheItemIsReservedFor)
				{
					float num = Math.Abs(this.position.X + (float)(this.width / 2) - (item.position.X + (float)(item.width / 2))) + Math.Abs(this.position.Y + (float)(this.height / 2) - (item.position.Y + (float)(item.height / 2)));
					int num2 = 30;
					if ((double)Item.numberOfNewItems > 40.0)
					{
						num2 *= 2;
					}
					if ((double)Item.numberOfNewItems > 80.0)
					{
						num2 *= 2;
					}
					if ((double)Item.numberOfNewItems > 120.0)
					{
						num2 *= 2;
					}
					if ((double)Item.numberOfNewItems > 160.0)
					{
						num2 *= 2;
					}
					if ((double)Item.numberOfNewItems > 200.0)
					{
						num2 *= 2;
					}
					if ((double)Item.numberOfNewItems > 240.0)
					{
						num2 *= 2;
					}
					if (num < (float)num2)
					{
						this.position = (this.position + item.position) / 2f;
						this.velocity = (this.velocity + item.velocity) / 2f;
						int num3 = item.stack;
						if (num3 > this.maxStack - this.stack)
						{
							num3 = this.maxStack - this.stack;
						}
						item.stack -= num3;
						this.stack += num3;
						if (item.stack <= 0)
						{
							item.SetDefaults(0);
							item.active = false;
						}
						if (Main.netMode != 0 && this.playerIndexTheItemIsReservedFor == Main.myPlayer)
						{
							NetMessage.SendData(21, -1, -1, null, myItemIndex, 0f, 0f, 0f, 0, 0, 0);
							NetMessage.SendData(21, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
						}
					}
				}
			}
		}

		// Token: 0x0600064E RID: 1614 RVA: 0x002BD994 File Offset: 0x002BBB94
		public bool CanCombineStackInWorld()
		{
			int num = this.type;
			return num != 75 && (this.createTile >= 0 || this.createWall > 0 || (this.ammo > 0 && !this.notAmmo) || this.consumable || (this.type >= 205 && this.type <= 207) || this.type == 1128 || this.type == 530 || this.dye > 0 || this.PaintOrCoating || this.material);
		}

		// Token: 0x0600064F RID: 1615 RVA: 0x002BDA28 File Offset: 0x002BBC28
		private void UpdateItem_VisualEffects()
		{
			if (this.type == 5043)
			{
				float num = (float)Main.rand.Next(90, 111) * 0.01f;
				num *= (Main.essScale + 0.5f) / 2f;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.25f * num, 0.25f * num, 0.25f * num);
				return;
			}
			if (this.type == 3191)
			{
				float num2 = (float)Main.rand.Next(90, 111) * 0.01f;
				num2 *= (Main.essScale + 0.5f) / 2f;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.3f * num2, 0.1f * num2, 0.25f * num2);
				return;
			}
			if (this.type == 520 || this.type == 3454)
			{
				float num3 = (float)Main.rand.Next(90, 111) * 0.01f;
				num3 *= Main.essScale;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.5f * num3, 0.1f * num3, 0.25f * num3);
				return;
			}
			if (this.type == 521 || this.type == 3455)
			{
				float num4 = (float)Main.rand.Next(90, 111) * 0.01f;
				num4 *= Main.essScale;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.25f * num4, 0.1f * num4, 0.5f * num4);
				return;
			}
			if (this.type == 547 || this.type == 3453)
			{
				float num5 = (float)Main.rand.Next(90, 111) * 0.01f;
				num5 *= Main.essScale;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.5f * num5, 0.3f * num5, 0.05f * num5);
				return;
			}
			if (this.type == 548)
			{
				float num6 = (float)Main.rand.Next(90, 111) * 0.01f;
				num6 *= Main.essScale;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.1f * num6, 0.1f * num6, 0.6f * num6);
				return;
			}
			if (this.type == 575)
			{
				float num7 = (float)Main.rand.Next(90, 111) * 0.01f;
				num7 *= Main.essScale;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.1f * num7, 0.3f * num7, 0.5f * num7);
				return;
			}
			if (this.type == 549)
			{
				float num8 = (float)Main.rand.Next(90, 111) * 0.01f;
				num8 *= Main.essScale;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.1f * num8, 0.5f * num8, 0.2f * num8);
				return;
			}
			if (this.type == 58 || this.type == 1734 || this.type == 1867)
			{
				float num9 = (float)Main.rand.Next(90, 111) * 0.01f;
				num9 *= Main.essScale * 0.5f;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.5f * num9, 0.1f * num9, 0.1f * num9);
				return;
			}
			if (this.type == 184 || this.type == 1735 || this.type == 1868 || this.type == 4143)
			{
				float num10 = (float)Main.rand.Next(90, 111) * 0.01f;
				num10 *= Main.essScale * 0.5f;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.1f * num10, 0.1f * num10, 0.5f * num10);
				return;
			}
			if (this.type == 522)
			{
				float num11 = (float)Main.rand.Next(90, 111) * 0.01f;
				num11 *= Main.essScale * 0.2f;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.5f * num11, 1f * num11, 0.1f * num11);
				return;
			}
			if (this.type == 1332)
			{
				float num12 = (float)Main.rand.Next(90, 111) * 0.01f;
				num12 *= Main.essScale * 0.2f;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1f * num12, 1f * num12, 0.1f * num12);
				return;
			}
			if (this.type == 3456)
			{
				Lighting.AddLight(base.Center, new Vector3(0.2f, 0.4f, 0.5f) * Main.essScale);
				return;
			}
			if (this.type == 3457)
			{
				Lighting.AddLight(base.Center, new Vector3(0.4f, 0.2f, 0.5f) * Main.essScale);
				return;
			}
			if (this.type == 3458)
			{
				Lighting.AddLight(base.Center, new Vector3(0.5f, 0.4f, 0.2f) * Main.essScale);
				return;
			}
			if (this.type == 3459)
			{
				Lighting.AddLight(base.Center, new Vector3(0.2f, 0.2f, 0.5f) * Main.essScale);
				return;
			}
			if (this.type == 501)
			{
				if (Main.rand.Next(6) == 0)
				{
					int num13 = Dust.NewDust(this.position, this.width, this.height, 55, 0f, 0f, 200, this.color, 1f);
					Main.dust[num13].velocity *= 0.3f;
					Main.dust[num13].scale *= 0.5f;
					return;
				}
			}
			else
			{
				if (this.type == 3822)
				{
					Lighting.AddLight(base.Center, 0.1f, 0.3f, 0.1f);
					return;
				}
				if (this.type == 1970)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.75f, 0f, 0.75f);
					return;
				}
				if (this.type == 1972)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0f, 0f, 0.75f);
					return;
				}
				if (this.type == 1971)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.75f, 0.75f, 0f);
					return;
				}
				if (this.type == 1973)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0f, 0.75f, 0f);
					return;
				}
				if (this.type == 1974)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.75f, 0f, 0f);
					return;
				}
				if (this.type == 1975)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.75f, 0.75f, 0.75f);
					return;
				}
				if (this.type == 1976)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.75f, 0.375f, 0f);
					return;
				}
				if (this.type == 2679)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.6f, 0f, 0.6f);
					return;
				}
				if (this.type == 2687)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0f, 0f, 0.6f);
					return;
				}
				if (this.type == 2689)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.6f, 0.6f, 0f);
					return;
				}
				if (this.type == 2683)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0f, 0.6f, 0f);
					return;
				}
				if (this.type == 2685)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.6f, 0f, 0f);
					return;
				}
				if (this.type == 2681)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.6f, 0.6f, 0.6f);
					return;
				}
				if (this.type == 2677)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.6f, 0.375f, 0f);
					return;
				}
				if (this.type == 105)
				{
					if (!this.wet)
					{
						Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1f, 0.95f, 0.8f);
						return;
					}
				}
				else
				{
					if (this.type == 2701)
					{
						Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.7f, 0.65f, 0.55f);
						return;
					}
					if (this.createTile == 4)
					{
						int torchID = this.placeStyle;
						if ((!this.wet && ItemID.Sets.Torches[this.type]) || ItemID.Sets.WaterTorches[this.type])
						{
							Lighting.AddLight(base.Center, torchID);
							return;
						}
					}
					else if (this.type == 3114)
					{
						if (!this.wet)
						{
							Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1f, 0f, 1f);
							return;
						}
					}
					else if (this.type == 1245)
					{
						if (!this.wet)
						{
							Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1f, 0.5f, 0f);
							return;
						}
					}
					else if (this.type == 433)
					{
						if (!this.wet)
						{
							Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.5f * Main.demonTorch + 1f * (1f - Main.demonTorch), 0.3f, 1f * Main.demonTorch + 0.5f * (1f - Main.demonTorch));
							return;
						}
					}
					else
					{
						if (this.type == 523)
						{
							Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.85f, 1.2f, 0.7f);
							return;
						}
						if (this.type == 974)
						{
							if (!this.wet)
							{
								Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.75f, 0.85f, 1.4f);
								return;
							}
						}
						else
						{
							if (this.type == 1333)
							{
								Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1.25f, 1.25f, 0.7f);
								return;
							}
							if (this.type == 4383)
							{
								if (!this.wet)
								{
									Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1.4f, 0.85f, 0.55f);
									return;
								}
							}
							else if (this.type == 5293)
							{
								if (!this.wet)
								{
									Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.25f, 0.65f, 1f);
									return;
								}
							}
							else if (this.type == 5353)
							{
								if (!this.wet)
								{
									Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.81f, 0.72f, 1f);
									return;
								}
							}
							else
							{
								if (this.type == 4384)
								{
									Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.25f, 1.3f, 0.8f);
									return;
								}
								if (this.type == 3045)
								{
									Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), (float)Main.DiscoR / 255f, (float)Main.DiscoG / 255f, (float)Main.DiscoB / 255f);
									return;
								}
								if (this.type == 3004)
								{
									Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.95f, 0.65f, 1.3f);
									return;
								}
								if (this.type == 2274)
								{
									float r = 0.75f;
									float g = 1.3499999f;
									float b = 1.5f;
									if (!this.wet)
									{
										Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), r, g, b);
										return;
									}
								}
								else if (this.type >= 427 && this.type <= 432)
								{
									if (!this.wet)
									{
										float r2 = 0f;
										float g2 = 0f;
										float b2 = 0f;
										int num14 = this.type - 426;
										if (num14 == 1)
										{
											r2 = 0.1f;
											g2 = 0.2f;
											b2 = 1.1f;
										}
										if (num14 == 2)
										{
											r2 = 1f;
											g2 = 0.1f;
											b2 = 0.1f;
										}
										if (num14 == 3)
										{
											r2 = 0f;
											g2 = 1f;
											b2 = 0.1f;
										}
										if (num14 == 4)
										{
											r2 = 0.9f;
											g2 = 0f;
											b2 = 0.9f;
										}
										if (num14 == 5)
										{
											r2 = 1.3f;
											g2 = 1.3f;
											b2 = 1.3f;
										}
										if (num14 == 6)
										{
											r2 = 0.9f;
											g2 = 0.9f;
											b2 = 0f;
										}
										Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), r2, g2, b2);
										return;
									}
								}
								else
								{
									if (this.type == 2777 || this.type == 2778 || this.type == 2779 || this.type == 2780 || this.type == 2781 || this.type == 2760 || this.type == 2761 || this.type == 2762 || this.type == 3524)
									{
										Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.4f, 0.16f, 0.36f);
										return;
									}
									if (this.type == 2772 || this.type == 2773 || this.type == 2774 || this.type == 2775 || this.type == 2776 || this.type == 2757 || this.type == 2758 || this.type == 2759 || this.type == 3523)
									{
										Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0f, 0.36f, 0.4f);
										return;
									}
									if (this.type == 2782 || this.type == 2783 || this.type == 2784 || this.type == 2785 || this.type == 2786 || this.type == 2763 || this.type == 2764 || this.type == 2765 || this.type == 3522)
									{
										Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.5f, 0.25f, 0.05f);
										return;
									}
									if (this.type == 3462 || this.type == 3463 || this.type == 3464 || this.type == 3465 || this.type == 3466 || this.type == 3381 || this.type == 3382 || this.type == 3383 || this.type == 3525)
									{
										Lighting.AddLight(base.Center, 0.3f, 0.3f, 0.2f);
										return;
									}
									if (this.type == 41)
									{
										if (!this.wet)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1f, 0.75f, 0.55f);
											return;
										}
									}
									else if (this.type == 988)
									{
										if (!this.wet)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.35f, 0.65f, 1f);
											return;
										}
									}
									else
									{
										if (this.type == 1326)
										{
											Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 1f, 0.1f, 0.8f);
											return;
										}
										if (this.type == 5335)
										{
											Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.85f, 0.1f, 0.8f);
											return;
										}
										if (this.type >= 5140 && this.type <= 5146)
										{
											float num15 = 1f;
											float num16 = 1f;
											float num17 = 1f;
											switch (this.type)
											{
											case 5140:
												num15 *= 0.9f;
												num16 *= 0.8f;
												num17 *= 0.1f;
												break;
											case 5141:
												num15 *= 0.25f;
												num16 *= 0.1f;
												num17 *= 0f;
												break;
											case 5142:
												num15 *= 0f;
												num16 *= 0.25f;
												num17 *= 0f;
												break;
											case 5143:
												num15 *= 0f;
												num16 *= 0.16f;
												num17 *= 0.34f;
												break;
											case 5144:
												num15 *= 0.3f;
												num16 *= 0f;
												num17 *= 0.17f;
												break;
											case 5145:
												num15 *= 0.3f;
												num16 *= 0f;
												num17 *= 0.35f;
												break;
											case 5146:
												num15 *= (float)Main.DiscoR / 255f;
												num16 *= (float)Main.DiscoG / 255f;
												num17 *= (float)Main.DiscoB / 255f;
												break;
											}
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), num15, num16, num17);
											return;
										}
										if (this.type == 282)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.7f, 1f, 0.8f);
											return;
										}
										if (this.type == 286)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.7f, 0.8f, 1f);
											return;
										}
										if (this.type == 3112)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1f, 0.6f, 0.85f);
											return;
										}
										if (this.type == 4776)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.7f, 0f, 1f);
											return;
										}
										if (this.type == 3002)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1.05f, 0.95f, 0.55f);
											return;
										}
										if (this.type == 331)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.55f, 0.75f, 0.6f);
											return;
										}
										if (this.type == 183)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.15f, 0.45f, 0.9f);
											return;
										}
										if (this.type == 75)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.8f, 0.7f, 0.1f);
											if (this.timeSinceItemSpawned % 12 == 0)
											{
												Dust dust = Dust.NewDustPerfect(base.Center + new Vector2(0f, (float)this.height * 0.2f) + Main.rand.NextVector2CircularEdge((float)this.width, (float)this.height * 0.6f) * (0.3f + Main.rand.NextFloat() * 0.5f), 228, new Vector2?(new Vector2(0f, -Main.rand.NextFloat() * 0.3f - 1.5f)), 127, default(Color), 1f);
												dust.scale = 0.5f;
												dust.fadeIn = 1.1f;
												dust.noGravity = true;
												dust.noLight = true;
												return;
											}
										}
										else if (ItemID.Sets.BossBag[this.type])
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.4f, 0.4f, 0.4f);
											if (this.timeSinceItemSpawned % 12 == 0)
											{
												Dust dust2 = Dust.NewDustPerfect(base.Center + new Vector2(0f, (float)this.height * -0.1f) + Main.rand.NextVector2CircularEdge((float)this.width * 0.6f, (float)this.height * 0.6f) * (0.3f + Main.rand.NextFloat() * 0.5f), 279, new Vector2?(new Vector2(0f, -Main.rand.NextFloat() * 0.3f - 1.5f)), 127, default(Color), 1f);
												dust2.scale = 0.5f;
												dust2.fadeIn = 1.1f;
												dust2.noGravity = true;
												dust2.noLight = true;
												dust2.alpha = 0;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}

		// Token: 0x06000650 RID: 1616 RVA: 0x002BF950 File Offset: 0x002BDB50
		public static Rectangle GetDrawHitbox(int type, Player user)
		{
			if (Main.dedServ)
			{
				return Rectangle.Empty;
			}
			Main.instance.LoadItem(type);
			if (ItemID.Sets.IsFood[type])
			{
				return TextureAssets.Item[type].Frame(1, 3, 0, 1, 0, 0);
			}
			if (type <= 549)
			{
				if (type == 75)
				{
					return TextureAssets.Item[type].Frame(1, 8, 0, 0, 0, 0);
				}
				if (type - 520 > 1 && type - 547 > 2)
				{
					goto IL_AF;
				}
			}
			else if (type <= 3455)
			{
				if (type != 575 && type - 3453 > 2)
				{
					goto IL_AF;
				}
			}
			else if (type - 3580 > 1 && type - 4068 > 2)
			{
				goto IL_AF;
			}
			return TextureAssets.Item[type].Frame(1, 4, 0, 0, 0, 0);
			IL_AF:
			return TextureAssets.Item[type].Frame(1, 1, 0, 0, 0, 0);
		}

		// Token: 0x06000651 RID: 1617 RVA: 0x002BFA20 File Offset: 0x002BDC20
		public static int NewItem(IEntitySource source, Vector2 pos, Vector2 randomBox, int Type, int Stack = 1, bool noBroadcast = false, int prefixGiven = 0, bool noGrabDelay = false, bool reverseLookup = false)
		{
			return Item.NewItem(source, (int)pos.X, (int)pos.Y, (int)randomBox.X, (int)randomBox.Y, Type, Stack, noBroadcast, prefixGiven, noGrabDelay, reverseLookup);
		}

		// Token: 0x06000652 RID: 1618 RVA: 0x002BFA5C File Offset: 0x002BDC5C
		public static int NewItem(IEntitySource source, Vector2 pos, int Width, int Height, int Type, int Stack = 1, bool noBroadcast = false, int prefixGiven = 0, bool noGrabDelay = false, bool reverseLookup = false)
		{
			return Item.NewItem(source, (int)pos.X, (int)pos.Y, Width, Height, Type, Stack, noBroadcast, prefixGiven, noGrabDelay, reverseLookup);
		}

		// Token: 0x06000653 RID: 1619 RVA: 0x002BFA8C File Offset: 0x002BDC8C
		public static int NewItem(IEntitySource source, int X, int Y, int Width, int Height, int Type, int Stack = 1, bool noBroadcast = false, int pfix = 0, bool noGrabDelay = false, bool reverseLookup = false)
		{
			if (WorldGen.gen)
			{
				return 0;
			}
			if (Main.rand == null)
			{
				Main.rand = new UnifiedRandom();
			}
			if (Main.tenthAnniversaryWorld)
			{
				if (Type == 58)
				{
					Type = (int)Main.rand.NextFromList(new short[]
					{
						1734,
						1867,
						58
					});
				}
				if (Type == 184)
				{
					Type = (int)Main.rand.NextFromList(new short[]
					{
						1735,
						1868,
						184
					});
				}
			}
			if (Main.halloween)
			{
				if (Type == 58)
				{
					Type = 1734;
				}
				if (Type == 184)
				{
					Type = 1735;
				}
			}
			if (Main.xMas)
			{
				if (Type == 58)
				{
					Type = 1867;
				}
				if (Type == 184)
				{
					Type = 1868;
				}
			}
			if (Type > 0 && Item.cachedItemSpawnsByType[Type] != -1)
			{
				Item.cachedItemSpawnsByType[Type] += Stack;
				return 400;
			}
			Main.item[400] = new Item();
			int num = 400;
			if (Main.netMode != 1)
			{
				num = Item.PickAnItemSlotToSpawnItemOn(reverseLookup, num);
			}
			Main.timeItemSlotCannotBeReusedFor[num] = 0;
			Main.item[num] = new Item();
			Item item = Main.item[num];
			item.SetDefaults(Type);
			item.Prefix(pfix);
			item.stack = Stack;
			item.position.X = (float)(X + Width / 2 - item.width / 2);
			item.position.Y = (float)(Y + Height / 2 - item.height / 2);
			item.wet = Collision.WetCollision(item.position, item.width, item.height);
			item.velocity.X = (float)Main.rand.Next(-30, 31) * 0.1f;
			item.velocity.Y = (float)Main.rand.Next(-40, -15) * 0.1f;
			if (Type == 859 || Type == 4743)
			{
				item.velocity *= 0f;
			}
			if (Type == 520 || Type == 521 || (item.type >= 0 && ItemID.Sets.NebulaPickup[item.type]))
			{
				item.velocity.X = (float)Main.rand.Next(-30, 31) * 0.1f;
				item.velocity.Y = (float)Main.rand.Next(-30, 31) * 0.1f;
			}
			item.active = true;
			item.timeSinceItemSpawned = ItemID.Sets.OverflowProtectionTimeOffset[item.type];
			Item.numberOfNewItems++;
			if (ItemSlot.Options.HighlightNewItems && item.type >= 0 && !ItemID.Sets.NeverAppearsAsNewInInventory[item.type])
			{
				item.newAndShiny = true;
			}
			if (Main.netMode == 2 && !noBroadcast)
			{
				NetMessage.SendData(21, -1, -1, null, num, (float)noGrabDelay.ToInt(), 0f, 0f, 0, 0, 0);
			}
			else if (Main.netMode == 0)
			{
				item.playerIndexTheItemIsReservedFor = Main.myPlayer;
			}
			return num;
		}

		// Token: 0x06000654 RID: 1620 RVA: 0x002BFD80 File Offset: 0x002BDF80
		private static int PickAnItemSlotToSpawnItemOn(bool reverseLookup, int nextItem)
		{
			int num = 0;
			int num2 = 400;
			int num3 = 1;
			if (reverseLookup)
			{
				num = 399;
				num2 = -1;
				num3 = -1;
			}
			bool flag = false;
			for (int num4 = num; num4 != num2; num4 += num3)
			{
				if (!Main.item[num4].active && Main.timeItemSlotCannotBeReusedFor[num4] == 0)
				{
					nextItem = num4;
					flag = true;
					break;
				}
			}
			if (!flag)
			{
				int num5 = 0;
				for (int i = 0; i < 400; i++)
				{
					if (Main.timeItemSlotCannotBeReusedFor[i] == 0 && !Main.item[i].instanced && Main.item[i].timeSinceItemSpawned > num5)
					{
						num5 = Main.item[i].timeSinceItemSpawned;
						nextItem = i;
						flag = true;
					}
				}
				if (!flag)
				{
					for (int j = 0; j < 400; j++)
					{
						if (Main.item[j].timeSinceItemSpawned - Main.timeItemSlotCannotBeReusedFor[j] > num5)
						{
							num5 = Main.item[j].timeSinceItemSpawned - Main.timeItemSlotCannotBeReusedFor[j];
							nextItem = j;
						}
					}
				}
			}
			return nextItem;
		}

		// Token: 0x06000655 RID: 1621 RVA: 0x002BFE84 File Offset: 0x002BE084
		public void FindOwner(int whoAmI)
		{
			if (Main.netMode == 1 && this.shimmerTime > 0f)
			{
				this.keepTime = 0;
			}
			if (this.keepTime > 0)
			{
				return;
			}
			int num = this.playerIndexTheItemIsReservedFor;
			this.playerIndexTheItemIsReservedFor = 255;
			bool flag = true;
			if (this.type == 267 && this.ownIgnore != -1)
			{
				flag = false;
			}
			if (this.shimmerTime > 0f)
			{
				this.playerIndexTheItemIsReservedFor = 255;
			}
			else if (flag)
			{
				float num2 = (float)NPC.sWidth;
				for (int i = 0; i < 255; i++)
				{
					if (this.ownIgnore != i)
					{
						Player player = Main.player[i];
						if (player.active)
						{
							Player.ItemSpaceStatus status = player.ItemSpace(Main.item[whoAmI]);
							if (player.CanPullItem(Main.item[whoAmI], status))
							{
								float num3 = Math.Abs(player.position.X + (float)(player.width / 2) - this.position.X - (float)(this.width / 2)) + Math.Abs(player.position.Y + (float)(player.height / 2) - this.position.Y - (float)this.height);
								if (player.manaMagnet && (this.type == 184 || this.type == 1735 || this.type == 1868))
								{
									num3 -= (float)Item.manaGrabRange;
								}
								if (player.lifeMagnet && (this.type == 58 || this.type == 1734 || this.type == 1867))
								{
									num3 -= (float)Item.lifeGrabRange;
								}
								if (this.type == 4143)
								{
									num3 -= (float)Item.manaGrabRange;
								}
								if (num2 > num3)
								{
									num2 = num3;
									this.playerIndexTheItemIsReservedFor = i;
								}
							}
						}
					}
				}
			}
			if (this.playerIndexTheItemIsReservedFor != num && ((num == Main.myPlayer && Main.netMode == 1) || (num == 255 && Main.netMode == 2) || (num != 255 && !Main.player[num].active)))
			{
				NetMessage.SendData(21, -1, -1, null, whoAmI, 0f, 0f, 0f, 0, 0, 0);
				if (this.active)
				{
					NetMessage.SendData(22, -1, -1, null, whoAmI, 0f, 0f, 0f, 0, 0, 0);
				}
			}
		}

		// Token: 0x06000656 RID: 1622 RVA: 0x002C00E9 File Offset: 0x002BE2E9
		public Item Clone()
		{
			return (Item)base.MemberwiseClone();
		}

		// Token: 0x06000657 RID: 1623 RVA: 0x002C00E9 File Offset: 0x002BE2E9
		public Item DeepClone()
		{
			return (Item)base.MemberwiseClone();
		}

		// Token: 0x06000658 RID: 1624 RVA: 0x002C00F6 File Offset: 0x002BE2F6
		public bool IsTheSameAs(Item compareItem)
		{
			return this.netID == compareItem.netID && this.type == compareItem.type;
		}

		// Token: 0x06000659 RID: 1625 RVA: 0x002C0116 File Offset: 0x002BE316
		public bool IsNotTheSameAs(Item compareItem)
		{
			return this.netID != compareItem.netID || this.stack != compareItem.stack || this.prefix != compareItem.prefix;
		}

		// Token: 0x0600065A RID: 1626 RVA: 0x002C0147 File Offset: 0x002BE347
		public void SetNameOverride(string name)
		{
			this._nameOverride = name;
		}

		// Token: 0x0600065B RID: 1627 RVA: 0x002C0150 File Offset: 0x002BE350
		public void ClearNameOverride()
		{
			this._nameOverride = null;
		}

		// Token: 0x170000D1 RID: 209
		// (get) Token: 0x0600065C RID: 1628 RVA: 0x002C0159 File Offset: 0x002BE359
		public bool IsAir
		{
			get
			{
				return this.type <= 0 || this.stack <= 0;
			}
		}

		// Token: 0x0600065D RID: 1629 RVA: 0x002C0172 File Offset: 0x002BE372
		public void TurnToAir(bool fullReset = false)
		{
			if (fullReset)
			{
				this.SetDefaults(0);
				return;
			}
			this.type = 0;
			this.stack = 0;
			this.prefix = 0;
			this.netID = 0;
			this.dye = 0;
			this.shoot = 0;
			this.mountType = -1;
		}

		// Token: 0x0600065E RID: 1630 RVA: 0x002C01B0 File Offset: 0x002BE3B0
		public void OnPurchase(Item item)
		{
			if (item.shopCustomPrice != null)
			{
				item.shopSpecialCurrency = -1;
				item.shopCustomPrice = null;
			}
		}

		// Token: 0x0600065F RID: 1631 RVA: 0x002C01D2 File Offset: 0x002BE3D2
		public int GetStoreValue()
		{
			if (this.shopCustomPrice != null)
			{
				return this.shopCustomPrice.Value;
			}
			return this.value;
		}

		// Token: 0x06000660 RID: 1632 RVA: 0x002C01F3 File Offset: 0x002BE3F3
		public void Serialize(BinaryWriter writer, ItemSerializationContext context)
		{
			if (context == ItemSerializationContext.SavingAndLoading)
			{
				writer.Write(this.netID);
				writer.Write(this.stack);
				writer.Write(this.prefix);
			}
		}

		// Token: 0x06000661 RID: 1633 RVA: 0x002C021C File Offset: 0x002BE41C
		public void DeserializeFrom(BinaryReader reader, ItemSerializationContext context)
		{
			if (context == ItemSerializationContext.SavingAndLoading)
			{
				this.netDefaults(reader.ReadInt32());
				this.stack = reader.ReadInt32();
				this.Prefix((int)reader.ReadByte());
			}
			if (this.type >= (int)ItemID.Count)
			{
				this.TurnToAir(false);
			}
		}

		// Token: 0x170000D2 RID: 210
		// (get) Token: 0x06000662 RID: 1634 RVA: 0x002C025A File Offset: 0x002BE45A
		public bool IsCurrency
		{
			get
			{
				return (this.type >= 71 && this.type <= 74) || CustomCurrencyManager.IsCustomCurrency(this);
			}
		}

		// Token: 0x06000663 RID: 1635 RVA: 0x002C0278 File Offset: 0x002BE478
		public void ResetPrefix()
		{
			if (this.prefix == 0)
			{
				return;
			}
			this.prefix = 0;
			this.Refresh(false);
		}

		// Token: 0x06000664 RID: 1636 RVA: 0x002C0294 File Offset: 0x002BE494
		public void Refresh(bool onlyIfVariantChanged = true)
		{
			if (this.IsAir)
			{
				return;
			}
			if (onlyIfVariantChanged && ItemVariants.SelectVariant(this.type) == this.Variant)
			{
				return;
			}
			bool flag = this.favorited;
			int num = this.stack;
			int num2 = this.netID;
			int prefixWeWant = (int)this.prefix;
			this.netDefaults(num2);
			this.Prefix(prefixWeWant);
			this.stack = num;
			this.favorited = flag;
		}

		// Token: 0x170000D3 RID: 211
		// (get) Token: 0x06000665 RID: 1637 RVA: 0x002C02FC File Offset: 0x002BE4FC
		public bool CanBeQuickUsed
		{
			get
			{
				if (this.IsAir)
				{
					return false;
				}
				bool? flag = ItemID.Sets.CanBeQuickusedOnGamepad[this.type];
				if (flag != null)
				{
					return flag.Value;
				}
				return this.healLife > 0 || this.healMana > 0 || (this.buffType > 0 && this.buffTime > 0);
			}
		}

		// Token: 0x040003F3 RID: 1011
		private string _nameOverride;

		// Token: 0x040003F4 RID: 1012
		public const int luckPotionDuration1 = 18000;

		// Token: 0x040003F5 RID: 1013
		public const int luckPotionDuration2 = 36000;

		// Token: 0x040003F6 RID: 1014
		public const int luckPotionDuration3 = 54000;

		// Token: 0x040003F7 RID: 1015
		public const int flaskTime = 72000;

		// Token: 0x040003F8 RID: 1016
		public const int copper = 1;

		// Token: 0x040003F9 RID: 1017
		public const int silver = 100;

		// Token: 0x040003FA RID: 1018
		public const int gold = 10000;

		// Token: 0x040003FB RID: 1019
		public const int platinum = 1000000;

		// Token: 0x040003FC RID: 1020
		public const int goldCritterRarityColor = 3;

		// Token: 0x040003FD RID: 1021
		private readonly int shadowOrbPrice = Item.sellPrice(0, 1, 50, 0);

		// Token: 0x040003FE RID: 1022
		private readonly int dungeonPrice = Item.sellPrice(0, 1, 75, 0);

		// Token: 0x040003FF RID: 1023
		private readonly int queenBeePrice = Item.sellPrice(0, 2, 0, 0);

		// Token: 0x04000400 RID: 1024
		private readonly int hellPrice = Item.sellPrice(0, 2, 50, 0);

		// Token: 0x04000401 RID: 1025
		private readonly int eclipsePrice = Item.sellPrice(0, 7, 50, 0);

		// Token: 0x04000402 RID: 1026
		private readonly int eclipsePostPlanteraPrice = Item.sellPrice(0, 10, 0, 0);

		// Token: 0x04000403 RID: 1027
		private readonly int eclipseMothronPrice = Item.sellPrice(0, 12, 50, 0);

		// Token: 0x04000404 RID: 1028
		public static int CommonMaxStack = 9999;

		// Token: 0x04000405 RID: 1029
		public static int[] cachedItemSpawnsByType = ItemID.Sets.Factory.CreateIntSet(-1, new int[0]);

		// Token: 0x04000406 RID: 1030
		public static int potionDelay = 3600;

		// Token: 0x04000407 RID: 1031
		public static int restorationDelay = 2700;

		// Token: 0x04000408 RID: 1032
		public static int mushroomDelay = 1800;

		// Token: 0x04000409 RID: 1033
		public bool questItem;

		// Token: 0x0400040A RID: 1034
		public static int[] headType = new int[ArmorIDs.Head.Count];

		// Token: 0x0400040B RID: 1035
		public static int[] bodyType = new int[ArmorIDs.Body.Count];

		// Token: 0x0400040C RID: 1036
		public static int[] legType = new int[ArmorIDs.Legs.Count];

		// Token: 0x0400040D RID: 1037
		public static bool[] staff = new bool[(int)ItemID.Count];

		// Token: 0x0400040E RID: 1038
		public static bool[] claw = new bool[(int)ItemID.Count];

		// Token: 0x0400040F RID: 1039
		public bool flame;

		// Token: 0x04000410 RID: 1040
		public bool mech;

		// Token: 0x04000411 RID: 1041
		public int noGrabDelay;

		// Token: 0x04000412 RID: 1042
		public bool beingGrabbed;

		// Token: 0x04000413 RID: 1043
		public int timeSinceItemSpawned;

		// Token: 0x04000414 RID: 1044
		public int tileWand = -1;

		// Token: 0x04000415 RID: 1045
		public bool wornArmor;

		// Token: 0x04000416 RID: 1046
		public int tooltipContext = -1;

		// Token: 0x04000417 RID: 1047
		public byte dye;

		// Token: 0x04000418 RID: 1048
		public int fishingPole = 1;

		// Token: 0x04000419 RID: 1049
		public int bait;

		// Token: 0x0400041A RID: 1050
		public static int coinGrabRange = 350;

		// Token: 0x0400041B RID: 1051
		public static int manaGrabRange = 300;

		// Token: 0x0400041C RID: 1052
		public static int lifeGrabRange = 250;

		// Token: 0x0400041D RID: 1053
		public static int treasureGrabRange = 150;

		// Token: 0x0400041E RID: 1054
		public short makeNPC;

		// Token: 0x0400041F RID: 1055
		public bool expertOnly;

		// Token: 0x04000420 RID: 1056
		public bool expert;

		// Token: 0x04000421 RID: 1057
		public bool isAShopItem;

		// Token: 0x04000422 RID: 1058
		public short hairDye = -1;

		// Token: 0x04000423 RID: 1059
		public byte paint;

		// Token: 0x04000424 RID: 1060
		public byte paintCoating;

		// Token: 0x04000425 RID: 1061
		public bool instanced;

		// Token: 0x04000426 RID: 1062
		public int ownIgnore = -1;

		// Token: 0x04000427 RID: 1063
		public int ownTime;

		// Token: 0x04000428 RID: 1064
		public int keepTime;

		// Token: 0x04000429 RID: 1065
		public int timeLeftInWhichTheItemCannotBeTakenByEnemies;

		// Token: 0x0400042A RID: 1066
		public int type;

		// Token: 0x0400042B RID: 1067
		public bool favorited;

		// Token: 0x0400042C RID: 1068
		public int holdStyle;

		// Token: 0x0400042D RID: 1069
		public int useStyle;

		// Token: 0x0400042E RID: 1070
		public bool channel;

		// Token: 0x0400042F RID: 1071
		public bool accessory;

		// Token: 0x04000430 RID: 1072
		public int useAnimation;

		// Token: 0x04000431 RID: 1073
		public int useTime;

		// Token: 0x04000432 RID: 1074
		public int stack;

		// Token: 0x04000433 RID: 1075
		public int maxStack;

		// Token: 0x04000434 RID: 1076
		public int pick;

		// Token: 0x04000435 RID: 1077
		public int axe;

		// Token: 0x04000436 RID: 1078
		public int hammer;

		// Token: 0x04000437 RID: 1079
		public int tileBoost;

		// Token: 0x04000438 RID: 1080
		public int createTile = -1;

		// Token: 0x04000439 RID: 1081
		public int createWall = -1;

		// Token: 0x0400043A RID: 1082
		public int placeStyle;

		// Token: 0x0400043B RID: 1083
		public int damage;

		// Token: 0x0400043C RID: 1084
		public float knockBack;

		// Token: 0x0400043D RID: 1085
		public int healLife;

		// Token: 0x0400043E RID: 1086
		public int healMana;

		// Token: 0x0400043F RID: 1087
		public bool potion;

		// Token: 0x04000440 RID: 1088
		public bool consumable;

		// Token: 0x04000441 RID: 1089
		public bool autoReuse;

		// Token: 0x04000442 RID: 1090
		public bool useTurn;

		// Token: 0x04000443 RID: 1091
		public Color color;

		// Token: 0x04000444 RID: 1092
		public int alpha;

		// Token: 0x04000445 RID: 1093
		public short glowMask;

		// Token: 0x04000446 RID: 1094
		public float scale = 1f;

		// Token: 0x04000447 RID: 1095
		public LegacySoundStyle UseSound;

		// Token: 0x04000448 RID: 1096
		public int defense;

		// Token: 0x04000449 RID: 1097
		public int headSlot = -1;

		// Token: 0x0400044A RID: 1098
		public int bodySlot = -1;

		// Token: 0x0400044B RID: 1099
		public int legSlot = -1;

		// Token: 0x0400044C RID: 1100
		public sbyte handOnSlot = -1;

		// Token: 0x0400044D RID: 1101
		public sbyte handOffSlot = -1;

		// Token: 0x0400044E RID: 1102
		public sbyte backSlot = -1;

		// Token: 0x0400044F RID: 1103
		public sbyte frontSlot = -1;

		// Token: 0x04000450 RID: 1104
		public sbyte shoeSlot = -1;

		// Token: 0x04000451 RID: 1105
		public sbyte waistSlot = -1;

		// Token: 0x04000452 RID: 1106
		public sbyte wingSlot = -1;

		// Token: 0x04000453 RID: 1107
		public sbyte shieldSlot = -1;

		// Token: 0x04000454 RID: 1108
		public sbyte neckSlot = -1;

		// Token: 0x04000455 RID: 1109
		public sbyte faceSlot = -1;

		// Token: 0x04000456 RID: 1110
		public sbyte balloonSlot = -1;

		// Token: 0x04000457 RID: 1111
		public sbyte beardSlot = -1;

		// Token: 0x04000458 RID: 1112
		public int stringColor;

		// Token: 0x04000459 RID: 1113
		public ItemTooltip ToolTip;

		// Token: 0x0400045A RID: 1114
		public string BestiaryNotes;

		// Token: 0x0400045B RID: 1115
		public int playerIndexTheItemIsReservedFor = 255;

		// Token: 0x0400045C RID: 1116
		public int rare;

		// Token: 0x0400045E RID: 1118
		public int shoot;

		// Token: 0x0400045F RID: 1119
		public float shootSpeed;

		// Token: 0x04000460 RID: 1120
		public int ammo = AmmoID.None;

		// Token: 0x04000461 RID: 1121
		public bool notAmmo;

		// Token: 0x04000462 RID: 1122
		public int useAmmo = AmmoID.None;

		// Token: 0x04000463 RID: 1123
		public int lifeRegen;

		// Token: 0x04000464 RID: 1124
		public int manaIncrease;

		// Token: 0x04000465 RID: 1125
		public bool buyOnce;

		// Token: 0x04000466 RID: 1126
		public int mana;

		// Token: 0x04000467 RID: 1127
		public bool noUseGraphic;

		// Token: 0x04000468 RID: 1128
		public bool noMelee;

		// Token: 0x04000469 RID: 1129
		public int timeSinceTheItemHasBeenReservedForSomeone;

		// Token: 0x0400046A RID: 1130
		public int value;

		// Token: 0x0400046B RID: 1131
		public bool buy;

		// Token: 0x0400046C RID: 1132
		public bool social;

		// Token: 0x0400046D RID: 1133
		public bool vanity;

		// Token: 0x0400046E RID: 1134
		public bool material;

		// Token: 0x0400046F RID: 1135
		public bool noWet;

		// Token: 0x04000470 RID: 1136
		public int buffType;

		// Token: 0x04000471 RID: 1137
		public int buffTime;

		// Token: 0x04000472 RID: 1138
		public int mountType = -1;

		// Token: 0x04000473 RID: 1139
		public bool cartTrack;

		// Token: 0x04000474 RID: 1140
		public bool uniqueStack;

		// Token: 0x04000475 RID: 1141
		public int shopSpecialCurrency = -1;

		// Token: 0x04000476 RID: 1142
		public int? shopCustomPrice;

		// Token: 0x04000477 RID: 1143
		public bool shootsEveryUse;

		// Token: 0x04000478 RID: 1144
		public bool chlorophyteExtractinatorConsumable;

		// Token: 0x04000479 RID: 1145
		public bool DD2Summon;

		// Token: 0x0400047A RID: 1146
		public int netID;

		// Token: 0x0400047B RID: 1147
		public int crit;

		// Token: 0x0400047C RID: 1148
		public byte prefix;

		// Token: 0x0400047D RID: 1149
		public bool melee;

		// Token: 0x0400047E RID: 1150
		public bool magic;

		// Token: 0x0400047F RID: 1151
		public bool ranged;

		// Token: 0x04000480 RID: 1152
		public bool summon;

		// Token: 0x04000481 RID: 1153
		public bool sentry;

		// Token: 0x04000482 RID: 1154
		public int reuseDelay;

		// Token: 0x04000483 RID: 1155
		public bool newAndShiny;

		// Token: 0x04000484 RID: 1156
		[Old("This is used to allow items to be discerned as vanity even if they didn't have visual slots to poll against")]
		public bool hasVanityEffects;

		// Token: 0x04000485 RID: 1157
		private const int foodWidth = 22;

		// Token: 0x04000486 RID: 1158
		private const int foodHeight = 22;

		// Token: 0x04000487 RID: 1159
		public const int WALL_PLACEMENT_USETIME = 7;

		// Token: 0x04000488 RID: 1160
		public static int numberOfNewItems = 0;

		// Token: 0x04000489 RID: 1161
		public bool shimmered;

		// Token: 0x0400048A RID: 1162
		public float shimmerTime;
	}
}
