// Decompiled with JetBrains decompiler
// Type: SummonerPrefix.Prefixes.Focused
// Assembly: SummonerPrefix, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 8925F543-424F-4302-A9BE-42DFABB73BB2
// Assembly location: D:\dorad\Documents\My Games\Terraria\tModLoader\ModReader\SummonerPrefix\SummonerPrefix.dll

using System;
using System.Collections.Generic;
using Terraria;
using Terraria.ID;
using Terraria.Localization;
using Terraria.ModLoader;
using TranslateTest2.Core;

namespace TranslateTest2.Prefixes
{
    public class Focused : ModPrefix
    {
        // デフォルト値（ローカリゼーションで上書き可能）
        private static readonly float DefaultMinionSlotAndDmgMult = 1.4f;
        
        // ローカリゼーションから値を取得（キャッシュ付き）
        private static float? _cachedMinionSlotAndDmgMult = null;
        
        public static float MinionSlotAndDmgMult 
        {
            get
            {
                if (_cachedMinionSlotAndDmgMult == null)
                {
                    _cachedMinionSlotAndDmgMult = LocalizedValues.GetPrefixFloat("Focused", "MinionSlotAndDmgMult", DefaultMinionSlotAndDmgMult);
                    LocalizedValues.LogPrefixValue("Focused", "MinionSlotAndDmgMult", DefaultMinionSlotAndDmgMult, _cachedMinionSlotAndDmgMult.Value);
                }
                return _cachedMinionSlotAndDmgMult.Value;
            }
        }

        public override PrefixCategory Category => PrefixCategory.Magic;

        public override float RollChance(Item item) => 1f;

        public override bool CanRoll(Item item) => item.shoot > ProjectileID.None && item.isMinionSummonItem();

        public override void SetStats(
            ref float damageMult,
            ref float knockbackMult,
            ref float useTimeMult,
            ref float scaleMult,
            ref float shootSpeedMult,
            ref float manaMult,
            ref int critBonus)
        {
            damageMult = MinionSlotAndDmgMult + 0.4f;
        }

        public override void ModifyValue(ref float valueMult) => valueMult *= 1.25f;

        public override void Apply(Item item)
        {
            item.global().MinionSlotMult = MinionSlotAndDmgMult;
        }

        public override IEnumerable<TooltipLine> GetTooltipLines(Item item)
        {
            float damageIncrease = (MinionSlotAndDmgMult + 0.4f - 1f) * 100f;
            
            // Calculate actual slot increase for this specific item
            Projectile projectile = new Projectile();
            projectile.SetDefaults(item.shoot);
            float actualSlotIncrease = projectile.minionSlots * (MinionSlotAndDmgMult - 1f);
            
            yield return new TooltipLine(Mod, "PrefixFocusedDescription", 
                $"+{damageIncrease:0}% ダメージ, +{((MinionSlotAndDmgMult - 1f) * 100):0}% スロット使用量 (+{actualSlotIncrease:0.1f} スロット)")
            {
                IsModifier = true,
                IsModifierBad = false
            };
        }

        // ローカリゼーション変更時にキャッシュをクリア
        public override void PostSetupContent()
        {
            _cachedMinionSlotAndDmgMult = null;
        }
    }
}