using System;
using System.Collections.Generic;
using Terraria;
using Terraria.ID;
using Terraria.Localization;
using Terraria.ModLoader;
using TranslateTest2.Core;

namespace TranslateTest2.Prefixes
{
    public class Brisk : ModPrefix
    {
        // デフォルト値（ローカリゼーションで上書き可能）
        private static readonly float DefaultMinionSpeedMult = 1.2f;
        
        // ローカリゼーションから値を取得（キャッシュ付き）
        private static float? _cachedMinionSpeedMult = null;
        
        public static float MinionSpeedMult 
        {
            get
            {
                if (_cachedMinionSpeedMult == null)
                {
                    _cachedMinionSpeedMult = LocalizedValues.GetPrefixFloat("Brisk", "MinionSpeedMult", DefaultMinionSpeedMult);
                    LocalizedValues.LogPrefixValue("Brisk", "MinionSpeedMult", DefaultMinionSpeedMult, _cachedMinionSpeedMult.Value);
                }
                return _cachedMinionSpeedMult.Value;
            }
        }

        public override PrefixCategory Category => PrefixCategory.Magic;

        public override float RollChance(Item item) => 0.8f;

        public override bool CanRoll(Item item) => item.shoot > ProjectileID.None && item.isMinionSummonItem();

        public override void SetStats(
            ref float damageMult,
            ref float knockbackMult,
            ref float useTimeMult,
            ref float scaleMult,
            ref float shootSpeedMult,
            ref float manaMult,
            ref int critBonus)
        {
        }

        public override void ModifyValue(ref float valueMult) => valueMult *= 1.4f;

        public override void Apply(Item item)
        {
            item.global().MinionSpeedMult += MinionSpeedMult - 1f;
        }

        public override IEnumerable<TooltipLine> GetTooltipLines(Item item)
        {
            float speedIncrease = (MinionSpeedMult - 1f) * 100f;
            yield return new TooltipLine(Mod, "PrefixBriskDescription", 
                $"+{speedIncrease:0}% 召喚物の移動速度")
            {
                IsModifier = true,
                IsModifierBad = false
            };
        }

        // ローカリゼーション変更時にキャッシュをクリア
        public override void PostSetupContent()
        {
            _cachedMinionSpeedMult = null;
        }
    }
}