using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.CompilerServices;
using Microsoft.Xna.Framework;
using Terraria.Audio;
using Terraria.DataStructures;
using Terraria.Enums;
using Terraria.GameContent;
using Terraria.GameContent.Achievements;
using Terraria.GameContent.Creative;
using Terraria.GameContent.Events;
using Terraria.GameContent.Items;
using Terraria.GameContent.Prefixes;
using Terraria.GameContent.UI;
using Terraria.Graphics.Shaders;
using Terraria.ID;
using Terraria.ModLoader;
using Terraria.ModLoader.Core;
using Terraria.ModLoader.IO;
using Terraria.UI;
using Terraria.Utilities;

namespace Terraria
{
	// Token: 0x02000033 RID: 51
	public class Item : Entity, TagSerializable, IEntityWithGlobals<GlobalItem>
	{
		// Token: 0x1700007E RID: 126
		// (get) Token: 0x0600024B RID: 587 RVA: 0x0002B31D File Offset: 0x0002951D
		// (set) Token: 0x0600024C RID: 588 RVA: 0x0002B32A File Offset: 0x0002952A
		internal bool melee
		{
			get
			{
				return this.CountsAsClass(DamageClass.Melee);
			}
			set
			{
				if (value)
				{
					this.DamageType = DamageClass.Melee;
					return;
				}
				if (this.DamageType == DamageClass.Melee)
				{
					this.DamageType = DamageClass.Default;
				}
			}
		}

		// Token: 0x1700007F RID: 127
		// (get) Token: 0x0600024D RID: 589 RVA: 0x0002B353 File Offset: 0x00029553
		// (set) Token: 0x0600024E RID: 590 RVA: 0x0002B360 File Offset: 0x00029560
		internal bool magic
		{
			get
			{
				return this.CountsAsClass(DamageClass.Magic);
			}
			set
			{
				if (value)
				{
					this.DamageType = DamageClass.Magic;
					return;
				}
				if (this.DamageType == DamageClass.Magic)
				{
					this.DamageType = DamageClass.Default;
				}
			}
		}

		// Token: 0x17000080 RID: 128
		// (get) Token: 0x0600024F RID: 591 RVA: 0x0002B389 File Offset: 0x00029589
		// (set) Token: 0x06000250 RID: 592 RVA: 0x0002B396 File Offset: 0x00029596
		internal bool ranged
		{
			get
			{
				return this.CountsAsClass(DamageClass.Ranged);
			}
			set
			{
				if (value)
				{
					this.DamageType = DamageClass.Ranged;
					return;
				}
				if (this.DamageType == DamageClass.Ranged)
				{
					this.DamageType = DamageClass.Default;
				}
			}
		}

		// Token: 0x17000081 RID: 129
		// (get) Token: 0x06000251 RID: 593 RVA: 0x0002B3BF File Offset: 0x000295BF
		// (set) Token: 0x06000252 RID: 594 RVA: 0x0002B3CC File Offset: 0x000295CC
		internal bool summon
		{
			get
			{
				return this.CountsAsClass(DamageClass.Summon);
			}
			set
			{
				if (value)
				{
					this.DamageType = DamageClass.Summon;
					return;
				}
				if (this.DamageType == DamageClass.Summon)
				{
					this.DamageType = DamageClass.Default;
				}
			}
		}

		// Token: 0x06000253 RID: 595 RVA: 0x0002B3F8 File Offset: 0x000295F8
		public Item()
		{
		}

		// Token: 0x06000254 RID: 596 RVA: 0x0002B56C File Offset: 0x0002976C
		public Item(int setDefaultsToType, int stack = 1, int prefix = 0)
		{
			this.SetDefaults(setDefaultsToType);
			if (setDefaultsToType > 0)
			{
				this.stack = stack;
			}
			if (prefix != 0)
			{
				this.Prefix(prefix);
			}
		}

		/// <summary>
		/// The localized name of this item without stack size or prefixes.
		/// <br /> Can be overridden using <see cref="M:Terraria.Item.SetNameOverride(System.String)" />.
		/// </summary>
		// Token: 0x17000082 RID: 130
		// (get) Token: 0x06000255 RID: 597 RVA: 0x0002B6FD File Offset: 0x000298FD
		public string Name
		{
			get
			{
				return this._nameOverride ?? Lang.GetItemNameValue(this.type);
			}
		}

		/// <summary>
		/// The name of this item including stack size and prefix.
		/// </summary>
		// Token: 0x17000083 RID: 131
		// (get) Token: 0x06000256 RID: 598 RVA: 0x0002B714 File Offset: 0x00029914
		public string HoverName
		{
			get
			{
				string text = this.AffixName();
				if (this.stack > 1)
				{
					text = text + " (" + this.stack.ToString() + ")";
				}
				return text;
			}
		}

		/// <summary>
		/// <see langword="true" /> if <c><see cref="F:Terraria.Item.paint" /> &gt; 0 || <see cref="F:Terraria.Item.paintCoating" /> &gt; 0</c> and <see langword="false" /> otherwise.
		/// </summary>
		// Token: 0x17000084 RID: 132
		// (get) Token: 0x06000257 RID: 599 RVA: 0x0002B74E File Offset: 0x0002994E
		public bool PaintOrCoating
		{
			get
			{
				return this.paint > 0 || this.paintCoating > 0;
			}
		}

		// Token: 0x17000085 RID: 133
		// (get) Token: 0x06000258 RID: 600 RVA: 0x0002B764 File Offset: 0x00029964
		public bool FitsAccessoryVanitySlot
		{
			get
			{
				return true;
			}
		}

		// Token: 0x17000086 RID: 134
		// (get) Token: 0x06000259 RID: 601 RVA: 0x0002B768 File Offset: 0x00029968
		public int OriginalRarity
		{
			get
			{
				Item item;
				if (!ContentSamples.ItemsByType.TryGetValue(this.type, out item))
				{
					return 0;
				}
				return item.rare;
			}
		}

		// Token: 0x17000087 RID: 135
		// (get) Token: 0x0600025A RID: 602 RVA: 0x0002B794 File Offset: 0x00029994
		public int OriginalDamage
		{
			get
			{
				Item item;
				if (!ContentSamples.ItemsByType.TryGetValue(this.type, out item))
				{
					return 0;
				}
				return item.damage;
			}
		}

		// Token: 0x17000088 RID: 136
		// (get) Token: 0x0600025B RID: 603 RVA: 0x0002B7C0 File Offset: 0x000299C0
		public int OriginalDefense
		{
			get
			{
				Item item;
				if (!ContentSamples.ItemsByType.TryGetValue(this.type, out item))
				{
					return 0;
				}
				return item.defense;
			}
		}

		/// <summary>
		/// If not null, indicates that this item has a special seed variant active.
		/// <para /> Item variants are not supported for modded items.
		/// </summary>
		// Token: 0x17000089 RID: 137
		// (get) Token: 0x0600025C RID: 604 RVA: 0x0002B7E9 File Offset: 0x000299E9
		// (set) Token: 0x0600025D RID: 605 RVA: 0x0002B7F1 File Offset: 0x000299F1
		public ItemVariant Variant { get; private set; }

		// Token: 0x1700008A RID: 138
		// (get) Token: 0x0600025E RID: 606 RVA: 0x0002B7FA File Offset: 0x000299FA
		public bool IsACoin
		{
			get
			{
				return this.type - 71 <= 3;
			}
		}

		// Token: 0x1700008B RID: 139
		// (get) Token: 0x0600025F RID: 607 RVA: 0x0002B80B File Offset: 0x00029A0B
		public bool IsAir
		{
			get
			{
				return this.type <= 0 || this.stack <= 0;
			}
		}

		// Token: 0x1700008C RID: 140
		// (get) Token: 0x06000260 RID: 608 RVA: 0x0002B824 File Offset: 0x00029A24
		public bool IsCurrency
		{
			get
			{
				return (this.type >= 71 && this.type <= 74) || CustomCurrencyManager.IsCustomCurrency(this);
			}
		}

		// Token: 0x1700008D RID: 141
		// (get) Token: 0x06000261 RID: 609 RVA: 0x0002B844 File Offset: 0x00029A44
		public bool CanBeQuickUsed
		{
			get
			{
				if (this.IsAir)
				{
					return false;
				}
				bool? flag = ItemID.Sets.CanBeQuickusedOnGamepad[this.type];
				if (flag != null)
				{
					return flag.Value;
				}
				return this.healLife > 0 || this.healMana > 0 || (this.buffType > 0 && this.buffTime > 0);
			}
		}

		/// <summary>
		/// Begins caching items spawns for a given item type (<see cref="F:Terraria.Item.type" />).
		/// <br /> Cached item types will not be spawned into the world when created with Item.NewItem().
		/// <br /> Cache sizes can be checked by indexing <see cref="F:Terraria.Item.cachedItemSpawnsByType" /> and dropped using <see cref="M:Terraria.Item.DropCache(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Boolean)" />.
		/// </summary>
		/// <param name="t">The item type to start caching.</param>
		// Token: 0x06000262 RID: 610 RVA: 0x0002B8A8 File Offset: 0x00029AA8
		public static void StartCachingType(int t)
		{
			if (Item.cachedItemSpawnsByType[t] == -1)
			{
				Item.cachedItemSpawnsByType[t] = 0;
			}
		}

		/// <summary>
		/// Drops a cache previously created using <see cref="M:Terraria.Item.StartCachingType(System.Int32)" />.
		/// <br /> If no cache of <paramref name="t" /> exists, nothing happens.
		/// </summary>
		/// <param name="reason">The source of the dropped cache.</param>
		/// <param name="pos">The position to drop the cache in world coordinates.</param>
		/// <param name="spread">The random spread of the dropped items in world coordinates.</param>
		/// <param name="t">The item type (<see cref="F:Terraria.Item.type" />) to drop.</param>
		/// <param name="stopCaching">If <see langword="true" />, then <paramref name="t" /> will no longer be cached, allowing future drops to spawn as normal.</param>
		// Token: 0x06000263 RID: 611 RVA: 0x0002B8BC File Offset: 0x00029ABC
		public static void DropCache(IEntitySource reason, Vector2 pos, Vector2 spread, int t, bool stopCaching = true)
		{
			if (Item.cachedItemSpawnsByType[t] == -1)
			{
				return;
			}
			int num = Item.cachedItemSpawnsByType[t];
			Item.cachedItemSpawnsByType[t] = (stopCaching ? -1 : 0);
			Item item = new Item();
			item.SetDefaults(t);
			while (num > 0)
			{
				int num2 = item.maxStack;
				if (num < num2)
				{
					num2 = num;
				}
				Item.NewItem(reason, (int)pos.X, (int)pos.Y, (int)spread.X, (int)spread.Y, t, num2, false, 0, false, false);
				num -= num2;
			}
		}

		// Token: 0x06000264 RID: 612 RVA: 0x0002B938 File Offset: 0x00029B38
		internal IEntitySource GetNPCSource_FromThis()
		{
			return new EntitySource_Parent(this, null);
		}

		// Token: 0x06000265 RID: 613 RVA: 0x0002B941 File Offset: 0x00029B41
		internal IEntitySource GetItemSource_Misc(int itemSourceId)
		{
			return base.GetSource_Misc(ItemSourceID.ToContextString(itemSourceId));
		}

		// Token: 0x06000266 RID: 614 RVA: 0x0002B950 File Offset: 0x00029B50
		public override string ToString()
		{
			DefaultInterpolatedStringHandler defaultInterpolatedStringHandler = new DefaultInterpolatedStringHandler(25, 3);
			defaultInterpolatedStringHandler.AppendLiteral("{Name: \"");
			defaultInterpolatedStringHandler.AppendFormatted(this.Name);
			defaultInterpolatedStringHandler.AppendLiteral("\" NetID: ");
			defaultInterpolatedStringHandler.AppendFormatted<int>(this.netID);
			defaultInterpolatedStringHandler.AppendLiteral(" Stack: ");
			defaultInterpolatedStringHandler.AppendFormatted<int>(this.stack);
			return defaultInterpolatedStringHandler.ToStringAndClear();
		}

		/// <summary>
		/// Determines if this <see cref="T:Terraria.Item" /> can receive prefixes.
		/// </summary>
		/// <returns>
		/// <see langword="true" /> if this <see cref="T:Terraria.Item" /> is allowed to receive prefixes, <see langword="false" /> otherwise.
		/// </returns>
		// Token: 0x06000267 RID: 615 RVA: 0x0002B9BC File Offset: 0x00029BBC
		public bool CanHavePrefixes()
		{
			return this.type != 0 && ItemID.Sets.CanGetPrefixes[this.type] && (this.maxStack == 1 || this.AllowReforgeForStackableItem) && this.ammo == 0 && (this.damage > 0 || this.IsAPrefixableAccessory());
		}

		/// <summary>
		/// Attempts to apply a prefix to this <see cref="T:Terraria.Item" />.
		/// </summary>
		/// <param name="prefixWeWant">
		/// <br /> If <c><paramref name="prefixWeWant" /> == 0</c>, do nothing.
		/// <br /> If <c><paramref name="prefixWeWant" /> == -1</c>, then a random prefix is rolled, with a 25% chance to not roll a prefix and an additional 66% chance to void any prefixes in the <see cref="F:Terraria.ID.PrefixID.Sets.ReducedNaturalChance" /> set. This is used for chest loot, starting equipment, etc.
		/// <br /> If <c><paramref name="prefixWeWant" /> == -2</c>, then a random prefix is rolled, with no chance to not roll a prefix. This is used for the Goblin Tinkerer.
		/// <br /> If <c><paramref name="prefixWeWant" /> == -3</c>, then this method simple checks if this item <em>can</em> receive prefixes.
		/// <br /> Otherwise, attempt to apply the given <see cref="T:Terraria.ID.PrefixID" /> to this item.
		/// </param>
		/// <returns>
		/// <see langword="false" /> if:<list type="bullet">
		/// <item><paramref name="prefixWeWant" /> is <c>0</c></item>
		/// <item><see cref="M:Terraria.Item.CanHavePrefixes" /> returns <see langword="false" /></item>
		/// <item><see cref="M:Terraria.Item.CanApplyPrefix(System.Int32)" /> returns <see langword="false" /></item>
		/// <item><c><paramref name="prefixWeWant" /> == -1</c> and <c><see cref="F:Terraria.Item.maxStack" /> &gt; 1</c></item>
		/// <item><see cref="M:Terraria.ModLoader.ItemLoader.PrefixChance(Terraria.Item,System.Int32,Terraria.Utilities.UnifiedRandom)" /> returns <see langword="false" /></item>
		/// <item><c><paramref name="prefixWeWant" /> == -1 or -2 or -3</c> and <see cref="M:Terraria.ModLoader.PrefixLoader.Roll(Terraria.Item,Terraria.Utilities.UnifiedRandom,System.Int32@,System.Boolean)" /> returns <see langword="false" />.</item>
		/// </list>
		/// Otherwise, return <see langword="true" />.
		/// </returns>
		// Token: 0x06000268 RID: 616 RVA: 0x0002BA0C File Offset: 0x00029C0C
		public bool Prefix(int prefixWeWant)
		{
			if (!WorldGen.gen && Main.rand == null)
			{
				Main.rand = new UnifiedRandom();
			}
			if (prefixWeWant == 0)
			{
				return false;
			}
			if (!this.CanHavePrefixes())
			{
				return false;
			}
			if (prefixWeWant > 0 && !this.CanApplyPrefix(prefixWeWant))
			{
				return false;
			}
			if (prefixWeWant == -1 && this.maxStack > 1)
			{
				return false;
			}
			UnifiedRandom unifiedRandom = WorldGen.gen ? WorldGen.genRand : Main.rand;
			bool? applyPrefixOverride = ItemLoader.PrefixChance(this, prefixWeWant, unifiedRandom);
			if (!(applyPrefixOverride ?? true))
			{
				return false;
			}
			int rolledPrefix = prefixWeWant;
			float dmg = 1f;
			float kb = 1f;
			float spd = 1f;
			float size = 1f;
			float shtspd = 1f;
			float mcst = 1f;
			int crt = 0;
			bool flag = true;
			while (flag)
			{
				flag = false;
				if (!(applyPrefixOverride ?? false) && rolledPrefix == -1 && unifiedRandom.Next(4) == 0)
				{
					return true;
				}
				if (prefixWeWant < -1)
				{
					rolledPrefix = -1;
				}
				if (prefixWeWant == -3)
				{
					int num2;
					return PrefixLoader.Roll(this, unifiedRandom, out num2, true);
				}
				if ((rolledPrefix == -1 || rolledPrefix == -2 || rolledPrefix == -3) && !this.RollAPrefix(unifiedRandom, ref rolledPrefix))
				{
					return false;
				}
				if (prefixWeWant == -3)
				{
					return true;
				}
				if (prefixWeWant == -1)
				{
					if (!(applyPrefixOverride ?? false) && PrefixID.Sets.ReducedNaturalChance[rolledPrefix] && unifiedRandom.Next(3) != 0)
					{
						return true;
					}
				}
				if (!this.TryGetPrefixStatMultipliersForItem(rolledPrefix, out dmg, out kb, out spd, out size, out shtspd, out mcst, out crt))
				{
					flag = true;
					rolledPrefix = -1;
				}
				if (prefixWeWant == -2 && rolledPrefix == 0)
				{
					rolledPrefix = -1;
					flag = true;
				}
			}
			this.UndoItemAnimationCompensations();
			this.damage = (int)Math.Round((double)((float)this.damage * dmg));
			this.useAnimation = (int)Math.Round((double)((float)this.useAnimation * spd));
			this.useTime = (int)Math.Round((double)((float)this.useTime * spd));
			this.reuseDelay = (int)Math.Round((double)((float)this.reuseDelay * spd));
			this.mana = (int)Math.Round((double)((float)this.mana * mcst));
			this.knockBack *= kb;
			this.scale *= size;
			this.shootSpeed *= shtspd;
			this.crit += crt;
			if (rolledPrefix >= PrefixID.Count)
			{
				ModPrefix modPrefix = PrefixLoader.GetPrefix(rolledPrefix);
				if (modPrefix != null)
				{
					modPrefix.Apply(this);
				}
			}
			this.ApplyItemAnimationCompensationsToVanillaItems();
			float num = 1f * dmg * (2f - spd) * (2f - mcst) * size * kb * shtspd * (1f + (float)crt * 0.02f);
			if (rolledPrefix == 62 || rolledPrefix == 69 || rolledPrefix == 73 || rolledPrefix == 77)
			{
				num *= 1.05f;
			}
			if (rolledPrefix == 63 || rolledPrefix == 70 || rolledPrefix == 74 || rolledPrefix == 78 || rolledPrefix == 67)
			{
				num *= 1.1f;
			}
			if (rolledPrefix == 64 || rolledPrefix == 71 || rolledPrefix == 75 || rolledPrefix == 79 || rolledPrefix == 66)
			{
				num *= 1.15f;
			}
			if (rolledPrefix == 65 || rolledPrefix == 72 || rolledPrefix == 76 || rolledPrefix == 80 || rolledPrefix == 68)
			{
				num *= 1.2f;
			}
			if (rolledPrefix >= PrefixID.Count)
			{
				ModPrefix modPrefix2 = PrefixLoader.GetPrefix(rolledPrefix);
				if (modPrefix2 != null)
				{
					modPrefix2.ModifyValue(ref num);
				}
			}
			int baseRarity = this.rare;
			if ((double)num >= 1.2)
			{
				this.rare += 2;
			}
			else if ((double)num >= 1.05)
			{
				this.rare++;
			}
			else if ((double)num <= 0.8)
			{
				this.rare -= 2;
			}
			else if ((double)num <= 0.95)
			{
				this.rare--;
			}
			if (baseRarity >= 12)
			{
				this.rare = RarityLoader.GetRarity(baseRarity).GetPrefixedRarity(this.rare - baseRarity, num);
			}
			else if (this.rare > 11)
			{
				this.rare = 11;
			}
			if (this.rare > -11)
			{
				if (this.rare < -1)
				{
					this.rare = -1;
				}
				if (this.rare > RarityLoader.RarityCount - 1)
				{
					this.rare = RarityLoader.RarityCount - 1;
				}
			}
			num *= num;
			this.value = (int)((float)this.value * num);
			this.prefix = rolledPrefix;
			return true;
		}

		/// <summary>
		/// Determines if this <see cref="T:Terraria.Item" /> can roll the given prefix.
		/// </summary>
		/// <param name="prefix">The <see cref="T:Terraria.ID.PrefixID" /> to check.</param>
		/// <returns><see langword="true" /> if this <see cref="T:Terraria.Item" /> can receive prefixes (<see cref="M:Terraria.Item.CanHavePrefixes" />) and if <see cref="M:Terraria.ModLoader.PrefixLoader.CanRoll(Terraria.Item,System.Int32)" /> returns <see langword="true" />, <see langword="false" /> otherwise.</returns>
		/// <remarks>Just because a prefix can be rolled does not mean it can be applied -- use <see cref="M:Terraria.Item.CanApplyPrefix(System.Int32)" /> to check for that.</remarks>
		// Token: 0x06000269 RID: 617 RVA: 0x0002BE36 File Offset: 0x0002A036
		public bool CanRollPrefix(int prefix)
		{
			return this.CanHavePrefixes() && PrefixLoader.CanRoll(this, prefix);
		}

		/// <summary>
		/// Determines if this <see cref="T:Terraria.Item" /> can receive the given prefix.
		/// </summary>
		/// <param name="prefix">The <see cref="T:Terraria.ID.PrefixID" /> to check.</param>
		/// <returns><see langword="true" /> if this <see cref="T:Terraria.Item" /> can roll the given prefix (<see cref="M:Terraria.Item.CanRollPrefix(System.Int32)" />) and if the applied prefix does not fail to modify any stat values.</returns>
		// Token: 0x0600026A RID: 618 RVA: 0x0002BE4C File Offset: 0x0002A04C
		public bool CanApplyPrefix(int prefix)
		{
			if (!this.CanRollPrefix(prefix))
			{
				return false;
			}
			float dmg = 1f;
			float kb = 1f;
			float spd = 1f;
			float size = 1f;
			float shtspd = 1f;
			float mcst = 1f;
			int crt = 0;
			return this.TryGetPrefixStatMultipliersForItem(prefix, out dmg, out kb, out spd, out size, out shtspd, out mcst, out crt);
		}

		// Token: 0x0600026B RID: 619 RVA: 0x0002BEA4 File Offset: 0x0002A0A4
		private bool TryGetPrefixStatMultipliersForItem(int rolledPrefix, out float dmg, out float kb, out float spd, out float size, out float shtspd, out float mcst, out int crt)
		{
			dmg = 1f;
			kb = 1f;
			spd = 1f;
			size = 1f;
			shtspd = 1f;
			mcst = 1f;
			crt = 0;
			switch (rolledPrefix)
			{
			case 1:
				size = 1.12f;
				goto IL_6D5;
			case 2:
				size = 1.18f;
				goto IL_6D5;
			case 3:
				dmg = 1.05f;
				crt = 2;
				size = 1.05f;
				goto IL_6D5;
			case 4:
				dmg = 1.1f;
				size = 1.1f;
				kb = 1.1f;
				goto IL_6D5;
			case 5:
				dmg = 1.15f;
				goto IL_6D5;
			case 6:
				dmg = 1.1f;
				goto IL_6D5;
			case 7:
				size = 0.82f;
				goto IL_6D5;
			case 8:
				kb = 0.85f;
				dmg = 0.85f;
				size = 0.87f;
				goto IL_6D5;
			case 9:
				size = 0.9f;
				goto IL_6D5;
			case 10:
				dmg = 0.85f;
				goto IL_6D5;
			case 11:
				spd = 1.1f;
				kb = 0.9f;
				size = 0.9f;
				goto IL_6D5;
			case 12:
				kb = 1.1f;
				dmg = 1.05f;
				size = 1.1f;
				spd = 1.15f;
				goto IL_6D5;
			case 13:
				kb = 0.8f;
				dmg = 0.9f;
				size = 1.1f;
				goto IL_6D5;
			case 14:
				kb = 1.15f;
				spd = 1.1f;
				goto IL_6D5;
			case 15:
				kb = 0.9f;
				spd = 0.85f;
				goto IL_6D5;
			case 16:
				dmg = 1.1f;
				crt = 3;
				goto IL_6D5;
			case 17:
				spd = 0.85f;
				shtspd = 1.1f;
				goto IL_6D5;
			case 18:
				spd = 0.9f;
				shtspd = 1.15f;
				goto IL_6D5;
			case 19:
				kb = 1.15f;
				shtspd = 1.05f;
				goto IL_6D5;
			case 20:
				kb = 1.05f;
				shtspd = 1.05f;
				dmg = 1.1f;
				spd = 0.95f;
				crt = 2;
				goto IL_6D5;
			case 21:
				kb = 1.15f;
				dmg = 1.1f;
				goto IL_6D5;
			case 22:
				kb = 0.9f;
				shtspd = 0.9f;
				dmg = 0.85f;
				goto IL_6D5;
			case 23:
				spd = 1.15f;
				shtspd = 0.9f;
				goto IL_6D5;
			case 24:
				spd = 1.1f;
				kb = 0.8f;
				goto IL_6D5;
			case 25:
				spd = 1.1f;
				dmg = 1.15f;
				crt = 1;
				goto IL_6D5;
			case 26:
				mcst = 0.85f;
				dmg = 1.1f;
				goto IL_6D5;
			case 27:
				mcst = 0.85f;
				goto IL_6D5;
			case 28:
				mcst = 0.85f;
				dmg = 1.15f;
				kb = 1.05f;
				goto IL_6D5;
			case 29:
				mcst = 1.1f;
				goto IL_6D5;
			case 30:
				mcst = 1.2f;
				dmg = 0.9f;
				goto IL_6D5;
			case 31:
				kb = 0.9f;
				dmg = 0.9f;
				goto IL_6D5;
			case 32:
				mcst = 1.15f;
				dmg = 1.1f;
				goto IL_6D5;
			case 33:
				mcst = 1.1f;
				kb = 1.1f;
				spd = 0.9f;
				goto IL_6D5;
			case 34:
				mcst = 0.9f;
				kb = 1.1f;
				spd = 1.1f;
				dmg = 1.1f;
				goto IL_6D5;
			case 35:
				mcst = 1.2f;
				dmg = 1.15f;
				kb = 1.15f;
				goto IL_6D5;
			case 36:
				crt = 3;
				goto IL_6D5;
			case 37:
				dmg = 1.1f;
				crt = 3;
				kb = 1.1f;
				goto IL_6D5;
			case 38:
				kb = 1.15f;
				goto IL_6D5;
			case 39:
				dmg = 0.7f;
				kb = 0.8f;
				goto IL_6D5;
			case 40:
				dmg = 0.85f;
				goto IL_6D5;
			case 41:
				kb = 0.85f;
				dmg = 0.9f;
				goto IL_6D5;
			case 42:
				spd = 0.9f;
				goto IL_6D5;
			case 43:
				dmg = 1.1f;
				spd = 0.9f;
				goto IL_6D5;
			case 44:
				spd = 0.9f;
				crt = 3;
				goto IL_6D5;
			case 45:
				spd = 0.95f;
				goto IL_6D5;
			case 46:
				crt = 3;
				spd = 0.94f;
				dmg = 1.07f;
				goto IL_6D5;
			case 47:
				spd = 1.15f;
				goto IL_6D5;
			case 48:
				spd = 1.2f;
				goto IL_6D5;
			case 49:
				spd = 1.08f;
				goto IL_6D5;
			case 50:
				dmg = 0.8f;
				spd = 1.15f;
				goto IL_6D5;
			case 51:
				kb = 0.9f;
				spd = 0.9f;
				dmg = 1.05f;
				crt = 2;
				goto IL_6D5;
			case 52:
				mcst = 0.9f;
				dmg = 0.9f;
				spd = 0.9f;
				goto IL_6D5;
			case 53:
				dmg = 1.1f;
				goto IL_6D5;
			case 54:
				kb = 1.15f;
				goto IL_6D5;
			case 55:
				kb = 1.15f;
				dmg = 1.05f;
				goto IL_6D5;
			case 56:
				kb = 0.8f;
				goto IL_6D5;
			case 57:
				kb = 0.9f;
				dmg = 1.18f;
				goto IL_6D5;
			case 58:
				spd = 0.85f;
				dmg = 0.85f;
				goto IL_6D5;
			case 59:
				kb = 1.15f;
				dmg = 1.15f;
				crt = 5;
				goto IL_6D5;
			case 60:
				dmg = 1.15f;
				crt = 5;
				goto IL_6D5;
			case 61:
				crt = 5;
				goto IL_6D5;
			case 81:
				kb = 1.15f;
				dmg = 1.15f;
				crt = 5;
				spd = 0.9f;
				size = 1.1f;
				goto IL_6D5;
			case 82:
				kb = 1.15f;
				dmg = 1.15f;
				crt = 5;
				spd = 0.9f;
				shtspd = 1.1f;
				goto IL_6D5;
			case 83:
				kb = 1.15f;
				dmg = 1.15f;
				crt = 5;
				spd = 0.9f;
				mcst = 0.9f;
				goto IL_6D5;
			case 84:
				kb = 1.17f;
				dmg = 1.17f;
				crt = 8;
				goto IL_6D5;
			}
			ModPrefix modPrefix = PrefixLoader.GetPrefix(rolledPrefix);
			if (modPrefix != null)
			{
				if (!modPrefix.AllStatChangesHaveEffectOn(this))
				{
					return false;
				}
				modPrefix.SetStats(ref dmg, ref kb, ref spd, ref size, ref shtspd, ref mcst, ref crt);
			}
			IL_6D5:
			return (dmg == 1f || Math.Round((double)((float)this.damage * dmg)) != (double)this.damage) && (spd == 1f || Math.Round((double)((float)this.useAnimation * spd)) != (double)this.useAnimation) && (mcst == 1f || Math.Round((double)((float)this.mana * mcst)) != (double)this.mana) && (kb == 1f || this.knockBack != 0f);
		}

		// Token: 0x0600026C RID: 620 RVA: 0x0002C610 File Offset: 0x0002A810
		internal int[] GetRollablePrefixes()
		{
			int num = this.type;
			if (PrefixLegacy.ItemSets.SwordsHammersAxesPicks[this.type])
			{
				return PrefixLegacy.Prefixes.PrefixesForSwords;
			}
			if (PrefixLegacy.ItemSets.SpearsMacesChainsawsDrillsPunchCannon[this.type])
			{
				return PrefixLegacy.Prefixes.PrefixesForSpears;
			}
			if (PrefixLegacy.ItemSets.GunsBows[this.type])
			{
				return PrefixLegacy.Prefixes.PrefixesForGunsBows;
			}
			if (PrefixLegacy.ItemSets.MagicAndSummon[this.type])
			{
				return PrefixLegacy.Prefixes.PrefixesForMagicAndSummons;
			}
			if (PrefixLegacy.ItemSets.BoomerangsChakrams[this.type])
			{
				return PrefixLegacy.Prefixes.PrefixesForBoomeransAndChakrums;
			}
			if (PrefixLegacy.ItemSets.ItemsThatCanHaveLegendary2[this.type])
			{
				return PrefixLegacy.Prefixes.PrefixesForBoomeransAndChakrums_TerrarianYoyo;
			}
			if (this.IsAPrefixableAccessory())
			{
				return PrefixLegacy.Prefixes.PrefixesForAccessories;
			}
			return null;
		}

		/// <summary>
		/// Determines the <see cref="T:Terraria.ModLoader.PrefixCategory" /> of this <see cref="T:Terraria.Item" />.
		/// </summary>
		/// <returns>The <see cref="T:Terraria.ModLoader.PrefixCategory" /> of this <see cref="T:Terraria.Item" /> or <see langword="null" /> if this <see cref="T:Terraria.Item" /> doesn't have a category.</returns>
		// Token: 0x0600026D RID: 621 RVA: 0x0002C6AC File Offset: 0x0002A8AC
		[Obsolete("Does not support items with multiple prefix categories, use GetPrefixCategories instead")]
		public PrefixCategory? GetPrefixCategory()
		{
			if (PrefixLegacy.ItemSets.SwordsHammersAxesPicks[this.type] || ItemLoader.MeleePrefix(this))
			{
				return new PrefixCategory?(PrefixCategory.Melee);
			}
			if (PrefixLegacy.ItemSets.GunsBows[this.type] || ItemLoader.RangedPrefix(this))
			{
				return new PrefixCategory?(PrefixCategory.Ranged);
			}
			if (PrefixLegacy.ItemSets.MagicAndSummon[this.type] || ItemLoader.MagicPrefix(this))
			{
				return new PrefixCategory?(PrefixCategory.Magic);
			}
			if (PrefixLegacy.ItemSets.SpearsMacesChainsawsDrillsPunchCannon[this.type] || PrefixLegacy.ItemSets.BoomerangsChakrams[this.type] || PrefixLegacy.ItemSets.ItemsThatCanHaveLegendary2[this.type] || ItemLoader.WeaponPrefix(this))
			{
				return new PrefixCategory?(PrefixCategory.AnyWeapon);
			}
			if (this.IsAPrefixableAccessory())
			{
				return new PrefixCategory?(PrefixCategory.Accessory);
			}
			return null;
		}

		/// <summary>
		/// Gets the vanilla prefixes for the given <see cref="T:Terraria.ModLoader.PrefixCategory" />.
		/// </summary>
		/// <param name="category">The <see cref="T:Terraria.ModLoader.PrefixCategory" /> to check.</param>
		/// <returns>An array of vanilla <see cref="T:Terraria.ID.PrefixID" />s for the given category, or an empty array for <see cref="F:Terraria.ModLoader.PrefixCategory.Custom" />.</returns>
		// Token: 0x0600026E RID: 622 RVA: 0x0002C764 File Offset: 0x0002A964
		public static int[] GetVanillaPrefixes(PrefixCategory category)
		{
			int[] result;
			switch (category)
			{
			case PrefixCategory.Melee:
				result = PrefixLegacy.Prefixes.PrefixesForSwords;
				break;
			case PrefixCategory.Ranged:
				result = PrefixLegacy.Prefixes.PrefixesForGunsBows;
				break;
			case PrefixCategory.Magic:
				result = PrefixLegacy.Prefixes.PrefixesForMagicAndSummons;
				break;
			case PrefixCategory.AnyWeapon:
				result = PrefixLegacy.Prefixes.PrefixesForSpears;
				break;
			case PrefixCategory.Accessory:
				result = PrefixLegacy.Prefixes.PrefixesForAccessories;
				break;
			default:
				result = Array.Empty<int>();
				break;
			}
			return result;
		}

		// Token: 0x0600026F RID: 623 RVA: 0x0002C7BC File Offset: 0x0002A9BC
		private bool RollAPrefix(UnifiedRandom random, ref int rolledPrefix)
		{
			return PrefixLoader.Roll(this, random, out rolledPrefix, false);
		}

		/// <summary>
		/// Determines if this <see cref="T:Terraria.Item" /> is an accessory that can receive prefixes.
		/// </summary>
		/// <returns><see langword="true" /> if this <see cref="T:Terraria.Item" /> is an accessory, is not a vanity item, and is not blacklisted from receiving prefixes (<see cref="F:Terraria.ID.ItemID.Sets.CanGetPrefixes" />).</returns>
		// Token: 0x06000270 RID: 624 RVA: 0x0002C7C7 File Offset: 0x0002A9C7
		public bool IsAPrefixableAccessory()
		{
			return this.accessory && !this.vanity && ItemID.Sets.CanGetPrefixes[this.type];
		}

		/// <summary>
		/// Gets the localized name of this <see cref="T:Terraria.Item" /> including its prefix.
		/// </summary>
		/// <returns>The localized name of this <see cref="T:Terraria.Item" /> including its prefix, or simply <see cref="P:Terraria.Item.Name" /> if the prefix doesn't exist or is an empty string.</returns>
		// Token: 0x06000271 RID: 625 RVA: 0x0002C7E8 File Offset: 0x0002A9E8
		public string AffixName()
		{
			if (this.prefix < 0 || this.prefix >= Lang.prefix.Length)
			{
				return this.Name;
			}
			string text = Lang.prefix[this.prefix].Value;
			if (text == "")
			{
				return this.Name;
			}
			if (text.StartsWith("("))
			{
				return this.Name + " " + text;
			}
			return text + " " + this.Name;
		}

		// Token: 0x06000272 RID: 626 RVA: 0x0002C86A File Offset: 0x0002AA6A
		public void RebuildTooltip()
		{
			if (this.type >= 0)
			{
				this.ToolTip = Lang.GetTooltip(this.netID);
			}
		}

		/// <summary>
		/// Gets this <see cref="T:Terraria.Item" />'s hitbox in the world. Equivalent to <see cref="P:Terraria.Entity.Hitbox" />.
		/// </summary>
		/// <returns>This <see cref="T:Terraria.Item" />'s hitbox in the world.</returns>
		// Token: 0x06000273 RID: 627 RVA: 0x0002C886 File Offset: 0x0002AA86
		public Rectangle getRect()
		{
			return new Rectangle((int)this.position.X, (int)this.position.Y, this.width, this.height);
		}

		// Token: 0x06000274 RID: 628 RVA: 0x0002C8B4 File Offset: 0x0002AAB4
		public void netDefaults(int type)
		{
			if (type >= 0)
			{
				this.SetDefaults(type);
				return;
			}
			switch (type)
			{
			case -48:
				this.SetDefaults(3480);
				return;
			case -47:
				this.SetDefaults(3481);
				return;
			case -46:
				this.SetDefaults(3482);
				return;
			case -45:
				this.SetDefaults(3483);
				return;
			case -44:
				this.SetDefaults(3484);
				return;
			case -43:
				this.SetDefaults(3485);
				return;
			case -42:
				this.SetDefaults(3486);
				return;
			case -41:
				this.SetDefaults(3487);
				return;
			case -40:
				this.SetDefaults(3488);
				return;
			case -39:
				this.SetDefaults(3489);
				return;
			case -38:
				this.SetDefaults(3490);
				return;
			case -37:
				this.SetDefaults(3491);
				return;
			case -36:
				this.SetDefaults(3492);
				return;
			case -35:
				this.SetDefaults(3493);
				return;
			case -34:
				this.SetDefaults(3494);
				return;
			case -33:
				this.SetDefaults(3495);
				return;
			case -32:
				this.SetDefaults(3496);
				return;
			case -31:
				this.SetDefaults(3497);
				return;
			case -30:
				this.SetDefaults(3498);
				return;
			case -29:
				this.SetDefaults(3499);
				return;
			case -28:
				this.SetDefaults(3500);
				return;
			case -27:
				this.SetDefaults(3501);
				return;
			case -26:
				this.SetDefaults(3502);
				return;
			case -25:
				this.SetDefaults(3503);
				return;
			case -24:
				this.SetDefaults(3769);
				return;
			case -23:
				this.SetDefaults(3768);
				return;
			case -22:
				this.SetDefaults(3767);
				return;
			case -21:
				this.SetDefaults(3766);
				return;
			case -20:
				this.SetDefaults(3765);
				return;
			case -19:
				this.SetDefaults(3764);
				return;
			case -18:
				this.SetDefaults(3504);
				return;
			case -17:
				this.SetDefaults(3505);
				return;
			case -16:
				this.SetDefaults(3506);
				return;
			case -15:
				this.SetDefaults(3507);
				return;
			case -14:
				this.SetDefaults(3508);
				return;
			case -13:
				this.SetDefaults(3509);
				return;
			case -12:
				this.SetDefaults(3510);
				return;
			case -11:
				this.SetDefaults(3511);
				return;
			case -10:
				this.SetDefaults(3512);
				return;
			case -9:
				this.SetDefaults(3513);
				return;
			case -8:
				this.SetDefaults(3514);
				return;
			case -7:
				this.SetDefaults(3515);
				return;
			case -6:
				this.SetDefaults(3516);
				return;
			case -5:
				this.SetDefaults(3517);
				return;
			case -4:
				this.SetDefaults(3518);
				return;
			case -3:
				this.SetDefaults(3519);
				return;
			case -2:
				this.SetDefaults(3520);
				return;
			case -1:
				this.SetDefaults(3521);
				return;
			default:
				return;
			}
		}

		/// <summary>
		/// Converts a banner ID into the equivalent item type (<see cref="F:Terraria.Item.type" />).
		/// </summary>
		/// <param name="banner">The banner ID to convert.</param>
		/// <returns>
		/// The item type associated with the given banner ID.
		/// <br /> <strong>This method will return the wrong item type if <paramref name="banner" /> is not a valid banner ID.</strong>
		/// </returns>
		/// <remarks>You can get the banner ID of an NPC using <see cref="M:Terraria.Item.NPCtoBanner(System.Int32)" />.</remarks>
		// Token: 0x06000275 RID: 629 RVA: 0x0002CBDC File Offset: 0x0002ADDC
		public static int BannerToItem(int banner)
		{
			int result;
			if (NPCLoader.bannerToItem.TryGetValue(banner, out result))
			{
				return result;
			}
			if (banner == 289)
			{
				return 5352;
			}
			if (banner >= 276)
			{
				return 4965 + banner - 276;
			}
			if (banner >= 274)
			{
				return 4687 + banner - 274;
			}
			if (banner == 273)
			{
				return 4602;
			}
			if (banner >= 267)
			{
				return 4541 + banner - 267;
			}
			if (banner >= 257)
			{
				return 3837 + banner - 257;
			}
			if (banner >= 252)
			{
				return 3789 + banner - 252;
			}
			if (banner == 251)
			{
				return 3780;
			}
			if (banner >= 249)
			{
				return 3593 + banner - 249;
			}
			if (banner >= 186)
			{
				return 3390 + banner - 186;
			}
			if (banner >= 88)
			{
				return 2897 + banner - 88;
			}
			return 1615 + banner - 1;
		}

		/// <summary>
		/// Converts an NPC type (<see cref="F:Terraria.NPC.type" />) into the equivalent banner ID.
		/// </summary>
		/// <param name="i">The NPC type to convert.</param>
		/// <returns>The banner ID associated with the given NPC type, or <c>0</c> if the NPC type has no associated banner.</returns>
		// Token: 0x06000276 RID: 630 RVA: 0x0002CCD8 File Offset: 0x0002AED8
		public static int NPCtoBanner(int i)
		{
			switch (i)
			{
			case -10:
				return 131;
			case -9:
				return 183;
			case -8:
				return 159;
			case -7:
				return 155;
			case -6:
				return 90;
			case -5:
			case 16:
				return 146;
			case -4:
				return 151;
			case -3:
				return 119;
			case -2:
			case 121:
				return 167;
			case -1:
			case 81:
				return 99;
			case 1:
			case 302:
			case 333:
			case 334:
			case 335:
			case 336:
				return 69;
			case 2:
			case 190:
			case 191:
			case 192:
			case 193:
			case 194:
			case 317:
			case 318:
				return 25;
			case 3:
			case 132:
			case 186:
			case 187:
			case 188:
			case 189:
			case 200:
			case 319:
			case 320:
			case 321:
			case 331:
			case 332:
			case 430:
			case 432:
			case 433:
			case 434:
			case 435:
			case 436:
			case 590:
			case 591:
			case 632:
				return 87;
			case 6:
				return 27;
			case 7:
			case 8:
			case 9:
				return 104;
			case 10:
			case 11:
			case 12:
			case 95:
			case 96:
			case 97:
				return 84;
			case 21:
			case 201:
			case 202:
			case 203:
			case 322:
			case 323:
			case 324:
			case 449:
			case 450:
			case 451:
			case 452:
				return 67;
			case 23:
				return 55;
			case 24:
			case 25:
				return 50;
			case 26:
				return 40;
			case 27:
				return 38;
			case 28:
				return 42;
			case 29:
			case 30:
				return 39;
			case 31:
			case 294:
			case 295:
			case 296:
				return 247;
			case 32:
			case 33:
				return 68;
			case 34:
				return 102;
			case 39:
			case 40:
			case 41:
				return 13;
			case 42:
			case 231:
			case 232:
			case 233:
			case 234:
			case 235:
				return 47;
			case 43:
				return 54;
			case 44:
				return 178;
			case 45:
			case 665:
				return 177;
			case 46:
			case 303:
			case 337:
			case 540:
				return 14;
			case 47:
				return 18;
			case 48:
				return 44;
			case 49:
				return 7;
			case 51:
				return 130;
			case 52:
				return 106;
			case 53:
				return 176;
			case 55:
			case 230:
				return 43;
			case 56:
				return 168;
			case 57:
				return 19;
			case 58:
				return 61;
			case 59:
				return 135;
			case 60:
				return 45;
			case 61:
				return 79;
			case 62:
			case 66:
				return 24;
			case 63:
				return 51;
			case 64:
				return 243;
			case 65:
				return 66;
			case 67:
				return 20;
			case 69:
				return 4;
			case 71:
				return 107;
			case 73:
				return 41;
			case 74:
				return 8;
			case 75:
				return 63;
			case 77:
				return 6;
			case 78:
				return 57;
			case 79:
				return 245;
			case 80:
				return 246;
			case 82:
				return 85;
			case 83:
				return 23;
			case 84:
				return 28;
			case 85:
			case 629:
				return 16;
			case 86:
				return 77;
			case 87:
			case 88:
			case 89:
			case 90:
			case 91:
			case 92:
				return 86;
			case 93:
				return 114;
			case 94:
			case 112:
				return 100;
			case 98:
			case 99:
			case 100:
				return 83;
			case 101:
				return 96;
			case 102:
				return 1;
			case 103:
				return 244;
			case 104:
				return 81;
			case 109:
			case 378:
				return 17;
			case 110:
				return 164;
			case 111:
				return 118;
			case 120:
				return 15;
			case 122:
				return 37;
			case 133:
				return 288;
			case 137:
				return 128;
			case 138:
				return 129;
			case 140:
				return 153;
			case 141:
				return 75;
			case 143:
				return 170;
			case 144:
				return 145;
			case 145:
				return 169;
			case 147:
				return 126;
			case 148:
			case 149:
				return 150;
			case 150:
				return 124;
			case 151:
				return 134;
			case 152:
				return 116;
			case 153:
				return 74;
			case 154:
				return 248;
			case 155:
				return 82;
			case 156:
				return 242;
			case 157:
				return 5;
			case 158:
			case 159:
				return 78;
			case 161:
			case 431:
				return 29;
			case 162:
				return 34;
			case 163:
			case 238:
				return 9;
			case 164:
			case 165:
				return 71;
			case 166:
				return 73;
			case 167:
				return 179;
			case 168:
				return 98;
			case 169:
				return 48;
			case 170:
			case 171:
			case 180:
				return 60;
			case 172:
				return 160;
			case 173:
				return 21;
			case 174:
				return 46;
			case 175:
				return 88;
			case 176:
				return 287;
			case 177:
				return 26;
			case 179:
				return 22;
			case 181:
				return 30;
			case 182:
				return 31;
			case 183:
				return 101;
			case 184:
				return 171;
			case 185:
				return 70;
			case 195:
			case 196:
				return 80;
			case 197:
				return 89;
			case 198:
			case 199:
				return 53;
			case 204:
				return 172;
			case 205:
				return 56;
			case 206:
				return 49;
			case 212:
				return 62;
			case 213:
				return 239;
			case 214:
				return 238;
			case 215:
				return 240;
			case 216:
				return 237;
			case 217:
				return 97;
			case 218:
				return 103;
			case 219:
				return 133;
			case 220:
				return 250;
			case 221:
				return 174;
			case 223:
				return 64;
			case 224:
				return 32;
			case 225:
				return 76;
			case 226:
				return 33;
			case 236:
			case 237:
				return 52;
			case 239:
			case 240:
				return 12;
			case 241:
				return 10;
			case 242:
				return 11;
			case 243:
				return 125;
			case 244:
				return 157;
			case 250:
				return 2;
			case 251:
				return 111;
			case 252:
				return 59;
			case 253:
				return 65;
			case 254:
			case 255:
				return 72;
			case 256:
				return 36;
			case 257:
				return 3;
			case 258:
				return 58;
			case 259:
			case 260:
			case 261:
				return 35;
			case 268:
				return 127;
			case 269:
			case 270:
			case 271:
			case 272:
				return 161;
			case 273:
			case 274:
			case 275:
			case 276:
				return 91;
			case 277:
			case 278:
			case 279:
			case 280:
				return 121;
			case 281:
			case 282:
				return 156;
			case 283:
			case 284:
				return 147;
			case 285:
			case 286:
				return 105;
			case 287:
				return 95;
			case 288:
				return 108;
			case 289:
				return 115;
			case 290:
				return 149;
			case 291:
				return 166;
			case 292:
				return 175;
			case 293:
				return 165;
			case 301:
				return 158;
			case 304:
				return 123;
			case 305:
			case 306:
			case 307:
			case 308:
			case 309:
			case 310:
			case 311:
			case 312:
			case 313:
			case 314:
				return 162;
			case 315:
				return 120;
			case 316:
				return 113;
			case 326:
				return 173;
			case 329:
				return 122;
			case 330:
				return 152;
			case 338:
			case 339:
			case 340:
				return 185;
			case 341:
				return 154;
			case 342:
				return 117;
			case 343:
				return 184;
			case 347:
				return 110;
			case 348:
			case 349:
				return 148;
			case 350:
				return 109;
			case 351:
				return 132;
			case 352:
				return 112;
			case 379:
				return 92;
			case 380:
				return 180;
			case 381:
				return 136;
			case 382:
				return 142;
			case 383:
			case 384:
				return 141;
			case 385:
				return 140;
			case 386:
				return 138;
			case 387:
				return 144;
			case 388:
				return 137;
			case 389:
				return 139;
			case 390:
				return 143;
			case 391:
				return 163;
			case 402:
			case 403:
			case 404:
				return 217;
			case 405:
				return 221;
			case 406:
				return 220;
			case 407:
			case 408:
				return 218;
			case 409:
			case 410:
				return 219;
			case 411:
				return 216;
			case 412:
			case 413:
			case 414:
				return 224;
			case 415:
			case 516:
				return 226;
			case 416:
			case 518:
				return 225;
			case 417:
				return 223;
			case 418:
				return 222;
			case 419:
				return 227;
			case 420:
				return 230;
			case 421:
				return 229;
			case 423:
				return 231;
			case 424:
				return 228;
			case 425:
				return 236;
			case 426:
				return 233;
			case 427:
				return 234;
			case 428:
				return 232;
			case 429:
				return 235;
			case 438:
				return 93;
			case 460:
				return 196;
			case 461:
				return 191;
			case 462:
				return 190;
			case 463:
				return 199;
			case 464:
				return 281;
			case 465:
				return 282;
			case 466:
				return 197;
			case 467:
				return 198;
			case 468:
				return 192;
			case 469:
				return 195;
			case 470:
				return 283;
			case 471:
			case 472:
				return 186;
			case 473:
				return 284;
			case 474:
				return 285;
			case 475:
				return 286;
			case 477:
			case 478:
			case 479:
				return 193;
			case 480:
				return 201;
			case 481:
				return 202;
			case 482:
				return 204;
			case 483:
				return 203;
			case 489:
				return 205;
			case 490:
				return 206;
			case 494:
			case 495:
				return 189;
			case 496:
			case 497:
				return 188;
			case 498:
			case 499:
			case 500:
			case 501:
			case 502:
			case 503:
			case 504:
			case 505:
			case 506:
				return 187;
			case 508:
			case 580:
				return 210;
			case 509:
			case 581:
				return 209;
			case 510:
			case 511:
			case 512:
				return 208;
			case 513:
			case 514:
			case 515:
				return 207;
			case 520:
				return 241;
			case 524:
			case 525:
			case 526:
			case 527:
				return 211;
			case 528:
			case 529:
				return 212;
			case 530:
			case 531:
				return 215;
			case 532:
				return 214;
			case 533:
				return 213;
			case 536:
				return 267;
			case 537:
				return 249;
			case 541:
				return 251;
			case 542:
				return 252;
			case 543:
				return 253;
			case 544:
				return 254;
			case 545:
				return 255;
			case 546:
				return 256;
			case 552:
			case 553:
			case 554:
				return 258;
			case 555:
			case 556:
			case 557:
				return 257;
			case 558:
			case 559:
			case 560:
				return 264;
			case 561:
			case 562:
			case 563:
				return 265;
			case 566:
			case 567:
				return 259;
			case 568:
			case 569:
				return 263;
			case 570:
			case 571:
				return 260;
			case 572:
			case 573:
				return 262;
			case 574:
			case 575:
				return 261;
			case 578:
				return 266;
			case 582:
				return 280;
			case 586:
				return 268;
			case 587:
				return 269;
			case 618:
				return 273;
			case 619:
				return 270;
			case 620:
				return 272;
			case 621:
			case 622:
			case 623:
				return 271;
			case 624:
				return 275;
			case 628:
				return 274;
			case 630:
				return 277;
			case 631:
				return 276;
			case 634:
				return 279;
			case 635:
				return 278;
			case 676:
				return 289;
			}
			if (i >= (int)NPCID.Count)
			{
				return NPCLoader.GetNPC(i).Banner;
			}
			return 0;
		}

		/// <summary>
		/// Converts a BannerID into the equivalent NPC type (<see cref="F:Terraria.NPC.type" />). Used to determine a single NPC type from a BannerID for display purposes.
		/// Note that modded BannerIDs are the same number as their NPC type, and those BannerIDs might not actually be used.
		/// </summary>
		/// <param name="i">The banner ID to convert.</param>
		/// <returns>The NPC type associated with the given banner ID, or <see cref="F:Terraria.ID.NPCID.None" /> for an invalid banner ID.</returns>
		// Token: 0x06000277 RID: 631 RVA: 0x0002DCEC File Offset: 0x0002BEEC
		public static int BannerToNPC(int i)
		{
			switch (i)
			{
			case 1:
				return 102;
			case 2:
				return 250;
			case 3:
				return 257;
			case 4:
				return 69;
			case 5:
				return 157;
			case 6:
				return 77;
			case 7:
				return 49;
			case 8:
				return 74;
			case 9:
				return 163;
			case 10:
				return 241;
			case 11:
				return 242;
			case 12:
				return 239;
			case 13:
				return 39;
			case 14:
				return 46;
			case 15:
				return 120;
			case 16:
				return 85;
			case 17:
				return 109;
			case 18:
				return 47;
			case 19:
				return 57;
			case 20:
				return 67;
			case 21:
				return 173;
			case 22:
				return 179;
			case 23:
				return 83;
			case 24:
				return 62;
			case 25:
				return 2;
			case 26:
				return 177;
			case 27:
				return 6;
			case 28:
				return 84;
			case 29:
				return 161;
			case 30:
				return 181;
			case 31:
				return 182;
			case 32:
				return 224;
			case 33:
				return 226;
			case 34:
				return 162;
			case 35:
				return 259;
			case 36:
				return 256;
			case 37:
				return 122;
			case 38:
				return 27;
			case 39:
				return 29;
			case 40:
				return 26;
			case 41:
				return 73;
			case 42:
				return 28;
			case 43:
				return 55;
			case 44:
				return 48;
			case 45:
				return 60;
			case 46:
				return 174;
			case 47:
				return 42;
			case 48:
				return 169;
			case 49:
				return 206;
			case 50:
				return 24;
			case 51:
				return 63;
			case 52:
				return 236;
			case 53:
				return 199;
			case 54:
				return 43;
			case 55:
				return 23;
			case 56:
				return 205;
			case 57:
				return 78;
			case 58:
				return 258;
			case 59:
				return 252;
			case 60:
				return 170;
			case 61:
				return 58;
			case 62:
				return 212;
			case 63:
				return 75;
			case 64:
				return 223;
			case 65:
				return 253;
			case 66:
				return 65;
			case 67:
				return 21;
			case 68:
				return 32;
			case 69:
				return 1;
			case 70:
				return 185;
			case 71:
				return 164;
			case 72:
				return 254;
			case 73:
				return 166;
			case 74:
				return 153;
			case 75:
				return 141;
			case 76:
				return 225;
			case 77:
				return 86;
			case 78:
				return 158;
			case 79:
				return 61;
			case 80:
				return 196;
			case 81:
				return 104;
			case 82:
				return 155;
			case 83:
				return 98;
			case 84:
				return 10;
			case 85:
				return 82;
			case 86:
				return 87;
			case 87:
				return 3;
			case 88:
				return 175;
			case 89:
				return 197;
			case 90:
				return -6;
			case 91:
				return 273;
			case 92:
				return 379;
			case 93:
				return 438;
			case 95:
				return 287;
			case 96:
				return 101;
			case 97:
				return 217;
			case 98:
				return 168;
			case 99:
				return 81;
			case 100:
				return 94;
			case 101:
				return 183;
			case 102:
				return 34;
			case 103:
				return 218;
			case 104:
				return 7;
			case 105:
				return 285;
			case 106:
				return 52;
			case 107:
				return 71;
			case 108:
				return 288;
			case 109:
				return 350;
			case 110:
				return 347;
			case 111:
				return 251;
			case 112:
				return 352;
			case 113:
				return 316;
			case 114:
				return 93;
			case 115:
				return 289;
			case 116:
				return 152;
			case 117:
				return 342;
			case 118:
				return 111;
			case 119:
				return -3;
			case 120:
				return 315;
			case 121:
				return 277;
			case 122:
				return 329;
			case 123:
				return 304;
			case 124:
				return 150;
			case 125:
				return 243;
			case 126:
				return 147;
			case 127:
				return 268;
			case 128:
				return 137;
			case 129:
				return 138;
			case 130:
				return 51;
			case 131:
				return -10;
			case 132:
				return 351;
			case 133:
				return 219;
			case 134:
				return 151;
			case 135:
				return 59;
			case 136:
				return 381;
			case 137:
				return 388;
			case 138:
				return 386;
			case 139:
				return 389;
			case 140:
				return 385;
			case 141:
				return 383;
			case 142:
				return 382;
			case 143:
				return 390;
			case 144:
				return 387;
			case 145:
				return 144;
			case 146:
				return 16;
			case 147:
				return 283;
			case 148:
				return 348;
			case 149:
				return 290;
			case 150:
				return 148;
			case 151:
				return -4;
			case 152:
				return 330;
			case 153:
				return 140;
			case 154:
				return 341;
			case 155:
				return -7;
			case 156:
				return 281;
			case 157:
				return 244;
			case 158:
				return 301;
			case 159:
				return -8;
			case 160:
				return 172;
			case 161:
				return 269;
			case 162:
				return 305;
			case 163:
				return 391;
			case 164:
				return 110;
			case 165:
				return 293;
			case 166:
				return 291;
			case 167:
				return 121;
			case 168:
				return 56;
			case 169:
				return 145;
			case 170:
				return 143;
			case 171:
				return 184;
			case 172:
				return 204;
			case 173:
				return 326;
			case 174:
				return 221;
			case 175:
				return 292;
			case 176:
				return 53;
			case 177:
				return 45;
			case 178:
				return 44;
			case 179:
				return 167;
			case 180:
				return 380;
			case 183:
				return -9;
			case 184:
				return 343;
			case 185:
				return 338;
			case 186:
				return 471;
			case 187:
				return 498;
			case 188:
				return 496;
			case 189:
				return 494;
			case 190:
				return 462;
			case 191:
				return 461;
			case 192:
				return 468;
			case 193:
				return 477;
			case 195:
				return 469;
			case 196:
				return 460;
			case 197:
				return 466;
			case 198:
				return 467;
			case 199:
				return 463;
			case 201:
				return 480;
			case 202:
				return 481;
			case 203:
				return 483;
			case 204:
				return 482;
			case 205:
				return 489;
			case 206:
				return 490;
			case 207:
				return 513;
			case 208:
				return 510;
			case 209:
				return 581;
			case 210:
				return 580;
			case 211:
				return 524;
			case 212:
				return 529;
			case 213:
				return 533;
			case 214:
				return 532;
			case 215:
				return 530;
			case 216:
				return 411;
			case 217:
				return 402;
			case 218:
				return 407;
			case 219:
				return 409;
			case 220:
				return 406;
			case 221:
				return 405;
			case 222:
				return 418;
			case 223:
				return 417;
			case 224:
				return 412;
			case 225:
				return 416;
			case 226:
				return 415;
			case 227:
				return 419;
			case 228:
				return 424;
			case 229:
				return 421;
			case 230:
				return 420;
			case 231:
				return 423;
			case 232:
				return 428;
			case 233:
				return 426;
			case 234:
				return 427;
			case 235:
				return 429;
			case 236:
				return 425;
			case 237:
				return 216;
			case 238:
				return 214;
			case 239:
				return 213;
			case 240:
				return 215;
			case 241:
				return 520;
			case 242:
				return 156;
			case 243:
				return 64;
			case 244:
				return 103;
			case 245:
				return 79;
			case 246:
				return 80;
			case 247:
				return 31;
			case 248:
				return 154;
			case 249:
				return 537;
			case 250:
				return 220;
			case 251:
				return 541;
			case 252:
				return 542;
			case 253:
				return 543;
			case 254:
				return 544;
			case 255:
				return 545;
			case 256:
				return 546;
			case 257:
				return 555;
			case 258:
				return 552;
			case 259:
				return 566;
			case 260:
				return 570;
			case 261:
				return 574;
			case 262:
				return 572;
			case 263:
				return 568;
			case 264:
				return 558;
			case 265:
				return 561;
			case 266:
				return 578;
			case 267:
				return 536;
			case 268:
				return 586;
			case 269:
				return 587;
			case 270:
				return 619;
			case 271:
				return 621;
			case 272:
				return 620;
			case 273:
				return 618;
			case 274:
				return 628;
			case 275:
				return 624;
			case 276:
				return 631;
			case 277:
				return 630;
			case 278:
				return 635;
			case 279:
				return 634;
			case 280:
				return 582;
			case 281:
				return 464;
			case 282:
				return 465;
			case 283:
				return 470;
			case 284:
				return 473;
			case 285:
				return 474;
			case 286:
				return 475;
			case 287:
				return 176;
			case 288:
				return 133;
			case 289:
				return 676;
			}
			if (i >= (int)NPCID.Count)
			{
				return i;
			}
			return 0;
		}

		// Token: 0x06000278 RID: 632 RVA: 0x0002E754 File Offset: 0x0002C954
		public bool FitsAmmoSlot()
		{
			return ((this.type == 0 || this.ammo > 0 || this.bait > 0 || this.type == 530 || this.type == 849 || this.PaintOrCoating) && !this.notAmmo) || this.type == 353;
		}

		// Token: 0x06000279 RID: 633 RVA: 0x0002E7B4 File Offset: 0x0002C9B4
		public bool CanFillEmptyAmmoSlot()
		{
			return this.bait <= 0 && !this.PaintOrCoating && this.type != 353 && this.type != 849 && this.type != 169 && this.type != 75 && this.type != 23 && this.type != 408 && this.type != 370 && this.type != 1246 && !this.notAmmo;
		}

		// Token: 0x0600027A RID: 634 RVA: 0x0002E840 File Offset: 0x0002CA40
		public void SetDefaults1(int type)
		{
			switch (type)
			{
			case 1:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 20;
				this.useTime = 13;
				this.autoReuse = true;
				this.width = 24;
				this.height = 28;
				this.damage = 5;
				this.pick = 40;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.knockBack = 2f;
				this.value = 2000;
				this.melee = true;
				break;
			case 2:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 0;
				this.width = 12;
				this.height = 12;
				break;
			case 3:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 1;
				this.width = 12;
				this.height = 12;
				break;
			case 4:
				this.useStyle = 1;
				this.useTurn = false;
				this.useAnimation = 20;
				this.useTime = 20;
				this.width = 24;
				this.height = 28;
				this.damage = 12;
				this.knockBack = 5.5f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.scale = 1f;
				this.value = 1800;
				this.melee = true;
				break;
			case 5:
				this.useStyle = 2;
				this.UseSound = new SoundStyle?(SoundID.Item2);
				this.useTurn = false;
				this.useAnimation = 17;
				this.useTime = 17;
				this.width = 16;
				this.height = 18;
				this.healLife = 15;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.potion = true;
				this.value = Item.sellPrice(0, 0, 2, 50);
				break;
			case 6:
				this.autoReuse = false;
				this.useStyle = 13;
				this.useAnimation = 12;
				this.useTime = 12;
				this.width = 50;
				this.height = 18;
				this.shoot = 940;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.damage = 8;
				this.knockBack = 4f;
				this.shootSpeed = 2.1f;
				this.noMelee = true;
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 2, 80));
				this.melee = true;
				this.noUseGraphic = true;
				break;
			case 7:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 30;
				this.useTime = 20;
				this.hammer = 40;
				this.width = 24;
				this.height = 28;
				this.damage = 7;
				this.knockBack = 5.5f;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.value = 1600;
				this.melee = true;
				break;
			case 8:
				this.flame = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.holdStyle = 1;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 4;
				this.width = 10;
				this.height = 12;
				this.value = 50;
				break;
			case 9:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 30;
				this.width = 8;
				this.height = 10;
				break;
			case 10:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 27;
				this.knockBack = 4.5f;
				this.useTime = 19;
				this.autoReuse = true;
				this.width = 24;
				this.height = 28;
				this.damage = 5;
				this.axe = 9;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.value = 1600;
				this.melee = true;
				break;
			case 11:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 6;
				this.width = 12;
				this.height = 12;
				this.value = 500;
				break;
			case 12:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 7;
				this.width = 12;
				this.height = 12;
				this.value = 250;
				break;
			case 13:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 8;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 3, 0);
				break;
			case 14:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 9;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 1, 50);
				break;
			case 15:
				this.width = 24;
				this.height = 28;
				this.accessory = true;
				this.value = 1000;
				this.waistSlot = 2;
				break;
			case 16:
				this.width = 24;
				this.height = 28;
				this.accessory = true;
				this.value = 5000;
				this.waistSlot = 7;
				break;
			case 17:
				this.width = 24;
				this.height = 28;
				this.accessory = true;
				this.rare = 1;
				this.value = 10000;
				this.waistSlot = 3;
				break;
			case 18:
				this.width = 24;
				this.height = 18;
				this.accessory = true;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 25, 0);
				break;
			case 19:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 6000;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 6;
				break;
			case 20:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 750;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 0;
				break;
			case 21:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 3000;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 4;
				break;
			case 22:
				this.color = new Color(160, 145, 130, 110);
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 1500;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 2;
				break;
			case 23:
				this.width = 10;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				this.alpha = 175;
				this.ammo = AmmoID.Gel;
				this.color = new Color(0, 80, 255, 100);
				this.value = 5;
				this.consumable = true;
				break;
			case 24:
				this.useStyle = 1;
				this.useTurn = false;
				this.useTime = 20;
				this.useAnimation = 20;
				this.width = 24;
				this.height = 28;
				this.damage = 7;
				this.knockBack = 5f;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.value = 100;
				this.melee = true;
				break;
			case 25:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				break;
			case 26:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 1;
				this.width = 12;
				this.height = 12;
				break;
			case 27:
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.autoReuse = true;
				this.createTile = 20;
				this.width = 18;
				this.height = 18;
				this.value = 10;
				break;
			case 28:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.healLife = 50;
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.potion = true;
				this.value = 300;
				break;
			case 29:
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 18;
				this.height = 18;
				this.useStyle = 4;
				this.useTime = 30;
				this.UseSound = new SoundStyle?(SoundID.Item4);
				this.useAnimation = 30;
				this.rare = 2;
				this.value = 75000;
				break;
			case 30:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 16;
				this.width = 12;
				this.height = 12;
				break;
			case 31:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 13;
				this.width = 16;
				this.height = 24;
				this.value = 20;
				break;
			case 32:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 14;
				this.width = 26;
				this.height = 20;
				this.value = 300;
				break;
			case 33:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 17;
				this.width = 26;
				this.height = 24;
				this.value = 300;
				break;
			case 34:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 15;
				this.width = 12;
				this.height = 30;
				this.value = 150;
				break;
			case 35:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 16;
				this.width = 28;
				this.height = 14;
				this.value = 5000;
				break;
			case 36:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 18;
				this.width = 28;
				this.height = 14;
				this.value = 150;
				break;
			case 37:
				this.width = 28;
				this.height = 12;
				this.defense = 1;
				this.headSlot = 10;
				this.value = 1000;
				break;
			case 38:
				this.width = 12;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 500;
				break;
			case 39:
				this.useStyle = 5;
				this.useAnimation = 30;
				this.useTime = 30;
				this.width = 12;
				this.height = 28;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 4;
				this.shootSpeed = 6.1f;
				this.noMelee = true;
				this.value = 100;
				this.ranged = true;
				break;
			case 40:
				this.shootSpeed = 3f;
				this.shoot = 1;
				this.damage = 5;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 2f;
				this.value = 5;
				this.ranged = true;
				break;
			case 41:
				this.shootSpeed = 3.5f;
				this.shoot = 2;
				this.damage = 7;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 2f;
				this.value = 10;
				this.ranged = true;
				break;
			case 42:
				this.useStyle = 1;
				this.shootSpeed = 9f;
				this.shoot = 3;
				this.damage = 10;
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.useTime = 15;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = 15;
				this.ranged = true;
				break;
			case 43:
				this.useStyle = 4;
				this.width = 22;
				this.height = 14;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 1;
				break;
			case 44:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 25;
				this.width = 12;
				this.height = 28;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 14;
				this.shootSpeed = 6.7f;
				this.knockBack = 1f;
				this.alpha = 30;
				this.rare = 1;
				this.noMelee = true;
				this.value = 18000;
				this.ranged = true;
				break;
			case 45:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 30;
				this.knockBack = 6f;
				this.useTime = 15;
				this.width = 24;
				this.height = 28;
				this.damage = 20;
				this.axe = 15;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 1;
				this.value = 13500;
				this.melee = true;
				break;
			case 46:
				this.useStyle = 1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.knockBack = 5f;
				this.width = 24;
				this.height = 28;
				this.damage = 16;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 1;
				this.value = 13500;
				this.melee = true;
				this.shoot = 974;
				this.glowMask = 328;
				break;
			case 47:
				this.shootSpeed = 3.4f;
				this.shoot = 4;
				this.damage = 12;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 3f;
				this.alpha = 30;
				this.rare = 1;
				this.value = 40;
				this.ranged = true;
				break;
			case 48:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 21;
				this.width = 26;
				this.height = 22;
				this.value = 500;
				break;
			case 49:
				this.width = 22;
				this.height = 22;
				this.accessory = true;
				this.lifeRegen = 2;
				this.rare = 1;
				this.value = 50000;
				this.handOnSlot = 2;
				break;
			case 50:
				this.useTurn = true;
				this.width = 20;
				this.height = 20;
				this.useStyle = 4;
				this.useTime = 90;
				this.UseSound = new SoundStyle?(SoundID.Item6);
				this.useAnimation = 90;
				this.rare = 1;
				this.value = 50000;
				break;
			case 51:
				this.shootSpeed = 0.5f;
				this.shoot = 5;
				this.damage = 10;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 4f;
				this.rare = 1;
				this.value = 100;
				this.ranged = true;
				break;
			case 52:
				type = 52;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 1;
				break;
			case 53:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 1;
				this.value = 50000;
				this.waistSlot = 1;
				break;
			case 54:
				this.width = 28;
				this.height = 24;
				this.accessory = true;
				this.rare = 1;
				this.value = 50000;
				this.shoeSlot = 6;
				break;
			case 55:
				this.noMelee = true;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 6;
				this.damage = 17;
				this.knockBack = 8f;
				this.width = 14;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.noUseGraphic = true;
				this.rare = 1;
				this.value = 50000;
				this.melee = true;
				break;
			case 56:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 22;
				this.width = 12;
				this.height = 12;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 10, 0);
				break;
			case 57:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 30, 0);
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 8;
				break;
			case 58:
				this.width = 12;
				this.height = 12;
				break;
			case 59:
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 23;
				this.width = 14;
				this.height = 14;
				this.value = 500;
				this.autoReuse = true;
				break;
			case 60:
				this.width = 16;
				this.height = 18;
				this.maxStack = Item.CommonMaxStack;
				this.value = 50;
				break;
			case 61:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 25;
				this.width = 12;
				this.height = 12;
				break;
			case 62:
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 2;
				this.width = 14;
				this.height = 14;
				this.value = 20;
				this.autoReuse = true;
				break;
			case 63:
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.autoReuse = true;
				this.createTile = 27;
				this.width = 26;
				this.height = 26;
				this.value = Item.buyPrice(0, 0, 50, 0);
				break;
			case 64:
				this.mana = 10;
				this.damage = 10;
				this.useStyle = 1;
				this.shootSpeed = 32f;
				this.shoot = 7;
				this.width = 26;
				this.height = 28;
				this.useAnimation = 28;
				this.useTime = 28;
				this.rare = 1;
				this.noMelee = true;
				this.knockBack = 1f;
				this.value = this.shadowOrbPrice;
				this.magic = true;
				break;
			case 65:
				this.knockBack = 5f;
				this.alpha = 100;
				this.color = new Color(150, 150, 150, 0);
				this.damage = 25;
				this.useStyle = 1;
				this.scale = 1f;
				this.shootSpeed = 25f;
				this.shoot = 9;
				this.width = 14;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 40;
				this.rare = 2;
				this.value = 50000;
				this.melee = true;
				break;
			case 66:
				this.useStyle = 1;
				this.shootSpeed = 4f;
				this.shoot = 10;
				this.width = 16;
				this.height = 24;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.useTime = 15;
				this.noMelee = true;
				this.value = 75;
				break;
			case 67:
				this.damage = 0;
				this.useStyle = 1;
				this.shootSpeed = 4f;
				this.shoot = 11;
				this.width = 16;
				this.height = 24;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.useTime = 15;
				this.noMelee = true;
				this.value = 100;
				break;
			case 68:
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10;
				break;
			case 69:
				this.width = 8;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 100;
				break;
			case 70:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 1;
				break;
			case 71:
				this.width = 10;
				this.height = 10;
				this.maxStack = 100;
				this.value = 5;
				this.ammo = AmmoID.Coin;
				this.shoot = 158;
				this.notAmmo = true;
				this.damage = 25;
				this.shootSpeed = 1f;
				this.ranged = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 330;
				this.noMelee = true;
				break;
			case 72:
				this.width = 10;
				this.height = 12;
				this.maxStack = 100;
				this.value = 500;
				this.ammo = AmmoID.Coin;
				this.notAmmo = true;
				this.damage = 50;
				this.shoot = 159;
				this.shootSpeed = 2f;
				this.ranged = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 331;
				this.noMelee = true;
				break;
			case 73:
				this.width = 10;
				this.height = 14;
				this.maxStack = 100;
				this.value = 50000;
				this.ammo = AmmoID.Coin;
				this.notAmmo = true;
				this.damage = 100;
				this.shoot = 160;
				this.shootSpeed = 3f;
				this.ranged = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 332;
				this.noMelee = true;
				break;
			case 74:
				this.width = 12;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.value = 5000000;
				this.ammo = AmmoID.Coin;
				this.notAmmo = true;
				this.damage = 200;
				this.shoot = 161;
				this.shootSpeed = 4f;
				this.ranged = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 333;
				this.noMelee = true;
				break;
			case 75:
				this.width = 18;
				this.height = 18;
				this.maxStack = Item.CommonMaxStack;
				this.alpha = 75;
				this.ammo = AmmoID.FallenStar;
				this.value = Item.sellPrice(0, 0, 5, 0);
				this.useStyle = 4;
				this.UseSound = new SoundStyle?(SoundID.Item4);
				this.useTurn = false;
				this.useAnimation = 17;
				this.useTime = 17;
				this.consumable = true;
				this.rare = 1;
				break;
			case 76:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.legSlot = 1;
				this.value = 1000;
				break;
			case 77:
				this.width = 18;
				this.height = 18;
				this.defense = 2;
				this.legSlot = 2;
				this.value = 4000;
				break;
			case 78:
				this.width = 18;
				this.height = 18;
				this.defense = 3;
				this.legSlot = 3;
				this.value = 10000;
				break;
			case 79:
				this.width = 18;
				this.height = 18;
				this.defense = 4;
				this.legSlot = 4;
				this.value = 20000;
				break;
			case 80:
				this.width = 18;
				this.height = 18;
				this.defense = 2;
				this.bodySlot = 1;
				this.value = 1250;
				break;
			case 81:
				this.width = 18;
				this.height = 18;
				this.defense = 3;
				this.bodySlot = 2;
				this.value = 5000;
				break;
			case 82:
				this.width = 18;
				this.height = 18;
				this.defense = 4;
				this.bodySlot = 3;
				this.value = 12500;
				break;
			case 83:
				this.width = 18;
				this.height = 18;
				this.defense = 5;
				this.bodySlot = 4;
				this.value = 25000;
				break;
			case 84:
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 11.5f;
				this.shoot = 13;
				this.width = 18;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = 20000;
				break;
			case 85:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 8;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 214;
				this.width = 12;
				this.height = 12;
				this.value = 200;
				this.tileBoost += 3;
				break;
			case 86:
				this.width = 14;
				this.height = 18;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 1;
				this.value = 500;
				this.MakeUsableWithChlorophyteExtractinator();
				break;
			case 87:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 29;
				this.width = 20;
				this.height = 12;
				this.value = 10000;
				break;
			case 88:
				this.width = 22;
				this.height = 16;
				this.defense = 2;
				this.headSlot = 11;
				this.rare = 1;
				this.value = Item.buyPrice(0, 4, 0, 0);
				break;
			case 89:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.headSlot = 1;
				this.value = 750;
				break;
			case 90:
				this.width = 18;
				this.height = 18;
				this.defense = 2;
				this.headSlot = 2;
				this.value = 3000;
				break;
			case 91:
				this.width = 18;
				this.height = 18;
				this.defense = 3;
				this.headSlot = 3;
				this.value = 7500;
				break;
			case 92:
				this.width = 18;
				this.height = 18;
				this.defense = 4;
				this.headSlot = 4;
				this.value = 15000;
				break;
			case 93:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 4;
				this.width = 12;
				this.height = 12;
				break;
			case 94:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 19;
				this.width = 8;
				this.height = 10;
				break;
			case 95:
				this.useStyle = 5;
				this.useAnimation = 16;
				this.useTime = 16;
				this.width = 24;
				this.height = 28;
				this.shoot = 14;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = new SoundStyle?(SoundID.Item11);
				this.damage = 13;
				this.shootSpeed = 5f;
				this.noMelee = true;
				this.value = 50000;
				this.knockBack = 1f;
				this.scale = 0.9f;
				this.rare = 1;
				this.ranged = true;
				break;
			case 96:
				this.useStyle = 5;
				this.autoReuse = false;
				this.useAnimation = 32;
				this.useTime = 32;
				this.width = 44;
				this.height = 14;
				this.shoot = 10;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = new SoundStyle?(SoundID.Item11);
				this.damage = 31;
				this.shootSpeed = 9f;
				this.noMelee = true;
				this.value = this.shadowOrbPrice;
				this.knockBack = 5.25f;
				this.rare = 1;
				this.ranged = true;
				this.crit = 7;
				break;
			case 97:
				this.shootSpeed = 4f;
				this.shoot = 14;
				this.damage = 7;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Bullet;
				this.knockBack = 2f;
				this.value = 7;
				this.ranged = true;
				break;
			case 98:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 8;
				this.useTime = 8;
				this.width = 50;
				this.height = 18;
				this.shoot = 10;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = new SoundStyle?(SoundID.Item11);
				this.damage = 6;
				this.shootSpeed = 7f;
				this.noMelee = true;
				this.value = 350000;
				this.rare = 2;
				this.ranged = true;
				break;
			case 99:
				this.useStyle = 5;
				this.useAnimation = 28;
				this.useTime = 28;
				this.width = 12;
				this.height = 28;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 8;
				this.shootSpeed = 6.6f;
				this.noMelee = true;
				this.value = 1400;
				this.ranged = true;
				break;
			case 100:
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.legSlot = 5;
				this.rare = 1;
				this.value = 22500;
				break;
			case 101:
				this.width = 18;
				this.height = 18;
				this.defense = 7;
				this.bodySlot = 5;
				this.rare = 1;
				this.value = 30000;
				break;
			case 102:
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.headSlot = 5;
				this.rare = 1;
				this.value = 37500;
				break;
			case 103:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 20;
				this.useTime = 15;
				this.autoReuse = true;
				this.width = 24;
				this.height = 28;
				this.damage = 9;
				this.pick = 65;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.knockBack = 3f;
				this.rare = 1;
				this.value = 18000;
				this.scale = 1f;
				this.melee = true;
				break;
			case 104:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 45;
				this.useTime = 19;
				this.hammer = 55;
				this.width = 24;
				this.height = 28;
				this.damage = 24;
				this.knockBack = 6f;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 1;
				this.value = 15000;
				this.melee = true;
				break;
			case 105:
				this.flame = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 33;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 3, 0);
				this.holdStyle = 1;
				break;
			case 106:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 34;
				this.width = 26;
				this.height = 26;
				this.value = 3000;
				break;
			case 107:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 34;
				this.placeStyle = 1;
				this.width = 26;
				this.height = 26;
				this.value = 12000;
				break;
			case 108:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 34;
				this.placeStyle = 2;
				this.width = 26;
				this.height = 26;
				this.value = 24000;
				break;
			case 109:
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 18;
				this.height = 18;
				this.useStyle = 4;
				this.useTime = 30;
				this.UseSound = new SoundStyle?(SoundID.Item29);
				this.useAnimation = 30;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 25, 0);
				break;
			case 110:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.healMana = 50;
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.value = Item.buyPrice(0, 0, 1, 0);
				break;
			case 111:
				this.width = 22;
				this.height = 22;
				this.accessory = true;
				this.rare = 1;
				this.value = this.shadowOrbPrice;
				this.handOnSlot = 3;
				break;
			case 112:
				this.mana = 12;
				this.damage = 48;
				this.useStyle = 1;
				this.shootSpeed = 7.5f;
				this.shoot = 15;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item20);
				this.useAnimation = 16;
				this.useTime = 16;
				this.rare = 3;
				this.noMelee = true;
				this.knockBack = 5.5f;
				this.value = this.hellPrice;
				this.magic = true;
				if (this.Variant == ItemVariants.StrongerVariant)
				{
					this.rare = 6;
					this.value = 500000;
					this.damage = 85;
					this.useAnimation = 12;
					this.useTime = 12;
				}
				break;
			case 113:
				this.mana = 14;
				this.channel = true;
				this.damage = 35;
				this.useStyle = 1;
				this.shootSpeed = 6f;
				this.shoot = 16;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item9);
				this.useAnimation = 22;
				this.useTime = 22;
				this.rare = 2;
				this.noMelee = true;
				this.knockBack = 7.5f;
				this.value = this.dungeonPrice;
				this.magic = true;
				break;
			case 114:
				this.channel = true;
				this.knockBack = 5f;
				this.useStyle = 1;
				this.shoot = 17;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item8);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 5, 0, 0);
				break;
			case 115:
				this.channel = true;
				this.damage = 0;
				this.useStyle = 4;
				this.shoot = 18;
				this.width = 24;
				this.height = 24;
				this.UseSound = new SoundStyle?(SoundID.Item8);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = this.shadowOrbPrice;
				this.buffType = 19;
				break;
			case 116:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 37;
				this.width = 12;
				this.height = 12;
				this.value = 1000;
				break;
			case 117:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 1;
				this.value = 7000;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 9;
				break;
			case 118:
				this.maxStack = Item.CommonMaxStack;
				this.width = 18;
				this.height = 18;
				this.value = 1000;
				break;
			case 119:
				this.noMelee = true;
				this.useStyle = 1;
				this.shootSpeed = 14f;
				this.shoot = 19;
				this.damage = 49;
				this.knockBack = 8f;
				this.width = 14;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.noUseGraphic = true;
				this.rare = 3;
				this.value = 100000;
				this.melee = true;
				break;
			case 120:
				this.useStyle = 5;
				this.useAnimation = 22;
				this.useTime = 22;
				this.width = 14;
				this.height = 32;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 31;
				this.shootSpeed = 8f;
				this.knockBack = 2f;
				this.alpha = 30;
				this.rare = 3;
				this.noMelee = true;
				this.scale = 1.1f;
				this.value = 27000;
				this.ranged = true;
				break;
			case 121:
				this.useStyle = 1;
				this.useTime = 40;
				this.useAnimation = 40;
				this.knockBack = 6.5f;
				this.width = 24;
				this.height = 28;
				this.damage = 40;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 3;
				this.value = 27000;
				this.melee = true;
				break;
			}
			switch (type)
			{
			case 122:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 23;
				this.useTime = 18;
				this.autoReuse = true;
				this.width = 24;
				this.height = 28;
				this.damage = 12;
				this.pick = 100;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.knockBack = 2f;
				this.rare = 3;
				this.value = 27000;
				this.melee = true;
				return;
			case 123:
				this.width = 18;
				this.height = 18;
				this.defense = 5;
				this.headSlot = 6;
				this.rare = 1;
				this.value = 45000;
				return;
			case 124:
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.bodySlot = 6;
				this.rare = 1;
				this.value = 30000;
				return;
			case 125:
				this.width = 18;
				this.height = 18;
				this.defense = 5;
				this.legSlot = 6;
				this.rare = 1;
				this.value = 30000;
				return;
			case 126:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.healLife = 20;
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.potion = true;
				this.value = 20;
				return;
			case 127:
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 17;
				this.useTime = 17;
				this.width = 24;
				this.height = 28;
				this.shoot = 20;
				this.mana = 6;
				this.UseSound = new SoundStyle?(SoundID.Item157);
				this.knockBack = 0.75f;
				this.damage = 17;
				this.shootSpeed = 10f;
				this.noMelee = true;
				this.scale = 0.8f;
				this.rare = 1;
				this.magic = true;
				this.value = 20000;
				return;
			case 128:
				this.width = 28;
				this.height = 24;
				this.accessory = true;
				this.rare = 3;
				this.value = 50000;
				this.shoeSlot = 12;
				return;
			case 129:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 38;
				this.width = 12;
				this.height = 12;
				return;
			case 130:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 5;
				this.width = 12;
				this.height = 12;
				return;
			case 131:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 39;
				this.width = 12;
				this.height = 12;
				return;
			case 132:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 6;
				this.width = 12;
				this.height = 12;
				return;
			case 133:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 40;
				this.width = 12;
				this.height = 12;
				return;
			case 134:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 41;
				this.width = 12;
				this.height = 12;
				return;
			case 135:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 17;
				this.width = 12;
				this.height = 12;
				return;
			case 136:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 42;
				this.width = 12;
				this.height = 28;
				this.value = Item.sellPrice(0, 0, 0, 30);
				return;
			case 137:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 43;
				this.width = 12;
				this.height = 12;
				return;
			case 138:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 18;
				this.width = 12;
				this.height = 12;
				return;
			case 139:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 44;
				this.width = 12;
				this.height = 12;
				return;
			case 140:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 19;
				this.width = 12;
				this.height = 12;
				return;
			case 141:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 45;
				this.width = 12;
				this.height = 12;
				return;
			case 142:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 10;
				this.width = 12;
				this.height = 12;
				return;
			case 143:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 46;
				this.width = 12;
				this.height = 12;
				return;
			case 144:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 11;
				this.width = 12;
				this.height = 12;
				return;
			case 145:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 47;
				this.width = 12;
				this.height = 12;
				return;
			case 146:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 12;
				this.width = 12;
				this.height = 12;
				return;
			case 147:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 48;
				this.width = 12;
				this.height = 12;
				return;
			case 148:
				this.flame = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 49;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.holdStyle = 1;
				this.rare = 1;
				return;
			case 149:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 50;
				this.width = 24;
				this.height = 28;
				this.value = Item.sellPrice(0, 0, 3, 0);
				return;
			case 150:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 51;
				this.width = 20;
				this.height = 24;
				this.alpha = 100;
				return;
			case 151:
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.headSlot = 7;
				this.rare = 2;
				this.value = 45000;
				return;
			case 152:
				this.width = 18;
				this.height = 18;
				this.defense = 7;
				this.bodySlot = 7;
				this.rare = 2;
				this.value = 30000;
				return;
			case 153:
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.legSlot = 7;
				this.rare = 2;
				this.value = 30000;
				return;
			case 154:
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 14;
				this.value = 50;
				this.useAnimation = 12;
				this.useTime = 12;
				this.useStyle = 1;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.shootSpeed = 8f;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.damage = 20;
				this.knockBack = 2.3f;
				this.shoot = 21;
				this.ranged = true;
				return;
			case 155:
				this.autoReuse = true;
				this.useTurn = true;
				this.useStyle = 1;
				this.useTime = 18;
				this.useAnimation = 18;
				this.width = 40;
				this.height = 40;
				this.damage = 24;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 2;
				this.value = this.dungeonPrice;
				this.knockBack = 3f;
				this.melee = true;
				return;
			case 156:
				this.width = 24;
				this.height = 28;
				this.rare = 2;
				this.value = this.dungeonPrice;
				this.accessory = true;
				this.defense = 1;
				this.shieldSlot = 1;
				return;
			case 157:
				this.mana = 7;
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 16;
				this.useTime = 8;
				this.knockBack = 7f;
				this.width = 38;
				this.height = 10;
				this.damage = 27;
				this.scale = 1f;
				this.shoot = 22;
				this.shootSpeed = 12.5f;
				this.UseSound = new SoundStyle?(SoundID.Item13);
				this.noMelee = true;
				this.rare = 2;
				this.value = this.dungeonPrice;
				this.magic = true;
				if (this.Variant == ItemVariants.StrongerVariant)
				{
					this.value = Item.sellPrice(0, 5, 0, 0);
					this.rare = 8;
					this.damage = 90;
					this.useAnimation = 10;
					this.useTime = 5;
					return;
				}
				break;
			case 158:
				this.width = 20;
				this.height = 22;
				this.rare = 1;
				this.value = 27000;
				this.accessory = true;
				return;
			case 159:
				this.width = 14;
				this.height = 28;
				this.rare = 1;
				this.value = Item.sellPrice(0, 1, 50, 0);
				this.accessory = true;
				this.balloonSlot = 8;
				return;
			case 160:
				this.autoReuse = true;
				this.noMelee = true;
				this.useStyle = 5;
				this.useAnimation = 30;
				this.useTime = 30;
				this.knockBack = 6f;
				this.width = 30;
				this.height = 10;
				this.damage = 25;
				this.scale = 1.1f;
				this.shoot = 23;
				this.shootSpeed = 11f;
				this.UseSound = new SoundStyle?(SoundID.Item10);
				this.rare = 2;
				this.value = 27000;
				this.ranged = true;
				return;
			case 161:
				this.useStyle = 1;
				this.shootSpeed = 5f;
				this.shoot = 24;
				this.knockBack = 1f;
				this.damage = 16;
				this.width = 10;
				this.height = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.useTime = 15;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = 80;
				this.ranged = true;
				return;
			case 162:
				this.useStyle = 5;
				this.useAnimation = 45;
				this.useTime = 45;
				this.knockBack = 5.5f;
				this.width = 30;
				this.height = 10;
				this.damage = 15;
				this.scale = 1.1f;
				this.noUseGraphic = true;
				this.shoot = 25;
				this.shootSpeed = 12f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 1;
				this.value = this.shadowOrbPrice;
				this.melee = true;
				this.channel = true;
				this.noMelee = true;
				return;
			case 163:
				this.noMelee = true;
				this.useStyle = 5;
				this.useAnimation = 45;
				this.useTime = 45;
				this.knockBack = 6f;
				this.width = 30;
				this.height = 10;
				this.damage = 27;
				this.scale = 1.1f;
				this.noUseGraphic = true;
				this.shoot = 26;
				this.shootSpeed = 12f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 2;
				this.value = this.dungeonPrice;
				this.melee = true;
				this.channel = true;
				return;
			case 164:
				this.autoReuse = false;
				this.useStyle = 5;
				this.useAnimation = 15;
				this.useTime = 15;
				this.width = 24;
				this.height = 24;
				this.shoot = 14;
				this.knockBack = 3f;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = new SoundStyle?(SoundID.Item41);
				this.damage = 26;
				this.shootSpeed = 10f;
				this.noMelee = true;
				this.value = this.dungeonPrice;
				this.scale = 0.85f;
				this.rare = 2;
				this.ranged = true;
				return;
			case 165:
				this.autoReuse = true;
				this.rare = 2;
				this.mana = 10;
				this.UseSound = new SoundStyle?(SoundID.Item21);
				this.noMelee = true;
				this.useStyle = 5;
				this.damage = 19;
				this.useAnimation = 17;
				this.useTime = 17;
				this.width = 24;
				this.height = 28;
				this.shoot = 27;
				this.scale = 0.9f;
				this.shootSpeed = 4.5f;
				this.knockBack = 5f;
				this.magic = true;
				this.value = Item.sellPrice(0, 1, 50, 0);
				return;
			case 166:
				this.useStyle = 1;
				this.shootSpeed = 5f;
				this.shoot = 28;
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 25;
				this.useTime = 25;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 0, 3, 0);
				this.damage = 0;
				return;
			case 167:
				this.useStyle = 1;
				this.shootSpeed = 4f;
				this.shoot = 29;
				this.width = 8;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 40;
				this.useTime = 40;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 0, 20, 0);
				this.rare = 1;
				return;
			case 168:
				this.useStyle = 5;
				this.shootSpeed = 5.5f;
				this.shoot = 30;
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 45;
				this.useTime = 45;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = 75;
				this.damage = 60;
				this.knockBack = 8f;
				this.ranged = true;
				return;
			case 169:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 53;
				this.width = 12;
				this.height = 12;
				this.ammo = AmmoID.Sand;
				this.notAmmo = true;
				return;
			case 170:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 54;
				this.width = 12;
				this.height = 12;
				return;
			case 171:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 55;
				this.width = 28;
				this.height = 28;
				return;
			case 172:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 57;
				this.width = 12;
				this.height = 12;
				return;
			case 173:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 56;
				this.width = 12;
				this.height = 12;
				return;
			case 174:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 58;
				this.width = 12;
				this.height = 12;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 2, 50);
				return;
			case 175:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 2;
				this.value = 20000;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 10;
				return;
			case 176:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 59;
				this.width = 12;
				this.height = 12;
				return;
			case 177:
				this.createTile = 178;
				this.placeStyle = 2;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.alpha = 50;
				this.width = 10;
				this.height = 14;
				this.value = 5625;
				return;
			case 178:
				this.createTile = 178;
				this.placeStyle = 4;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.alpha = 50;
				this.width = 10;
				this.height = 14;
				this.value = 11250;
				return;
			case 179:
				this.createTile = 178;
				this.placeStyle = 3;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.alpha = 50;
				this.width = 10;
				this.height = 14;
				this.value = 7500;
				return;
			case 180:
				this.createTile = 178;
				this.placeStyle = 1;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.alpha = 50;
				this.width = 10;
				this.height = 14;
				this.value = 3750;
				return;
			case 181:
				this.createTile = 178;
				this.placeStyle = 0;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.alpha = 50;
				this.width = 10;
				this.height = 14;
				this.value = 1875;
				return;
			case 182:
				this.createTile = 178;
				this.placeStyle = 5;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.alpha = 50;
				this.width = 10;
				this.height = 14;
				this.value = 15000;
				return;
			case 183:
				this.width = 16;
				this.height = 18;
				this.value = 50;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 190;
				return;
			case 184:
				this.width = 12;
				this.height = 12;
				return;
			case 185:
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 13f;
				this.shoot = 32;
				this.width = 18;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.value = 20000;
				return;
			case 186:
				this.width = 44;
				this.height = 44;
				this.rare = 1;
				this.value = 10000;
				this.holdStyle = 2;
				this.useStyle = 1;
				this.useAnimation = 27;
				this.useTime = 19;
				this.knockBack = 4f;
				this.damage = 10;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.melee = true;
				return;
			case 187:
				this.width = 28;
				this.height = 28;
				this.rare = 1;
				this.value = 10000;
				this.accessory = true;
				this.shoeSlot = 1;
				return;
			case 188:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.healLife = 100;
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.rare = 1;
				this.potion = true;
				this.value = 1000;
				return;
			case 189:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.healMana = 100;
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.rare = 1;
				this.value = Item.buyPrice(0, 0, 2, 50);
				return;
			case 190:
				this.useStyle = 1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.shoot = 976;
				this.shootSpeed = 20f;
				this.knockBack = 4.5f;
				this.width = 40;
				this.height = 40;
				this.damage = 18;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 3;
				this.value = 27000;
				this.melee = true;
				this.shootsEveryUse = true;
				return;
			case 191:
				this.noMelee = true;
				this.useStyle = 1;
				this.shootSpeed = 14f;
				this.shoot = 33;
				this.damage = 25;
				this.knockBack = 8f;
				this.width = 14;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.useTime = 15;
				this.noUseGraphic = true;
				this.rare = 3;
				this.value = 50000;
				this.melee = true;
				return;
			case 192:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 75;
				this.width = 12;
				this.height = 12;
				return;
			case 193:
				this.width = 20;
				this.height = 22;
				this.rare = 2;
				this.value = 27000;
				this.accessory = true;
				this.faceSlot = 12;
				this.defense = 1;
				return;
			case 194:
				this.autoReuse = true;
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 70;
				this.width = 14;
				this.height = 14;
				this.value = 150;
				return;
			case 195:
				this.autoReuse = true;
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 60;
				this.width = 14;
				this.height = 14;
				this.value = 150;
				return;
			case 196:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 37;
				this.useTime = 25;
				this.hammer = 25;
				this.width = 24;
				this.height = 28;
				this.damage = 2;
				this.knockBack = 5.5f;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.tileBoost = -1;
				this.value = 50;
				this.melee = true;
				return;
			case 197:
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 12;
				this.useTime = 12;
				this.width = 50;
				this.height = 18;
				this.shoot = 955;
				this.useAmmo = AmmoID.FallenStar;
				this.UseSound = new SoundStyle?(SoundID.Item9);
				this.knockBack = 3f;
				this.damage = 55;
				this.shootSpeed = 14f;
				this.noMelee = true;
				this.value = 500000;
				this.rare = 2;
				this.ranged = true;
				if (this.Variant == ItemVariants.RebalancedVariant)
				{
					this.damage = (int)((double)this.damage * 0.9);
					this.useTime = (int)((double)this.useTime * 1.1);
					return;
				}
				break;
			case 198:
				this.useStyle = 1;
				this.useTime = 18;
				this.useAnimation = 18;
				this.knockBack = 3f;
				this.width = 40;
				this.height = 40;
				this.damage = 26;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item15);
				this.rare = 1;
				this.value = 27000;
				this.melee = true;
				return;
			case 199:
				this.useStyle = 1;
				this.useTime = 18;
				this.useAnimation = 18;
				this.knockBack = 3f;
				this.width = 40;
				this.height = 40;
				this.damage = 26;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item15);
				this.rare = 1;
				this.value = 27000;
				this.melee = true;
				return;
			case 200:
				this.useStyle = 1;
				this.useTime = 18;
				this.useAnimation = 18;
				this.knockBack = 3f;
				this.width = 40;
				this.height = 40;
				this.damage = 26;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item15);
				this.rare = 1;
				this.value = 27000;
				this.melee = true;
				return;
			case 201:
				this.useStyle = 1;
				this.useTime = 18;
				this.useAnimation = 18;
				this.knockBack = 3f;
				this.width = 40;
				this.height = 40;
				this.damage = 26;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item15);
				this.rare = 1;
				this.value = 27000;
				this.melee = true;
				return;
			case 202:
				this.useStyle = 1;
				this.useTime = 18;
				this.useAnimation = 18;
				this.knockBack = 3f;
				this.width = 40;
				this.height = 40;
				this.damage = 26;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item15);
				this.rare = 1;
				this.value = 27000;
				this.melee = true;
				return;
			case 203:
				this.useStyle = 1;
				this.useTime = 18;
				this.useAnimation = 18;
				this.knockBack = 3f;
				this.width = 40;
				this.height = 40;
				this.damage = 26;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item15);
				this.rare = 1;
				this.value = 27000;
				this.melee = true;
				return;
			case 204:
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 30;
				this.useTime = 16;
				this.hammer = 60;
				this.axe = 20;
				this.width = 24;
				this.height = 28;
				this.damage = 20;
				this.knockBack = 7f;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 1;
				this.value = 15000;
				this.melee = true;
				return;
			case 205:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.width = 20;
				this.height = 20;
				this.headSlot = 13;
				this.defense = 1;
				this.maxStack = Item.CommonMaxStack;
				this.autoReuse = true;
				return;
			case 206:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.autoReuse = true;
				return;
			case 207:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.autoReuse = true;
				return;
			case 208:
				this.width = 20;
				this.height = 20;
				this.value = 100;
				this.faceSlot = 8;
				this.accessory = true;
				this.vanity = true;
				return;
			case 209:
				this.width = 16;
				this.height = 18;
				this.maxStack = Item.CommonMaxStack;
				this.value = 200;
				return;
			case 210:
				this.width = 14;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 1000;
				return;
			case 211:
				this.width = 20;
				this.height = 20;
				this.accessory = true;
				this.rare = 3;
				this.value = 50000;
				this.handOnSlot = 5;
				this.handOffSlot = 9;
				return;
			case 212:
				this.width = 20;
				this.height = 20;
				this.accessory = true;
				this.rare = 3;
				this.value = 50000;
				return;
			case 213:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 25;
				this.useTime = 13;
				this.autoReuse = true;
				this.width = 24;
				this.height = 28;
				this.damage = 7;
				this.createTile = 2;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.knockBack = 3f;
				this.rare = 3;
				this.SetShopValues(ItemRarityColor.Orange3, Item.sellPrice(0, 0, 50, 0));
				this.melee = true;
				return;
			case 214:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 76;
				this.width = 12;
				this.height = 12;
				return;
			case 215:
				this.width = 18;
				this.height = 18;
				this.useTurn = true;
				this.useTime = 30;
				this.useAnimation = 30;
				this.noUseGraphic = true;
				this.useStyle = 10;
				this.UseSound = new SoundStyle?(SoundID.Item16);
				this.rare = 2;
				this.value = 100;
				return;
			case 216:
				this.width = 20;
				this.height = 20;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.accessory = true;
				this.defense = 1;
				this.handOffSlot = 7;
				this.handOnSlot = 12;
				return;
			case 217:
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 27;
				this.useTime = 14;
				this.hammer = 70;
				this.axe = 30;
				this.width = 24;
				this.height = 28;
				this.damage = 20;
				this.knockBack = 7f;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 3;
				this.value = 27000;
				this.melee = true;
				return;
			case 218:
				this.mana = 21;
				this.channel = true;
				this.damage = 32;
				this.useStyle = 1;
				this.shootSpeed = 6f;
				this.shoot = 34;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item20);
				this.useAnimation = 30;
				this.useTime = 30;
				this.rare = 3;
				this.noMelee = true;
				this.knockBack = 6.5f;
				this.value = this.hellPrice;
				this.magic = true;
				return;
			case 219:
				this.autoReuse = false;
				this.useStyle = 5;
				this.useAnimation = 14;
				this.useTime = 14;
				this.width = 24;
				this.height = 22;
				this.shoot = 14;
				this.knockBack = 2f;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = new SoundStyle?(SoundID.Item41);
				this.damage = 30;
				this.shootSpeed = 13f;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 3, 50, 0);
				this.scale = 0.85f;
				this.rare = 3;
				this.ranged = true;
				return;
			case 220:
				this.noMelee = true;
				this.useStyle = 5;
				this.useAnimation = 45;
				this.useTime = 45;
				this.knockBack = 6.75f;
				this.width = 30;
				this.height = 10;
				this.damage = 32;
				this.crit = 7;
				this.scale = 1.1f;
				this.noUseGraphic = true;
				this.shoot = 35;
				this.shootSpeed = 12f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 3;
				this.value = this.hellPrice;
				this.melee = true;
				this.channel = true;
				return;
			case 221:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 77;
				this.width = 26;
				this.height = 24;
				this.value = 3000;
				return;
			case 222:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 78;
				this.width = 14;
				this.height = 14;
				this.value = 100;
				return;
			case 223:
				this.width = 20;
				this.height = 22;
				this.rare = 3;
				this.value = 27000;
				this.accessory = true;
				this.faceSlot = 1;
				return;
			case 224:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 79;
				this.width = 28;
				this.height = 20;
				this.value = 2000;
				return;
			case 225:
				this.maxStack = Item.CommonMaxStack;
				this.width = 22;
				this.height = 22;
				this.value = 1000;
				return;
			case 226:
			case 227:
				this.type = 227;
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.healLife = 90;
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.potion = true;
				this.value = 1500;
				this.rare = 1;
				return;
			case 228:
				this.width = 18;
				this.height = 18;
				this.defense = 5;
				this.headSlot = 8;
				this.rare = 3;
				this.value = 45000;
				return;
			case 229:
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.bodySlot = 8;
				this.rare = 3;
				this.value = 30000;
				return;
			case 230:
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.legSlot = 8;
				this.rare = 3;
				this.value = 30000;
				return;
			case 231:
				this.width = 18;
				this.height = 18;
				this.defense = 8;
				this.headSlot = 9;
				this.rare = 3;
				this.value = 45000;
				return;
			case 232:
				this.width = 18;
				this.height = 18;
				this.defense = 9;
				this.bodySlot = 9;
				this.rare = 3;
				this.value = 30000;
				return;
			case 233:
				this.width = 18;
				this.height = 18;
				this.defense = 8;
				this.legSlot = 9;
				this.rare = 3;
				this.value = 30000;
				return;
			case 234:
				this.shootSpeed = 3f;
				this.shoot = 36;
				this.damage = 8;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Bullet;
				this.knockBack = 1f;
				this.value = 8;
				this.rare = 1;
				this.ranged = true;
				return;
			case 235:
				this.useStyle = 1;
				this.shootSpeed = 5f;
				this.shoot = 37;
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 25;
				this.useTime = 25;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = 500;
				this.damage = 0;
				return;
			case 236:
				this.width = 12;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 5000;
				return;
			case 237:
				this.width = 28;
				this.height = 12;
				this.headSlot = 12;
				this.rare = 2;
				this.value = 10000;
				this.vanity = true;
				return;
			case 238:
				this.width = 28;
				this.height = 20;
				this.headSlot = 14;
				this.rare = 2;
				this.value = 10000;
				this.defense = 4;
				return;
			case 239:
				this.width = 18;
				this.height = 18;
				this.headSlot = 15;
				this.value = 10000;
				this.vanity = true;
				return;
			case 240:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 10;
				this.value = 5000;
				this.vanity = true;
				return;
			case 241:
				this.width = 18;
				this.height = 18;
				this.legSlot = 10;
				this.value = 5000;
				this.vanity = true;
				return;
			case 242:
				this.width = 18;
				this.height = 18;
				this.headSlot = 16;
				this.value = 10000;
				this.vanity = true;
				return;
			case 243:
				this.width = 18;
				this.height = 18;
				this.headSlot = 17;
				this.value = 20000;
				this.vanity = true;
				return;
			case 244:
				this.width = 18;
				this.height = 12;
				this.headSlot = 18;
				this.value = 10000;
				this.vanity = true;
				return;
			case 245:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 11;
				this.value = 250000;
				this.vanity = true;
				return;
			case 246:
				this.width = 18;
				this.height = 18;
				this.legSlot = 11;
				this.value = 250000;
				this.vanity = true;
				return;
			case 247:
				this.width = 18;
				this.height = 12;
				this.headSlot = 19;
				this.value = 10000;
				this.vanity = true;
				return;
			case 248:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 12;
				this.value = 5000;
				this.vanity = true;
				return;
			case 249:
				this.width = 18;
				this.height = 18;
				this.legSlot = 12;
				this.value = 5000;
				this.vanity = true;
				return;
			case 250:
				this.width = 18;
				this.height = 18;
				this.headSlot = 20;
				this.value = 10000;
				this.vanity = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 282;
				this.width = 12;
				this.height = 12;
				return;
			case 251:
				this.width = 18;
				this.height = 12;
				this.headSlot = 21;
				this.value = 10000;
				this.vanity = true;
				return;
			case 252:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 13;
				this.value = 5000;
				this.vanity = true;
				return;
			case 253:
				this.width = 18;
				this.height = 18;
				this.legSlot = 13;
				this.value = 5000;
				this.vanity = true;
				return;
			case 254:
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 20;
				this.value = 10000;
				return;
			case 255:
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 20;
				this.value = 2000;
				return;
			case 256:
				this.width = 18;
				this.height = 12;
				this.headSlot = 22;
				this.value = 10000;
				this.defense = 2;
				this.rare = 1;
				return;
			case 257:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 14;
				this.value = 5000;
				this.defense = 4;
				this.rare = 1;
				return;
			case 258:
				this.width = 18;
				this.height = 18;
				this.legSlot = 14;
				this.value = 5000;
				this.defense = 3;
				this.rare = 1;
				return;
			case 259:
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 50;
				return;
			case 260:
				this.width = 18;
				this.height = 14;
				this.headSlot = 24;
				this.value = 1000;
				this.vanity = true;
				return;
			case 261:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.noUseGraphic = true;
				this.makeNPC = 55;
				return;
			case 262:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 15;
				this.value = 2000;
				this.vanity = true;
				return;
			case 263:
				this.width = 18;
				this.height = 18;
				this.headSlot = 25;
				this.value = 10000;
				this.vanity = true;
				return;
			case 264:
				this.width = 18;
				this.height = 18;
				this.headSlot = 26;
				this.value = 10000;
				this.vanity = true;
				return;
			case 265:
				this.shootSpeed = 6.5f;
				this.shoot = 41;
				this.damage = 13;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 8f;
				this.value = 100;
				this.rare = 2;
				this.ranged = true;
				return;
			case 266:
				this.useStyle = 5;
				this.useAnimation = 16;
				this.useTime = 16;
				this.autoReuse = true;
				this.width = 40;
				this.height = 20;
				this.shoot = 42;
				this.useAmmo = AmmoID.Sand;
				this.UseSound = new SoundStyle?(SoundID.Item11);
				this.damage = 30;
				this.shootSpeed = 12f;
				this.noMelee = true;
				this.knockBack = 5f;
				this.value = 10000;
				this.rare = 2;
				this.ranged = true;
				return;
			case 267:
				this.accessory = true;
				this.width = 14;
				this.height = 26;
				this.value = 1000;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 268:
				this.headSlot = 27;
				this.defense = 2;
				this.width = 20;
				this.height = 20;
				this.value = 1000;
				this.rare = 2;
				return;
			case 269:
				this.bodySlot = 0;
				this.width = 20;
				this.height = 20;
				this.value = 10000;
				this.color = Main.player[Main.myPlayer].shirtColor;
				this.vanity = true;
				return;
			case 270:
				this.legSlot = 0;
				this.width = 20;
				this.height = 20;
				this.value = 10000;
				this.color = Main.player[Main.myPlayer].pantsColor;
				this.vanity = true;
				return;
			case 271:
				this.headSlot = 0;
				this.width = 20;
				this.height = 20;
				this.value = 10000;
				this.color = Main.player[Main.myPlayer].hairColor;
				this.vanity = true;
				return;
			case 272:
				this.mana = 14;
				this.damage = 35;
				this.useStyle = 5;
				this.shootSpeed = 0.2f;
				this.shoot = 45;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item8);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.knockBack = 5f;
				this.scale = 0.9f;
				this.value = Item.sellPrice(0, 1, 50, 0);
				this.magic = true;
				return;
			case 273:
				this.useStyle = 1;
				this.useAnimation = 25;
				this.useTime = 25;
				this.autoReuse = true;
				this.knockBack = 4.5f;
				this.width = 40;
				this.height = 40;
				this.damage = 40;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 3;
				this.value = Item.sellPrice(0, 4, 0, 0);
				this.melee = true;
				this.shoot = 972;
				this.shootSpeed = 5f;
				this.noMelee = true;
				this.shootsEveryUse = true;
				return;
			case 274:
				this.useStyle = 5;
				this.useAnimation = 22;
				this.useTime = 22;
				this.shootSpeed = 6f;
				this.knockBack = 5f;
				this.width = 40;
				this.height = 40;
				this.damage = 34;
				this.scale = 1.1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.shoot = 46;
				this.rare = 3;
				this.value = this.hellPrice;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				return;
			case 275:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 81;
				this.width = 20;
				this.height = 22;
				this.value = Item.sellPrice(0, 0, 2, 0);
				return;
			case 276:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 188;
				this.width = 12;
				this.height = 12;
				this.value = 10;
				return;
			case 277:
				this.useStyle = 5;
				this.useAnimation = 31;
				this.useTime = 31;
				this.shootSpeed = 4f;
				this.knockBack = 6f;
				this.width = 40;
				this.height = 40;
				this.damage = 14;
				this.scale = 1.1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.shoot = 47;
				this.rare = 1;
				this.value = 10000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				return;
			case 278:
				this.shootSpeed = 4.5f;
				this.shoot = 981;
				this.damage = 9;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Bullet;
				this.knockBack = 3f;
				this.value = 15;
				this.ranged = true;
				return;
			case 279:
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 48;
				this.damage = 12;
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.useTime = 15;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = 50;
				this.knockBack = 2f;
				this.ranged = true;
				return;
			case 280:
				this.useStyle = 5;
				this.useAnimation = 31;
				this.useTime = 31;
				this.shootSpeed = 3.7f;
				this.knockBack = 6.5f;
				this.width = 32;
				this.height = 32;
				this.damage = 8;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.shoot = 49;
				this.value = 1000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				return;
			case 281:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 25;
				this.useTime = 25;
				this.width = 38;
				this.height = 6;
				this.shoot = 10;
				this.useAmmo = AmmoID.Dart;
				this.UseSound = new SoundStyle?(SoundID.Item63);
				this.damage = 9;
				this.shootSpeed = 11f;
				this.noMelee = true;
				this.value = 10000;
				this.knockBack = 3.5f;
				this.ranged = true;
				return;
			case 282:
				this.color = new Color(255, 255, 255, 0);
				this.useStyle = 1;
				this.shootSpeed = 6f;
				this.shoot = 50;
				this.width = 12;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.useTime = 15;
				this.noMelee = true;
				this.value = 10;
				this.holdStyle = 1;
				return;
			case 283:
				this.shoot = 51;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.ammo = AmmoID.Dart;
				this.damage = 4;
				this.ranged = true;
				this.consumable = true;
				return;
			case 284:
				this.noMelee = true;
				this.useStyle = 1;
				this.shootSpeed = 6.5f;
				this.shoot = 52;
				this.damage = 10;
				this.knockBack = 5f;
				this.width = 14;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.noUseGraphic = true;
				this.value = 10000;
				this.rare = 1;
				this.melee = true;
				return;
			case 285:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				this.rare = 1;
				return;
			case 286:
				this.color = new Color(255, 255, 255, 0);
				this.useStyle = 1;
				this.shootSpeed = 6f;
				this.shoot = 53;
				this.width = 12;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.useTime = 15;
				this.noMelee = true;
				this.value = 20;
				this.holdStyle = 1;
				return;
			case 287:
				this.crit = 4;
				this.useStyle = 1;
				this.shootSpeed = 12f;
				this.shoot = 54;
				this.damage = 14;
				this.autoReuse = true;
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.useTime = 15;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = 60;
				this.knockBack = 2.4f;
				this.ranged = true;
				return;
			case 288:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 1;
				this.buffTime = 21600;
				this.value = 1000;
				this.rare = 1;
				return;
			case 289:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 2;
				this.buffTime = 28800;
				this.value = 1000;
				this.rare = 1;
				return;
			case 290:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 3;
				this.buffTime = 28800;
				this.value = 1000;
				this.rare = 1;
				return;
			case 291:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 4;
				this.buffTime = 14400;
				this.value = 1000;
				this.rare = 1;
				return;
			case 292:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 5;
				this.buffTime = 28800;
				this.value = 1000;
				this.rare = 1;
				return;
			case 293:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 6;
				this.buffTime = 28800;
				this.value = 1000;
				this.rare = 1;
				return;
			case 294:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 7;
				this.buffTime = 14400;
				this.value = 1000;
				this.rare = 1;
				return;
			case 295:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 8;
				this.buffTime = 36000;
				this.value = 1000;
				this.rare = 1;
				return;
			case 296:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 9;
				this.buffTime = 18000;
				this.value = 1000;
				this.rare = 1;
				return;
			case 297:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 10;
				this.buffTime = 10800;
				this.value = 1000;
				this.rare = 1;
				return;
			case 298:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 11;
				this.buffTime = 36000;
				this.value = 1000;
				this.rare = 1;
				return;
			case 299:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 12;
				this.buffTime = 36000;
				this.value = 1000;
				this.rare = 1;
				return;
			case 300:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 13;
				this.buffTime = 25200;
				this.value = 1000;
				this.rare = 1;
				return;
			case 301:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 14;
				this.buffTime = 28800;
				this.value = 1000;
				this.rare = 1;
				return;
			case 302:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 15;
				this.buffTime = 36000;
				this.value = 1000;
				this.rare = 1;
				return;
			case 303:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 16;
				this.buffTime = 28800;
				this.value = 1000;
				this.rare = 1;
				return;
			case 304:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 17;
				this.buffTime = 28800;
				this.value = 1000;
				this.rare = 1;
				return;
			case 305:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 18;
				this.buffTime = 10800;
				this.value = 1000;
				this.rare = 1;
				return;
			case 306:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 21;
				this.placeStyle = 1;
				this.width = 26;
				this.height = 22;
				this.value = 5000;
				return;
			case 307:
				this.autoReuse = true;
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 82;
				this.placeStyle = 0;
				this.width = 12;
				this.height = 14;
				this.value = 80;
				return;
			case 308:
				this.autoReuse = true;
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 82;
				this.placeStyle = 1;
				this.width = 12;
				this.height = 14;
				this.value = 80;
				return;
			case 309:
				this.autoReuse = true;
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 82;
				this.placeStyle = 2;
				this.width = 12;
				this.height = 14;
				this.value = 80;
				return;
			case 310:
				this.autoReuse = true;
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 82;
				this.placeStyle = 3;
				this.width = 12;
				this.height = 14;
				this.value = 80;
				return;
			case 311:
				this.autoReuse = true;
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 82;
				this.placeStyle = 4;
				this.width = 12;
				this.height = 14;
				this.value = 80;
				return;
			case 312:
				this.autoReuse = true;
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 82;
				this.placeStyle = 5;
				this.width = 12;
				this.height = 14;
				this.value = 80;
				return;
			case 313:
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 14;
				this.value = 100;
				return;
			case 314:
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 14;
				this.value = 100;
				return;
			case 315:
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 14;
				this.value = 100;
				return;
			case 316:
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 14;
				this.value = 100;
				return;
			case 317:
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 14;
				this.value = 100;
				return;
			case 318:
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 14;
				this.value = 100;
				return;
			case 319:
				this.maxStack = Item.CommonMaxStack;
				this.width = 16;
				this.height = 14;
				this.value = 200;
				this.color = new Color(123, 167, 163, 255);
				return;
			case 320:
				this.maxStack = Item.CommonMaxStack;
				this.width = 16;
				this.height = 14;
				this.value = 50;
				return;
			case 321:
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 85;
				this.width = 20;
				this.height = 20;
				return;
			case 322:
				this.headSlot = 28;
				this.width = 20;
				this.height = 20;
				this.value = 20000;
				this.vanity = true;
				return;
			case 323:
				this.width = 10;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 50;
				return;
			case 324:
				this.width = 10;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 200000;
				return;
			case 325:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 16;
				this.value = 200000;
				this.vanity = true;
				return;
			case 326:
				this.width = 18;
				this.height = 18;
				this.legSlot = 15;
				this.value = 200000;
				this.vanity = true;
				return;
			case 327:
				this.width = 14;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 328:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 21;
				this.placeStyle = 3;
				this.width = 26;
				this.height = 22;
				this.value = 5000;
				return;
			case 329:
				this.width = 14;
				this.height = 20;
				this.maxStack = 1;
				this.value = this.dungeonPrice;
				return;
			case 330:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 20;
				this.width = 12;
				this.height = 12;
				return;
			case 331:
				this.width = 18;
				this.height = 16;
				this.maxStack = Item.CommonMaxStack;
				this.value = 100;
				return;
			case 332:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 86;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 333:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 87;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 334:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 88;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 335:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 89;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 336:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 90;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 337:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 0;
				this.width = 10;
				this.height = 24;
				this.value = 500;
				return;
			case 338:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 1;
				this.width = 10;
				this.height = 24;
				this.value = 500;
				return;
			case 339:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 2;
				this.width = 10;
				this.height = 24;
				this.value = 500;
				return;
			case 340:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 3;
				this.width = 10;
				this.height = 24;
				this.value = 500;
				return;
			case 341:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 92;
				this.width = 10;
				this.height = 24;
				this.value = 500;
				return;
			case 342:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 93;
				this.width = 10;
				this.height = 24;
				this.value = 500;
				return;
			case 343:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 21;
				this.placeStyle = 5;
				this.width = 20;
				this.height = 20;
				this.value = 500;
				return;
			case 344:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 95;
				this.width = 20;
				this.height = 20;
				this.value = 500;
				return;
			case 345:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 96;
				this.width = 20;
				this.height = 20;
				this.value = 500;
				return;
			case 346:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 97;
				this.width = 20;
				this.height = 20;
				this.value = 200000;
				return;
			case 347:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 98;
				this.width = 20;
				this.height = 20;
				this.value = 500;
				return;
			case 348:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 21;
				this.placeStyle = 6;
				this.width = 20;
				this.height = 20;
				this.value = 1000;
				return;
			case 349:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 100;
				this.width = 20;
				this.height = 20;
				this.value = 1500;
				return;
			case 350:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 13;
				this.placeStyle = 3;
				this.width = 16;
				this.height = 24;
				this.value = 70;
				return;
			case 351:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 13;
				this.placeStyle = 4;
				this.width = 16;
				this.height = 24;
				this.value = 20;
				return;
			case 352:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 94;
				this.width = 24;
				this.height = 24;
				this.value = 600;
				return;
			case 353:
			case 357:
			case 969:
				break;
			case 354:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 101;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 355:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 102;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 356:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 103;
				this.width = 16;
				this.height = 24;
				this.value = 20;
				return;
			case 358:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 15;
				this.placeStyle = 1;
				this.width = 12;
				this.height = 30;
				this.value = 150;
				return;
			case 359:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 104;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 360:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 361:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 362:
				this.maxStack = Item.CommonMaxStack;
				this.width = 24;
				this.height = 24;
				this.value = 30;
				return;
			case 363:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 106;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 364:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 107;
				this.width = 12;
				this.height = 12;
				this.value = 3500;
				this.rare = 3;
				return;
			case 365:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 108;
				this.width = 12;
				this.height = 12;
				this.value = 5500;
				this.rare = 3;
				return;
			case 366:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 111;
				this.width = 12;
				this.height = 12;
				this.value = 7500;
				this.rare = 3;
				return;
			case 367:
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 27;
				this.useTime = 14;
				this.hammer = 80;
				this.width = 24;
				this.height = 28;
				this.damage = 26;
				this.knockBack = 7.5f;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 39000;
				this.melee = true;
				return;
			case 368:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.knockBack = 4.5f;
				this.width = 40;
				this.height = 40;
				this.damage = 72;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 5;
				this.value = 230000;
				this.melee = true;
				this.shoot = 982;
				this.noMelee = true;
				this.shootsEveryUse = true;
				return;
			case 369:
				this.autoReuse = true;
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 109;
				this.width = 14;
				this.height = 14;
				this.value = 2000;
				this.rare = 3;
				return;
			case 370:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 112;
				this.width = 12;
				this.height = 12;
				this.ammo = AmmoID.Sand;
				this.notAmmo = true;
				return;
			case 371:
				this.width = 18;
				this.height = 18;
				this.defense = 3;
				this.headSlot = 29;
				this.rare = 4;
				this.value = 75000;
				return;
			case 372:
				this.width = 18;
				this.height = 18;
				this.defense = 14;
				this.headSlot = 30;
				this.rare = 4;
				this.value = 75000;
				return;
			case 373:
				this.width = 18;
				this.height = 18;
				this.defense = 5;
				this.headSlot = 31;
				this.rare = 4;
				this.value = 75000;
				return;
			case 374:
				this.width = 18;
				this.height = 18;
				this.defense = 10;
				this.bodySlot = 17;
				this.rare = 4;
				this.value = 60000;
				return;
			case 375:
				this.width = 18;
				this.height = 18;
				this.defense = 8;
				this.legSlot = 16;
				this.rare = 4;
				this.value = 45000;
				return;
			case 376:
				this.width = 18;
				this.height = 18;
				this.defense = 3;
				this.headSlot = 32;
				this.rare = 4;
				this.value = 112500;
				return;
			case 377:
				this.width = 18;
				this.height = 18;
				this.defense = 16;
				this.headSlot = 33;
				this.rare = 4;
				this.value = 112500;
				return;
			case 378:
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.headSlot = 34;
				this.rare = 4;
				this.value = 112500;
				return;
			case 379:
				this.width = 18;
				this.height = 18;
				this.defense = 12;
				this.bodySlot = 18;
				this.rare = 4;
				this.value = 90000;
				return;
			case 380:
				this.width = 18;
				this.height = 18;
				this.defense = 9;
				this.legSlot = 17;
				this.rare = 4;
				this.value = 67500;
				return;
			case 381:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10500;
				this.rare = 3;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 11;
				return;
			case 382:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 22000;
				this.rare = 3;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 13;
				return;
			case 383:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 13;
				this.shootSpeed = 40f;
				this.knockBack = 2.75f;
				this.width = 20;
				this.height = 12;
				this.damage = 23;
				this.axe = 14;
				this.UseSound = new SoundStyle?(SoundID.Item23);
				this.shoot = 57;
				this.rare = 4;
				this.value = 54000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				return;
			case 384:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 10;
				this.shootSpeed = 40f;
				this.knockBack = 3f;
				this.width = 20;
				this.height = 12;
				this.damage = 29;
				this.axe = 17;
				this.UseSound = new SoundStyle?(SoundID.Item23);
				this.shoot = 58;
				this.rare = 4;
				this.value = 81000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				return;
			case 385:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 13;
				this.shootSpeed = 32f;
				this.knockBack = 0.5f;
				this.width = 20;
				this.height = 12;
				this.damage = 10;
				this.pick = 110;
				this.UseSound = new SoundStyle?(SoundID.Item23);
				this.shoot = 59;
				this.rare = 4;
				this.value = 54000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				return;
			case 386:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 10;
				this.shootSpeed = 32f;
				this.knockBack = 0.5f;
				this.width = 20;
				this.height = 12;
				this.damage = 15;
				this.pick = 150;
				this.UseSound = new SoundStyle?(SoundID.Item23);
				this.shoot = 60;
				this.rare = 4;
				this.value = 81000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				return;
			case 387:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 8;
				this.shootSpeed = 40f;
				this.knockBack = 4.5f;
				this.width = 20;
				this.height = 12;
				this.damage = 33;
				this.axe = 20;
				this.UseSound = new SoundStyle?(SoundID.Item23);
				this.shoot = 61;
				this.rare = 4;
				this.value = 108000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				return;
			case 388:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 8;
				this.shootSpeed = 32f;
				this.knockBack = 0.5f;
				this.width = 20;
				this.height = 12;
				this.damage = 20;
				this.pick = 180;
				this.UseSound = new SoundStyle?(SoundID.Item23);
				this.shoot = 62;
				this.rare = 4;
				this.value = 108000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				return;
			case 389:
				this.noMelee = true;
				this.useStyle = 5;
				this.useAnimation = 45;
				this.useTime = 45;
				this.knockBack = 6f;
				this.width = 30;
				this.height = 10;
				this.damage = 50;
				this.scale = 1.1f;
				this.noUseGraphic = true;
				this.shoot = 63;
				this.shootSpeed = 15f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 5;
				this.value = 144000;
				this.melee = true;
				this.channel = true;
				return;
			case 390:
				this.useStyle = 5;
				this.useAnimation = 26;
				this.useTime = 26;
				this.shootSpeed = 4.5f;
				this.knockBack = 5f;
				this.width = 40;
				this.height = 40;
				this.damage = 45;
				this.scale = 1.1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.shoot = 64;
				this.rare = 4;
				this.value = 67500;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				return;
			case 391:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 30000;
				this.rare = 3;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 15;
				return;
			case 392:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 21;
				this.width = 12;
				this.height = 12;
				return;
			case 393:
				this.width = 24;
				this.height = 28;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 25, 0);
				this.accessory = true;
				return;
			case 394:
				this.width = 24;
				this.height = 28;
				this.rare = 4;
				this.value = 100000;
				this.accessory = true;
				this.faceSlot = 4;
				return;
			case 395:
				this.width = 24;
				this.height = 28;
				this.rare = 3;
				this.value = Item.sellPrice(0, 3, 0, 0);
				this.accessory = true;
				return;
			case 396:
				this.width = 24;
				this.height = 28;
				this.rare = 4;
				this.value = Item.buyPrice(0, 6, 0, 0);
				this.accessory = true;
				return;
			case 397:
				this.width = 24;
				this.height = 28;
				this.rare = 4;
				this.value = 100000;
				this.accessory = true;
				this.defense = 2;
				this.shieldSlot = 3;
				return;
			case 398:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 114;
				this.width = 26;
				this.height = 20;
				this.value = 100000;
				return;
			case 399:
				this.width = 14;
				this.height = 28;
				this.rare = 4;
				this.value = 150000;
				this.accessory = true;
				this.balloonSlot = 4;
				return;
			case 400:
				this.width = 18;
				this.height = 18;
				this.defense = 4;
				this.headSlot = 35;
				this.rare = 4;
				this.value = 150000;
				return;
			case 401:
				this.width = 18;
				this.height = 18;
				this.defense = 22;
				this.headSlot = 36;
				this.rare = 4;
				this.value = 150000;
				return;
			case 402:
				this.width = 18;
				this.height = 18;
				this.defense = 8;
				this.headSlot = 37;
				this.rare = 4;
				this.value = 150000;
				return;
			case 403:
				this.width = 18;
				this.height = 18;
				this.defense = 16;
				this.bodySlot = 19;
				this.rare = 4;
				this.value = 120000;
				return;
			case 404:
				this.width = 18;
				this.height = 18;
				this.defense = 12;
				this.legSlot = 18;
				this.rare = 4;
				this.value = 90000;
				return;
			case 405:
				this.width = 28;
				this.height = 24;
				this.accessory = true;
				this.rare = 4;
				this.value = 100000;
				this.shoeSlot = 13;
				return;
			case 406:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 25;
				this.shootSpeed = 5f;
				this.knockBack = 6f;
				this.width = 40;
				this.height = 40;
				this.damage = 49;
				this.scale = 1.1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.shoot = 66;
				this.rare = 4;
				this.value = 90000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				return;
			case 407:
				this.width = 28;
				this.height = 24;
				this.accessory = true;
				this.rare = 3;
				this.value = 100000;
				this.waistSlot = 5;
				return;
			case 408:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 116;
				this.width = 12;
				this.height = 12;
				this.ammo = AmmoID.Sand;
				this.notAmmo = true;
				return;
			case 409:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 117;
				this.width = 12;
				this.height = 12;
				return;
			case 410:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.bodySlot = 20;
				this.value = 5000;
				this.rare = 1;
				return;
			case 411:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.legSlot = 19;
				this.value = 5000;
				this.rare = 1;
				return;
			case 412:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 118;
				this.width = 12;
				this.height = 12;
				return;
			case 413:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 119;
				this.width = 12;
				this.height = 12;
				return;
			case 414:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 120;
				this.width = 12;
				this.height = 12;
				return;
			case 415:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 121;
				this.width = 12;
				this.height = 12;
				return;
			case 416:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 122;
				this.width = 12;
				this.height = 12;
				return;
			case 417:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 22;
				this.width = 12;
				this.height = 12;
				return;
			case 418:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 23;
				this.width = 12;
				this.height = 12;
				return;
			case 419:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 24;
				this.width = 12;
				this.height = 12;
				return;
			case 420:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 25;
				this.width = 12;
				this.height = 12;
				return;
			case 421:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 26;
				this.width = 12;
				this.height = 12;
				return;
			case 422:
				this.useStyle = 1;
				this.shootSpeed = 9f;
				this.rare = 3;
				this.damage = 20;
				this.shoot = 69;
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.knockBack = 3f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.useTime = 15;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = 200;
				return;
			case 423:
				this.useStyle = 1;
				this.shootSpeed = 9f;
				this.rare = 3;
				this.damage = 20;
				this.shoot = 70;
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.knockBack = 3f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.useTime = 15;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = 100;
				return;
			case 424:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 123;
				this.width = 12;
				this.height = 12;
				return;
			case 425:
				this.channel = true;
				this.damage = 0;
				this.useStyle = 1;
				this.width = 24;
				this.height = 24;
				this.UseSound = new SoundStyle?(SoundID.Item25);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 5;
				this.noMelee = true;
				this.value = (this.value = 250000);
				this.buffType = 27;
				return;
			case 426:
				this.useStyle = 1;
				this.useTime = 35;
				this.useAnimation = 35;
				this.knockBack = 8f;
				this.width = 60;
				this.height = 70;
				this.damage = 70;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 150000;
				this.melee = true;
				return;
			case 427:
				this.flame = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.holdStyle = 1;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 4;
				this.placeStyle = 1;
				this.width = 10;
				this.height = 12;
				this.value = 200;
				return;
			case 428:
				this.flame = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.holdStyle = 1;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 4;
				this.placeStyle = 2;
				this.width = 10;
				this.height = 12;
				this.value = 200;
				return;
			case 429:
				this.flame = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.holdStyle = 1;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 4;
				this.placeStyle = 3;
				this.width = 10;
				this.height = 12;
				this.value = 200;
				return;
			case 430:
				this.flame = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.holdStyle = 1;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 4;
				this.placeStyle = 4;
				this.width = 10;
				this.height = 12;
				this.value = 200;
				return;
			case 431:
				this.flame = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.holdStyle = 1;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 4;
				this.placeStyle = 5;
				this.width = 10;
				this.height = 12;
				this.value = 500;
				return;
			case 432:
				this.flame = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.holdStyle = 1;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 4;
				this.placeStyle = 6;
				this.width = 10;
				this.height = 12;
				this.value = 200;
				return;
			case 433:
				this.flame = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.holdStyle = 1;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 4;
				this.placeStyle = 7;
				this.width = 10;
				this.height = 12;
				this.value = 300;
				return;
			case 434:
				this.consumeAmmoOnLastShotOnly = true;
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 12;
				this.useTime = 4;
				this.reuseDelay = 14;
				this.width = 50;
				this.height = 18;
				this.shoot = 10;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = new SoundStyle?(SoundID.Item31);
				this.damage = 17;
				this.shootSpeed = 7.75f;
				this.noMelee = true;
				this.value = 150000;
				this.rare = 4;
				this.ranged = true;
				return;
			case 435:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 23;
				this.useTime = 23;
				this.width = 50;
				this.height = 18;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 35;
				this.shootSpeed = 9f;
				this.noMelee = true;
				this.value = 60000;
				this.ranged = true;
				this.rare = 4;
				this.knockBack = 1.5f;
				return;
			case 436:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 20;
				this.useTime = 20;
				this.width = 50;
				this.height = 18;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 39;
				this.shootSpeed = 9.5f;
				this.noMelee = true;
				this.value = 90000;
				this.ranged = true;
				this.rare = 4;
				this.knockBack = 2f;
				return;
			case 437:
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 14f;
				this.shoot = 73;
				this.width = 18;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 4;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 15, 0, 0);
				return;
			case 438:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 2;
				return;
			case 439:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 3;
				return;
			case 440:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 4;
				return;
			case 441:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 5;
				return;
			case 442:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 6;
				return;
			case 443:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 7;
				return;
			case 444:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 8;
				return;
			case 445:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 9;
				return;
			case 446:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 10;
				return;
			case 447:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 11;
				return;
			case 448:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 12;
				return;
			case 449:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 13;
				return;
			case 450:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 14;
				return;
			case 451:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 15;
				return;
			case 452:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 16;
				return;
			case 453:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 17;
				return;
			case 454:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 18;
				return;
			case 455:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 19;
				return;
			case 456:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 20;
				return;
			case 457:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 21;
				return;
			case 458:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 22;
				return;
			case 459:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 23;
				return;
			case 460:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 24;
				return;
			case 461:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 25;
				return;
			case 462:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 26;
				return;
			case 463:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 27;
				return;
			case 464:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 28;
				return;
			case 465:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 29;
				return;
			case 466:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 30;
				return;
			case 467:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 31;
				return;
			case 468:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 32;
				return;
			case 469:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 33;
				return;
			case 470:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 349;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 471:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 35;
				return;
			case 472:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 36;
				return;
			case 473:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 37;
				return;
			case 474:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 38;
				return;
			case 475:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 39;
				return;
			case 476:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 40;
				return;
			case 477:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 41;
				return;
			case 478:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 42;
				return;
			case 479:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 27;
				this.width = 12;
				this.height = 12;
				return;
			case 480:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 124;
				this.width = 12;
				this.height = 12;
				return;
			case 481:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 18;
				this.useTime = 18;
				this.width = 50;
				this.height = 18;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 42;
				this.shootSpeed = 10f;
				this.noMelee = true;
				this.value = 120000;
				this.ranged = true;
				this.rare = 4;
				this.knockBack = 2.5f;
				return;
			case 482:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 21;
				this.useTime = 21;
				this.knockBack = 6f;
				this.width = 40;
				this.height = 40;
				this.damage = 61;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 138000;
				this.melee = true;
				return;
			case 483:
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 19;
				this.useTime = 19;
				this.knockBack = 5f;
				this.width = 40;
				this.height = 40;
				this.damage = 40;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 69000;
				this.melee = true;
				return;
			case 484:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.knockBack = 6f;
				this.width = 40;
				this.height = 40;
				this.damage = 50;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 103500;
				this.melee = true;
				return;
			case 485:
				this.rare = 4;
				this.width = 24;
				this.height = 28;
				this.accessory = true;
				this.value = 150000;
				this.hasVanityEffects = true;
				return;
			case 486:
				this.autoReuse = true;
				this.useStyle = 13;
				this.useAnimation = 20;
				this.useTime = 5;
				this.width = 40;
				this.height = 18;
				this.shoot = 842;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.damage = 12;
				this.shootSpeed = 2.4f;
				this.noMelee = true;
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 10, 0));
				this.melee = true;
				this.knockBack = 0.5f;
				this.noUseGraphic = true;
				return;
			case 487:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 125;
				this.width = 22;
				this.height = 22;
				this.value = 100000;
				this.rare = 3;
				return;
			case 488:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 126;
				this.width = 22;
				this.height = 26;
				this.value = 10000;
				return;
			case 489:
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.value = 100000;
				this.rare = 4;
				return;
			case 490:
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.value = 100000;
				this.rare = 4;
				return;
			case 491:
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.value = 100000;
				this.rare = 4;
				return;
			case 492:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.value = 400000;
				this.rare = 5;
				this.wingSlot = 1;
				return;
			case 493:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.value = 400000;
				this.rare = 5;
				this.wingSlot = 2;
				return;
			case 494:
				this.rare = 5;
				this.useStyle = 5;
				this.useAnimation = 12;
				this.useTime = 12;
				this.width = 12;
				this.height = 28;
				this.shoot = 76;
				this.holdStyle = 3;
				this.autoReuse = true;
				this.damage = 42;
				this.shootSpeed = 4.5f;
				this.noMelee = true;
				this.knockBack = 2f;
				this.value = 200000;
				this.mana = 5;
				this.magic = true;
				return;
			case 495:
				this.rare = 5;
				this.mana = 21;
				this.channel = true;
				this.damage = 50;
				this.useStyle = 1;
				this.shootSpeed = 6f;
				this.shoot = 79;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item28);
				this.useAnimation = 25;
				this.useTime = 25;
				this.noMelee = true;
				this.knockBack = 6f;
				this.value = 200000;
				this.magic = true;
				return;
			case 496:
				this.rare = 4;
				this.mana = 6;
				this.damage = 28;
				this.useStyle = 1;
				this.shootSpeed = 12f;
				this.shoot = 80;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item28);
				this.useAnimation = 9;
				this.useTime = 9;
				this.rare = 4;
				this.autoReuse = true;
				this.noMelee = true;
				this.knockBack = 0f;
				this.value = Item.buyPrice(0, 50, 0, 0);
				this.magic = true;
				this.knockBack = 2f;
				return;
			case 497:
				this.width = 24;
				this.height = 28;
				this.accessory = true;
				this.value = this.eclipsePrice;
				this.rare = 5;
				this.hasVanityEffects = true;
				return;
			case 498:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 128;
				this.width = 12;
				this.height = 12;
				this.createTile = 470;
				this.placeStyle = 0;
				return;
			case 499:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.healLife = 150;
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.rare = 3;
				this.potion = true;
				this.value = 5000;
				return;
			case 500:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.healMana = 200;
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.rare = 3;
				this.value = Item.buyPrice(0, 0, 5, 0);
				return;
			case 501:
				this.width = 16;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.value = 500;
				this.rare = 1;
				return;
			case 502:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 129;
				this.width = 24;
				this.height = 24;
				this.value = 8000;
				this.rare = 1;
				return;
			case 503:
				this.width = 18;
				this.height = 18;
				this.headSlot = 40;
				this.value = 20000;
				this.vanity = true;
				this.rare = 2;
				return;
			case 504:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 23;
				this.value = 10000;
				this.vanity = true;
				this.rare = 2;
				return;
			case 505:
				this.width = 18;
				this.height = 18;
				this.legSlot = 22;
				this.value = 10000;
				this.vanity = true;
				this.rare = 2;
				return;
			case 506:
				this.consumeAmmoOnFirstShotOnly = true;
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 30;
				this.useTime = 6;
				this.width = 50;
				this.height = 18;
				this.shoot = 85;
				this.useAmmo = AmmoID.Gel;
				this.UseSound = new SoundStyle?(SoundID.Item34);
				this.damage = 35;
				this.knockBack = 0.3f;
				this.shootSpeed = 7f;
				this.noMelee = true;
				this.value = 500000;
				this.rare = 5;
				this.ranged = true;
				return;
			case 507:
				this.rare = 3;
				this.useStyle = 1;
				this.useAnimation = 12;
				this.useTime = 12;
				this.width = 12;
				this.height = 28;
				this.autoReuse = true;
				this.noMelee = true;
				this.value = 10000;
				return;
			case 508:
				this.rare = 3;
				this.useStyle = 5;
				this.useAnimation = 12;
				this.useTime = 12;
				this.width = 12;
				this.height = 28;
				this.autoReuse = true;
				this.noMelee = true;
				this.value = 10000;
				return;
			case 509:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 5;
				this.autoReuse = true;
				this.width = 24;
				this.height = 28;
				this.rare = 1;
				this.value = 20000;
				this.mech = true;
				this.tileBoost = 20;
				return;
			case 510:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 5;
				this.autoReuse = true;
				this.width = 24;
				this.height = 28;
				this.rare = 1;
				this.value = 20000;
				this.mech = true;
				this.tileBoost = 20;
				return;
			case 511:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 130;
				this.width = 12;
				this.height = 12;
				this.value = 1000;
				this.mech = true;
				return;
			case 512:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 131;
				this.width = 12;
				this.height = 12;
				this.value = 1000;
				this.mech = true;
				return;
			case 513:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 132;
				this.width = 24;
				this.height = 24;
				this.value = 3000;
				this.mech = true;
				return;
			case 514:
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 12;
				this.useTime = 12;
				this.width = 36;
				this.height = 22;
				this.shoot = 88;
				this.mana = 8;
				this.UseSound = new SoundStyle?(SoundID.Item12);
				this.knockBack = 2.5f;
				this.damage = 29;
				this.shootSpeed = 17f;
				this.noMelee = true;
				this.rare = 4;
				this.magic = true;
				this.value = 150000;
				return;
			case 515:
				this.shootSpeed = 5f;
				this.shoot = 89;
				this.damage = 9;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Bullet;
				this.knockBack = 1f;
				this.value = 30;
				this.ranged = true;
				this.rare = 3;
				return;
			case 516:
				this.shootSpeed = 3.5f;
				this.shoot = 91;
				this.damage = 13;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 2f;
				this.value = 80;
				this.ranged = true;
				this.rare = 3;
				return;
			case 517:
				this.useStyle = 1;
				this.shootSpeed = 12f;
				this.shoot = 93;
				this.damage = 35;
				this.width = 18;
				this.height = 20;
				this.mana = 6;
				this.autoReuse = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 8;
				this.useTime = 8;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.knockBack = 3.75f;
				this.magic = true;
				this.rare = 4;
				if (this.Variant == ItemVariants.WeakerVariant)
				{
					this.value = 5000;
					this.rare = 1;
					this.damage = 14;
					this.useAnimation = 15;
					this.useTime = 15;
					this.mana = 5;
					this.autoReuse = false;
					return;
				}
				break;
			case 518:
				this.autoReuse = true;
				this.rare = 4;
				this.mana = 5;
				this.UseSound = new SoundStyle?(SoundID.Item9);
				this.noMelee = true;
				this.useStyle = 5;
				this.damage = 32;
				this.useAnimation = 7;
				this.useTime = 7;
				this.width = 24;
				this.height = 28;
				this.shoot = 94;
				this.scale = 0.9f;
				this.shootSpeed = 16f;
				this.knockBack = 5f;
				this.magic = true;
				this.value = Item.sellPrice(0, 4, 0, 0);
				return;
			case 519:
				this.autoReuse = true;
				this.rare = 4;
				this.mana = 9;
				this.UseSound = new SoundStyle?(SoundID.Item20);
				this.noMelee = true;
				this.useStyle = 5;
				this.damage = 55;
				this.useAnimation = 15;
				this.useTime = 15;
				this.width = 24;
				this.height = 28;
				this.shoot = 95;
				this.scale = 0.9f;
				this.shootSpeed = 10f;
				this.knockBack = 6.5f;
				this.magic = true;
				this.value = Item.sellPrice(0, 4, 0, 0);
				return;
			case 520:
				this.width = 18;
				this.height = 18;
				this.maxStack = Item.CommonMaxStack;
				this.value = 1000;
				this.rare = 3;
				return;
			case 521:
				this.width = 18;
				this.height = 18;
				this.maxStack = Item.CommonMaxStack;
				this.value = 1000;
				this.rare = 3;
				return;
			case 522:
				this.width = 12;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.value = 4000;
				this.rare = 3;
				return;
			case 523:
				this.flame = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.holdStyle = 1;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 4;
				this.placeStyle = 8;
				this.width = 10;
				this.height = 12;
				this.value = 150;
				this.rare = 1;
				return;
			case 524:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 133;
				this.width = 44;
				this.height = 30;
				this.value = 50000;
				this.rare = 3;
				return;
			case 525:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 134;
				this.width = 28;
				this.height = 14;
				this.value = 25000;
				this.rare = 3;
				return;
			case 526:
				this.width = 14;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.value = 15000;
				this.rare = 1;
				return;
			case 527:
				this.width = 14;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.value = 4500;
				this.rare = 2;
				return;
			case 528:
				this.width = 14;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.value = 4500;
				this.rare = 2;
				return;
			case 529:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 135;
				this.width = 12;
				this.height = 12;
				this.placeStyle = 0;
				this.mech = true;
				this.value = 5000;
				this.mech = true;
				return;
			case 530:
				this.width = 12;
				this.height = 18;
				this.maxStack = Item.CommonMaxStack;
				this.value = 500;
				this.mech = true;
				return;
			case 531:
				this.width = 12;
				this.height = 18;
				this.maxStack = Item.CommonMaxStack;
				this.value = 50000;
				this.rare = 1;
				return;
			case 532:
				this.width = 20;
				this.height = 24;
				this.value = 100000;
				this.accessory = true;
				this.rare = 4;
				this.backSlot = 2;
				return;
			case 533:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 7;
				this.useTime = 7;
				this.width = 50;
				this.height = 18;
				this.shoot = 10;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = new SoundStyle?(SoundID.Item11);
				this.damage = 25;
				this.shootSpeed = 10f;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 35, 0, 0);
				this.rare = 5;
				this.knockBack = 1f;
				this.ranged = true;
				return;
			case 534:
				this.knockBack = 6.5f;
				this.useStyle = 5;
				this.useAnimation = 45;
				this.useTime = 45;
				this.width = 50;
				this.height = 14;
				this.shoot = 10;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = new SoundStyle?(SoundID.Item36);
				this.damage = 24;
				this.shootSpeed = 7f;
				this.noMelee = true;
				this.value = 250000;
				this.rare = 4;
				this.ranged = true;
				return;
			case 535:
				this.width = 12;
				this.height = 18;
				this.value = 100000;
				this.accessory = true;
				this.rare = 4;
				return;
			case 536:
				this.width = 12;
				this.height = 18;
				this.value = 100000;
				this.rare = 4;
				this.accessory = true;
				this.handOnSlot = 15;
				this.handOffSlot = 8;
				return;
			case 537:
				this.useStyle = 5;
				this.useAnimation = 28;
				this.useTime = 28;
				this.shootSpeed = 4.3f;
				this.knockBack = 4f;
				this.width = 40;
				this.height = 40;
				this.damage = 44;
				this.scale = 1.1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.shoot = 97;
				this.rare = 4;
				this.value = 45000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				return;
			case 538:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 136;
				this.width = 12;
				this.height = 12;
				this.value = 2000;
				this.mech = true;
				return;
			case 539:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 137;
				this.width = 12;
				this.height = 12;
				this.value = 10000;
				this.mech = true;
				return;
			case 540:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 138;
				this.width = 12;
				this.height = 12;
				this.mech = true;
				return;
			case 541:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 135;
				this.width = 12;
				this.height = 12;
				this.placeStyle = 1;
				this.mech = true;
				this.value = 5000;
				return;
			case 542:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 135;
				this.width = 12;
				this.height = 12;
				this.placeStyle = 2;
				this.mech = true;
				this.value = 5000;
				return;
			case 543:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 135;
				this.width = 12;
				this.height = 12;
				this.placeStyle = 3;
				this.mech = true;
				this.value = 5000;
				return;
			case 544:
				this.width = 22;
				this.height = 14;
				if (this.Variant != ItemVariants.DisabledBossSummonVariant)
				{
					this.useStyle = 4;
					this.consumable = true;
					this.useAnimation = 45;
					this.useTime = 45;
				}
				this.maxStack = Item.CommonMaxStack;
				this.rare = 3;
				return;
			case 545:
				this.shootSpeed = 4f;
				this.shoot = 103;
				this.damage = 17;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 3f;
				this.value = 40;
				this.ranged = true;
				this.rare = 3;
				return;
			case 546:
				this.shootSpeed = 5f;
				this.shoot = 104;
				this.damage = 12;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Bullet;
				this.knockBack = 4f;
				this.value = 30;
				this.rare = 1;
				this.ranged = true;
				this.rare = 3;
				return;
			case 547:
				this.width = 18;
				this.height = 18;
				this.maxStack = Item.CommonMaxStack;
				this.value = 40000;
				this.rare = 5;
				return;
			case 548:
				this.width = 18;
				this.height = 18;
				this.maxStack = Item.CommonMaxStack;
				this.value = 40000;
				this.rare = 5;
				return;
			case 549:
				this.width = 18;
				this.height = 18;
				this.maxStack = Item.CommonMaxStack;
				this.value = 40000;
				this.rare = 5;
				return;
			case 550:
				this.useStyle = 5;
				this.useAnimation = 22;
				this.useTime = 22;
				this.shootSpeed = 5.6f;
				this.knockBack = 6.4f;
				this.width = 40;
				this.height = 40;
				this.damage = 61;
				this.scale = 1.1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.shoot = 105;
				this.rare = 5;
				this.value = 230000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				return;
			case 551:
				this.width = 18;
				this.height = 18;
				this.defense = 15;
				this.bodySlot = 24;
				this.rare = 5;
				this.value = 200000;
				return;
			case 552:
				this.width = 18;
				this.height = 18;
				this.defense = 11;
				this.legSlot = 23;
				this.rare = 5;
				this.value = 150000;
				return;
			case 553:
				this.width = 18;
				this.height = 18;
				this.defense = 9;
				this.headSlot = 41;
				this.rare = 5;
				this.value = 250000;
				return;
			case 554:
				this.width = 20;
				this.height = 24;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.accessory = true;
				this.rare = 4;
				this.neckSlot = 2;
				return;
			case 555:
				this.width = 20;
				this.height = 24;
				this.value = 50000;
				this.accessory = true;
				this.rare = 4;
				this.waistSlot = 6;
				return;
			case 556:
				this.width = 22;
				this.height = 14;
				if (this.Variant != ItemVariants.DisabledBossSummonVariant)
				{
					this.useStyle = 4;
					this.consumable = true;
					this.useAnimation = 45;
					this.useTime = 45;
				}
				this.maxStack = Item.CommonMaxStack;
				this.rare = 3;
				return;
			case 557:
				this.width = 22;
				this.height = 14;
				if (this.Variant != ItemVariants.DisabledBossSummonVariant)
				{
					this.useStyle = 4;
					this.consumable = true;
					this.useAnimation = 45;
					this.useTime = 45;
				}
				this.maxStack = Item.CommonMaxStack;
				this.rare = 3;
				return;
			case 558:
				this.width = 18;
				this.height = 18;
				this.defense = 5;
				this.headSlot = 42;
				this.rare = 5;
				this.value = 250000;
				return;
			case 559:
				this.width = 18;
				this.height = 18;
				this.defense = 24;
				this.headSlot = 43;
				this.rare = 5;
				this.value = 250000;
				return;
			case 560:
				this.useStyle = 4;
				this.width = 22;
				this.height = 14;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 1;
				return;
			case 561:
				this.melee = true;
				this.autoReuse = true;
				this.noMelee = true;
				this.useStyle = 1;
				this.shootSpeed = 16f;
				this.shoot = 106;
				this.damage = 60;
				this.knockBack = 8f;
				this.width = 24;
				this.height = 24;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 14;
				this.useTime = 14;
				this.noUseGraphic = true;
				this.rare = 5;
				this.value = Item.sellPrice(0, 15, 0, 0);
				return;
			case 562:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 139;
				this.placeStyle = 0;
				this.width = 24;
				this.height = 24;
				this.rare = 4;
				this.value = 100000;
				this.accessory = true;
				this.hasVanityEffects = true;
				return;
			case 563:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 139;
				this.placeStyle = 1;
				this.width = 24;
				this.height = 24;
				this.rare = 4;
				this.value = 100000;
				this.accessory = true;
				this.hasVanityEffects = true;
				return;
			case 564:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 139;
				this.placeStyle = 2;
				this.width = 24;
				this.height = 24;
				this.rare = 4;
				this.value = 100000;
				this.accessory = true;
				this.hasVanityEffects = true;
				return;
			case 565:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 139;
				this.placeStyle = 3;
				this.width = 24;
				this.height = 24;
				this.rare = 4;
				this.value = 100000;
				this.accessory = true;
				this.hasVanityEffects = true;
				return;
			case 566:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 139;
				this.placeStyle = 4;
				this.width = 24;
				this.height = 24;
				this.rare = 4;
				this.value = 100000;
				this.accessory = true;
				this.hasVanityEffects = true;
				return;
			case 567:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 139;
				this.placeStyle = 5;
				this.width = 24;
				this.height = 24;
				this.rare = 4;
				this.value = 100000;
				this.accessory = true;
				this.hasVanityEffects = true;
				return;
			case 568:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 139;
				this.placeStyle = 6;
				this.width = 24;
				this.height = 24;
				this.rare = 4;
				this.value = 100000;
				this.accessory = true;
				this.hasVanityEffects = true;
				return;
			case 569:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 139;
				this.placeStyle = 7;
				this.width = 24;
				this.height = 24;
				this.rare = 4;
				this.value = 100000;
				this.accessory = true;
				this.hasVanityEffects = true;
				return;
			case 570:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 139;
				this.placeStyle = 8;
				this.width = 24;
				this.height = 24;
				this.rare = 4;
				this.value = 100000;
				this.accessory = true;
				this.hasVanityEffects = true;
				return;
			case 571:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 139;
				this.placeStyle = 9;
				this.width = 24;
				this.height = 24;
				this.rare = 4;
				this.value = 100000;
				this.accessory = true;
				this.hasVanityEffects = true;
				return;
			case 572:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 139;
				this.placeStyle = 10;
				this.width = 24;
				this.height = 24;
				this.rare = 4;
				this.value = 100000;
				this.accessory = true;
				this.hasVanityEffects = true;
				return;
			case 573:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 139;
				this.placeStyle = 11;
				this.width = 24;
				this.height = 24;
				this.rare = 4;
				this.value = 100000;
				this.accessory = true;
				this.hasVanityEffects = true;
				return;
			case 574:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 139;
				this.placeStyle = 12;
				this.width = 24;
				this.height = 24;
				this.rare = 4;
				this.value = 100000;
				this.accessory = true;
				this.hasVanityEffects = true;
				return;
			case 575:
				this.width = 18;
				this.height = 18;
				this.maxStack = Item.CommonMaxStack;
				this.value = 1000;
				this.rare = 3;
				return;
			case 576:
				this.width = 24;
				this.height = 24;
				this.rare = 3;
				this.value = 100000;
				this.accessory = true;
				return;
			case 577:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 140;
				this.width = 12;
				this.height = 12;
				return;
			case 578:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.width = 50;
				this.height = 18;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 50;
				this.shootSpeed = 11f;
				this.noMelee = true;
				this.value = 200000;
				this.ranged = true;
				this.rare = 4;
				this.knockBack = 2.5f;
				return;
			case 579:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 7;
				this.shootSpeed = 36f;
				this.knockBack = 4.75f;
				this.width = 20;
				this.height = 12;
				this.damage = 35;
				this.pick = 200;
				this.axe = 22;
				this.UseSound = new SoundStyle?(SoundID.Item23);
				this.shoot = 107;
				this.rare = 4;
				this.value = 220000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				return;
			case 580:
				this.mech = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 141;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 10, 0);
				return;
			case 581:
				this.mech = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 142;
				this.width = 12;
				this.height = 12;
				return;
			case 582:
				this.mech = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 143;
				this.width = 12;
				this.height = 12;
				return;
			case 583:
				this.mech = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 144;
				this.placeStyle = 0;
				this.width = 10;
				this.height = 12;
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 1, 0, 0));
				return;
			case 584:
				this.mech = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 144;
				this.placeStyle = 1;
				this.width = 10;
				this.height = 12;
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 1, 0, 0));
				return;
			case 585:
				this.mech = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 144;
				this.placeStyle = 2;
				this.width = 10;
				this.height = 12;
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 1, 0, 0));
				return;
			case 586:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 145;
				this.width = 12;
				this.height = 12;
				return;
			case 587:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 29;
				this.width = 12;
				this.height = 12;
				return;
			case 588:
				this.width = 18;
				this.height = 12;
				this.headSlot = 44;
				this.value = 150000;
				this.vanity = true;
				return;
			case 589:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 25;
				this.value = 150000;
				this.vanity = true;
				return;
			case 590:
				this.width = 18;
				this.height = 18;
				this.legSlot = 24;
				this.value = 150000;
				this.vanity = true;
				return;
			case 591:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 146;
				this.width = 12;
				this.height = 12;
				return;
			case 592:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 30;
				this.width = 12;
				this.height = 12;
				return;
			case 593:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 147;
				this.width = 12;
				this.height = 12;
				return;
			case 594:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 148;
				this.width = 12;
				this.height = 12;
				return;
			case 595:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 31;
				this.width = 12;
				this.height = 12;
				return;
			case 596:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 149;
				this.placeStyle = 0;
				this.width = 12;
				this.height = 12;
				this.value = 500;
				return;
			case 597:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 149;
				this.placeStyle = 1;
				this.width = 12;
				this.height = 12;
				this.value = 500;
				return;
			case 598:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 149;
				this.placeStyle = 2;
				this.width = 12;
				this.height = 12;
				this.value = 500;
				return;
			case 599:
				this.width = 12;
				this.height = 12;
				this.rare = 1;
				return;
			case 600:
				this.width = 12;
				this.height = 12;
				this.rare = 1;
				return;
			case 601:
				this.width = 12;
				this.height = 12;
				this.rare = 1;
				return;
			case 602:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.width = 28;
				this.height = 28;
				this.rare = 2;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 603:
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 111;
				this.width = 16;
				this.height = 30;
				this.UseSound = new SoundStyle?(SoundID.Item2);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.value = 0;
				this.buffType = 40;
				return;
			case 604:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 150;
				this.width = 12;
				this.height = 12;
				return;
			case 605:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 32;
				this.width = 12;
				this.height = 12;
				return;
			case 606:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 33;
				this.width = 12;
				this.height = 12;
				return;
			case 607:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 151;
				this.width = 12;
				this.height = 12;
				return;
			case 608:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 34;
				this.width = 12;
				this.height = 12;
				return;
			case 609:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 152;
				this.width = 12;
				this.height = 12;
				return;
			case 610:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 35;
				this.width = 12;
				this.height = 12;
				return;
			case 611:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 153;
				this.width = 12;
				this.height = 12;
				return;
			case 612:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 154;
				this.width = 12;
				this.height = 12;
				return;
			case 613:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 155;
				this.width = 12;
				this.height = 12;
				return;
			case 614:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 156;
				this.width = 12;
				this.height = 12;
				return;
			case 615:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 36;
				this.width = 12;
				this.height = 12;
				return;
			case 616:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 37;
				this.width = 12;
				this.height = 12;
				return;
			case 617:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 38;
				this.width = 12;
				this.height = 12;
				return;
			case 618:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 39;
				this.width = 12;
				this.height = 12;
				return;
			case 619:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 157;
				this.width = 8;
				this.height = 10;
				return;
			case 620:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 158;
				this.width = 8;
				this.height = 10;
				return;
			case 621:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 159;
				this.width = 8;
				this.height = 10;
				return;
			case 622:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 41;
				this.width = 12;
				this.height = 12;
				return;
			case 623:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 42;
				this.width = 12;
				this.height = 12;
				return;
			case 624:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 43;
				this.width = 12;
				this.height = 12;
				return;
			case 625:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 21;
				this.placeStyle = 7;
				this.width = 26;
				this.height = 22;
				this.value = 500;
				return;
			case 626:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 21;
				this.placeStyle = 8;
				this.width = 26;
				this.height = 22;
				this.value = 500;
				return;
			case 627:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 21;
				this.placeStyle = 9;
				this.width = 26;
				this.height = 22;
				this.value = 500;
				return;
			case 628:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 15;
				this.placeStyle = 2;
				this.width = 12;
				this.height = 30;
				this.value = 150;
				return;
			case 629:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 15;
				this.placeStyle = 3;
				this.width = 12;
				this.height = 30;
				this.value = 150;
				return;
			case 630:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 15;
				this.placeStyle = 4;
				this.width = 12;
				this.height = 30;
				this.value = 150;
				return;
			case 631:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 19;
				this.placeStyle = 1;
				this.width = 8;
				this.height = 10;
				return;
			case 632:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 19;
				this.placeStyle = 2;
				this.width = 8;
				this.height = 10;
				return;
			case 633:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 19;
				this.placeStyle = 3;
				this.width = 8;
				this.height = 10;
				return;
			case 634:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 19;
				this.placeStyle = 4;
				this.width = 8;
				this.height = 10;
				return;
			case 635:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 18;
				this.placeStyle = 1;
				this.width = 28;
				this.height = 14;
				this.value = 150;
				return;
			case 636:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 18;
				this.placeStyle = 2;
				this.width = 28;
				this.height = 14;
				this.value = 150;
				return;
			case 637:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 18;
				this.placeStyle = 3;
				this.width = 28;
				this.height = 14;
				this.value = 150;
				return;
			case 638:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 14;
				this.placeStyle = 1;
				this.width = 26;
				this.height = 20;
				this.value = 300;
				return;
			case 639:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 14;
				this.placeStyle = 2;
				this.width = 26;
				this.height = 20;
				this.value = 300;
				return;
			case 640:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 14;
				this.placeStyle = 3;
				this.width = 26;
				this.height = 20;
				this.value = 300;
				return;
			case 641:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 87;
				this.placeStyle = 1;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 642:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 87;
				this.placeStyle = 2;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 643:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 87;
				this.placeStyle = 3;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 644:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 79;
				this.placeStyle = 1;
				this.width = 28;
				this.height = 20;
				this.value = 2000;
				return;
			case 645:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 79;
				this.placeStyle = 2;
				this.width = 28;
				this.height = 20;
				this.value = 2000;
				return;
			case 646:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 79;
				this.placeStyle = 3;
				this.width = 28;
				this.height = 20;
				this.value = 2000;
				return;
			case 647:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 88;
				this.placeStyle = 1;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 648:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 88;
				this.placeStyle = 2;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 649:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 88;
				this.placeStyle = 3;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 650:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 1;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			case 651:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 2;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			case 652:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 3;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			case 653:
				this.useStyle = 1;
				this.useTurn = false;
				this.useAnimation = 19;
				this.useTime = 19;
				this.width = 24;
				this.height = 28;
				this.damage = 11;
				this.knockBack = 6f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.scale = 1f;
				this.value = 100;
				this.melee = true;
				return;
			case 654:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 30;
				this.useTime = 20;
				this.hammer = 40;
				this.width = 24;
				this.height = 28;
				this.damage = 7;
				this.knockBack = 5.5f;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.value = 50;
				this.melee = true;
				return;
			case 655:
				this.useStyle = 5;
				this.useAnimation = 28;
				this.useTime = 28;
				this.width = 12;
				this.height = 28;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 8;
				this.shootSpeed = 6.6f;
				this.noMelee = true;
				this.value = 100;
				this.ranged = true;
				return;
			case 656:
				this.useStyle = 1;
				this.useTurn = false;
				this.useAnimation = 19;
				this.useTime = 19;
				this.width = 24;
				this.height = 28;
				this.damage = 8;
				this.knockBack = 6f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.scale = 1f;
				this.value = 100;
				this.melee = true;
				return;
			case 657:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 33;
				this.useTime = 23;
				this.hammer = 35;
				this.width = 24;
				this.height = 28;
				this.damage = 4;
				this.knockBack = 5.5f;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.value = 50;
				this.melee = true;
				return;
			case 658:
				this.useStyle = 5;
				this.useAnimation = 29;
				this.useTime = 29;
				this.width = 12;
				this.height = 28;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 6;
				this.shootSpeed = 6.6f;
				this.noMelee = true;
				this.value = 100;
				this.ranged = true;
				return;
			case 659:
				this.useStyle = 1;
				this.useTurn = false;
				this.useAnimation = 15;
				this.useTime = 15;
				this.width = 24;
				this.height = 28;
				this.damage = 30;
				this.knockBack = 7f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.scale = 1f;
				this.value = 100;
				this.melee = true;
				this.autoReuse = true;
				return;
			case 660:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 29;
				this.useTime = 19;
				this.hammer = 55;
				this.width = 24;
				this.height = 28;
				this.damage = 10;
				this.knockBack = 5.5f;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.value = 50;
				this.melee = true;
				return;
			case 661:
				this.useStyle = 5;
				this.useAnimation = 20;
				this.useTime = 20;
				this.width = 12;
				this.height = 28;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 12;
				this.shootSpeed = 7f;
				this.noMelee = true;
				this.value = 100;
				this.ranged = true;
				return;
			case 662:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 160;
				this.width = 12;
				this.height = 12;
				this.rare = 1;
				return;
			case 663:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 44;
				this.width = 12;
				this.height = 12;
				this.rare = 1;
				return;
			case 664:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 161;
				this.width = 12;
				this.height = 12;
				return;
			case 665:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.rare = 9;
				this.wingSlot = 3;
				this.value = 400000;
				return;
			case 666:
				this.width = 18;
				this.height = 18;
				this.headSlot = 45;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 667:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 26;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 668:
				this.width = 18;
				this.height = 18;
				this.legSlot = 25;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 669:
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 112;
				this.width = 16;
				this.height = 30;
				this.UseSound = new SoundStyle?(SoundID.Item2);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.buffType = 41;
				this.value = Item.sellPrice(0, 2, 0, 0);
				return;
			case 670:
				this.crit = 2;
				this.noMelee = true;
				this.useStyle = 1;
				this.shootSpeed = 11.5f;
				this.shoot = 113;
				this.damage = 21;
				this.knockBack = 8.5f;
				this.width = 14;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.noUseGraphic = true;
				this.rare = 1;
				this.value = 50000;
				this.melee = true;
				return;
			case 671:
				this.crit = 16;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.knockBack = 6.5f;
				this.width = 40;
				this.height = 40;
				this.damage = 105;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 8;
				this.value = Item.buyPrice(0, 20, 0, 0);
				this.melee = true;
				if (this.Variant == ItemVariants.WeakerVariant)
				{
					this.rare = 1;
					this.value = Item.buyPrice(0, 10, 0, 0);
					this.damage = 15;
					return;
				}
				break;
			case 672:
				this.useStyle = 1;
				this.useTime = 16;
				this.useAnimation = 16;
				this.knockBack = 4f;
				this.width = 24;
				this.height = 28;
				this.damage = 53;
				this.scale = 1.1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 180000;
				this.melee = true;
				this.autoReuse = true;
				this.useTurn = true;
				return;
			case 673:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 18;
				this.placeStyle = 23;
				this.width = 28;
				this.height = 14;
				this.value = 150;
				return;
			case 674:
				this.useStyle = 1;
				this.useAnimation = 18;
				this.useTime = 18;
				this.autoReuse = true;
				this.shoot = 983;
				this.shootSpeed = 11f;
				this.knockBack = 4.5f;
				this.width = 40;
				this.height = 40;
				this.damage = 72;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 8;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.melee = true;
				this.noMelee = true;
				this.shootsEveryUse = true;
				return;
			case 675:
				this.useStyle = 1;
				this.useAnimation = 32;
				this.useTime = 32;
				this.autoReuse = true;
				this.shoot = 973;
				this.shootSpeed = 14f;
				this.knockBack = 4.75f;
				this.width = 40;
				this.height = 40;
				this.damage = 70;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 8;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.melee = true;
				this.noMelee = true;
				this.shootsEveryUse = true;
				return;
			case 676:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 23;
				this.useTime = 30;
				this.knockBack = 4.5f;
				this.width = 24;
				this.height = 28;
				this.damage = 49;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 5;
				this.shoot = 119;
				this.shootSpeed = 12f;
				this.value = 250000;
				this.melee = true;
				return;
			case 677:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 14;
				this.placeStyle = 28;
				this.width = 26;
				this.height = 20;
				this.value = 300;
				return;
			case 678:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.rare = 4;
				return;
			case 679:
				this.autoReuse = true;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.useAnimation = 34;
				this.useTime = 34;
				this.width = 50;
				this.height = 14;
				this.shoot = 10;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = new SoundStyle?(SoundID.Item38);
				this.damage = 29;
				this.shootSpeed = 6f;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 40, 0, 0);
				this.rare = 8;
				this.ranged = true;
				return;
			case 680:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 21;
				this.placeStyle = 10;
				this.width = 26;
				this.height = 22;
				this.value = 5000;
				return;
			case 681:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 21;
				this.placeStyle = 11;
				this.width = 26;
				this.height = 22;
				this.value = 5000;
				return;
			case 682:
				this.useStyle = 5;
				this.useAnimation = 19;
				this.useTime = 19;
				this.width = 14;
				this.height = 32;
				this.shoot = 1;
				this.autoReuse = true;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 53;
				this.shootSpeed = 11f;
				this.knockBack = 4.7f;
				this.rare = 5;
				this.crit = 5;
				this.noMelee = true;
				this.scale = 1.1f;
				this.value = 27000;
				this.ranged = true;
				return;
			case 683:
				this.autoReuse = true;
				this.rare = 6;
				this.mana = 19;
				this.UseSound = new SoundStyle?(SoundID.Item20);
				this.noMelee = true;
				this.useStyle = 5;
				this.damage = 88;
				this.useAnimation = 17;
				this.useTime = 17;
				this.width = 30;
				this.height = 30;
				this.shoot = 114;
				this.shootSpeed = 13f;
				this.knockBack = 6.5f;
				this.magic = true;
				this.value = 500000;
				if (this.Variant == ItemVariants.WeakerVariant)
				{
					this.value = this.hellPrice;
					this.rare = 3;
					this.damage = 42;
					this.mana = 9;
					return;
				}
				break;
			case 684:
				this.width = 18;
				this.height = 18;
				this.defense = 10;
				this.headSlot = 46;
				this.rare = 5;
				this.value = 250000;
				return;
			case 685:
				this.width = 18;
				this.height = 18;
				this.defense = 20;
				this.bodySlot = 27;
				this.rare = 5;
				this.value = 200000;
				return;
			case 686:
				this.width = 18;
				this.height = 18;
				this.defense = 13;
				this.legSlot = 26;
				this.rare = 5;
				this.value = 150000;
				return;
			case 687:
				this.width = 18;
				this.height = 18;
				this.defense = 2;
				this.headSlot = 47;
				this.value = 1125;
				return;
			case 688:
				this.width = 18;
				this.height = 18;
				this.defense = 2;
				this.bodySlot = 28;
				this.value = 1875;
				return;
			case 689:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.legSlot = 27;
				this.value = 1500;
				return;
			case 690:
				this.width = 18;
				this.height = 18;
				this.defense = 3;
				this.headSlot = 48;
				this.value = 4500;
				return;
			case 691:
				this.width = 18;
				this.height = 18;
				this.defense = 3;
				this.bodySlot = 29;
				this.value = 7500;
				return;
			case 692:
				this.width = 18;
				this.height = 18;
				this.defense = 2;
				this.legSlot = 28;
				this.value = 6000;
				return;
			case 693:
				this.width = 18;
				this.height = 18;
				this.defense = 4;
				this.headSlot = 49;
				this.value = 11250;
				return;
			case 694:
				this.width = 18;
				this.height = 18;
				this.defense = 5;
				this.bodySlot = 30;
				this.value = 18750;
				return;
			case 695:
				this.width = 18;
				this.height = 18;
				this.defense = 3;
				this.legSlot = 29;
				this.value = 15000;
				return;
			case 696:
				this.width = 18;
				this.height = 18;
				this.defense = 5;
				this.headSlot = 50;
				this.value = 22500;
				return;
			case 697:
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.bodySlot = 31;
				this.value = 37500;
				return;
			case 698:
				this.width = 18;
				this.height = 18;
				this.defense = 5;
				this.legSlot = 30;
				this.value = 30000;
				return;
			case 699:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 166;
				this.width = 12;
				this.height = 12;
				this.value = 375;
				return;
			case 700:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 167;
				this.width = 12;
				this.height = 12;
				this.value = 750;
				return;
			case 701:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 168;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 2, 25);
				return;
			case 702:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 169;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 4, 50);
				return;
			case 703:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 1125;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 1;
				return;
			case 704:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 2250;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 3;
				return;
			case 705:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 4500;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 5;
				return;
			case 706:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 9000;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 7;
				return;
			case 707:
				this.width = 24;
				this.height = 28;
				this.accessory = true;
				this.value = 1500;
				this.waistSlot = 8;
				return;
			case 708:
				this.width = 24;
				this.height = 28;
				this.accessory = true;
				this.value = 7500;
				this.waistSlot = 9;
				return;
			case 709:
				this.width = 24;
				this.height = 28;
				this.accessory = true;
				this.rare = 1;
				this.value = 15000;
				this.waistSlot = 4;
				return;
			case 710:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 34;
				this.placeStyle = 3;
				this.width = 26;
				this.height = 26;
				this.value = 4500;
				return;
			case 711:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 34;
				this.placeStyle = 4;
				this.width = 26;
				this.height = 26;
				this.value = 18000;
				return;
			case 712:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 34;
				this.placeStyle = 5;
				this.width = 26;
				this.height = 26;
				this.value = 36000;
				return;
			case 713:
				this.flame = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 174;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 3, 0);
				this.holdStyle = 1;
				return;
			case 714:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 173;
				this.width = 20;
				this.height = 20;
				this.value = Item.buyPrice(0, 0, 15, 0);
				return;
			case 715:
				this.width = 18;
				this.height = 18;
				this.headSlot = 51;
				this.value = 15000;
				this.vanity = true;
				return;
			case 716:
				this.placeStyle = 1;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 16;
				this.width = 28;
				this.height = 14;
				this.value = 7500;
				return;
			case 717:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 175;
				this.width = 12;
				this.height = 12;
				return;
			case 718:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 176;
				this.width = 12;
				this.height = 12;
				return;
			case 719:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 177;
				this.width = 12;
				this.height = 12;
				return;
			case 720:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 45;
				this.width = 12;
				this.height = 12;
				return;
			case 721:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 46;
				this.width = 12;
				this.height = 12;
				return;
			case 722:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 47;
				this.width = 12;
				this.height = 12;
				return;
			case 723:
				this.rare = 4;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useStyle = 1;
				this.damage = 52;
				this.scale = 1f;
				this.useAnimation = 20;
				this.useTime = 35;
				this.autoReuse = true;
				this.width = 30;
				this.height = 30;
				this.shoot = 116;
				this.shootSpeed = 11f;
				this.knockBack = 6.5f;
				this.melee = true;
				this.value = Item.sellPrice(0, 3, 0, 0);
				this.ChangePlayerDirectionOnShoot = false;
				return;
			case 724:
				this.autoReuse = true;
				this.crit = 2;
				this.rare = 1;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useStyle = 1;
				this.damage = 17;
				this.useAnimation = 20;
				this.useTime = 55;
				this.width = 30;
				this.height = 30;
				this.shoot = 118;
				this.shootSpeed = 9.5f;
				this.knockBack = 4.75f;
				this.melee = true;
				this.value = 20000;
				return;
			case 725:
				this.useStyle = 5;
				this.useAnimation = 14;
				this.useTime = 14;
				this.width = 12;
				this.height = 28;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 39;
				this.shootSpeed = 10f;
				this.knockBack = 4.5f;
				this.alpha = 30;
				this.rare = 5;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.ranged = true;
				this.autoReuse = true;
				if (this.Variant == ItemVariants.WeakerVariant)
				{
					this.value = 100000;
					this.rare = 1;
					this.damage = 8;
					this.useAnimation = 17;
					this.useTime = 17;
					return;
				}
				break;
			case 726:
				this.autoReuse = true;
				this.rare = 5;
				this.mana = 12;
				this.UseSound = new SoundStyle?(SoundID.Item20);
				this.useStyle = 5;
				this.damage = 46;
				this.useAnimation = 12;
				this.useTime = 12;
				this.width = 30;
				this.height = 30;
				this.shoot = 359;
				this.shootSpeed = 16f;
				this.knockBack = 5f;
				this.magic = true;
				this.value = Item.sellPrice(0, 4, 0, 0);
				this.noMelee = true;
				return;
			case 727:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.headSlot = 52;
				return;
			case 728:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.bodySlot = 32;
				return;
			case 729:
				this.width = 18;
				this.height = 18;
				this.defense = 0;
				this.legSlot = 31;
				return;
			case 730:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.headSlot = 53;
				return;
			case 731:
				this.width = 18;
				this.height = 18;
				this.defense = 2;
				this.bodySlot = 33;
				return;
			case 732:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.legSlot = 32;
				return;
			case 733:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.headSlot = 54;
				return;
			case 734:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.bodySlot = 34;
				return;
			case 735:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.legSlot = 33;
				return;
			case 736:
				this.width = 18;
				this.height = 18;
				this.defense = 2;
				this.headSlot = 55;
				return;
			case 737:
				this.width = 18;
				this.height = 18;
				this.defense = 3;
				this.bodySlot = 35;
				return;
			case 738:
				this.width = 18;
				this.height = 18;
				this.defense = 2;
				this.legSlot = 34;
				return;
			case 739:
				this.mana = 5;
				this.UseSound = new SoundStyle?(SoundID.Item43);
				this.useStyle = 5;
				this.damage = 15;
				this.useAnimation = 37;
				this.useTime = 37;
				this.width = 40;
				this.height = 40;
				this.shoot = 121;
				this.shootSpeed = 6f;
				this.knockBack = 3.25f;
				this.value = 2000;
				this.magic = true;
				this.noMelee = true;
				return;
			case 740:
				this.mana = 5;
				this.UseSound = new SoundStyle?(SoundID.Item43);
				this.useStyle = 5;
				this.damage = 16;
				this.useAnimation = 36;
				this.useTime = 36;
				this.width = 40;
				this.height = 40;
				this.shoot = 122;
				this.shootSpeed = 6.5f;
				this.knockBack = 3.5f;
				this.value = 3000;
				this.magic = true;
				this.noMelee = true;
				return;
			case 741:
				this.mana = 6;
				this.UseSound = new SoundStyle?(SoundID.Item43);
				this.useStyle = 5;
				this.damage = 18;
				this.useAnimation = 34;
				this.useTime = 34;
				this.width = 40;
				this.height = 40;
				this.shoot = 123;
				this.shootSpeed = 7.5f;
				this.knockBack = 4f;
				this.value = 10000;
				this.magic = true;
				this.autoReuse = true;
				this.rare = 1;
				this.noMelee = true;
				return;
			case 742:
				this.mana = 6;
				this.UseSound = new SoundStyle?(SoundID.Item43);
				this.useStyle = 5;
				this.damage = 19;
				this.useAnimation = 32;
				this.useTime = 32;
				this.width = 40;
				this.height = 40;
				this.shoot = 124;
				this.shootSpeed = 8f;
				this.knockBack = 4.25f;
				this.magic = true;
				this.autoReuse = true;
				this.value = 15000;
				this.rare = 1;
				this.noMelee = true;
				return;
			case 743:
				this.mana = 7;
				this.UseSound = new SoundStyle?(SoundID.Item43);
				this.useStyle = 5;
				this.damage = 21;
				this.useAnimation = 28;
				this.useTime = 28;
				this.width = 40;
				this.height = 40;
				this.shoot = 125;
				this.shootSpeed = 9f;
				this.knockBack = 4.75f;
				this.magic = true;
				this.autoReuse = true;
				this.value = 20000;
				this.rare = 1;
				this.noMelee = true;
				return;
			case 744:
				this.mana = 8;
				this.UseSound = new SoundStyle?(SoundID.Item43);
				this.useStyle = 5;
				this.damage = 23;
				this.useAnimation = 26;
				this.useTime = 26;
				this.width = 40;
				this.height = 40;
				this.shoot = 126;
				this.shootSpeed = 9.5f;
				this.knockBack = 5.5f;
				this.magic = true;
				this.autoReuse = true;
				this.value = 30000;
				this.rare = 2;
				this.noMelee = true;
				return;
			case 745:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 66;
				this.width = 12;
				this.height = 12;
				this.value = 10;
				return;
			case 746:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 67;
				this.width = 12;
				this.height = 12;
				this.value = 10;
				return;
			case 747:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 68;
				this.width = 12;
				this.height = 12;
				this.value = 10;
				return;
			case 748:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.value = 400000;
				this.rare = 5;
				this.wingSlot = 4;
				return;
			case 749:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.value = 400000;
				this.rare = 5;
				this.wingSlot = 5;
				return;
			case 750:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 72;
				this.width = 12;
				this.height = 12;
				return;
			case 751:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 189;
				this.width = 12;
				this.height = 12;
				return;
			case 752:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 73;
				this.width = 12;
				this.height = 12;
				return;
			case 753:
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 127;
				this.width = 16;
				this.height = 30;
				this.UseSound = new SoundStyle?(SoundID.Item2);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.buffType = 42;
				return;
			case 754:
				this.width = 28;
				this.height = 20;
				this.headSlot = 56;
				this.rare = 5;
				this.value = 50000;
				this.vanity = true;
				return;
			case 755:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 36;
				this.value = 50000;
				this.vanity = true;
				this.rare = 5;
				return;
			case 756:
				this.rare = 7;
				this.useStyle = 5;
				this.useAnimation = 40;
				this.useTime = 40;
				this.shootSpeed = 5.5f;
				this.knockBack = 6.2f;
				this.width = 32;
				this.height = 32;
				this.damage = 60;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.shoot = 130;
				this.value = Item.buyPrice(0, 70, 0, 0);
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				return;
			case 757:
				this.rare = 8;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useStyle = 1;
				this.damage = 85;
				this.useAnimation = 18;
				this.useTime = 18;
				this.width = 30;
				this.height = 30;
				this.shoot = 985;
				this.scale = 1f;
				this.shootSpeed = 12f;
				this.knockBack = 6.5f;
				this.melee = true;
				this.value = Item.sellPrice(0, 20, 0, 0);
				this.autoReuse = true;
				this.noMelee = true;
				this.shootsEveryUse = true;
				return;
			case 758:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 20;
				this.useTime = 20;
				this.useAmmo = AmmoID.Rocket;
				this.width = 50;
				this.height = 20;
				this.shoot = 133;
				this.UseSound = new SoundStyle?(SoundID.Item61);
				this.damage = 60;
				this.shootSpeed = 10f;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 35, 0, 0);
				this.knockBack = 4f;
				this.rare = 8;
				this.ranged = true;
				return;
			case 759:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 30;
				this.useTime = 30;
				this.useAmmo = AmmoID.Rocket;
				this.width = 50;
				this.height = 20;
				this.shoot = 134;
				this.UseSound = new SoundStyle?(SoundID.Item11);
				this.damage = 55;
				this.shootSpeed = 5f;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 40, 0, 0);
				this.knockBack = 4f;
				this.rare = 8;
				this.ranged = true;
				return;
			case 760:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 50;
				this.useTime = 50;
				this.useAmmo = AmmoID.Rocket;
				this.width = 50;
				this.height = 20;
				this.shoot = 135;
				this.UseSound = new SoundStyle?(SoundID.Item11);
				this.damage = 80;
				this.shootSpeed = 12f;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 35, 0, 0);
				this.knockBack = 4f;
				this.rare = 8;
				this.ranged = true;
				return;
			case 761:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.value = 400000;
				this.rare = 5;
				this.wingSlot = 6;
				return;
			case 762:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 193;
				this.width = 12;
				this.height = 12;
				return;
			case 763:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 195;
				this.width = 12;
				this.height = 12;
				return;
			case 764:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 74;
				this.width = 12;
				this.height = 12;
				return;
			case 765:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 196;
				this.width = 12;
				this.height = 12;
				return;
			case 766:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 194;
				this.width = 12;
				this.height = 12;
				return;
			case 767:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 197;
				this.width = 12;
				this.height = 12;
				return;
			case 768:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 75;
				this.width = 12;
				this.height = 12;
				return;
			case 769:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 76;
				this.width = 12;
				this.height = 12;
				return;
			case 770:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 77;
				this.width = 12;
				this.height = 12;
				return;
			case 771:
				this.shoot = 0;
				this.damage = 40;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 4f;
				this.value = Item.buyPrice(0, 0, 0, 50);
				this.ranged = true;
				return;
			case 772:
				this.shoot = 3;
				this.damage = 40;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 4f;
				this.value = Item.buyPrice(0, 0, 2, 50);
				this.ranged = true;
				this.rare = 1;
				return;
			case 773:
				this.shoot = 6;
				this.damage = 65;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 6f;
				this.value = Item.buyPrice(0, 0, 1, 0);
				this.ranged = true;
				this.rare = 1;
				return;
			case 774:
				this.shoot = 9;
				this.damage = 65;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 6f;
				this.value = (this.value = Item.buyPrice(0, 0, 5, 0));
				this.ranged = true;
				this.rare = 2;
				return;
			case 775:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 198;
				this.width = 12;
				this.height = 12;
				return;
			case 776:
				this.useStyle = 1;
				this.useTurn = true;
				this.autoReuse = true;
				this.useAnimation = 25;
				this.useTime = 13;
				this.knockBack = 5f;
				this.width = 20;
				this.height = 12;
				this.damage = 10;
				this.pick = 110;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 54000;
				this.melee = true;
				this.scale = 1f;
				return;
			case 777:
				this.useStyle = 1;
				this.useAnimation = 25;
				this.useTime = 10;
				this.knockBack = 5f;
				this.useTurn = true;
				this.autoReuse = true;
				this.width = 20;
				this.height = 12;
				this.damage = 15;
				this.pick = 150;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 81000;
				this.melee = true;
				this.scale = 1f;
				return;
			case 778:
				this.useStyle = 1;
				this.useAnimation = 25;
				this.useTime = 8;
				this.knockBack = 5f;
				this.useTurn = true;
				this.autoReuse = true;
				this.width = 20;
				this.height = 12;
				this.damage = 20;
				this.pick = 180;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 108000;
				this.melee = true;
				this.scale = 1f;
				return;
			case 779:
				this.consumeAmmoOnLastShotOnly = true;
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 30;
				this.useTime = 5;
				this.width = 50;
				this.height = 18;
				this.shoot = 145;
				this.useAmmo = AmmoID.Solution;
				this.UseSound = new SoundStyle?(SoundID.Item34);
				this.knockBack = 0.3f;
				this.shootSpeed = 7f;
				this.noMelee = true;
				this.value = Item.buyPrice(2, 0, 0, 0);
				this.rare = 5;
				return;
			case 780:
				this.shoot = 0;
				this.ammo = AmmoID.Solution;
				this.width = 10;
				this.height = 12;
				this.value = Item.buyPrice(0, 0, 15, 0);
				this.rare = 3;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				return;
			case 781:
				this.shoot = 1;
				this.ammo = AmmoID.Solution;
				this.width = 10;
				this.height = 12;
				this.value = Item.buyPrice(0, 0, 15, 0);
				this.rare = 3;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				return;
			case 782:
				this.shoot = 2;
				this.ammo = AmmoID.Solution;
				this.width = 10;
				this.height = 12;
				this.value = Item.buyPrice(0, 0, 15, 0);
				this.rare = 3;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				return;
			case 783:
				this.shoot = 3;
				this.ammo = AmmoID.Solution;
				this.width = 10;
				this.height = 12;
				this.value = Item.buyPrice(0, 0, 15, 0);
				this.rare = 3;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				return;
			case 784:
				this.shoot = 4;
				this.ammo = AmmoID.Solution;
				this.width = 10;
				this.height = 12;
				this.value = Item.buyPrice(0, 0, 15, 0);
				this.rare = 3;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				return;
			case 785:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.value = 400000;
				this.rare = 5;
				this.wingSlot = 7;
				return;
			case 786:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.value = 400000;
				this.rare = 5;
				this.wingSlot = 8;
				return;
			case 787:
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 27;
				this.useTime = 14;
				this.hammer = 85;
				this.width = 24;
				this.height = 28;
				this.damage = 26;
				this.knockBack = 7.5f;
				this.scale = 1.1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 7;
				this.value = Item.buyPrice(0, 40, 0, 0);
				this.melee = true;
				return;
			case 788:
				this.mana = 12;
				this.damage = 35;
				this.useStyle = 5;
				this.shootSpeed = 32f;
				this.shoot = 150;
				this.width = 26;
				this.height = 28;
				this.useAnimation = 25;
				this.useTime = 25;
				this.autoReuse = true;
				this.rare = 7;
				this.noMelee = true;
				this.knockBack = 1f;
				this.value = 200000;
				this.magic = true;
				return;
			case 789:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 4;
				this.width = 10;
				this.height = 24;
				this.value = 5000;
				return;
			case 790:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 5;
				this.width = 10;
				this.height = 24;
				this.value = 5000;
				return;
			case 791:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 6;
				this.width = 10;
				this.height = 24;
				this.value = 5000;
				return;
			case 792:
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.headSlot = 57;
				this.value = 50000;
				this.rare = 1;
				return;
			case 793:
				this.width = 18;
				this.height = 18;
				this.defense = 7;
				this.bodySlot = 37;
				this.value = 40000;
				this.rare = 1;
				return;
			case 794:
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.legSlot = 35;
				this.value = 30000;
				this.rare = 1;
				return;
			case 795:
				this.useStyle = 1;
				this.useTime = 25;
				this.useAnimation = 25;
				this.knockBack = 5f;
				this.width = 24;
				this.height = 28;
				this.damage = 22;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 1;
				this.value = 13500;
				this.melee = true;
				return;
			case 796:
				this.useStyle = 5;
				this.useAnimation = 30;
				this.useTime = 30;
				this.width = 12;
				this.height = 28;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 19;
				this.shootSpeed = 6.7f;
				this.knockBack = 1f;
				this.alpha = 30;
				this.rare = 1;
				this.noMelee = true;
				this.value = 18000;
				this.ranged = true;
				return;
			case 797:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 40;
				this.useTime = 19;
				this.hammer = 55;
				this.width = 24;
				this.height = 28;
				this.damage = 23;
				this.knockBack = 6f;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 1;
				this.value = 15000;
				this.melee = true;
				return;
			case 798:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 22;
				this.useTime = 14;
				this.autoReuse = true;
				this.width = 24;
				this.height = 28;
				this.damage = 12;
				this.pick = 70;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.knockBack = 3.5f;
				this.rare = 1;
				this.value = 18000;
				this.scale = 1f;
				this.melee = true;
				return;
			case 799:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 32;
				this.knockBack = 6f;
				this.useTime = 15;
				this.width = 24;
				this.height = 28;
				this.damage = 22;
				this.axe = 15;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 1;
				this.value = 13500;
				this.melee = true;
				return;
			case 800:
				this.useStyle = 5;
				this.useAnimation = 20;
				this.useTime = 20;
				this.width = 24;
				this.height = 28;
				this.shoot = 14;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = new SoundStyle?(SoundID.Item11);
				this.damage = 19;
				this.shootSpeed = 6f;
				this.noMelee = true;
				this.knockBack = 2f;
				this.value = this.shadowOrbPrice;
				this.scale = 0.9f;
				this.rare = 1;
				this.ranged = true;
				return;
			case 801:
				this.useStyle = 5;
				this.useAnimation = 45;
				this.useTime = 45;
				this.knockBack = 5.5f;
				this.width = 30;
				this.height = 10;
				this.damage = 17;
				this.scale = 1.1f;
				this.noUseGraphic = true;
				this.shoot = 154;
				this.shootSpeed = 12f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 1;
				this.value = 27000;
				this.melee = true;
				this.channel = true;
				this.noMelee = true;
				return;
			case 802:
				this.useStyle = 5;
				this.useAnimation = 31;
				this.useTime = 31;
				this.shootSpeed = 4f;
				this.knockBack = 5f;
				this.width = 40;
				this.height = 40;
				this.damage = 17;
				this.scale = 1.1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.shoot = 153;
				this.rare = 1;
				this.value = this.shadowOrbPrice;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				return;
			case 803:
				this.width = 18;
				this.height = 18;
				this.headSlot = 58;
				this.value = 50000;
				this.defense = 3;
				return;
			case 804:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 38;
				this.value = 40000;
				this.defense = 3;
				return;
			case 805:
				this.width = 18;
				this.height = 18;
				this.legSlot = 36;
				this.value = 30000;
				this.defense = 3;
				return;
			case 806:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 15;
				this.placeStyle = 5;
				this.width = 12;
				this.height = 30;
				this.value = 150;
				return;
			case 807:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 15;
				this.placeStyle = 6;
				this.width = 12;
				this.height = 30;
				this.value = 150;
				return;
			case 808:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 15;
				this.placeStyle = 7;
				this.width = 12;
				this.height = 30;
				this.value = 150;
				return;
			case 809:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 15;
				this.placeStyle = 8;
				this.width = 12;
				this.height = 30;
				this.value = 150;
				return;
			case 810:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 15;
				this.placeStyle = 9;
				this.width = 12;
				this.height = 30;
				this.value = 150;
				return;
			case 811:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 18;
				this.placeStyle = 4;
				this.width = 28;
				this.height = 14;
				this.value = 150;
				return;
			case 812:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 18;
				this.placeStyle = 5;
				this.width = 28;
				this.height = 14;
				this.value = 150;
				return;
			case 813:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 18;
				this.placeStyle = 6;
				this.width = 28;
				this.height = 14;
				this.value = 150;
				return;
			case 814:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 18;
				this.placeStyle = 7;
				this.width = 28;
				this.height = 14;
				this.value = 150;
				return;
			case 815:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 18;
				this.placeStyle = 8;
				this.width = 28;
				this.height = 14;
				this.value = 150;
				return;
			case 816:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 4;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			case 817:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 5;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			case 818:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 6;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			case 819:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 7;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			case 820:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 8;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			case 821:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.value = 400000;
				this.rare = 5;
				this.wingSlot = 9;
				return;
			case 822:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.value = 400000;
				this.rare = 5;
				this.wingSlot = 10;
				return;
			case 823:
				this.color = new Color(255, 255, 255, 0);
				this.alpha = 255;
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.value = 400000;
				this.rare = 8;
				this.wingSlot = 11;
				return;
			case 824:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 202;
				this.width = 12;
				this.height = 12;
				return;
			case 825:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 82;
				this.width = 12;
				this.height = 12;
				return;
			case 826:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 15;
				this.placeStyle = 10;
				this.width = 12;
				this.height = 30;
				this.value = 150;
				return;
			case 827:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 14;
				this.placeStyle = 4;
				this.width = 26;
				this.height = 20;
				this.value = 300;
				return;
			case 828:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 14;
				this.placeStyle = 5;
				this.width = 26;
				this.height = 20;
				this.value = 300;
				return;
			case 829:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 14;
				this.placeStyle = 6;
				this.width = 26;
				this.height = 20;
				this.value = 300;
				return;
			case 830:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 14;
				this.placeStyle = 7;
				this.width = 26;
				this.height = 20;
				this.value = 300;
				return;
			case 831:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 21;
				this.placeStyle = 12;
				this.width = 26;
				this.height = 22;
				this.value = 5000;
				return;
			case 832:
				this.tileWand = 9;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.createTile = 191;
				this.width = 8;
				this.height = 10;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 25, 0);
				return;
			case 833:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 163;
				this.width = 12;
				this.height = 12;
				return;
			case 834:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 164;
				this.width = 12;
				this.height = 12;
				return;
			case 835:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 200;
				this.width = 12;
				this.height = 12;
				return;
			case 836:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 203;
				this.width = 12;
				this.height = 12;
				return;
			case 837:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 9;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			case 838:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 21;
				this.placeStyle = 13;
				this.width = 26;
				this.height = 22;
				this.value = 5000;
				return;
			case 839:
				this.width = 28;
				this.height = 20;
				this.headSlot = 59;
				this.rare = 2;
				this.vanity = true;
				this.value = Item.buyPrice(0, 1, 50, 0);
				return;
			case 840:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 39;
				this.rare = 2;
				this.vanity = true;
				this.value = Item.buyPrice(0, 1, 50, 0);
				return;
			case 841:
				this.width = 18;
				this.height = 14;
				this.legSlot = 37;
				this.rare = 2;
				this.vanity = true;
				this.value = Item.buyPrice(0, 1, 50, 0);
				return;
			case 842:
				this.width = 28;
				this.height = 20;
				this.headSlot = 60;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 843:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 40;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 844:
				this.width = 18;
				this.height = 14;
				this.legSlot = 38;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 845:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 7;
				this.width = 10;
				this.height = 24;
				this.value = 5000;
				return;
			case 846:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 8;
				this.width = 10;
				this.height = 24;
				this.value = 5000;
				return;
			case 847:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 9;
				this.width = 10;
				this.height = 24;
				this.value = 5000;
				return;
			case 848:
				this.width = 28;
				this.height = 20;
				this.headSlot = 61;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 2, 0, 0);
				return;
			case 849:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.width = 24;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.mech = true;
				this.value = Item.buyPrice(0, 0, 10, 0);
				return;
			case 850:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 5;
				this.autoReuse = true;
				this.width = 24;
				this.height = 28;
				this.rare = 1;
				this.value = 20000;
				this.mech = true;
				this.tileBoost = 20;
				return;
			case 851:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 5;
				this.autoReuse = true;
				this.width = 24;
				this.height = 28;
				this.rare = 1;
				this.value = 20000;
				this.mech = true;
				this.tileBoost = 20;
				return;
			case 852:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 135;
				this.width = 12;
				this.height = 12;
				this.placeStyle = 4;
				this.mech = true;
				this.value = 5000;
				return;
			case 853:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 135;
				this.width = 12;
				this.height = 12;
				this.placeStyle = 5;
				this.mech = true;
				this.value = 5000;
				return;
			case 854:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 5;
				this.value = 50000;
				return;
			case 855:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 5;
				this.value = 50000;
				return;
			case 856:
				this.noWet = true;
				this.holdStyle = 1;
				this.width = 30;
				this.height = 30;
				this.value = 500;
				this.rare = 2;
				this.vanity = true;
				return;
			case 857:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 2;
				this.value = 50000;
				this.waistSlot = 15;
				return;
			case 858:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 89;
				this.placeStyle = 24;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 859:
				this.useStyle = 1;
				this.shootSpeed = 6f;
				this.shoot = 155;
				this.width = 44;
				this.height = 44;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = 20;
				return;
			case 860:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 6;
				this.lifeRegen = 2;
				this.value = Item.buyPrice(0, 20, 0, 0);
				this.handOnSlot = 4;
				return;
			case 861:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 6;
				this.value = Item.buyPrice(0, 40, 0, 0);
				this.hasVanityEffects = true;
				return;
			case 862:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 6;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.neckSlot = 5;
				return;
			case 863:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 4;
				this.value = 200000;
				this.shoeSlot = 2;
				return;
			case 864:
				this.width = 28;
				this.height = 20;
				this.headSlot = 62;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 25, 0, 0);
				return;
			case 865:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 41;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 10, 0, 0);
				return;
			case 866:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 42;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 2, 0, 0);
				return;
			case 867:
				this.width = 28;
				this.height = 20;
				this.headSlot = 63;
				this.rare = 1;
				this.defense = 2;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 868:
				this.width = 28;
				this.height = 20;
				this.headSlot = 64;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 2, 0, 0);
				return;
			case 869:
				this.width = 28;
				this.height = 20;
				this.headSlot = 65;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 2, 50, 0);
				return;
			case 870:
				this.width = 28;
				this.height = 20;
				this.headSlot = 66;
				this.rare = 1;
				this.value = Item.buyPrice(0, 2, 0, 0);
				this.vanity = true;
				return;
			case 871:
				this.width = 28;
				this.height = 20;
				this.bodySlot = 43;
				this.rare = 1;
				this.value = Item.buyPrice(0, 2, 0, 0);
				this.vanity = true;
				return;
			case 872:
				this.width = 28;
				this.height = 20;
				this.legSlot = 39;
				this.rare = 1;
				this.value = Item.buyPrice(0, 2, 0, 0);
				this.vanity = true;
				return;
			case 873:
				this.width = 28;
				this.height = 20;
				this.headSlot = 67;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 5, 0, 0);
				return;
			case 874:
				this.width = 28;
				this.height = 20;
				this.bodySlot = 44;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 5, 0, 0);
				return;
			case 875:
				this.width = 28;
				this.height = 20;
				this.legSlot = 40;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 5, 0, 0);
				return;
			case 876:
				this.width = 28;
				this.height = 20;
				this.headSlot = 68;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 5, 0, 0);
				return;
			case 877:
				this.width = 28;
				this.height = 20;
				this.bodySlot = 45;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 5, 0, 0);
				return;
			case 878:
				this.width = 28;
				this.height = 20;
				this.legSlot = 41;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 5, 0, 0);
				return;
			case 879:
				this.width = 28;
				this.height = 20;
				this.headSlot = 69;
				this.rare = 1;
				this.defense = 4;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 880:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 204;
				this.width = 12;
				this.height = 12;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 13, 0);
				return;
			case 881:
				this.useStyle = 1;
				this.useTurn = false;
				this.useAnimation = 30;
				this.useTime = 30;
				this.width = 24;
				this.height = 28;
				this.damage = 10;
				this.knockBack = 4.5f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.scale = 1f;
				this.value = 1800;
				this.melee = true;
				return;
			case 882:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 25;
				this.useTime = 16;
				this.autoReuse = true;
				this.width = 24;
				this.height = 28;
				this.damage = 4;
				this.pick = 35;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.knockBack = 2f;
				this.value = 2000;
				this.melee = true;
				return;
			case 883:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 206;
				this.width = 12;
				this.height = 12;
				return;
			case 884:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 84;
				this.width = 12;
				this.height = 12;
				return;
			case 885:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 4;
				this.value = 100000;
				return;
			case 886:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 4;
				this.value = 100000;
				return;
			case 887:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 4;
				this.value = 100000;
				return;
			case 888:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 4;
				this.value = 100000;
				this.faceSlot = 5;
				return;
			case 889:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 4;
				this.value = 100000;
				return;
			case 890:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 4;
				this.value = 100000;
				return;
			case 891:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 2;
				this.value = 100000;
				return;
			case 892:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 4;
				this.value = 100000;
				return;
			case 893:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 4;
				this.value = 100000;
				return;
			case 894:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.headSlot = 70;
				this.value = Item.sellPrice(0, 0, 0, 40);
				return;
			case 895:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.bodySlot = 46;
				this.value = Item.sellPrice(0, 0, 0, 60);
				return;
			case 896:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.legSlot = 42;
				this.value = Item.sellPrice(0, 0, 0, 50);
				return;
			case 897:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 5;
				this.value = Item.buyPrice(0, 20, 0, 0);
				this.handOffSlot = 5;
				this.handOnSlot = 10;
				return;
			case 898:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 5;
				this.value = 300000;
				this.shoeSlot = 10;
				return;
			case 899:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 7;
				this.value = 300000;
				this.handOnSlot = 13;
				return;
			case 900:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 5;
				this.value = this.eclipsePrice;
				this.handOnSlot = 14;
				return;
			case 901:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 5;
				this.value = 100000;
				return;
			case 902:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 5;
				this.value = 100000;
				return;
			case 903:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 5;
				this.value = 100000;
				return;
			case 904:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 5;
				this.value = 100000;
				return;
			case 905:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 8;
				this.useTime = 8;
				this.width = 50;
				this.height = 18;
				this.shoot = 158;
				this.useAmmo = AmmoID.Coin;
				this.UseSound = new SoundStyle?(SoundID.Item11);
				this.damage = 0;
				this.shootSpeed = 10f;
				this.noMelee = true;
				this.value = 300000;
				this.rare = 6;
				this.knockBack = 2f;
				this.ranged = true;
				return;
			case 906:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 3;
				this.value = 300000;
				this.handOnSlot = 24;
				return;
			case 907:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 4;
				this.value = Item.buyPrice(0, 30, 0, 0);
				this.shoeSlot = 11;
				return;
			case 908:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 7;
				this.value = 500000;
				this.shoeSlot = 8;
				return;
			case 909:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 207;
				this.placeStyle = 0;
				this.width = 26;
				this.height = 36;
				this.value = Item.buyPrice(0, 4, 0, 0);
				this.rare = 1;
				return;
			case 910:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 207;
				this.placeStyle = 1;
				this.width = 26;
				this.height = 36;
				this.value = Item.buyPrice(0, 4, 0, 0);
				this.rare = 1;
				return;
			case 911:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 208;
				this.width = 8;
				this.height = 10;
				return;
			case 912:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 10;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			case 913:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 19;
				this.placeStyle = 5;
				this.width = 8;
				this.height = 10;
				return;
			case 914:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 21;
				this.placeStyle = 14;
				this.width = 26;
				this.height = 22;
				this.value = 500;
				return;
			case 915:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 15;
				this.placeStyle = 11;
				this.width = 12;
				this.height = 30;
				this.value = 150;
				return;
			case 916:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 18;
				this.placeStyle = 9;
				this.width = 28;
				this.height = 14;
				this.value = 150;
				return;
			case 917:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 14;
				this.placeStyle = 8;
				this.width = 26;
				this.height = 20;
				this.value = 300;
				return;
			case 918:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 88;
				this.placeStyle = 4;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 919:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 87;
				this.placeStyle = 4;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				return;
			case 920:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 79;
				this.placeStyle = 4;
				this.width = 28;
				this.height = 20;
				this.value = 2000;
				return;
			case 921:
				this.useStyle = 1;
				this.useTurn = false;
				this.useAnimation = 19;
				this.useTime = 19;
				this.width = 24;
				this.height = 28;
				this.damage = 11;
				this.knockBack = 6f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.scale = 1f;
				this.value = 100;
				this.melee = true;
				return;
			case 922:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 30;
				this.useTime = 20;
				this.hammer = 40;
				this.width = 24;
				this.height = 28;
				this.damage = 7;
				this.knockBack = 5.5f;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.value = 50;
				this.melee = true;
				return;
			case 923:
				this.useStyle = 5;
				this.useAnimation = 28;
				this.useTime = 28;
				this.width = 12;
				this.height = 28;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 8;
				this.shootSpeed = 6.6f;
				this.noMelee = true;
				this.value = 100;
				this.ranged = true;
				return;
			case 924:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.headSlot = 71;
				return;
			case 925:
				this.width = 18;
				this.height = 18;
				this.defense = 2;
				this.bodySlot = 47;
				return;
			case 926:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.legSlot = 43;
				return;
			case 927:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 85;
				this.width = 12;
				this.height = 12;
				return;
			case 928:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 209;
				this.width = 12;
				this.height = 12;
				this.rare = 3;
				this.value = Item.buyPrice(0, 25, 0, 0);
				return;
			case 929:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 20;
				this.useTime = 20;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.damage = 300;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 0, 15, 0);
				return;
			case 930:
				this.useStyle = 5;
				this.useAnimation = 18;
				this.useTime = 18;
				this.width = 24;
				this.height = 28;
				this.shoot = 163;
				this.useAmmo = AmmoID.Flare;
				this.UseSound = new SoundStyle?(SoundID.Item11);
				this.damage = 2;
				this.shootSpeed = 6f;
				this.noMelee = true;
				this.value = 50000;
				this.scale = 0.9f;
				this.rare = 1;
				this.holdStyle = 1;
				return;
			case 931:
				this.shootSpeed = 6f;
				this.shoot = 163;
				this.damage = 1;
				this.width = 12;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Flare;
				this.knockBack = 1.5f;
				this.value = 7;
				this.ranged = true;
				return;
			case 932:
				this.tileWand = 154;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.createTile = 194;
				this.width = 8;
				this.height = 10;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 933:
				this.tileWand = 9;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.createTile = 192;
				this.width = 8;
				this.height = 10;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 25, 0);
				return;
			case 934:
				this.width = 34;
				this.height = 12;
				this.accessory = true;
				this.rare = 2;
				this.value = 50000;
				return;
			case 935:
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.value = 300000;
				this.rare = 5;
				return;
			case 936:
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.rare = 6;
				this.value = Item.buyPrice(0, 25, 0, 0);
				this.handOffSlot = 4;
				this.handOnSlot = 9;
				return;
			case 937:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 210;
				this.width = 12;
				this.height = 12;
				this.placeStyle = 0;
				this.mech = true;
				this.value = 50000;
				this.mech = true;
				return;
			case 938:
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.rare = 8;
				this.defense = 6;
				this.value = 300000;
				this.shieldSlot = 2;
				return;
			case 939:
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 10f;
				this.shoot = 165;
				this.width = 18;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 2;
				this.noMelee = true;
				this.value = 20000;
				return;
			case 940:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 207;
				this.placeStyle = 2;
				this.width = 26;
				this.height = 36;
				this.value = Item.buyPrice(0, 4, 0, 0);
				this.rare = 1;
				return;
			case 941:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 207;
				this.placeStyle = 3;
				this.width = 26;
				this.height = 36;
				this.value = Item.buyPrice(0, 4, 0, 0);
				this.rare = 1;
				return;
			case 942:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 207;
				this.placeStyle = 4;
				this.width = 26;
				this.height = 36;
				this.value = Item.buyPrice(0, 4, 0, 0);
				this.rare = 1;
				return;
			case 943:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 207;
				this.placeStyle = 5;
				this.width = 26;
				this.height = 36;
				this.value = Item.buyPrice(0, 4, 0, 0);
				this.rare = 1;
				return;
			case 944:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 207;
				this.placeStyle = 6;
				this.width = 26;
				this.height = 36;
				this.value = Item.buyPrice(0, 4, 0, 0);
				this.rare = 1;
				return;
			case 945:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 207;
				this.placeStyle = 7;
				this.width = 26;
				this.height = 36;
				this.value = Item.buyPrice(0, 4, 0, 0);
				this.rare = 1;
				return;
			case 946:
				this.width = 44;
				this.height = 44;
				this.rare = 1;
				this.value = 10000;
				this.holdStyle = 2;
				this.useStyle = 3;
				this.useAnimation = 22;
				this.useTime = 22;
				this.damage = 10;
				this.knockBack = 5f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.melee = true;
				return;
			case 947:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 211;
				this.width = 12;
				this.height = 12;
				this.rare = 7;
				this.value = Item.sellPrice(0, 0, 15, 0);
				return;
			case 948:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.rare = 8;
				this.wingSlot = 12;
				this.value = Item.buyPrice(3, 0, 0, 0);
				return;
			case 949:
				this.useStyle = 1;
				this.shootSpeed = 7f;
				this.shoot = 166;
				this.ammo = AmmoID.Snowball;
				this.damage = 8;
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 19;
				this.useTime = 19;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.ranged = true;
				this.knockBack = 5.75f;
				return;
			case 950:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 1;
				this.value = 50000;
				this.shoeSlot = 7;
				return;
			case 951:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 212;
				this.width = 20;
				this.height = 20;
				this.value = 50000;
				this.rare = 2;
				return;
			case 952:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 21;
				this.placeStyle = 15;
				this.width = 26;
				this.height = 22;
				this.value = 500;
				return;
			case 953:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 50, 0);
				this.handOnSlot = 11;
				this.handOffSlot = 6;
				return;
			case 954:
				this.width = 18;
				this.height = 18;
				this.defense = 2;
				this.headSlot = 72;
				this.value = 5000;
				return;
			case 955:
				this.width = 18;
				this.height = 18;
				this.defense = 4;
				this.headSlot = 73;
				this.value = 25000;
				return;
			case 956:
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.headSlot = 74;
				this.rare = 1;
				this.value = 37500;
				return;
			case 957:
				this.width = 18;
				this.height = 18;
				this.defense = 7;
				this.bodySlot = 48;
				this.rare = 1;
				this.value = 30000;
				return;
			case 958:
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.legSlot = 44;
				this.rare = 1;
				this.value = 22500;
				return;
			case 959:
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.headSlot = 75;
				this.rare = 2;
				this.value = 45000;
				return;
			case 960:
				this.width = 18;
				this.height = 18;
				this.defense = 5;
				this.headSlot = 76;
				this.rare = 3;
				this.value = 45000;
				return;
			case 961:
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.bodySlot = 49;
				this.rare = 3;
				this.value = 30000;
				return;
			case 962:
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.legSlot = 45;
				this.rare = 3;
				this.value = 30000;
				return;
			case 963:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 7;
				this.value = Item.buyPrice(0, 15, 0, 0);
				this.waistSlot = 10;
				return;
			case 964:
				this.knockBack = 5.75f;
				this.useStyle = 5;
				this.useAnimation = 40;
				this.useTime = 40;
				this.width = 50;
				this.height = 14;
				this.shoot = 10;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = new SoundStyle?(SoundID.Item36);
				this.damage = 14;
				this.shootSpeed = 5.35f;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.rare = 2;
				this.ranged = true;
				return;
			case 965:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 8;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 213;
				this.width = 12;
				this.height = 12;
				this.value = 10;
				this.tileBoost += 3;
				return;
			case 966:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 215;
				this.width = 12;
				this.height = 12;
				return;
			case 967:
				this.width = 12;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				this.value = 100;
				return;
			case 968:
				this.holdStyle = 1;
				this.width = 12;
				this.height = 12;
				this.value = 200;
				return;
			case 970:
				this.createTile = 216;
				this.placeStyle = 0;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 30;
				this.value = 1500;
				this.mech = true;
				return;
			case 971:
				this.createTile = 216;
				this.placeStyle = 1;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 30;
				this.value = 1500;
				this.mech = true;
				return;
			case 972:
				this.createTile = 216;
				this.placeStyle = 2;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 30;
				this.value = 1500;
				this.mech = true;
				return;
			case 973:
				this.createTile = 216;
				this.placeStyle = 3;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 30;
				this.value = 1500;
				this.mech = true;
				return;
			case 974:
				this.flame = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.holdStyle = 1;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 4;
				this.placeStyle = 9;
				this.width = 10;
				this.height = 12;
				this.value = 60;
				this.noWet = true;
				return;
			case 975:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 1;
				this.value = 50000;
				this.shoeSlot = 4;
				return;
			case 976:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 2;
				this.value = 50000;
				this.shoeSlot = 4;
				this.handOnSlot = 11;
				this.handOffSlot = 6;
				return;
			case 977:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 7;
				this.value = Item.buyPrice(0, 15, 0, 0);
				this.shoeSlot = 3;
				return;
			case 978:
				this.width = 18;
				this.height = 18;
				this.headSlot = 77;
				this.value = 50000;
				this.defense = 3;
				return;
			case 979:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 50;
				this.value = 40000;
				this.defense = 3;
				return;
			case 980:
				this.width = 18;
				this.height = 18;
				this.legSlot = 46;
				this.value = 30000;
				this.defense = 3;
				return;
			case 981:
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 20;
				this.value = 10000;
				return;
			case 982:
				this.width = 22;
				this.height = 22;
				this.accessory = true;
				this.rare = 1;
				this.value = 50000;
				this.handOnSlot = 1;
				return;
			case 983:
				this.width = 14;
				this.height = 28;
				this.rare = 4;
				this.value = 150000;
				this.accessory = true;
				this.balloonSlot = 6;
				return;
			case 984:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 8;
				this.value = 500000;
				this.handOnSlot = 11;
				this.handOffSlot = 6;
				this.shoeSlot = 14;
				this.waistSlot = 10;
				return;
			case 985:
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 171;
				this.damage = 0;
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = 100;
				return;
			case 986:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 35;
				this.useTime = 35;
				this.width = 38;
				this.height = 6;
				this.shoot = 10;
				this.useAmmo = AmmoID.Dart;
				this.UseSound = new SoundStyle?(SoundID.Item64);
				this.damage = 27;
				this.shootSpeed = 13f;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 5, 0, 0);
				this.knockBack = 4f;
				this.useAmmo = AmmoID.Dart;
				this.ranged = true;
				this.rare = 3;
				return;
			case 987:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 1;
				this.value = 50000;
				this.waistSlot = 13;
				return;
			case 988:
				this.shootSpeed = 3.75f;
				this.shoot = 172;
				this.damage = 7;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 2.2f;
				this.value = 15;
				this.ranged = true;
				return;
			case 989:
				this.autoReuse = true;
				this.rare = 2;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useStyle = 1;
				this.damage = 23;
				this.useAnimation = 21;
				this.useTime = 45;
				this.scale = 1.1f;
				this.width = 30;
				this.height = 30;
				this.shoot = 173;
				this.shootSpeed = 9.5f;
				this.knockBack = 4.25f;
				this.melee = true;
				this.value = Item.sellPrice(0, 3, 0, 0);
				return;
			case 990:
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 25;
				this.useTime = 7;
				this.knockBack = 4.75f;
				this.width = 20;
				this.height = 12;
				this.damage = 35;
				this.pick = 200;
				this.axe = 22;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 220000;
				this.melee = true;
				this.scale = 1.1f;
				return;
			case 991:
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 35;
				this.useTime = 13;
				this.knockBack = 5f;
				this.width = 20;
				this.height = 12;
				this.damage = 33;
				this.axe = 14;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 54000;
				this.melee = true;
				this.scale = 1.1f;
				return;
			case 992:
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 35;
				this.useTime = 10;
				this.knockBack = 6f;
				this.width = 20;
				this.height = 12;
				this.damage = 39;
				this.axe = 17;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 81000;
				this.melee = true;
				this.scale = 1.1f;
				return;
			case 993:
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 35;
				this.useTime = 8;
				this.knockBack = 7f;
				this.width = 20;
				this.height = 12;
				this.damage = 43;
				this.axe = 20;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 108000;
				this.melee = true;
				this.scale = 1.1f;
				return;
			case 994:
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 175;
				this.width = 16;
				this.height = 30;
				this.UseSound = new SoundStyle?(SoundID.Item2);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 7, 50, 0);
				this.buffType = 45;
				return;
			case 995:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 217;
				this.width = 26;
				this.height = 20;
				this.value = 100000;
				return;
			case 996:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 218;
				this.width = 26;
				this.height = 20;
				this.value = 100000;
				return;
			case 997:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 219;
				this.width = 26;
				this.height = 20;
				this.value = 100000;
				return;
			case 998:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 220;
				this.width = 26;
				this.height = 20;
				this.value = 100000;
				return;
			case 999:
				this.createTile = 178;
				this.placeStyle = 6;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.alpha = 50;
				this.width = 10;
				this.height = 14;
				this.value = 15000;
				return;
			case 1000:
				this.useStyle = 5;
				this.shootSpeed = 10f;
				this.shoot = 178;
				this.damage = 0;
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item11);
				this.useAnimation = 15;
				this.useTime = 15;
				this.noMelee = true;
				this.value = 100;
				this.ranged = true;
				break;
			default:
				return;
			}
		}

		// Token: 0x0600027B RID: 635 RVA: 0x00044F70 File Offset: 0x00043170
		public void SetDefaults2(int type)
		{
			switch (type)
			{
			case 1001:
				this.width = 18;
				this.height = 18;
				this.defense = 20;
				this.headSlot = 78;
				this.rare = 7;
				this.value = 300000;
				return;
			case 1002:
				this.width = 18;
				this.height = 18;
				this.defense = 13;
				this.headSlot = 79;
				this.rare = 7;
				this.value = 300000;
				return;
			case 1003:
				this.width = 18;
				this.height = 18;
				this.defense = 7;
				this.headSlot = 80;
				this.rare = 7;
				this.value = 300000;
				return;
			case 1004:
				this.width = 18;
				this.height = 18;
				this.defense = 18;
				this.bodySlot = 51;
				this.rare = 7;
				this.value = 240000;
				return;
			case 1005:
				this.width = 18;
				this.height = 18;
				this.defense = 13;
				this.legSlot = 47;
				this.rare = 7;
				this.value = 180000;
				return;
			case 1006:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.sellPrice(0, 0, 90, 0);
				this.rare = 7;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 17;
				return;
			case 1007:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1008:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1009:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1010:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1011:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1012:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1013:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1014:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1015:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1016:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1017:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1018:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1019:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1020:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1021:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1022:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1023:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1024:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1025:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1026:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1027:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1028:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1029:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1030:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1031:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1032:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1033:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1034:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1035:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1036:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1037:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1038:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1039:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1040:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1041:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1042:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1043:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1044:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1045:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1046:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1047:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1048:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1049:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1050:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1051:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1052:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1053:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1054:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1055:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1056:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1057:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1058:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1059:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1060:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1061:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1062:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1063:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1064:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1065:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1066:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1067:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1068:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1069:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1070:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1071:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.width = 24;
				this.height = 24;
				this.value = 10000;
				return;
			case 1072:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.width = 24;
				this.height = 24;
				this.value = 10000;
				return;
			case 1073:
				this.paint = 1;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1074:
				this.paint = 2;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1075:
				this.paint = 3;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1076:
				this.paint = 4;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1077:
				this.paint = 5;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1078:
				this.paint = 6;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1079:
				this.paint = 7;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1080:
				this.paint = 8;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1081:
				this.paint = 9;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1082:
				this.paint = 10;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1083:
				this.paint = 11;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1084:
				this.paint = 12;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1085:
				this.paint = 13;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1086:
				this.paint = 14;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1087:
				this.paint = 15;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1088:
				this.paint = 16;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1089:
				this.paint = 17;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1090:
				this.paint = 18;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1091:
				this.paint = 19;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1092:
				this.paint = 20;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1093:
				this.paint = 21;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1094:
				this.paint = 22;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1095:
				this.paint = 23;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1096:
				this.paint = 24;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1097:
				this.paint = 25;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1098:
				this.paint = 26;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1099:
				this.paint = 27;
				this.width = 24;
				this.height = 24;
				this.value = 25;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1100:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.width = 24;
				this.height = 24;
				this.value = 10000;
				return;
			case 1101:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 226;
				this.width = 12;
				this.height = 12;
				return;
			case 1102:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 112;
				this.width = 12;
				this.height = 12;
				return;
			case 1103:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 224;
				this.width = 12;
				this.height = 12;
				return;
			case 1104:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 221;
				this.width = 12;
				this.height = 12;
				this.value = 4500;
				this.rare = 3;
				return;
			case 1105:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 222;
				this.width = 12;
				this.height = 12;
				this.value = 6500;
				this.rare = 3;
				return;
			case 1106:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 223;
				this.width = 12;
				this.height = 12;
				this.value = 8500;
				this.rare = 3;
				return;
			case 1107:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				this.placeStyle = 0;
				this.createTile = 227;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				return;
			case 1108:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				this.placeStyle = 1;
				this.createTile = 227;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				return;
			case 1109:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				this.placeStyle = 2;
				this.createTile = 227;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				return;
			case 1110:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				this.placeStyle = 3;
				this.createTile = 227;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				return;
			case 1111:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				this.placeStyle = 4;
				this.createTile = 227;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				return;
			case 1112:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				this.placeStyle = 5;
				this.createTile = 227;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				return;
			case 1113:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1114:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				this.placeStyle = 7;
				this.createTile = 227;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				return;
			case 1115:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1116:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1117:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1118:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1119:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 10000;
				this.rare = 1;
				return;
			case 1120:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 228;
				this.width = 26;
				this.height = 20;
				this.value = Item.buyPrice(0, 5, 0, 0);
				return;
			case 1121:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 12;
				this.useTime = 12;
				this.mana = 5;
				this.width = 50;
				this.height = 18;
				this.shoot = 181;
				this.UseSound = new SoundStyle?(SoundID.Item11);
				this.damage = 9;
				this.shootSpeed = 8f;
				this.noMelee = true;
				this.value = this.queenBeePrice;
				this.knockBack = 0.25f;
				this.rare = 2;
				this.magic = true;
				this.scale = 0.8f;
				return;
			case 1122:
				this.autoReuse = true;
				this.useStyle = 1;
				this.shootSpeed = 12f;
				this.shoot = 182;
				this.damage = 80;
				this.width = 18;
				this.height = 20;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 14;
				this.useTime = 14;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 35, 0, 0);
				this.knockBack = 5f;
				this.melee = true;
				this.rare = 7;
				return;
			case 1123:
				this.useStyle = 1;
				this.useTime = 20;
				this.useAnimation = 20;
				this.knockBack = 5.3f;
				this.width = 40;
				this.autoReuse = true;
				this.height = 40;
				this.damage = 30;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 3;
				this.value = this.queenBeePrice;
				this.melee = true;
				return;
			case 1124:
				this.width = 12;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1125:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 229;
				this.width = 12;
				this.height = 12;
				return;
			case 1126:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 108;
				this.width = 12;
				this.height = 12;
				return;
			case 1127:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 230;
				this.width = 12;
				this.height = 12;
				return;
			case 1128:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.autoReuse = true;
				return;
			case 1129:
				this.tileWand = 1124;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.createTile = 225;
				this.width = 8;
				this.height = 10;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 1130:
				this.useStyle = 1;
				this.shootSpeed = 6f;
				this.shoot = 183;
				this.knockBack = 1f;
				this.damage = 12;
				this.width = 10;
				this.height = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.useTime = 15;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 0, 5, 0);
				this.ranged = true;
				return;
			case 1131:
				this.width = 22;
				this.height = 22;
				this.accessory = true;
				this.rare = 8;
				this.value = Item.sellPrice(0, 40, 0, 0);
				this.expert = true;
				return;
			case 1132:
				this.width = 22;
				this.height = 22;
				this.accessory = true;
				this.rare = 2;
				this.value = 100000;
				return;
			case 1133:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 1;
				return;
			case 1134:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.healLife = 80;
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.potion = true;
				this.buffType = 48;
				this.buffTime = 900;
				this.value = 40;
				return;
			case 1135:
				this.width = 18;
				this.height = 18;
				this.headSlot = 81;
				this.value = 1000;
				this.defense = 1;
				return;
			case 1136:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 52;
				this.value = 1000;
				this.defense = 2;
				return;
			case 1137:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 12;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			case 1138:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 13;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			case 1139:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 14;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			case 1140:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 15;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			case 1141:
				this.width = 14;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 7;
				return;
			case 1142:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 21;
				this.placeStyle = 16;
				this.width = 26;
				this.height = 22;
				this.value = 500;
				return;
			case 1143:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 15;
				this.placeStyle = 12;
				this.width = 12;
				this.height = 30;
				this.value = 150;
				return;
			case 1144:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 14;
				this.placeStyle = 9;
				this.width = 26;
				this.height = 20;
				this.value = 300;
				return;
			case 1145:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 18;
				this.placeStyle = 10;
				this.width = 28;
				this.height = 14;
				this.value = 150;
				return;
			case 1146:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 137;
				this.placeStyle = 1;
				this.width = 12;
				this.height = 12;
				this.value = 10000;
				this.mech = true;
				return;
			case 1147:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 137;
				this.placeStyle = 2;
				this.width = 12;
				this.height = 12;
				this.value = 10000;
				this.mech = true;
				return;
			case 1148:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 137;
				this.placeStyle = 3;
				this.width = 12;
				this.height = 12;
				this.value = 10000;
				this.mech = true;
				return;
			case 1149:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 137;
				this.placeStyle = 4;
				this.width = 12;
				this.height = 12;
				this.value = 10000;
				this.mech = true;
				return;
			case 1150:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 232;
				this.width = 12;
				this.height = 12;
				return;
			case 1151:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 135;
				this.width = 12;
				this.height = 12;
				this.placeStyle = 6;
				this.mech = true;
				this.value = 5000;
				return;
			case 1152:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 43;
				return;
			case 1153:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 44;
				return;
			case 1154:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 45;
				return;
			case 1155:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 18;
				this.useTime = 18;
				this.mana = 10;
				this.width = 50;
				this.height = 18;
				this.shoot = 189;
				this.UseSound = new SoundStyle?(SoundID.Item11);
				this.damage = 31;
				this.shootSpeed = 9f;
				this.noMelee = true;
				this.value = 500000;
				this.knockBack = 0.25f;
				this.rare = 8;
				this.magic = true;
				return;
			case 1156:
				this.channel = true;
				this.useStyle = 5;
				this.useAnimation = 30;
				this.useTime = 30;
				this.knockBack = 1f;
				this.width = 30;
				this.height = 10;
				this.damage = 38;
				this.scale = 1.1f;
				this.shoot = 190;
				this.shootSpeed = 14f;
				this.UseSound = new SoundStyle?(SoundID.Item10);
				this.rare = 8;
				this.value = Item.sellPrice(0, 20, 0, 0);
				this.ranged = true;
				this.noMelee = true;
				return;
			case 1157:
				this.mana = 10;
				this.damage = 40;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 191;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item44);
				this.useAnimation = 28;
				this.useTime = 28;
				this.rare = 7;
				this.noMelee = true;
				this.knockBack = 3f;
				this.buffType = 49;
				this.value = Item.buyPrice(0, 35, 0, 0);
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			case 1158:
				this.rare = 7;
				this.width = 24;
				this.height = 28;
				this.accessory = true;
				this.value = Item.buyPrice(0, 20, 0, 0);
				this.neckSlot = 4;
				return;
			case 1159:
				this.width = 18;
				this.height = 18;
				this.defense = 6;
				this.headSlot = 82;
				this.rare = 7;
				this.value = Item.buyPrice(0, 50, 0, 0);
				return;
			case 1160:
				this.width = 18;
				this.height = 18;
				this.defense = 17;
				this.bodySlot = 53;
				this.rare = 7;
				this.value = Item.buyPrice(0, 50, 0, 0);
				return;
			case 1161:
				this.width = 18;
				this.height = 18;
				this.defense = 12;
				this.legSlot = 48;
				this.rare = 7;
				this.value = Item.buyPrice(0, 50, 0, 0);
				return;
			case 1162:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.value = Item.buyPrice(1, 50, 0, 0);
				this.wingSlot = 13;
				this.rare = 5;
				return;
			case 1163:
				this.width = 14;
				this.height = 28;
				this.rare = 4;
				this.value = 150000;
				this.accessory = true;
				this.balloonSlot = 1;
				return;
			case 1164:
				this.width = 14;
				this.height = 28;
				this.rare = 8;
				this.value = 150000;
				this.accessory = true;
				this.balloonSlot = 3;
				return;
			case 1165:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.value = 400000;
				this.rare = 5;
				this.wingSlot = 14;
				return;
			case 1166:
				this.useStyle = 1;
				this.useTime = 22;
				this.useAnimation = 22;
				this.knockBack = 5.5f;
				this.width = 24;
				this.height = 28;
				this.damage = 19;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 3;
				this.value = 9000;
				this.melee = true;
				return;
			case 1167:
				this.rare = 7;
				this.width = 24;
				this.height = 28;
				this.accessory = true;
				this.value = Item.buyPrice(0, 40, 0, 0);
				return;
			case 1168:
				this.useStyle = 1;
				this.shootSpeed = 6f;
				this.shoot = 196;
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.useTime = 15;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = 20;
				return;
			case 1169:
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 197;
				this.width = 16;
				this.height = 30;
				this.UseSound = new SoundStyle?(SoundID.Item2);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.buffType = 50;
				return;
			case 1170:
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 198;
				this.width = 16;
				this.height = 30;
				this.UseSound = new SoundStyle?(SoundID.Item2);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 3, 0, 0);
				this.buffType = 51;
				return;
			case 1171:
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 199;
				this.width = 16;
				this.height = 30;
				this.UseSound = new SoundStyle?(SoundID.Item2);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.buffType = 52;
				this.value = Item.buyPrice(2, 0, 0, 0);
				return;
			case 1172:
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 200;
				this.width = 16;
				this.height = 30;
				this.UseSound = new SoundStyle?(SoundID.Item2);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.buffType = 53;
				return;
			case 1173:
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 85;
				this.placeStyle = 1;
				this.width = 20;
				this.height = 20;
				return;
			case 1174:
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 85;
				this.placeStyle = 2;
				this.width = 20;
				this.height = 20;
				return;
			case 1175:
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 85;
				this.placeStyle = 3;
				this.width = 20;
				this.height = 20;
				return;
			case 1176:
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 85;
				this.placeStyle = 4;
				this.width = 20;
				this.height = 20;
				return;
			case 1177:
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 85;
				this.placeStyle = 5;
				this.width = 20;
				this.height = 20;
				return;
			case 1178:
				this.useStyle = 5;
				this.mana = 5;
				this.autoReuse = true;
				this.useAnimation = 7;
				this.useTime = 7;
				this.width = 24;
				this.height = 18;
				this.shoot = 206;
				this.UseSound = new SoundStyle?(SoundID.Item7);
				this.damage = 48;
				this.shootSpeed = 11f;
				this.noMelee = true;
				this.value = 300000;
				this.knockBack = 4f;
				this.rare = 7;
				this.magic = true;
				return;
			case 1179:
				this.shootSpeed = 5f;
				this.shoot = 207;
				this.damage = 9;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Bullet;
				this.knockBack = 4.5f;
				this.value = 50;
				this.ranged = true;
				this.rare = 7;
				return;
			case 1180:
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 208;
				this.width = 16;
				this.height = 30;
				this.UseSound = new SoundStyle?(SoundID.Item2);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.buffType = 54;
				this.value = Item.sellPrice(0, 75, 0, 0);
				return;
			case 1181:
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 209;
				this.width = 16;
				this.height = 30;
				this.UseSound = new SoundStyle?(SoundID.Item2);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 45, 0, 0);
				this.buffType = 55;
				return;
			case 1182:
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 210;
				this.width = 16;
				this.height = 30;
				this.UseSound = new SoundStyle?(SoundID.Item2);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.buffType = 56;
				return;
			case 1183:
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 211;
				this.width = 16;
				this.height = 30;
				this.UseSound = new SoundStyle?(SoundID.Item2);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 8;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 5, 50, 0);
				this.buffType = 57;
				return;
			case 1184:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 13500;
				this.rare = 3;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 12;
				return;
			case 1185:
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 22;
				this.useTime = 22;
				this.knockBack = 5.5f;
				this.width = 40;
				this.height = 40;
				this.damage = 49;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 92000;
				this.melee = true;
				return;
			case 1186:
				this.useStyle = 5;
				this.useAnimation = 27;
				this.useTime = 27;
				this.shootSpeed = 4.4f;
				this.knockBack = 4.5f;
				this.width = 40;
				this.height = 40;
				this.damage = 44;
				this.scale = 1.1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.shoot = 212;
				this.rare = 4;
				this.value = 60000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				return;
			case 1187:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 22;
				this.useTime = 22;
				this.width = 50;
				this.height = 18;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 37;
				this.shootSpeed = 9.25f;
				this.noMelee = true;
				this.value = 80000;
				this.ranged = true;
				this.rare = 4;
				this.knockBack = 1.75f;
				return;
			case 1188:
				this.useStyle = 1;
				this.useTurn = true;
				this.autoReuse = true;
				this.useAnimation = 25;
				this.useTime = 12;
				this.knockBack = 5f;
				this.width = 20;
				this.height = 12;
				this.damage = 12;
				this.pick = 130;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 72000;
				this.melee = true;
				this.scale = 1f;
				return;
			case 1189:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 12;
				this.shootSpeed = 32f;
				this.knockBack = 0.5f;
				this.width = 20;
				this.height = 12;
				this.damage = 12;
				this.pick = 130;
				this.UseSound = new SoundStyle?(SoundID.Item23);
				this.shoot = 213;
				this.rare = 4;
				this.value = 72000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				return;
			case 1190:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 12;
				this.shootSpeed = 40f;
				this.knockBack = 2.9f;
				this.width = 20;
				this.height = 12;
				this.damage = 26;
				this.axe = 15;
				this.UseSound = new SoundStyle?(SoundID.Item23);
				this.shoot = 214;
				this.rare = 4;
				this.value = 72000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				return;
			case 1191:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.sellPrice(0, 0, 52, 0);
				this.rare = 3;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 14;
				return;
			case 1192:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 22;
				this.useTime = 22;
				this.knockBack = 6f;
				this.width = 40;
				this.height = 40;
				this.damage = 59;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 126500;
				this.melee = true;
				return;
			case 1193:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 25;
				this.shootSpeed = 4.5f;
				this.knockBack = 5.5f;
				this.width = 40;
				this.height = 40;
				this.damage = 46;
				this.scale = 1.1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.shoot = 215;
				this.rare = 4;
				this.value = 82500;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				return;
			case 1194:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 19;
				this.useTime = 19;
				this.width = 50;
				this.height = 18;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 40;
				this.shootSpeed = 9.75f;
				this.noMelee = true;
				this.value = 110000;
				this.ranged = true;
				this.rare = 4;
				this.knockBack = 2f;
				return;
			case 1195:
				this.useStyle = 1;
				this.useAnimation = 25;
				this.useTime = 9;
				this.knockBack = 5f;
				this.useTurn = true;
				this.autoReuse = true;
				this.width = 20;
				this.height = 12;
				this.damage = 17;
				this.pick = 165;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 99000;
				this.melee = true;
				this.scale = 1f;
				return;
			case 1196:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 9;
				this.shootSpeed = 32f;
				this.knockBack = 0.5f;
				this.width = 20;
				this.height = 12;
				this.damage = 17;
				this.pick = 165;
				this.UseSound = new SoundStyle?(SoundID.Item23);
				this.shoot = 216;
				this.rare = 4;
				this.value = 99000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				return;
			case 1197:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 9;
				this.shootSpeed = 40f;
				this.knockBack = 3.75f;
				this.width = 20;
				this.height = 12;
				this.damage = 31;
				this.axe = 18;
				this.UseSound = new SoundStyle?(SoundID.Item23);
				this.shoot = 217;
				this.rare = 4;
				this.value = 99000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				return;
			case 1198:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.sellPrice(0, 0, 68, 0);
				this.rare = 3;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 16;
				return;
			case 1199:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.knockBack = 6f;
				this.width = 40;
				this.height = 40;
				this.damage = 61;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 161000;
				this.melee = true;
				return;
			case 1200:
				this.useStyle = 5;
				this.useAnimation = 23;
				this.useTime = 23;
				this.shootSpeed = 5f;
				this.knockBack = 6.2f;
				this.width = 40;
				this.height = 40;
				this.damage = 48;
				this.scale = 1.1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.shoot = 218;
				this.rare = 4;
				this.value = 105000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				return;
			case 1201:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.width = 50;
				this.height = 18;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 43;
				this.shootSpeed = 10.5f;
				this.noMelee = true;
				this.value = 140000;
				this.ranged = true;
				this.rare = 4;
				this.knockBack = 2.5f;
				return;
			case 1202:
				this.useStyle = 1;
				this.useAnimation = 25;
				this.useTime = 7;
				this.knockBack = 5f;
				this.useTurn = true;
				this.autoReuse = true;
				this.width = 20;
				this.height = 12;
				this.damage = 27;
				this.pick = 190;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 126000;
				this.melee = true;
				this.scale = 1f;
				return;
			case 1203:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 7;
				this.shootSpeed = 32f;
				this.knockBack = 0.5f;
				this.width = 20;
				this.height = 12;
				this.damage = 27;
				this.pick = 190;
				this.UseSound = new SoundStyle?(SoundID.Item23);
				this.shoot = 219;
				this.rare = 4;
				this.value = 126000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				return;
			case 1204:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 7;
				this.shootSpeed = 40f;
				this.knockBack = 4.6f;
				this.width = 20;
				this.height = 12;
				this.damage = 34;
				this.axe = 21;
				this.UseSound = new SoundStyle?(SoundID.Item23);
				this.shoot = 220;
				this.rare = 4;
				this.value = 126000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				return;
			case 1205:
				this.width = 18;
				this.height = 18;
				this.defense = 14;
				this.headSlot = 83;
				this.rare = 4;
				this.value = 75000;
				return;
			case 1206:
				this.width = 18;
				this.height = 18;
				this.defense = 5;
				this.headSlot = 84;
				this.rare = 4;
				this.value = 75000;
				return;
			case 1207:
				this.width = 18;
				this.height = 18;
				this.defense = 3;
				this.headSlot = 85;
				this.rare = 4;
				this.value = 75000;
				return;
			case 1208:
				this.width = 18;
				this.height = 18;
				this.defense = 10;
				this.bodySlot = 54;
				this.rare = 4;
				this.value = 60000;
				return;
			case 1209:
				this.width = 18;
				this.height = 18;
				this.defense = 8;
				this.legSlot = 49;
				this.rare = 4;
				this.value = 45000;
				return;
			case 1210:
				this.width = 18;
				this.height = 18;
				this.defense = 19;
				this.headSlot = 86;
				this.rare = 4;
				this.value = 112500;
				return;
			case 1211:
				this.width = 18;
				this.height = 18;
				this.defense = 7;
				this.headSlot = 87;
				this.rare = 4;
				this.value = 112500;
				return;
			case 1212:
				this.width = 18;
				this.height = 18;
				this.defense = 4;
				this.headSlot = 88;
				this.rare = 4;
				this.value = 112500;
				return;
			case 1213:
				this.width = 18;
				this.height = 18;
				this.defense = 13;
				this.bodySlot = 55;
				this.rare = 4;
				this.value = 90000;
				return;
			case 1214:
				this.width = 18;
				this.height = 18;
				this.defense = 10;
				this.legSlot = 50;
				this.rare = 4;
				this.value = 67500;
				return;
			case 1215:
				this.width = 18;
				this.height = 18;
				this.defense = 23;
				this.headSlot = 89;
				this.rare = 4;
				this.value = 150000;
				return;
			case 1216:
				this.width = 18;
				this.height = 18;
				this.defense = 8;
				this.headSlot = 90;
				this.rare = 4;
				this.value = 150000;
				return;
			case 1217:
				this.width = 18;
				this.height = 18;
				this.defense = 4;
				this.headSlot = 91;
				this.rare = 4;
				this.value = 150000;
				return;
			case 1218:
				this.width = 18;
				this.height = 18;
				this.defense = 15;
				this.bodySlot = 56;
				this.rare = 4;
				this.value = 120000;
				return;
			case 1219:
				this.width = 18;
				this.height = 18;
				this.defense = 11;
				this.legSlot = 51;
				this.rare = 4;
				this.value = 90000;
				return;
			case 1220:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 134;
				this.placeStyle = 1;
				this.width = 28;
				this.height = 14;
				this.value = 25000;
				this.rare = 3;
				return;
			case 1221:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 133;
				this.placeStyle = 1;
				this.width = 44;
				this.height = 30;
				this.value = 50000;
				this.rare = 3;
				return;
			case 1222:
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 35;
				this.useTime = 12;
				this.knockBack = 5.5f;
				this.width = 20;
				this.height = 12;
				this.damage = 36;
				this.axe = 15;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 72000;
				this.melee = true;
				this.scale = 1.1f;
				return;
			case 1223:
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 35;
				this.useTime = 9;
				this.knockBack = 6.5f;
				this.width = 20;
				this.height = 12;
				this.damage = 41;
				this.axe = 18;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 99000;
				this.melee = true;
				this.scale = 1.1f;
				return;
			case 1224:
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 35;
				this.useTime = 7;
				this.knockBack = 7.5f;
				this.width = 20;
				this.height = 12;
				this.damage = 44;
				this.axe = 21;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = 126000;
				this.melee = true;
				this.scale = 1.1f;
				return;
			case 1225:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.sellPrice(0, 0, 40, 0);
				this.rare = 4;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 18;
				return;
			case 1226:
				this.useStyle = 1;
				this.useAnimation = 26;
				this.useTime = 60;
				this.shoot = 229;
				this.shootSpeed = 8f;
				this.knockBack = 6f;
				this.width = 40;
				this.height = 40;
				this.damage = 95;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 7;
				this.value = 276000;
				this.scale = 1f;
				this.melee = true;
				return;
			case 1227:
				this.autoReuse = true;
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 16;
				this.useTime = 28;
				this.shoot = 228;
				this.shootSpeed = 8f;
				this.knockBack = 4f;
				this.width = 40;
				this.height = 40;
				this.damage = 57;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 7;
				this.value = 276000;
				this.melee = true;
				return;
			case 1228:
				this.useStyle = 5;
				this.useAnimation = 23;
				this.useTime = 23;
				this.shootSpeed = 5f;
				this.knockBack = 6.2f;
				this.width = 40;
				this.height = 40;
				this.damage = 49;
				this.scale = 1.1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.shoot = 222;
				this.rare = 7;
				this.value = 180000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				return;
			case 1229:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 19;
				this.useTime = 19;
				this.width = 50;
				this.height = 18;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 34;
				this.shootSpeed = 11.5f;
				this.noMelee = true;
				this.value = 240000;
				this.ranged = true;
				this.rare = 7;
				this.knockBack = 2.75f;
				return;
			case 1230:
				this.useStyle = 1;
				this.useAnimation = 25;
				this.useTime = 7;
				this.knockBack = 5f;
				this.useTurn = true;
				this.autoReuse = true;
				this.width = 20;
				this.height = 12;
				this.damage = 40;
				this.pick = 200;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 7;
				this.value = 216000;
				this.melee = true;
				this.scale = 1f;
				this.tileBoost++;
				return;
			case 1231:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 7;
				this.shootSpeed = 40f;
				this.knockBack = 1f;
				this.width = 20;
				this.height = 12;
				this.damage = 35;
				this.pick = 200;
				this.UseSound = new SoundStyle?(SoundID.Item23);
				this.shoot = 223;
				this.rare = 7;
				this.value = 216000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				this.tileBoost++;
				return;
			case 1232:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 7;
				this.shootSpeed = 46f;
				this.knockBack = 4.6f;
				this.width = 20;
				this.height = 12;
				this.damage = 50;
				this.axe = 23;
				this.UseSound = new SoundStyle?(SoundID.Item23);
				this.shoot = 224;
				this.rare = 7;
				this.value = 216000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				this.tileBoost++;
				return;
			case 1233:
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 30;
				this.useTime = 7;
				this.knockBack = 7f;
				this.width = 20;
				this.height = 12;
				this.damage = 70;
				this.axe = 23;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 7;
				this.value = 216000;
				this.melee = true;
				this.scale = 1.15f;
				this.tileBoost++;
				return;
			case 1234:
				this.useTurn = true;
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 35;
				this.useTime = 14;
				this.hammer = 90;
				this.width = 24;
				this.height = 28;
				this.damage = 80;
				this.knockBack = 8f;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 7;
				this.value = 216000;
				this.melee = true;
				this.tileBoost++;
				return;
			case 1235:
				this.shootSpeed = 4.5f;
				this.shoot = 225;
				this.damage = 16;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 3.5f;
				this.value = 100;
				this.ranged = true;
				this.rare = 7;
				return;
			case 1236:
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 10f;
				this.shoot = 230;
				this.width = 18;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = 20000;
				return;
			case 1237:
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 10.5f;
				this.shoot = 231;
				this.width = 18;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = 20000;
				return;
			case 1238:
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 11f;
				this.shoot = 232;
				this.width = 18;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = 20000;
				return;
			case 1239:
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 11.5f;
				this.shoot = 233;
				this.width = 18;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = 20000;
				return;
			case 1240:
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 12f;
				this.shoot = 234;
				this.width = 18;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = 20000;
				return;
			case 1241:
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 12.5f;
				this.shoot = 235;
				this.width = 18;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = 20000;
				return;
			case 1242:
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 236;
				this.width = 16;
				this.height = 30;
				this.UseSound = new SoundStyle?(SoundID.Item2);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 3;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 7, 50, 0);
				this.buffType = 61;
				return;
			case 1243:
				this.width = 28;
				this.height = 20;
				this.headSlot = 92;
				this.rare = 1;
				this.vanity = true;
				return;
			case 1244:
				this.mana = 30;
				this.damage = 30;
				this.useStyle = 1;
				this.shootSpeed = 16f;
				this.shoot = 237;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item66);
				this.useAnimation = 22;
				this.useTime = 22;
				this.rare = 6;
				this.noMelee = true;
				this.knockBack = 0f;
				this.value = Item.sellPrice(0, 3, 50, 0);
				this.magic = true;
				return;
			case 1245:
				this.flame = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.holdStyle = 1;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 4;
				this.placeStyle = 10;
				this.width = 10;
				this.height = 12;
				this.value = 60;
				this.noWet = true;
				return;
			case 1246:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 234;
				this.width = 12;
				this.height = 12;
				this.ammo = AmmoID.Sand;
				this.notAmmo = true;
				return;
			case 1247:
				this.width = 20;
				this.height = 24;
				this.value = 150000;
				this.accessory = true;
				this.rare = 4;
				this.backSlot = 1;
				return;
			case 1248:
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.value = Item.buyPrice(0, 25, 0, 0);
				this.rare = 7;
				return;
			case 1249:
				this.width = 14;
				this.height = 28;
				this.rare = 2;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.accessory = true;
				this.balloonSlot = 7;
				return;
			case 1250:
				this.width = 20;
				this.height = 22;
				this.rare = 4;
				this.value = Item.buyPrice(0, 15, 0, 0);
				this.accessory = true;
				this.balloonSlot = 2;
				return;
			case 1251:
				this.width = 20;
				this.height = 22;
				this.rare = 4;
				this.value = Item.buyPrice(0, 15, 0, 0);
				this.accessory = true;
				this.balloonSlot = 9;
				return;
			case 1252:
				this.width = 20;
				this.height = 22;
				this.rare = 4;
				this.value = Item.buyPrice(0, 15, 0, 0);
				this.accessory = true;
				this.balloonSlot = 10;
				return;
			case 1253:
				this.width = 20;
				this.height = 24;
				this.value = 225000;
				this.accessory = true;
				this.rare = 5;
				return;
			case 1254:
				this.useStyle = 5;
				this.useAnimation = 36;
				this.useTime = 36;
				this.crit += 25;
				this.width = 44;
				this.height = 14;
				this.shoot = 10;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = new SoundStyle?(SoundID.Item40);
				this.damage = 185;
				this.shootSpeed = 16f;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 40, 0, 0);
				this.knockBack = 8f;
				this.rare = 8;
				this.ranged = true;
				return;
			case 1255:
				this.autoReuse = false;
				this.useStyle = 5;
				this.useAnimation = 9;
				this.useTime = 9;
				this.width = 24;
				this.height = 22;
				this.shoot = 14;
				this.knockBack = 5.5f;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = new SoundStyle?(SoundID.Item41);
				this.damage = 50;
				this.shootSpeed = 13.5f;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.scale = 0.85f;
				this.rare = 7;
				this.ranged = true;
				this.autoReuse = true;
				return;
			case 1256:
				this.mana = 30;
				this.damage = 12;
				this.useStyle = 1;
				this.shootSpeed = 12f;
				this.shoot = 243;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item8);
				this.useAnimation = 24;
				this.useTime = 24;
				this.rare = 1;
				this.noMelee = true;
				this.knockBack = 0f;
				this.value = this.shadowOrbPrice;
				this.magic = true;
				return;
			case 1257:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 39, 0);
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.consumable = true;
				this.createTile = 239;
				this.placeStyle = 19;
				return;
			case 1258:
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 22;
				this.useTime = 22;
				this.width = 50;
				this.height = 18;
				this.shoot = 246;
				this.useAmmo = AmmoID.StyngerBolt;
				this.UseSound = new SoundStyle?(SoundID.Item11);
				this.damage = 45;
				this.knockBack = 5f;
				this.shootSpeed = 9f;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 35, 0, 0);
				this.rare = 7;
				this.ranged = true;
				return;
			case 1259:
				this.noMelee = true;
				this.useStyle = 5;
				this.useAnimation = 40;
				this.useTime = 40;
				this.knockBack = 6.5f;
				this.width = 30;
				this.height = 10;
				this.damage = 65;
				this.scale = 1.1f;
				this.noUseGraphic = true;
				this.shoot = 247;
				this.shootSpeed = 15.9f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 7;
				this.value = Item.sellPrice(0, 6, 0, 0);
				this.melee = true;
				this.channel = true;
				return;
			case 1260:
				this.useStyle = 5;
				this.useAnimation = 40;
				this.useTime = 40;
				this.width = 50;
				this.height = 18;
				this.shoot = 250;
				this.UseSound = new SoundStyle?(SoundID.Item67);
				this.damage = 45;
				this.knockBack = 2.5f;
				this.shootSpeed = 16f;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 20, 0, 0);
				this.rare = 8;
				this.magic = true;
				this.mana = 20;
				return;
			case 1261:
				this.shootSpeed = 2f;
				this.shoot = 246;
				this.damage = 17;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.StyngerBolt;
				this.knockBack = 1f;
				this.value = 75;
				this.rare = 5;
				this.ranged = true;
				return;
			case 1262:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 7;
				this.shootSpeed = 46f;
				this.knockBack = 5.2f;
				this.width = 20;
				this.height = 12;
				this.damage = 45;
				this.hammer = 90;
				this.UseSound = new SoundStyle?(SoundID.Item23);
				this.shoot = 252;
				this.rare = 7;
				this.value = 216000;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.melee = true;
				this.channel = true;
				this.tileBoost++;
				return;
			case 1263:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 235;
				this.width = 12;
				this.height = 12;
				this.value = Item.buyPrice(0, 2, 50, 0);
				this.mech = true;
				return;
			case 1264:
				this.mana = 11;
				this.damage = 60;
				this.useStyle = 1;
				this.shootSpeed = 9f;
				this.shoot = 253;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item20);
				this.useAnimation = 12;
				this.useTime = 12;
				this.rare = 5;
				this.noMelee = true;
				this.knockBack = 6.5f;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.magic = true;
				return;
			case 1265:
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 9;
				this.useTime = 9;
				this.width = 24;
				this.height = 22;
				this.shoot = 14;
				this.knockBack = 3.5f;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = new SoundStyle?(SoundID.Item11);
				this.damage = 30;
				this.shootSpeed = 13f;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 7, 0, 0);
				this.scale = 0.75f;
				this.rare = 7;
				this.ranged = true;
				return;
			case 1266:
				this.rare = 8;
				this.mana = 14;
				this.UseSound = new SoundStyle?(SoundID.Item20);
				this.noMelee = true;
				this.useStyle = 5;
				this.damage = 48;
				this.knockBack = 6f;
				this.useAnimation = 20;
				this.useTime = 20;
				this.width = 24;
				this.height = 28;
				this.shoot = 254;
				this.shootSpeed = 1.2f;
				this.magic = true;
				this.value = 500000;
				return;
			case 1267:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 88;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 0, 20);
				return;
			case 1268:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 89;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 0, 40);
				return;
			case 1269:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 90;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 0, 60);
				return;
			case 1270:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 91;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 0, 80);
				return;
			case 1271:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 92;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 1, 20);
				return;
			case 1272:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 93;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 1, 0);
				return;
			case 1273:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 25;
				this.width = 30;
				this.height = 10;
				this.noUseGraphic = true;
				this.shoot = 256;
				this.shootSpeed = 15f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 2;
				this.value = 45000;
				return;
			case 1274:
				this.width = 28;
				this.height = 20;
				this.headSlot = 93;
				this.rare = 1;
				this.vanity = true;
				return;
			case 1275:
				this.width = 28;
				this.height = 20;
				this.headSlot = 94;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 1, 0, 0);
				return;
			case 1276:
				this.width = 28;
				this.height = 20;
				this.headSlot = 95;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 1, 0, 0);
				return;
			case 1277:
				this.width = 28;
				this.height = 20;
				this.headSlot = 96;
				this.rare = 1;
				this.value = Item.buyPrice(0, 3, 0, 0);
				this.vanity = true;
				return;
			case 1278:
				this.width = 28;
				this.height = 20;
				this.headSlot = 97;
				this.rare = 1;
				this.value = Item.buyPrice(0, 3, 0, 0);
				this.vanity = true;
				return;
			case 1279:
				this.width = 28;
				this.height = 20;
				this.bodySlot = 57;
				this.rare = 1;
				this.value = Item.buyPrice(0, 3, 0, 0);
				this.vanity = true;
				return;
			case 1280:
				this.width = 28;
				this.height = 20;
				this.legSlot = 52;
				this.rare = 1;
				this.value = Item.buyPrice(0, 3, 0, 0);
				this.vanity = true;
				return;
			case 1281:
				this.width = 28;
				this.height = 20;
				this.headSlot = 98;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 75, 0);
				this.vanity = true;
				return;
			case 1282:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 58;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 1283:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 59;
				this.defense = 1;
				this.value = Item.sellPrice(0, 0, 50, 0) * 2;
				return;
			case 1284:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 60;
				this.defense = 1;
				this.value = Item.sellPrice(0, 0, 50, 0) * 3;
				this.rare = 1;
				return;
			case 1285:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 61;
				this.defense = 2;
				this.value = Item.sellPrice(0, 0, 50, 0) * 4;
				this.rare = 1;
				return;
			case 1286:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 62;
				this.defense = 2;
				this.value = Item.sellPrice(0, 0, 50, 0) * 5;
				this.rare = 1;
				return;
			case 1287:
				this.defense = 3;
				this.width = 18;
				this.height = 14;
				this.bodySlot = 63;
				this.value = Item.sellPrice(0, 0, 50, 0) * 6;
				this.rare = 2;
				return;
			case 1288:
				this.width = 28;
				this.height = 20;
				this.bodySlot = 64;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 25, 0, 0);
				return;
			case 1289:
				this.width = 28;
				this.height = 20;
				this.legSlot = 53;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 25, 0, 0);
				return;
			case 1290:
				this.width = 22;
				this.height = 22;
				this.accessory = true;
				this.rare = 1;
				this.value = this.shadowOrbPrice;
				this.neckSlot = 3;
				return;
			case 1291:
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 18;
				this.height = 18;
				this.useStyle = 4;
				this.useTime = 30;
				this.UseSound = new SoundStyle?(SoundID.Item4);
				this.useAnimation = 30;
				this.rare = 7;
				this.value = Item.sellPrice(0, 2, 0, 0);
				return;
			case 1292:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 237;
				this.width = 26;
				this.height = 20;
				this.value = 300;
				return;
			case 1293:
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 22;
				this.height = 10;
				this.value = Item.sellPrice(0, 1, 0, 0);
				return;
			case 1294:
				this.useStyle = 1;
				this.useAnimation = 16;
				this.useTime = 6;
				this.knockBack = 5.5f;
				this.useTurn = true;
				this.autoReuse = true;
				this.width = 20;
				this.height = 12;
				this.damage = 34;
				this.pick = 210;
				this.axe = 25;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 7;
				this.value = 216000;
				this.melee = true;
				this.scale = 1.15f;
				this.tileBoost++;
				return;
			case 1295:
				this.mana = 8;
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 10;
				this.useTime = 10;
				this.width = 24;
				this.height = 18;
				this.shoot = 260;
				this.UseSound = new SoundStyle?(SoundID.Item12);
				this.damage = 90;
				this.shootSpeed = 15f;
				this.noMelee = true;
				this.value = 350000;
				this.knockBack = 3f;
				this.rare = 7;
				this.magic = true;
				return;
			case 1296:
				this.mana = 18;
				this.damage = 125;
				this.useStyle = 5;
				this.crit = 20;
				this.shootSpeed = 12f;
				this.shoot = 261;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item69);
				this.useAnimation = (this.useTime = 24);
				this.rare = 7;
				this.noMelee = true;
				this.knockBack = 7.5f;
				this.value = Item.buyPrice(0, 35, 0, 0);
				this.magic = true;
				return;
			case 1297:
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 24;
				this.useTime = 24;
				this.knockBack = 12f;
				this.width = 30;
				this.height = 10;
				this.damage = 90;
				this.scale = 0.9f;
				this.shoot = 262;
				this.shootSpeed = 14f;
				this.UseSound = new SoundStyle?(SoundID.Item10);
				this.rare = 7;
				this.value = Item.buyPrice(0, 35, 0, 0);
				this.melee = true;
				this.noMelee = true;
				return;
			case 1298:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 21;
				this.placeStyle = 17;
				this.width = 26;
				this.height = 22;
				this.value = 500;
				return;
			case 1299:
				this.width = 14;
				this.height = 28;
				this.rare = 4;
				this.value = 150000;
				return;
			case 1300:
				this.width = 14;
				this.height = 28;
				this.rare = 4;
				this.value = 150000;
				this.accessory = true;
				return;
			case 1301:
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.value = 300000;
				this.rare = 7;
				return;
			case 1302:
				this.shootSpeed = 4f;
				this.shoot = 242;
				this.damage = 11;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Bullet;
				this.knockBack = 4f;
				this.value = 40;
				this.ranged = true;
				this.rare = 3;
				return;
			case 1303:
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.rare = 2;
				this.neckSlot = 1;
				return;
			case 1304:
				this.useStyle = 1;
				this.useTurn = false;
				this.useAnimation = 22;
				this.useTime = 22;
				this.width = 24;
				this.height = 28;
				this.damage = 15;
				this.knockBack = 5.5f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.scale = 1f;
				this.value = 2000;
				this.melee = true;
				return;
			case 1305:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 23;
				this.knockBack = 7.25f;
				this.useTime = 7;
				this.width = 24;
				this.height = 28;
				this.damage = 72;
				this.axe = 35;
				this.hammer = 100;
				this.tileBoost = 1;
				this.scale = 1.15f;
				this.rare = 8;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.melee = true;
				return;
			case 1306:
				this.useStyle = 1;
				this.useAnimation = 25;
				this.useTime = 25;
				this.knockBack = 5.5f;
				this.width = 24;
				this.height = 28;
				this.damage = 50;
				this.scale = 1.15f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 5;
				this.shoot = 263;
				this.shootSpeed = 12f;
				this.value = 250000;
				this.melee = true;
				return;
			case 1307:
				this.accessory = true;
				this.width = 14;
				this.height = 26;
				this.value = 1000;
				this.rare = 1;
				return;
			case 1308:
				this.mana = 22;
				this.UseSound = new SoundStyle?(SoundID.Item43);
				this.useStyle = 5;
				this.damage = 43;
				this.useAnimation = 36;
				this.useTime = 36;
				this.width = 40;
				this.height = 40;
				this.shoot = 265;
				this.shootSpeed = 13.5f;
				this.knockBack = 5.6f;
				this.magic = true;
				this.autoReuse = true;
				this.rare = 6;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 4, 0, 0);
				return;
			case 1309:
				this.mana = 10;
				this.damage = 8;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 266;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item44);
				this.useAnimation = 28;
				this.useTime = 28;
				this.rare = 4;
				this.noMelee = true;
				this.knockBack = 2f;
				this.buffType = 64;
				this.value = 100000;
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			case 1310:
				this.shoot = 267;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.ammo = AmmoID.Dart;
				this.damage = 10;
				this.knockBack = 2f;
				this.shootSpeed = 2f;
				this.ranged = true;
				this.rare = 2;
				this.consumable = true;
				return;
			case 1311:
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 268;
				this.width = 16;
				this.height = 30;
				this.UseSound = new SoundStyle?(SoundID.Item2);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 6;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 3, 0, 0);
				this.buffType = 65;
				return;
			case 1312:
				this.damage = 0;
				this.useStyle = 1;
				this.shoot = 269;
				this.width = 16;
				this.height = 30;
				this.UseSound = new SoundStyle?(SoundID.Item2);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 6;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 2, 50, 0);
				this.buffType = 66;
				return;
			case 1313:
				this.autoReuse = true;
				this.rare = 2;
				this.mana = 18;
				this.UseSound = new SoundStyle?(SoundID.Item8);
				this.noMelee = true;
				this.useStyle = 5;
				this.damage = 29;
				this.useAnimation = 26;
				this.useTime = 26;
				this.width = 24;
				this.height = 28;
				this.shoot = 837;
				this.scale = 0.9f;
				this.shootSpeed = 3.5f;
				this.knockBack = 3.5f;
				this.magic = true;
				this.value = Item.sellPrice(0, 1, 50, 0);
				return;
			case 1314:
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 28;
				this.useTime = 28;
				this.knockBack = 6.5f;
				this.width = 30;
				this.height = 10;
				this.damage = 40;
				this.scale = 0.9f;
				this.shoot = 271;
				this.shootSpeed = 15f;
				this.UseSound = new SoundStyle?(SoundID.Item174);
				this.rare = 4;
				this.value = Item.sellPrice(0, 3, 50, 0);
				this.melee = true;
				this.noMelee = true;
				if (this.Variant == ItemVariants.WeakerVariant)
				{
					this.rare = 4;
					this.value = Item.sellPrice(0, 3, 50, 0);
					this.damage = 18;
					this.useAnimation = 25;
					this.useTime = 25;
					this.knockBack = 5f;
					this.autoReuse = false;
				}
				return;
			case 1315:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 1316:
				this.width = 18;
				this.height = 18;
				this.defense = 21;
				this.headSlot = 99;
				this.rare = 8;
				this.value = 300000;
				return;
			case 1317:
				this.width = 18;
				this.height = 18;
				this.defense = 27;
				this.bodySlot = 65;
				this.rare = 8;
				this.value = 240000;
				return;
			case 1318:
				this.width = 18;
				this.height = 18;
				this.defense = 17;
				this.legSlot = 54;
				this.rare = 8;
				this.value = 180000;
				return;
			case 1319:
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 19;
				this.useTime = 19;
				this.width = 44;
				this.height = 14;
				this.shoot = 166;
				this.useAmmo = AmmoID.Bullet;
				this.UseSound = new SoundStyle?(SoundID.Item11);
				this.damage = 10;
				this.shootSpeed = 11f;
				this.noMelee = true;
				this.value = 100000;
				this.knockBack = 1f;
				this.rare = 1;
				this.ranged = true;
				this.useAmmo = AmmoID.Snowball;
				this.shoot = 166;
				if (this.Variant == ItemVariants.StrongerVariant)
				{
					this.value = Item.sellPrice(0, 5, 0, 0);
					this.rare = 5;
					this.damage = 22;
					this.useAnimation = 6;
					this.useTime = 6;
				}
				return;
			case 1320:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 19;
				this.useTime = 11;
				this.autoReuse = true;
				this.width = 24;
				this.height = 28;
				this.damage = 8;
				this.pick = 55;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.knockBack = 3f;
				this.rare = 1;
				this.value = Item.buyPrice(0, 1, 50, 0);
				this.scale = 1f;
				this.melee = true;
				return;
			case 1321:
				this.width = 24;
				this.height = 28;
				this.accessory = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.rare = 4;
				this.backSlot = 7;
				return;
			case 1322:
				this.width = 24;
				this.height = 28;
				this.accessory = true;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.rare = 3;
				return;
			case 1323:
				this.width = 24;
				this.height = 28;
				this.accessory = true;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.rare = 3;
				this.faceSlot = 6;
				return;
			case 1324:
				this.autoReuse = true;
				this.noMelee = true;
				this.useStyle = 1;
				this.shootSpeed = 16f;
				this.shoot = 272;
				this.damage = 45;
				this.knockBack = 6.5f;
				this.width = 14;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 11;
				this.useTime = 11;
				this.noUseGraphic = true;
				this.rare = 5;
				this.value = Item.sellPrice(0, 12, 0, 0);
				this.melee = true;
				return;
			case 1325:
				this.autoReuse = false;
				this.useStyle = 5;
				this.useAnimation = 20;
				this.useTime = 20;
				this.knockBack = 3.5f;
				this.width = 30;
				this.height = 10;
				this.damage = 12;
				this.shoot = 273;
				this.shootSpeed = 12f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 25, 0);
				this.melee = true;
				this.noMelee = true;
				this.noUseGraphic = true;
				if (this.Variant == ItemVariants.StrongerVariant)
				{
					this.rare = 4;
					this.value = Item.sellPrice(0, 3, 50, 0);
					this.damage = 60;
					this.useAnimation = 15;
					this.useTime = 15;
					this.autoReuse = true;
				}
				return;
			case 1326:
				this.autoReuse = false;
				this.useStyle = 1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.width = 20;
				this.height = 20;
				this.UseSound = new SoundStyle?(SoundID.Item8);
				this.rare = 7;
				this.value = Item.sellPrice(0, 10, 0, 0);
				return;
			case 1327:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useAnimation = 25;
				this.useTime = 25;
				this.knockBack = 5f;
				this.width = 24;
				this.height = 28;
				this.damage = 57;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item71);
				this.rare = 6;
				this.shoot = 274;
				this.shootSpeed = 9f;
				this.value = this.eclipsePrice;
				this.melee = true;
				return;
			case 1328:
				this.width = 14;
				this.height = 18;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 7;
				this.value = 5000;
				return;
			case 1329:
				this.width = 14;
				this.height = 18;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 1;
				this.value = 750;
				this.MakeUsableWithChlorophyteExtractinator();
				return;
			case 1330:
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = 12;
				return;
			case 1331:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 1;
				return;
			case 1332:
				this.width = 12;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.value = 4500;
				this.rare = 3;
				return;
			case 1333:
				this.flame = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.holdStyle = 1;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 4;
				this.placeStyle = 11;
				this.width = 10;
				this.height = 12;
				this.value = 160;
				this.rare = 1;
				return;
			case 1334:
				this.shootSpeed = 4.25f;
				this.shoot = 278;
				this.damage = 16;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 3f;
				this.value = 40;
				this.ranged = true;
				this.rare = 3;
				return;
			case 1335:
				this.shootSpeed = 5.25f;
				this.shoot = 279;
				this.damage = 13;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Bullet;
				this.knockBack = 4f;
				this.value = 30;
				this.ranged = true;
				this.rare = 3;
				return;
			case 1336:
				this.mana = 7;
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 18;
				this.useTime = 6;
				this.knockBack = 4f;
				this.width = 38;
				this.height = 10;
				this.damage = 30;
				this.shoot = 280;
				this.shootSpeed = 10f;
				this.UseSound = new SoundStyle?(SoundID.Item13);
				this.rare = 4;
				this.value = Item.sellPrice(0, 4, 0, 0);
				this.magic = true;
				this.noMelee = true;
				return;
			case 1337:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 209;
				this.placeStyle = 1;
				this.width = 12;
				this.height = 12;
				this.value = Item.buyPrice(0, 50, 0, 0);
				return;
			case 1338:
				this.noUseGraphic = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 20;
				this.useTime = 20;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.damage = 350;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 0, 35, 0);
				this.makeNPC = 614;
				return;
			case 1339:
				this.width = 12;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.buyPrice(0, 0, 15, 0);
				return;
			case 1340:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 71;
				this.buffTime = 72000;
				this.value = Item.sellPrice(0, 0, 5, 0);
				this.rare = 4;
				return;
			case 1341:
				this.shootSpeed = 4.3f;
				this.shoot = 282;
				this.damage = 19;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 4.2f;
				this.value = 90;
				this.ranged = true;
				this.rare = 3;
				return;
			case 1342:
				this.shootSpeed = 5.3f;
				this.shoot = 283;
				this.damage = 15;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Bullet;
				this.knockBack = 4.1f;
				this.value = 40;
				this.ranged = true;
				this.rare = 3;
				return;
			case 1343:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 7;
				this.value = 300000;
				this.handOffSlot = 1;
				this.handOnSlot = 6;
				return;
			case 1344:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 272;
				this.width = 12;
				this.height = 12;
				this.value = Item.buyPrice(0, 0, 7, 0);
				return;
			case 1345:
				this.width = 12;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.buyPrice(0, 0, 2, 0);
				this.noMelee = true;
				this.useStyle = 1;
				this.useAnimation = (this.useTime = 20);
				this.autoReuse = true;
				this.consumable = true;
				return;
			case 1346:
				this.width = 12;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.buyPrice(0, 0, 15, 0);
				return;
			case 1347:
				this.width = 12;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.buyPrice(0, 0, 12, 0);
				return;
			case 1348:
				this.width = 12;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.buyPrice(0, 0, 17, 0);
				return;
			case 1349:
				this.shootSpeed = 5.1f;
				this.shoot = 284;
				this.damage = 10;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Bullet;
				this.knockBack = 5f;
				this.value = 10;
				this.ranged = true;
				this.rare = 3;
				return;
			case 1350:
				this.shootSpeed = 4.6f;
				this.shoot = 285;
				this.damage = 15;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Bullet;
				this.knockBack = 3.6f;
				this.value = 40;
				this.ranged = true;
				this.rare = 3;
				return;
			case 1351:
				this.shootSpeed = 4.7f;
				this.shoot = 286;
				this.damage = 10;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Bullet;
				this.knockBack = 6.6f;
				this.value = 40;
				this.ranged = true;
				this.rare = 3;
				return;
			case 1352:
				this.shootSpeed = 4.6f;
				this.shoot = 287;
				this.damage = 10;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Bullet;
				this.knockBack = 3.6f;
				this.value = 40;
				this.ranged = true;
				this.rare = 3;
				return;
			case 1353:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 73;
				this.buffTime = 72000;
				this.value = Item.sellPrice(0, 0, 5, 0);
				this.rare = 4;
				return;
			case 1354:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 74;
				this.buffTime = 72000;
				this.value = Item.sellPrice(0, 0, 5, 0);
				this.rare = 4;
				return;
			case 1355:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 75;
				this.buffTime = 72000;
				this.value = Item.sellPrice(0, 0, 5, 0);
				this.rare = 4;
				return;
			case 1356:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 76;
				this.buffTime = 72000;
				this.value = Item.sellPrice(0, 0, 5, 0);
				this.rare = 4;
				return;
			case 1357:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 77;
				this.buffTime = 72000;
				this.value = Item.sellPrice(0, 0, 5, 0);
				this.rare = 4;
				return;
			case 1358:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 78;
				this.buffTime = 72000;
				this.value = Item.sellPrice(0, 0, 3, 0);
				this.rare = 4;
				return;
			case 1359:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 79;
				this.buffTime = 72000;
				this.value = Item.sellPrice(0, 0, 5, 0);
				this.rare = 4;
				return;
			case 1360:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.placeStyle = 0;
				this.rare = 1;
				return;
			case 1361:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.placeStyle = 1;
				this.rare = 1;
				return;
			case 1362:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.placeStyle = 2;
				this.rare = 1;
				return;
			case 1363:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.placeStyle = 3;
				this.rare = 1;
				return;
			case 1364:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.placeStyle = 4;
				this.rare = 1;
				return;
			case 1365:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.placeStyle = 5;
				this.rare = 1;
				return;
			case 1366:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.placeStyle = 6;
				this.rare = 1;
				return;
			case 1367:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.placeStyle = 7;
				this.rare = 1;
				return;
			case 1368:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.placeStyle = 8;
				this.rare = 1;
				return;
			case 1369:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.placeStyle = 9;
				this.rare = 1;
				return;
			case 1370:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.placeStyle = 10;
				this.rare = 1;
				return;
			case 1371:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.placeStyle = 11;
				this.rare = 1;
				return;
			case 1372:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 12;
				return;
			case 1373:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 13;
				return;
			case 1374:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 14;
				return;
			case 1375:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 15;
				return;
			case 1376:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.placeStyle = 16;
				return;
			case 1377:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.placeStyle = 17;
				return;
			case 1378:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 100;
				this.width = 12;
				this.height = 12;
				return;
			case 1379:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 101;
				this.width = 12;
				this.height = 12;
				return;
			case 1380:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 102;
				this.width = 12;
				this.height = 12;
				return;
			case 1381:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 103;
				this.width = 12;
				this.height = 12;
				return;
			case 1382:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 104;
				this.width = 12;
				this.height = 12;
				return;
			case 1383:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 105;
				this.width = 12;
				this.height = 12;
				return;
			case 1384:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 19;
				this.placeStyle = 6;
				this.width = 8;
				this.height = 10;
				return;
			case 1385:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 19;
				this.placeStyle = 7;
				this.width = 8;
				this.height = 10;
				return;
			case 1386:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 19;
				this.placeStyle = 8;
				this.width = 8;
				this.height = 10;
				return;
			case 1387:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 19;
				this.placeStyle = 9;
				this.width = 8;
				this.height = 10;
				return;
			case 1388:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 19;
				this.placeStyle = 10;
				this.width = 8;
				this.height = 10;
				return;
			case 1389:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 19;
				this.placeStyle = 11;
				this.width = 8;
				this.height = 10;
				return;
			case 1390:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 42;
				this.width = 12;
				this.height = 28;
				this.value = Item.sellPrice(0, 0, 0, 30);
				this.placeStyle = 1;
				return;
			case 1391:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 42;
				this.width = 12;
				this.height = 28;
				this.value = Item.sellPrice(0, 0, 0, 30);
				this.placeStyle = 2;
				return;
			case 1392:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 42;
				this.width = 12;
				this.height = 28;
				this.value = Item.sellPrice(0, 0, 0, 30);
				this.placeStyle = 3;
				return;
			case 1393:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 42;
				this.width = 12;
				this.height = 28;
				this.value = Item.sellPrice(0, 0, 0, 30);
				this.placeStyle = 4;
				return;
			case 1394:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 42;
				this.width = 12;
				this.height = 28;
				this.value = Item.sellPrice(0, 0, 0, 30);
				this.placeStyle = 5;
				return;
			case 1395:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 42;
				this.width = 12;
				this.height = 28;
				this.value = Item.sellPrice(0, 0, 0, 30);
				this.placeStyle = 6;
				return;
			case 1396:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 15;
				this.placeStyle = 13;
				this.width = 12;
				this.height = 30;
				this.value = 150;
				return;
			case 1397:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 14;
				this.placeStyle = 10;
				this.width = 26;
				this.height = 20;
				this.value = 300;
				return;
			case 1398:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 18;
				this.placeStyle = 11;
				this.width = 28;
				this.height = 14;
				this.value = 150;
				return;
			case 1399:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 15;
				this.placeStyle = 14;
				this.width = 12;
				this.height = 30;
				this.value = 150;
				return;
			case 1400:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 14;
				this.placeStyle = 11;
				this.width = 26;
				this.height = 20;
				this.value = 300;
				return;
			case 1401:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 18;
				this.placeStyle = 12;
				this.width = 28;
				this.height = 14;
				this.value = 150;
				return;
			case 1402:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 15;
				this.placeStyle = 15;
				this.width = 12;
				this.height = 30;
				this.value = 150;
				return;
			case 1403:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 14;
				this.placeStyle = 12;
				this.width = 26;
				this.height = 20;
				this.value = 300;
				return;
			case 1404:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 18;
				this.placeStyle = 13;
				this.width = 28;
				this.height = 14;
				this.value = 150;
				return;
			case 1405:
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 33;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.placeStyle = 1;
				return;
			case 1406:
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 33;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.placeStyle = 2;
				return;
			case 1407:
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 33;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.placeStyle = 3;
				return;
			case 1408:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 46;
				return;
			case 1409:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 47;
				return;
			case 1410:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 48;
				return;
			case 1411:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 16;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			case 1412:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 17;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			case 1413:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 18;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			case 1414:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 101;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 1;
				return;
			case 1415:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 101;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 2;
				return;
			case 1416:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 101;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 3;
				return;
			case 1417:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 241;
				this.placeStyle = 0;
				this.width = 30;
				this.height = 30;
				return;
			case 1418:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 19;
				this.placeStyle = 12;
				this.width = 8;
				this.height = 10;
				return;
			case 1419:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 18;
				return;
			case 1420:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 19;
				return;
			case 1421:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 0;
				return;
			case 1422:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 1;
				return;
			case 1423:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 2;
				return;
			case 1424:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 3;
				return;
			case 1425:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 4;
				return;
			case 1426:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 5;
				return;
			case 1427:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 20;
				return;
			case 1428:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 21;
				return;
			case 1429:
				this.width = 18;
				this.height = 18;
				this.headSlot = 100;
				this.vanity = true;
				this.value = Item.buyPrice(0, 1, 0, 0);
				return;
			case 1430:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 243;
				this.width = 26;
				this.height = 20;
				this.value = Item.buyPrice(0, 7, 0, 0);
				this.rare = 2;
				return;
			case 1431:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 42;
				this.width = 12;
				this.height = 28;
				this.value = Item.sellPrice(0, 0, 5, 0);
				this.placeStyle = 7;
				return;
			case 1432:
				this.width = 12;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.buyPrice(0, 0, 0, 5);
				return;
			case 1433:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 6;
				return;
			case 1434:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 7;
				return;
			case 1435:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 8;
				return;
			case 1436:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 9;
				return;
			case 1437:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 10;
				return;
			case 1438:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 11;
				return;
			case 1439:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 12;
				return;
			case 1440:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 22;
				return;
			case 1441:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 23;
				return;
			case 1442:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 24;
				return;
			case 1443:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 25;
				return;
			case 1444:
				this.mana = 7;
				this.UseSound = new SoundStyle?(SoundID.Item72);
				this.useStyle = 5;
				this.damage = 80;
				this.useAnimation = 15;
				this.useTime = 15;
				this.autoReuse = true;
				this.width = 40;
				this.height = 40;
				this.shoot = 294;
				this.shootSpeed = 6f;
				this.knockBack = 3.25f;
				this.value = Item.sellPrice(0, 6, 0, 0);
				this.magic = true;
				this.rare = 8;
				this.noMelee = true;
				return;
			case 1445:
				this.mana = 18;
				this.UseSound = new SoundStyle?(SoundID.Item73);
				this.useStyle = 5;
				this.damage = 70;
				this.useAnimation = 30;
				this.useTime = 30;
				this.width = 40;
				this.height = 40;
				this.shoot = 295;
				this.shootSpeed = 8f;
				this.knockBack = 5f;
				this.value = Item.sellPrice(0, 6, 0, 0);
				this.magic = true;
				this.noMelee = true;
				this.rare = 8;
				return;
			case 1446:
				this.mana = 15;
				this.UseSound = new SoundStyle?(SoundID.Item43);
				this.useStyle = 5;
				this.damage = 65;
				this.autoReuse = true;
				this.useAnimation = 24;
				this.useTime = 24;
				this.width = 40;
				this.height = 40;
				this.shoot = 297;
				this.shootSpeed = 6f;
				this.knockBack = 6f;
				this.value = Item.sellPrice(0, 6, 0, 0);
				this.magic = true;
				this.noMelee = true;
				this.rare = 8;
				return;
			case 1447:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 106;
				this.width = 12;
				this.height = 12;
				return;
			case 1448:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 107;
				this.width = 12;
				this.height = 12;
				return;
			case 1449:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 244;
				this.width = 26;
				this.height = 20;
				this.value = Item.buyPrice(0, 4, 0, 0);
				this.rare = 1;
				return;
			case 1450:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = false;
				this.useAnimation = 25;
				this.useTime = 25;
				this.width = 24;
				this.height = 28;
				this.scale = 1f;
				this.value = Item.buyPrice(0, 5, 0, 0);
				this.noMelee = true;
				this.rare = 1;
				return;
			case 1451:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 10;
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				return;
			case 1452:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 11;
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				return;
			case 1453:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 12;
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				return;
			case 1454:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 13;
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				return;
			case 1455:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 14;
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				return;
			case 1456:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 15;
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				return;
			case 1457:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 19;
				this.placeStyle = 13;
				this.width = 8;
				this.height = 10;
				return;
			case 1458:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 10;
				this.placeStyle = 19;
				this.width = 14;
				this.height = 28;
				this.value = 200;
				return;
			case 1459:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 15;
				this.placeStyle = 16;
				this.width = 12;
				this.height = 30;
				this.value = 150;
				return;
			case 1460:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 14;
				this.placeStyle = 13;
				this.width = 26;
				this.height = 20;
				this.value = 300;
				return;
			case 1461:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 18;
				this.placeStyle = 14;
				this.width = 28;
				this.height = 14;
				this.value = 150;
				return;
			case 1462:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 105;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 49;
				return;
			case 1463:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 101;
				this.width = 20;
				this.height = 20;
				this.value = 300;
				this.placeStyle = 4;
				return;
			case 1464:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 16;
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				return;
			case 1465:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 17;
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				return;
			case 1466:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 18;
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				return;
			case 1467:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 19;
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				return;
			case 1468:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 20;
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				return;
			case 1469:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 21;
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				return;
			case 1470:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 79;
				this.placeStyle = 5;
				this.width = 28;
				this.height = 20;
				this.value = 2000;
				return;
			case 1471:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 79;
				this.placeStyle = 6;
				this.width = 28;
				this.height = 20;
				this.value = 2000;
				return;
			case 1472:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 79;
				this.placeStyle = 7;
				this.width = 28;
				this.height = 20;
				this.value = 2000;
				return;
			case 1473:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 79;
				this.placeStyle = 8;
				this.width = 28;
				this.height = 20;
				this.value = 2000;
				return;
			case 1474:
			case 1475:
			case 1476:
			case 1477:
			case 1478:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 245;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = type - 1474;
				return;
			default:
				if (type >= 1479 && type <= 1494)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 246;
					this.width = 30;
					this.height = 30;
					if (type >= 1481 && type <= 1494)
					{
						this.value = Item.buyPrice(0, 1, 0, 0);
					}
					else
					{
						this.value = Item.sellPrice(0, 0, 10, 0);
					}
					this.placeStyle = type - 1479;
					return;
				}
				if (type == 1495)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 245;
					this.width = 30;
					this.height = 30;
					this.value = Item.sellPrice(0, 0, 10, 0);
					this.placeStyle = 5;
					return;
				}
				if (type - 1496 <= 3)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 240;
					this.width = 30;
					this.height = 30;
					this.value = Item.sellPrice(0, 0, 10, 0);
					this.placeStyle = 26 + type - 1496;
					return;
				}
				if (type >= 1500 && type <= 1502)
				{
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 242;
					this.width = 30;
					this.height = 30;
					this.value = Item.sellPrice(0, 0, 10, 0);
					this.placeStyle = 13 + type - 1500;
					return;
				}
				switch (type)
				{
				case 1503:
					this.width = 18;
					this.height = 18;
					this.defense = 6;
					this.headSlot = 101;
					this.rare = 8;
					this.value = 375000;
					return;
				case 1504:
					this.width = 18;
					this.height = 18;
					this.defense = 14;
					this.bodySlot = 66;
					this.rare = 8;
					this.value = 300000;
					return;
				case 1505:
					this.width = 18;
					this.height = 18;
					this.defense = 10;
					this.legSlot = 55;
					this.rare = 8;
					this.value = 225000;
					return;
				case 1506:
					this.useStyle = 1;
					this.useAnimation = 24;
					this.useTime = 8;
					this.knockBack = 5.25f;
					this.useTurn = true;
					this.autoReuse = true;
					this.width = 20;
					this.height = 12;
					this.damage = 32;
					this.pick = 200;
					this.UseSound = new SoundStyle?(SoundID.Item1);
					this.rare = 8;
					this.value = 216000;
					this.melee = true;
					this.scale = 1f;
					this.tileBoost += 3;
					return;
				case 1507:
					this.useTurn = true;
					this.autoReuse = true;
					this.useStyle = 1;
					this.useAnimation = 28;
					this.useTime = 8;
					this.knockBack = 7f;
					this.width = 20;
					this.height = 12;
					this.damage = 60;
					this.axe = 30;
					this.hammer = 90;
					this.UseSound = new SoundStyle?(SoundID.Item1);
					this.rare = 8;
					this.value = 216000;
					this.melee = true;
					this.scale = 1.05f;
					this.tileBoost += 3;
					return;
				case 1508:
					this.maxStack = Item.CommonMaxStack;
					this.width = 16;
					this.height = 14;
					this.value = Item.sellPrice(0, 0, 50, 0);
					this.rare = 8;
					return;
				case 1509:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 15;
					this.placeStyle = 17;
					this.width = 12;
					this.height = 30;
					this.value = 150;
					return;
				case 1510:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 14;
					this.placeStyle = 14;
					this.width = 26;
					this.height = 20;
					this.value = 300;
					return;
				case 1511:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 18;
					this.placeStyle = 15;
					this.width = 28;
					this.height = 14;
					this.value = 150;
					return;
				case 1512:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 5;
					return;
				case 1513:
					this.noMelee = true;
					this.useStyle = 1;
					this.shootSpeed = 14f;
					this.shoot = 301;
					this.damage = 90;
					this.knockBack = 9f;
					this.width = 14;
					this.height = 28;
					this.UseSound = new SoundStyle?(SoundID.Item1);
					this.useAnimation = 15;
					this.useTime = 15;
					this.noUseGraphic = true;
					this.rare = 8;
					this.value = Item.sellPrice(0, 10, 0, 0);
					this.melee = true;
					this.autoReuse = true;
					return;
				case 1514:
					this.width = 18;
					this.height = 18;
					this.headSlot = 102;
					this.rare = 1;
					this.value = Item.sellPrice(0, 1, 0, 0);
					this.vanity = true;
					return;
				case 1515:
					this.width = 24;
					this.height = 8;
					this.accessory = true;
					this.value = 400000;
					this.rare = 5;
					this.wingSlot = 15;
					return;
				case 1516:
				case 1517:
				case 1518:
				case 1519:
				case 1520:
				case 1521:
					this.maxStack = Item.CommonMaxStack;
					this.width = 16;
					this.height = 14;
					this.value = Item.sellPrice(0, 2, 50, 0);
					this.rare = 5;
					return;
				default:
					if (type >= 1522 && type <= 1527)
					{
						this.width = 20;
						this.height = 20;
						this.rare = 1;
						return;
					}
					if (type >= 1528 && type <= 1532)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 21;
						this.placeStyle = 18 + type - 1528;
						this.width = 26;
						this.height = 22;
						this.value = 2500;
						return;
					}
					if (type >= 1533 && type <= 1537)
					{
						this.width = 14;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.rare = 8;
						return;
					}
					if (type >= 1538 && type <= 1540)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 240;
						this.width = 30;
						this.height = 30;
						this.value = Item.sellPrice(0, 0, 10, 0);
						this.placeStyle = 30 + type - 1538;
						return;
					}
					if (type >= 1541 && type <= 1542)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 246;
						this.width = 30;
						this.height = 30;
						this.value = Item.sellPrice(0, 0, 10, 0);
						this.placeStyle = 16 + type - 1541;
						return;
					}
					if (type >= 1543 && type <= 1545)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.width = 24;
						this.height = 24;
						this.value = Item.sellPrice(0, 6, 0, 0);
						this.tileBoost += 3;
						return;
					}
					switch (type)
					{
					case 1546:
						this.width = 18;
						this.height = 18;
						this.defense = 11;
						this.headSlot = 103;
						this.rare = 8;
						this.value = 375000;
						return;
					case 1547:
						this.width = 18;
						this.height = 18;
						this.defense = 11;
						this.headSlot = 104;
						this.rare = 8;
						this.value = 375000;
						return;
					case 1548:
						this.width = 18;
						this.height = 18;
						this.defense = 11;
						this.headSlot = 105;
						this.rare = 8;
						this.value = 375000;
						return;
					case 1549:
						this.width = 18;
						this.height = 18;
						this.defense = 24;
						this.bodySlot = 67;
						this.rare = 8;
						this.value = 300000;
						return;
					case 1550:
						this.width = 18;
						this.height = 18;
						this.defense = 16;
						this.legSlot = 56;
						this.rare = 8;
						this.value = 225000;
						return;
					case 1551:
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 247;
						this.width = 26;
						this.height = 24;
						this.value = Item.buyPrice(1, 0, 0, 0);
						return;
					case 1552:
						this.width = 20;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.rare = 7;
						this.value = Item.sellPrice(0, 1, 0, 0);
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.consumable = true;
						this.createTile = 239;
						this.placeStyle = 20;
						return;
					case 1553:
						this.useStyle = 5;
						this.autoReuse = true;
						this.useAnimation = 5;
						this.useTime = 5;
						this.crit += 10;
						this.width = 60;
						this.height = 26;
						this.shoot = 10;
						this.useAmmo = AmmoID.Bullet;
						this.UseSound = new SoundStyle?(SoundID.Item40);
						this.damage = 85;
						this.shootSpeed = 12f;
						this.noMelee = true;
						this.value = 750000;
						this.rare = 10;
						this.knockBack = 2.5f;
						this.ranged = true;
						return;
					case 1554:
						this.width = 18;
						this.height = 18;
						this.rare = 9;
						this.vanity = true;
						this.headSlot = 106;
						this.value = Item.sellPrice(0, 5, 0, 0);
						return;
					case 1555:
						this.width = 18;
						this.height = 18;
						this.rare = 9;
						this.vanity = true;
						this.bodySlot = 68;
						this.value = Item.sellPrice(0, 5, 0, 0);
						return;
					case 1556:
						this.width = 18;
						this.height = 18;
						this.rare = 9;
						this.vanity = true;
						this.legSlot = 57;
						this.value = Item.sellPrice(0, 5, 0, 0);
						return;
					case 1557:
						this.width = 18;
						this.height = 18;
						this.rare = 9;
						this.vanity = true;
						this.headSlot = 107;
						this.value = Item.sellPrice(0, 5, 0, 0);
						return;
					case 1558:
						this.width = 18;
						this.height = 18;
						this.rare = 9;
						this.vanity = true;
						this.bodySlot = 69;
						this.value = Item.sellPrice(0, 5, 0, 0);
						return;
					case 1559:
						this.width = 18;
						this.height = 18;
						this.rare = 9;
						this.vanity = true;
						this.legSlot = 58;
						this.value = Item.sellPrice(0, 5, 0, 0);
						return;
					case 1560:
						this.width = 18;
						this.height = 18;
						this.rare = 9;
						this.vanity = true;
						this.headSlot = 108;
						this.value = Item.sellPrice(0, 5, 0, 0);
						return;
					case 1561:
						this.width = 18;
						this.height = 18;
						this.rare = 9;
						this.vanity = true;
						this.bodySlot = 70;
						this.value = Item.sellPrice(0, 5, 0, 0);
						return;
					case 1562:
						this.width = 18;
						this.height = 18;
						this.rare = 9;
						this.vanity = true;
						this.legSlot = 59;
						this.value = Item.sellPrice(0, 5, 0, 0);
						return;
					case 1563:
						this.width = 18;
						this.height = 18;
						this.rare = 9;
						this.vanity = true;
						this.headSlot = 109;
						this.value = Item.sellPrice(0, 5, 0, 0);
						return;
					case 1564:
						this.width = 18;
						this.height = 18;
						this.rare = 9;
						this.vanity = true;
						this.bodySlot = 71;
						this.value = Item.sellPrice(0, 5, 0, 0);
						return;
					case 1565:
						this.width = 18;
						this.height = 18;
						this.rare = 9;
						this.vanity = true;
						this.legSlot = 60;
						this.value = Item.sellPrice(0, 5, 0, 0);
						return;
					case 1566:
						this.width = 18;
						this.height = 18;
						this.rare = 9;
						this.vanity = true;
						this.headSlot = 110;
						this.value = Item.sellPrice(0, 5, 0, 0);
						return;
					case 1567:
						this.width = 18;
						this.height = 18;
						this.rare = 9;
						this.vanity = true;
						this.bodySlot = 72;
						this.value = Item.sellPrice(0, 5, 0, 0);
						return;
					case 1568:
						this.width = 18;
						this.height = 18;
						this.rare = 9;
						this.vanity = true;
						this.legSlot = 61;
						this.value = Item.sellPrice(0, 5, 0, 0);
						return;
					case 1569:
						this.autoReuse = true;
						this.useStyle = 1;
						this.shootSpeed = 15f;
						this.shoot = 304;
						this.damage = 29;
						this.width = 18;
						this.height = 20;
						this.UseSound = new SoundStyle?(SoundID.Item39);
						this.useAnimation = 16;
						this.useTime = 16;
						this.noUseGraphic = true;
						this.noMelee = true;
						this.value = Item.sellPrice(0, 20, 0, 0);
						this.knockBack = 2.75f;
						this.melee = true;
						this.rare = 8;
						return;
					case 1570:
						this.width = 14;
						this.height = 18;
						this.maxStack = Item.CommonMaxStack;
						this.rare = 8;
						this.value = this.eclipsePrice;
						return;
					case 1571:
						this.autoReuse = true;
						this.useStyle = 5;
						this.shootSpeed = 14f;
						this.shoot = 306;
						this.damage = 70;
						this.width = 18;
						this.height = 20;
						this.UseSound = new SoundStyle?(SoundID.Item39);
						this.useAnimation = 20;
						this.useTime = 20;
						this.noUseGraphic = true;
						this.noMelee = true;
						this.value = Item.sellPrice(0, 20, 0, 0);
						this.knockBack = 5f;
						this.melee = true;
						this.rare = 8;
						return;
					case 1572:
						this.useStyle = 1;
						this.shootSpeed = 14f;
						this.shoot = 308;
						this.damage = 100;
						this.width = 18;
						this.height = 20;
						this.UseSound = new SoundStyle?(SoundID.Item1);
						this.useAnimation = 30;
						this.useTime = 30;
						this.noMelee = true;
						this.value = Item.sellPrice(0, 20, 0, 0);
						this.knockBack = 7.5f;
						this.rare = 8;
						this.summon = true;
						this.mana = 20;
						this.sentry = true;
						return;
					case 1573:
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 242;
						this.width = 30;
						this.height = 30;
						this.value = Item.sellPrice(0, 0, 10, 0);
						this.placeStyle = 16;
						return;
					case 1574:
					case 1575:
					case 1576:
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 240;
						this.width = 30;
						this.height = 30;
						this.value = Item.sellPrice(0, 0, 10, 0);
						this.placeStyle = 33 + type - 1574;
						return;
					default:
						switch (type)
						{
						case 1577:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 245;
							this.width = 30;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 10, 0);
							this.placeStyle = 6;
							return;
						case 1578:
							this.width = 22;
							this.height = 22;
							this.accessory = true;
							this.rare = 3;
							this.value = 100000;
							this.neckSlot = 6;
							return;
						case 1579:
							this.width = 28;
							this.height = 24;
							this.accessory = true;
							this.rare = 1;
							this.value = 50000;
							this.shoeSlot = 5;
							return;
						case 1580:
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.headSlot = 111;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						case 1581:
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.bodySlot = 73;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						case 1582:
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.legSlot = 62;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						case 1583:
							this.width = 24;
							this.height = 8;
							this.accessory = true;
							this.rare = 9;
							this.wingSlot = 16;
							this.value = 400000;
							return;
						case 1584:
							this.width = 24;
							this.height = 8;
							this.accessory = true;
							this.rare = 9;
							this.wingSlot = 17;
							this.value = 400000;
							return;
						case 1585:
							this.width = 24;
							this.height = 8;
							this.accessory = true;
							this.rare = 9;
							this.wingSlot = 18;
							this.value = 400000;
							return;
						case 1586:
							this.width = 24;
							this.height = 8;
							this.accessory = true;
							this.rare = 9;
							this.wingSlot = 19;
							this.value = 400000;
							return;
						case 1587:
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.bodySlot = 74;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						case 1588:
							this.width = 18;
							this.height = 18;
							this.rare = 9;
							this.vanity = true;
							this.legSlot = 63;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						case 1589:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 248;
							this.width = 12;
							this.height = 12;
							return;
						case 1590:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 109;
							this.width = 12;
							this.height = 12;
							return;
						case 1591:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 249;
							this.width = 12;
							this.height = 12;
							return;
						case 1592:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 110;
							this.width = 12;
							this.height = 12;
							return;
						case 1593:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 250;
							this.width = 12;
							this.height = 12;
							return;
						case 1594:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 111;
							this.width = 12;
							this.height = 12;
							return;
						case 1595:
							this.width = 22;
							this.height = 22;
							this.accessory = true;
							this.rare = 2;
							this.value = 100000;
							this.handOffSlot = 3;
							this.handOnSlot = 8;
							return;
						case 1596:
						case 1597:
						case 1598:
						case 1599:
						case 1600:
						case 1601:
						case 1602:
						case 1603:
						case 1604:
						case 1605:
						case 1606:
						case 1607:
						case 1608:
						case 1609:
						case 1610:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.consumable = true;
							this.createTile = 139;
							this.placeStyle = type - 1596 + 13;
							this.width = 24;
							this.height = 24;
							this.rare = 4;
							this.value = 100000;
							this.accessory = true;
							this.hasVanityEffects = true;
							return;
						default:
							switch (type)
							{
							case 1611:
								this.maxStack = Item.CommonMaxStack;
								this.width = 16;
								this.height = 14;
								this.value = Item.sellPrice(0, 2, 50, 0);
								this.rare = 5;
								return;
							case 1612:
								this.width = 16;
								this.height = 24;
								this.accessory = true;
								this.rare = 6;
								this.value = Item.sellPrice(0, 3, 0, 0);
								return;
							case 1613:
								this.width = 24;
								this.height = 28;
								this.rare = 7;
								this.value = Item.sellPrice(0, 5, 0, 0);
								this.accessory = true;
								this.defense = 4;
								this.shieldSlot = 4;
								return;
							case 1614:
								this.shootSpeed = 6f;
								this.shoot = 310;
								this.damage = 1;
								this.width = 12;
								this.height = 12;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.ammo = AmmoID.Flare;
								this.knockBack = 1.5f;
								this.value = 7;
								this.ranged = true;
								return;
							case 1615:
							case 1616:
							case 1617:
							case 1618:
							case 1619:
							case 1620:
							case 1621:
							case 1622:
							case 1623:
							case 1624:
							case 1625:
							case 1626:
							case 1627:
							case 1628:
							case 1629:
							case 1630:
							case 1631:
							case 1632:
							case 1633:
							case 1634:
							case 1635:
							case 1636:
							case 1637:
							case 1638:
							case 1639:
							case 1640:
							case 1641:
							case 1642:
							case 1643:
							case 1644:
							case 1645:
							case 1646:
							case 1647:
							case 1648:
							case 1649:
							case 1650:
							case 1651:
							case 1652:
							case 1653:
							case 1654:
							case 1655:
							case 1656:
							case 1657:
							case 1658:
							case 1659:
							case 1660:
							case 1661:
							case 1662:
							case 1663:
							case 1664:
							case 1665:
							case 1666:
							case 1667:
							case 1668:
							case 1669:
							case 1670:
							case 1671:
							case 1672:
							case 1673:
							case 1674:
							case 1675:
							case 1676:
							case 1677:
							case 1678:
							case 1679:
							case 1680:
							case 1681:
							case 1682:
							case 1683:
							case 1684:
							case 1685:
							case 1686:
							case 1687:
							case 1688:
							case 1689:
							case 1690:
							case 1691:
							case 1692:
							case 1693:
							case 1694:
							case 1695:
							case 1696:
							case 1697:
							case 1698:
							case 1699:
							case 1700:
							case 1701:
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 91;
								this.placeStyle = 22 + type - 1615;
								this.width = 10;
								this.height = 24;
								this.value = 1000;
								this.rare = 1;
								return;
							default:
								if (type == 1702)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 19;
									this.placeStyle = 14;
									this.width = 8;
									this.height = 10;
									return;
								}
								if (type - 1703 <= 5)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 15;
									this.placeStyle = 18 + type - 1703;
									this.width = 12;
									this.height = 30;
									this.value = 150;
									return;
								}
								if (type >= 1709 && type <= 1712)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 10;
									this.placeStyle = 20 + type - 1709;
									this.width = 14;
									this.height = 28;
									this.value = 200;
									return;
								}
								if (type >= 1713 && type <= 1718)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 14;
									this.placeStyle = 15 + type - 1713;
									this.width = 26;
									this.height = 20;
									this.value = 300;
									return;
								}
								if (type >= 1719 && type <= 1722)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 79;
									this.placeStyle = 9 + type - 1719;
									this.width = 28;
									this.height = 20;
									this.value = 2000;
									return;
								}
								switch (type)
								{
								case 1723:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 7;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createWall = 78;
									this.width = 12;
									this.height = 12;
									return;
								case 1724:
									this.width = 16;
									this.height = 24;
									this.accessory = true;
									this.rare = 2;
									this.value = 50000;
									this.waistSlot = 14;
									return;
								case 1725:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 251;
									this.width = 8;
									this.height = 10;
									this.value = Item.sellPrice(0, 0, 0, 25);
									return;
								case 1726:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 7;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createWall = 113;
									this.width = 12;
									this.height = 12;
									return;
								case 1727:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 252;
									this.width = 8;
									this.height = 10;
									return;
								case 1728:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 7;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createWall = 114;
									this.width = 12;
									this.height = 12;
									return;
								case 1729:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 253;
									this.width = 8;
									this.height = 10;
									return;
								case 1730:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 7;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createWall = 115;
									this.width = 12;
									this.height = 12;
									return;
								case 1731:
									this.width = 18;
									this.height = 18;
									this.defense = 2;
									this.headSlot = 112;
									return;
								case 1732:
									this.width = 18;
									this.height = 18;
									this.defense = 3;
									this.bodySlot = 75;
									return;
								case 1733:
									this.width = 18;
									this.height = 18;
									this.defense = 2;
									this.legSlot = 64;
									return;
								case 1734:
									this.width = 12;
									this.height = 12;
									return;
								case 1735:
									this.width = 12;
									this.height = 12;
									return;
								case 1736:
									this.width = 18;
									this.height = 18;
									this.headSlot = 113;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1737:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 76;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1738:
									this.width = 18;
									this.height = 18;
									this.legSlot = 65;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1739:
									this.width = 18;
									this.height = 18;
									this.headSlot = 114;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1740:
									this.width = 18;
									this.height = 18;
									this.headSlot = 115;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1741:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 77;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1742:
									this.width = 18;
									this.height = 18;
									this.headSlot = 116;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1743:
									this.width = 18;
									this.height = 18;
									this.headSlot = 117;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1744:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 78;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1745:
									this.width = 18;
									this.height = 18;
									this.legSlot = 66;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1746:
									this.width = 18;
									this.height = 18;
									this.headSlot = 118;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1747:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 79;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1748:
									this.width = 18;
									this.height = 18;
									this.legSlot = 67;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1749:
									this.width = 18;
									this.height = 18;
									this.headSlot = 119;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1750:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 80;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1751:
									this.width = 18;
									this.height = 18;
									this.legSlot = 68;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1752:
									this.width = 18;
									this.height = 18;
									this.headSlot = 120;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1753:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 81;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1754:
									this.width = 18;
									this.height = 18;
									this.headSlot = 121;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1755:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 82;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1756:
									this.width = 18;
									this.height = 18;
									this.legSlot = 69;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1757:
									this.width = 18;
									this.height = 18;
									this.headSlot = 122;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1758:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 83;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1759:
									this.width = 18;
									this.height = 18;
									this.legSlot = 70;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1760:
									this.width = 18;
									this.height = 18;
									this.headSlot = 123;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1761:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 84;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1762:
									this.width = 18;
									this.height = 18;
									this.legSlot = 71;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1763:
									this.width = 18;
									this.height = 18;
									this.headSlot = 124;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1764:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 85;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1765:
									this.width = 18;
									this.height = 18;
									this.legSlot = 72;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1766:
									this.width = 18;
									this.height = 18;
									this.headSlot = 125;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1767:
									this.width = 18;
									this.height = 18;
									this.headSlot = 126;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1768:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 86;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1769:
									this.width = 18;
									this.height = 18;
									this.legSlot = 73;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1770:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 87;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1771:
									this.width = 18;
									this.height = 18;
									this.legSlot = 74;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1772:
									this.width = 18;
									this.height = 18;
									this.headSlot = 127;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1773:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 88;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1774:
									this.width = 12;
									this.height = 12;
									this.rare = 3;
									this.maxStack = Item.CommonMaxStack;
									this.value = Item.sellPrice(0, 1, 0, 0);
									return;
								case 1775:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 89;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1776:
									this.width = 18;
									this.height = 18;
									this.legSlot = 75;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1777:
									this.width = 18;
									this.height = 18;
									this.headSlot = 128;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1778:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 90;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1779:
									this.width = 18;
									this.height = 18;
									this.headSlot = 129;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1780:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 91;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1781:
									this.width = 18;
									this.height = 18;
									this.legSlot = 76;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1782:
									this.useStyle = 5;
									this.autoReuse = true;
									this.useAnimation = 9;
									this.useTime = 9;
									this.crit += 6;
									this.width = 60;
									this.height = 26;
									this.shoot = 311;
									this.useAmmo = AmmoID.CandyCorn;
									this.UseSound = new SoundStyle?(SoundID.Item11);
									this.damage = 44;
									this.shootSpeed = 10f;
									this.noMelee = true;
									this.value = Item.sellPrice(0, 10, 0, 0);
									this.rare = 8;
									this.knockBack = 2f;
									this.ranged = true;
									return;
								case 1783:
									this.shootSpeed = 4f;
									this.shoot = 311;
									this.damage = 9;
									this.width = 8;
									this.height = 8;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.ammo = AmmoID.CandyCorn;
									this.knockBack = 1.5f;
									this.value = 5;
									this.ranged = true;
									return;
								case 1784:
									this.useStyle = 5;
									this.autoReuse = true;
									this.useAnimation = 25;
									this.useTime = 25;
									this.crit += 6;
									this.width = 60;
									this.height = 26;
									this.shoot = 312;
									this.useAmmo = AmmoID.JackOLantern;
									this.UseSound = new SoundStyle?(SoundID.Item11);
									this.damage = 65;
									this.shootSpeed = 7f;
									this.noMelee = true;
									this.value = Item.sellPrice(0, 10, 0, 0);
									this.rare = 8;
									this.knockBack = 5f;
									this.ranged = true;
									return;
								case 1785:
									this.shootSpeed = 4f;
									this.shoot = 312;
									this.damage = 60;
									this.width = 8;
									this.height = 8;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.ammo = AmmoID.JackOLantern;
									this.knockBack = 3f;
									this.value = 15;
									this.ranged = true;
									return;
								case 1786:
									this.useStyle = 1;
									this.useTurn = true;
									this.useTime = 24;
									this.useAnimation = 24;
									this.autoReuse = true;
									this.width = 24;
									this.height = 28;
									this.damage = 9;
									this.UseSound = new SoundStyle?(SoundID.Item1);
									this.knockBack = 2.25f;
									this.value = Item.buyPrice(0, 0, 60, 0);
									this.melee = true;
									return;
								case 1788:
									this.width = 18;
									this.height = 18;
									this.headSlot = 130;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1789:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 92;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1790:
									this.width = 18;
									this.height = 18;
									this.legSlot = 77;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1791:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 96;
									this.placeStyle = 1;
									this.width = 20;
									this.height = 20;
									this.value = Item.buyPrice(0, 1, 50, 0);
									return;
								case 1792:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 15;
									this.placeStyle = 24;
									this.width = 12;
									this.height = 30;
									this.value = 150;
									return;
								case 1793:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 10;
									this.placeStyle = 24;
									this.width = 14;
									this.height = 28;
									this.value = 200;
									return;
								case 1794:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 14;
									this.placeStyle = 21;
									this.width = 26;
									this.height = 20;
									this.value = 300;
									return;
								case 1795:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 18;
									this.placeStyle = 16;
									this.width = 28;
									this.height = 14;
									this.value = 150;
									return;
								case 1796:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 19;
									this.placeStyle = 15;
									this.width = 8;
									this.height = 10;
									return;
								case 1797:
									this.width = 24;
									this.height = 8;
									this.accessory = true;
									this.rare = 7;
									this.value = 400000;
									this.wingSlot = 20;
									return;
								case 1798:
									this.damage = 0;
									this.useStyle = 1;
									this.shoot = 313;
									this.width = 16;
									this.height = 30;
									this.UseSound = new SoundStyle?(SoundID.Item2);
									this.useAnimation = 20;
									this.useTime = 20;
									this.rare = 3;
									this.noMelee = true;
									this.buffType = 81;
									this.value = Item.sellPrice(0, 2, 0, 0);
									return;
								case 1799:
									this.damage = 0;
									this.useStyle = 1;
									this.shoot = 314;
									this.width = 16;
									this.height = 30;
									this.UseSound = new SoundStyle?(SoundID.Item2);
									this.useAnimation = 20;
									this.useTime = 20;
									this.rare = 3;
									this.noMelee = true;
									this.buffType = 82;
									this.value = Item.sellPrice(0, 2, 0, 0);
									return;
								case 1800:
									this.noUseGraphic = true;
									this.damage = 0;
									this.knockBack = 7f;
									this.useStyle = 5;
									this.shootSpeed = 13.5f;
									this.shoot = 315;
									this.width = 18;
									this.height = 28;
									this.UseSound = new SoundStyle?(SoundID.Item1);
									this.useAnimation = 20;
									this.useTime = 20;
									this.rare = 3;
									this.noMelee = true;
									this.value = Item.sellPrice(0, 1, 50, 0);
									return;
								case 1801:
									this.useStyle = 5;
									this.autoReuse = true;
									this.useAnimation = 12;
									this.useTime = 12;
									this.mana = 6;
									this.width = 50;
									this.height = 18;
									this.shoot = 316;
									this.UseSound = new SoundStyle?(SoundID.Item32);
									this.damage = 45;
									this.shootSpeed = 10f;
									this.noMelee = true;
									this.value = Item.sellPrice(0, 10, 0, 0);
									this.rare = 8;
									this.magic = true;
									this.knockBack = 3f;
									return;
								case 1802:
									this.mana = 10;
									this.damage = 55;
									this.useStyle = 1;
									this.shootSpeed = 10f;
									this.shoot = 317;
									this.width = 26;
									this.height = 28;
									this.UseSound = new SoundStyle?(SoundID.Item44);
									this.useAnimation = 28;
									this.useTime = 28;
									this.rare = 8;
									this.noMelee = true;
									this.knockBack = 3f;
									this.buffType = 83;
									this.value = Item.sellPrice(0, 10, 0, 0);
									this.summon = true;
									this.autoReuse = true;
									this.reuseDelay = 2;
									return;
								case 1803:
								case 1804:
								case 1805:
								case 1806:
								case 1807:
									return;
								}
								switch (type)
								{
								case 1808:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 42;
									this.width = 12;
									this.height = 28;
									this.placeStyle = 8;
									return;
								case 1809:
									this.useStyle = 1;
									this.shootSpeed = 9f;
									this.shoot = 318;
									this.damage = 13;
									this.width = 18;
									this.height = 20;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.UseSound = new SoundStyle?(SoundID.Item1);
									this.useAnimation = 19;
									this.useTime = 19;
									this.noUseGraphic = true;
									this.noMelee = true;
									this.ranged = true;
									this.knockBack = 6.5f;
									return;
								case 1810:
									this.damage = 0;
									this.useStyle = 1;
									this.shoot = 319;
									this.width = 16;
									this.height = 30;
									this.UseSound = new SoundStyle?(SoundID.Item2);
									this.useAnimation = 20;
									this.useTime = 20;
									this.rare = 3;
									this.noMelee = true;
									this.buffType = 84;
									this.value = Item.sellPrice(0, 2, 0, 0);
									return;
								case 1811:
									this.maxStack = Item.CommonMaxStack;
									this.width = 16;
									this.height = 14;
									this.value = Item.sellPrice(0, 2, 50, 0);
									this.rare = 5;
									return;
								case 1812:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 34;
									this.placeStyle = 6;
									this.width = 26;
									this.height = 26;
									return;
								case 1813:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 35;
									this.width = 26;
									this.height = 26;
									return;
								case 1814:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 15;
									this.placeStyle = 25;
									this.width = 12;
									this.height = 30;
									this.value = 150;
									return;
								case 1815:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 10;
									this.placeStyle = 25;
									this.width = 14;
									this.height = 28;
									this.value = 200;
									return;
								case 1816:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 14;
									this.placeStyle = 22;
									this.width = 26;
									this.height = 20;
									this.value = 300;
									return;
								case 1817:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 18;
									this.placeStyle = 17;
									this.width = 28;
									this.height = 14;
									this.value = 150;
									return;
								case 1818:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 19;
									this.placeStyle = 16;
									this.width = 8;
									this.height = 10;
									return;
								case 1819:
									this.width = 18;
									this.height = 18;
									this.headSlot = 131;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1820:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 93;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1821:
									this.width = 18;
									this.height = 18;
									this.headSlot = 132;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1822:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 94;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1823:
									this.width = 18;
									this.height = 18;
									this.legSlot = 78;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1824:
									this.width = 18;
									this.height = 18;
									this.headSlot = 133;
									this.vanity = true;
									this.value = Item.buyPrice(0, 3, 0, 0);
									return;
								case 1825:
									this.noMelee = true;
									this.useStyle = 1;
									this.shootSpeed = 15f;
									this.shoot = 320;
									this.damage = 20;
									this.knockBack = 5f;
									this.width = 34;
									this.height = 34;
									this.UseSound = new SoundStyle?(SoundID.Item1);
									this.useAnimation = 15;
									this.useTime = 15;
									this.noUseGraphic = true;
									this.rare = 2;
									this.value = 50000;
									this.melee = true;
									return;
								case 1826:
									this.autoReuse = true;
									this.useStyle = 1;
									this.useAnimation = 26;
									this.useTime = 26;
									this.knockBack = 7.5f;
									this.width = 40;
									this.height = 40;
									this.damage = 150;
									this.scale = 1f;
									this.UseSound = new SoundStyle?(SoundID.Item1);
									this.rare = 8;
									this.value = Item.sellPrice(0, 10, 0, 0);
									this.melee = true;
									this.shoot = 997;
									this.noMelee = true;
									this.shootsEveryUse = true;
									return;
								case 1827:
									this.useStyle = 1;
									this.useTurn = true;
									this.autoReuse = true;
									this.useAnimation = 8;
									this.useTime = 8;
									this.width = 24;
									this.height = 28;
									this.damage = 14;
									this.knockBack = 4f;
									this.UseSound = new SoundStyle?(SoundID.Item1);
									this.scale = 1f;
									this.melee = true;
									this.rare = 2;
									this.value = 50000;
									this.melee = true;
									return;
								case 1828:
									this.autoReuse = true;
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 254;
									this.width = 8;
									this.height = 10;
									this.value = Item.buyPrice(0, 0, 2, 50);
									return;
								case 1829:
									this.noUseGraphic = true;
									this.damage = 0;
									this.knockBack = 7f;
									this.useStyle = 5;
									this.shootSpeed = 15.5f;
									this.shoot = 322;
									this.width = 18;
									this.height = 28;
									this.UseSound = new SoundStyle?(SoundID.Item1);
									this.useAnimation = 20;
									this.useTime = 20;
									this.rare = 7;
									this.noMelee = true;
									this.value = Item.sellPrice(0, 4, 0, 0);
									return;
								case 1830:
									this.width = 24;
									this.height = 8;
									this.accessory = true;
									this.rare = 7;
									this.value = 400000;
									this.wingSlot = 21;
									return;
								case 1831:
									this.maxStack = Item.CommonMaxStack;
									this.width = 16;
									this.height = 14;
									this.value = Item.sellPrice(0, 2, 50, 0);
									this.rare = 5;
									return;
								case 1832:
									this.width = 18;
									this.height = 18;
									this.headSlot = 134;
									this.value = Item.sellPrice(0, 1, 0, 0);
									this.defense = 9;
									this.rare = 8;
									return;
								case 1833:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 95;
									this.value = Item.sellPrice(0, 1, 0, 0);
									this.defense = 11;
									this.rare = 8;
									return;
								case 1834:
									this.width = 18;
									this.height = 18;
									this.legSlot = 79;
									this.value = Item.sellPrice(0, 1, 0, 0);
									this.defense = 10;
									this.rare = 8;
									return;
								case 1835:
									this.useStyle = 5;
									this.autoReuse = true;
									this.useAnimation = 12;
									this.useTime = 12;
									this.crit += 10;
									this.width = 40;
									this.height = 26;
									this.shoot = 323;
									this.useAmmo = AmmoID.Stake;
									this.UseSound = new SoundStyle?(SoundID.Item5);
									this.damage = 75;
									this.shootSpeed = 9f;
									this.noMelee = true;
									this.value = Item.sellPrice(0, 10, 0, 0);
									this.rare = 8;
									this.knockBack = 6.5f;
									this.ranged = true;
									return;
								case 1836:
									this.shootSpeed = 3f;
									this.shoot = 323;
									this.damage = 25;
									this.width = 20;
									this.height = 14;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.ammo = AmmoID.Stake;
									this.knockBack = 4.5f;
									this.value = 15;
									this.ranged = true;
									return;
								case 1837:
									this.useStyle = 1;
									this.shoot = 324;
									this.width = 16;
									this.height = 30;
									this.UseSound = new SoundStyle?(SoundID.Item2);
									this.useAnimation = 20;
									this.useTime = 20;
									this.rare = 3;
									this.noMelee = true;
									this.buffType = 85;
									this.value = Item.sellPrice(0, 2, 0, 0);
									return;
								case 1838:
									this.width = 18;
									this.height = 18;
									this.headSlot = 135;
									this.value = Item.buyPrice(0, 3, 0, 0);
									this.vanity = true;
									return;
								case 1839:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 96;
									this.value = Item.buyPrice(0, 3, 0, 0);
									this.vanity = true;
									return;
								case 1840:
									this.width = 18;
									this.height = 18;
									this.legSlot = 80;
									this.value = Item.buyPrice(0, 3, 0, 0);
									this.vanity = true;
									return;
								case 1841:
									this.width = 18;
									this.height = 18;
									this.headSlot = 136;
									this.value = Item.buyPrice(0, 3, 0, 0);
									this.vanity = true;
									return;
								case 1842:
									this.width = 18;
									this.height = 18;
									this.bodySlot = 97;
									this.value = Item.buyPrice(0, 3, 0, 0);
									this.vanity = true;
									return;
								case 1843:
									this.width = 18;
									this.height = 18;
									this.legSlot = 81;
									this.value = Item.buyPrice(0, 3, 0, 0);
									this.vanity = true;
									return;
								case 1844:
									this.useStyle = 4;
									this.width = 22;
									this.height = 14;
									this.consumable = true;
									this.useAnimation = 45;
									this.useTime = 45;
									this.maxStack = Item.CommonMaxStack;
									this.rare = 8;
									return;
								case 1845:
									this.rare = 8;
									this.width = 24;
									this.height = 28;
									this.accessory = true;
									this.value = Item.buyPrice(0, 20, 0, 0);
									return;
								case 1846:
								case 1847:
								case 1848:
								case 1849:
								case 1850:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 242;
									this.width = 30;
									this.height = 30;
									this.value = Item.sellPrice(0, 0, 10, 0);
									this.placeStyle = 17 + type - 1846;
									return;
								default:
									switch (type)
									{
									case 1851:
										this.width = 18;
										this.height = 18;
										this.bodySlot = 98;
										this.value = Item.buyPrice(0, 3, 0, 0);
										this.vanity = true;
										return;
									case 1852:
										this.width = 18;
										this.height = 18;
										this.legSlot = 82;
										this.value = Item.buyPrice(0, 3, 0, 0);
										this.vanity = true;
										return;
									case 1853:
										this.width = 18;
										this.height = 18;
										this.bodySlot = 99;
										this.value = Item.buyPrice(0, 3, 0, 0);
										this.vanity = true;
										return;
									case 1854:
										this.width = 18;
										this.height = 18;
										this.legSlot = 83;
										this.value = Item.buyPrice(0, 3, 0, 0);
										this.vanity = true;
										return;
									case 1855:
									case 1856:
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 240;
										this.width = 30;
										this.height = 30;
										this.value = Item.sellPrice(0, 1, 0, 0);
										this.rare = 1;
										this.placeStyle = 36 + type - 1855;
										return;
									case 1857:
										this.width = 18;
										this.height = 18;
										this.headSlot = 137;
										this.value = Item.sellPrice(0, 5, 0, 0);
										this.vanity = true;
										this.rare = 3;
										return;
									case 1858:
										this.width = 14;
										this.height = 28;
										this.rare = 7;
										this.value = 300000;
										this.accessory = true;
										return;
									case 1859:
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 42;
										this.width = 12;
										this.height = 28;
										this.placeStyle = 9;
										this.value = 75000;
										this.rare = 2;
										return;
									case 1860:
										this.width = 24;
										this.height = 28;
										this.rare = 5;
										this.value = 150000;
										this.accessory = true;
										this.faceSlot = 3;
										return;
									case 1861:
										this.width = 24;
										this.height = 28;
										this.rare = 6;
										this.value = 250000;
										this.accessory = true;
										this.faceSlot = 2;
										return;
									case 1862:
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 7;
										this.value = 350000;
										this.shoeSlot = 9;
										return;
									case 1863:
										this.width = 14;
										this.height = 28;
										this.rare = 4;
										this.value = 150000;
										this.accessory = true;
										this.balloonSlot = 5;
										return;
									case 1864:
										this.rare = 8;
										this.width = 24;
										this.height = 28;
										this.accessory = true;
										this.value = Item.buyPrice(0, 25, 0, 0);
										return;
									case 1865:
										this.width = 16;
										this.height = 24;
										this.accessory = true;
										this.rare = 7;
										this.value = 400000;
										return;
									case 1866:
										this.width = 24;
										this.height = 8;
										this.accessory = true;
										this.value = 400000;
										this.rare = 5;
										this.wingSlot = 22;
										return;
									case 1867:
										this.width = 12;
										this.height = 12;
										return;
									case 1868:
										this.width = 12;
										this.height = 12;
										return;
									case 1869:
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 36;
										this.width = 12;
										this.height = 28;
										this.rare = 1;
										return;
									case 1870:
										this.useStyle = 5;
										this.autoReuse = true;
										this.useAnimation = 38;
										this.useTime = 38;
										this.width = 44;
										this.height = 14;
										this.shoot = 10;
										this.useAmmo = AmmoID.Bullet;
										this.UseSound = new SoundStyle?(SoundID.Item11);
										this.damage = 20;
										this.shootSpeed = 8f;
										this.noMelee = true;
										this.value = 100000;
										this.knockBack = 3.75f;
										this.rare = 1;
										this.ranged = true;
										return;
									case 1871:
										this.width = 24;
										this.height = 8;
										this.accessory = true;
										this.value = 400000;
										this.rare = 5;
										this.wingSlot = 23;
										return;
									case 1872:
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 170;
										this.width = 12;
										this.height = 12;
										return;
									case 1873:
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 171;
										this.width = 12;
										this.height = 12;
										this.value = Item.buyPrice(0, 0, 25, 0);
										return;
									case 1874:
									case 1875:
									case 1876:
									case 1877:
									case 1878:
									case 1879:
									case 1880:
									case 1881:
									case 1882:
									case 1883:
									case 1884:
									case 1885:
									case 1886:
									case 1887:
									case 1888:
									case 1889:
									case 1890:
									case 1891:
									case 1892:
									case 1893:
									case 1894:
									case 1895:
									case 1896:
									case 1897:
									case 1898:
									case 1899:
									case 1900:
									case 1901:
									case 1902:
									case 1903:
									case 1904:
									case 1905:
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.width = 12;
										this.height = 12;
										this.noMelee = true;
										this.value = Item.buyPrice(0, 0, 5, 0);
										return;
									default:
										switch (type)
										{
										case 1906:
											this.width = 18;
											this.height = 18;
											this.headSlot = 138;
											this.vanity = true;
											this.value = Item.buyPrice(0, 1, 0, 0);
											return;
										case 1907:
											this.width = 18;
											this.height = 18;
											this.headSlot = 139;
											this.vanity = true;
											this.value = Item.buyPrice(0, 1, 0, 0);
											return;
										case 1908:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 246;
											this.width = 30;
											this.height = 30;
											this.value = Item.sellPrice(0, 0, 10, 0);
											this.placeStyle = 18;
											return;
										case 1909:
											this.useStyle = 1;
											this.useTime = 27;
											this.useAnimation = 27;
											this.knockBack = 5.3f;
											this.width = 24;
											this.height = 28;
											this.damage = 19;
											this.scale = 1.1f;
											this.UseSound = new SoundStyle?(SoundID.Item1);
											this.rare = 1;
											this.value = 13500;
											this.melee = true;
											return;
										case 1910:
											this.consumeAmmoOnFirstShotOnly = true;
											this.useStyle = 5;
											this.autoReuse = true;
											this.useAnimation = 30;
											this.useTime = 6;
											this.width = 50;
											this.height = 18;
											this.shoot = 85;
											this.useAmmo = AmmoID.Gel;
											this.UseSound = new SoundStyle?(SoundID.Item34);
											this.damage = 53;
											this.knockBack = 0.425f;
											this.shootSpeed = 8.5f;
											this.noMelee = true;
											this.value = 500000;
											this.rare = 8;
											this.ranged = true;
											return;
										case 1912:
											this.UseSound = new SoundStyle?(SoundID.Item3);
											this.healLife = 80;
											this.useStyle = 9;
											this.useTurn = true;
											this.useAnimation = 17;
											this.useTime = 17;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 14;
											this.height = 24;
											this.potion = true;
											this.value = 40;
											this.rare = 1;
											return;
										case 1913:
											this.useStyle = 1;
											this.shootSpeed = 12f;
											this.shoot = 330;
											this.damage = 14;
											this.width = 18;
											this.height = 20;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.UseSound = new SoundStyle?(SoundID.Item1);
											this.useAnimation = 15;
											this.useTime = 15;
											this.noUseGraphic = true;
											this.noMelee = true;
											this.value = 25;
											this.ranged = true;
											return;
										case 1914:
											this.useStyle = 1;
											this.width = 16;
											this.height = 30;
											this.UseSound = new SoundStyle?(SoundID.Item25);
											this.useAnimation = 20;
											this.useTime = 20;
											this.rare = 8;
											this.noMelee = true;
											this.mountType = 0;
											this.value = Item.sellPrice(0, 5, 0, 0);
											return;
										case 1915:
											this.noUseGraphic = true;
											this.damage = 0;
											this.knockBack = 7f;
											this.useStyle = 5;
											this.shootSpeed = 11.5f;
											this.shoot = 331;
											this.width = 18;
											this.height = 28;
											this.UseSound = new SoundStyle?(SoundID.Item1);
											this.useAnimation = 20;
											this.useTime = 20;
											this.rare = 7;
											this.noMelee = true;
											this.value = Item.sellPrice(0, 2, 0, 0);
											return;
										case 1916:
											this.noUseGraphic = true;
											this.damage = 0;
											this.knockBack = 7f;
											this.useStyle = 5;
											this.shootSpeed = 15.5f;
											this.shoot = 332;
											this.width = 18;
											this.height = 28;
											this.UseSound = new SoundStyle?(SoundID.Item1);
											this.useAnimation = 20;
											this.useTime = 20;
											this.rare = 7;
											this.noMelee = true;
											this.value = Item.sellPrice(0, 4, 0, 0);
											return;
										case 1917:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 20;
											this.useTime = 16;
											this.autoReuse = true;
											this.width = 24;
											this.height = 28;
											this.damage = 7;
											this.pick = 55;
											this.UseSound = new SoundStyle?(SoundID.Item1);
											this.knockBack = 2.5f;
											this.value = 10000;
											this.melee = true;
											return;
										case 1918:
											this.noMelee = true;
											this.useStyle = 1;
											this.shootSpeed = 11f;
											this.shoot = 333;
											this.damage = 19;
											this.knockBack = 8f;
											this.width = 14;
											this.height = 28;
											this.UseSound = new SoundStyle?(SoundID.Item1);
											this.useAnimation = 15;
											this.useTime = 15;
											this.noUseGraphic = true;
											this.rare = 1;
											this.value = 50000;
											this.melee = true;
											return;
										case 1921:
											this.width = 16;
											this.height = 24;
											this.accessory = true;
											this.rare = 2;
											this.value = 50000;
											this.handOffSlot = 2;
											this.handOnSlot = 7;
											return;
										case 1922:
											this.width = 16;
											this.height = 24;
											return;
										case 1923:
											this.width = 16;
											this.height = 24;
											this.accessory = true;
											this.rare = 2;
											this.value = 50000;
											return;
										case 1924:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 10;
											this.placeStyle = 26;
											this.width = 14;
											this.height = 28;
											this.value = 200;
											return;
										case 1925:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 15;
											this.placeStyle = 26;
											this.width = 12;
											this.height = 30;
											this.value = 150;
											return;
										case 1926:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 14;
											this.placeStyle = 23;
											this.width = 26;
											this.height = 20;
											this.value = 300;
											return;
										case 1927:
											this.useStyle = 1;
											this.shoot = 334;
											this.width = 16;
											this.height = 30;
											this.UseSound = new SoundStyle?(SoundID.Item2);
											this.useAnimation = 20;
											this.useTime = 20;
											this.rare = 3;
											this.noMelee = true;
											this.value = 0;
											this.buffType = 91;
											return;
										case 1928:
											this.useStyle = 1;
											this.autoReuse = true;
											this.useAnimation = 23;
											this.useTime = 23;
											this.knockBack = 7f;
											this.width = 40;
											this.height = 40;
											this.damage = 86;
											this.scale = 1.1f;
											this.shoot = 907;
											this.shootSpeed = 5f;
											this.UseSound = new SoundStyle?(SoundID.Item1);
											this.rare = 8;
											this.value = Item.sellPrice(0, 10, 0, 0);
											this.melee = true;
											return;
										case 1929:
											this.useStyle = 5;
											this.autoReuse = true;
											this.useAnimation = 4;
											this.useTime = 4;
											this.width = 50;
											this.height = 18;
											this.shoot = 10;
											this.useAmmo = AmmoID.Bullet;
											this.UseSound = new SoundStyle?(SoundID.Item41);
											this.damage = 31;
											this.shootSpeed = 14f;
											this.noMelee = true;
											this.value = Item.buyPrice(0, 45, 0, 0);
											this.rare = 8;
											this.knockBack = 1.75f;
											this.ranged = true;
											return;
										case 1930:
											this.autoReuse = true;
											this.mana = 5;
											this.UseSound = new SoundStyle?(SoundID.Item39);
											this.useStyle = 5;
											this.damage = 48;
											this.useAnimation = 8;
											this.useTime = 8;
											this.width = 40;
											this.height = 40;
											this.shoot = 336;
											this.shootSpeed = 12f;
											this.knockBack = 3.25f;
											this.value = Item.buyPrice(0, 45, 0, 0);
											this.magic = true;
											this.rare = 8;
											this.noMelee = true;
											return;
										case 1931:
											this.autoReuse = true;
											this.mana = 9;
											this.useStyle = 5;
											this.damage = 58;
											this.useAnimation = 10;
											this.useTime = 5;
											this.width = 40;
											this.height = 40;
											this.shoot = 337;
											this.shootSpeed = 10f;
											this.knockBack = 4.5f;
											this.value = Item.buyPrice(0, 45, 0, 0);
											this.magic = true;
											this.rare = 8;
											this.noMelee = true;
											return;
										case 1932:
											this.width = 18;
											this.height = 18;
											this.headSlot = 140;
											this.vanity = true;
											this.value = Item.buyPrice(0, 3, 0, 0);
											return;
										case 1933:
											this.width = 18;
											this.height = 18;
											this.bodySlot = 100;
											this.vanity = true;
											this.value = Item.buyPrice(0, 3, 0, 0);
											return;
										case 1934:
											this.width = 18;
											this.height = 18;
											this.legSlot = 84;
											this.vanity = true;
											this.value = Item.buyPrice(0, 3, 0, 0);
											return;
										case 1935:
											this.width = 18;
											this.height = 18;
											this.headSlot = 142;
											this.vanity = true;
											this.value = Item.buyPrice(0, 3, 0, 0);
											return;
										case 1936:
											this.width = 18;
											this.height = 18;
											this.bodySlot = 102;
											this.vanity = true;
											this.value = Item.buyPrice(0, 3, 0, 0);
											return;
										case 1937:
											this.width = 18;
											this.height = 18;
											this.legSlot = 86;
											this.vanity = true;
											this.value = Item.buyPrice(0, 3, 0, 0);
											return;
										case 1938:
											this.width = 18;
											this.height = 18;
											this.headSlot = 143;
											this.vanity = true;
											this.value = Item.buyPrice(0, 3, 0, 0);
											return;
										case 1939:
											this.width = 18;
											this.height = 18;
											this.bodySlot = 103;
											this.vanity = true;
											this.value = Item.buyPrice(0, 3, 0, 0);
											return;
										case 1940:
											this.width = 18;
											this.height = 18;
											this.headSlot = 141;
											this.vanity = true;
											this.value = Item.buyPrice(0, 3, 0, 0);
											return;
										case 1941:
											this.width = 18;
											this.height = 18;
											this.bodySlot = 101;
											this.vanity = true;
											this.value = Item.buyPrice(0, 3, 0, 0);
											return;
										case 1942:
											this.width = 18;
											this.height = 18;
											this.legSlot = 85;
											this.vanity = true;
											this.value = Item.buyPrice(0, 3, 0, 0);
											return;
										case 1943:
											this.width = 18;
											this.height = 18;
											this.headSlot = 144;
											this.vanity = true;
											this.value = Item.buyPrice(0, 3, 0, 0);
											return;
										case 1944:
											this.width = 18;
											this.height = 18;
											this.bodySlot = 104;
											this.vanity = true;
											this.value = Item.buyPrice(0, 3, 0, 0);
											return;
										case 1945:
											this.width = 18;
											this.height = 18;
											this.legSlot = 87;
											this.vanity = true;
											this.value = Item.buyPrice(0, 3, 0, 0);
											return;
										case 1946:
											this.useStyle = 5;
											this.autoReuse = true;
											this.useAnimation = 15;
											this.useTime = 15;
											this.useAmmo = AmmoID.Rocket;
											this.width = 50;
											this.height = 20;
											this.shoot = 338;
											this.UseSound = new SoundStyle?(SoundID.Item11);
											this.damage = 67;
											this.shootSpeed = 15f;
											this.noMelee = true;
											this.value = Item.buyPrice(0, 45, 0, 0);
											this.knockBack = 4f;
											this.rare = 8;
											this.ranged = true;
											return;
										case 1947:
											this.useStyle = 5;
											this.useAnimation = 30;
											this.useTime = 30;
											this.shootSpeed = 4.75f;
											this.knockBack = 6.7f;
											this.width = 40;
											this.height = 40;
											this.damage = 80;
											this.scale = 1.1f;
											this.UseSound = new SoundStyle?(SoundID.Item1);
											this.shoot = 342;
											this.rare = 7;
											this.value = Item.buyPrice(0, 45, 0, 0);
											this.noMelee = true;
											this.noUseGraphic = true;
											this.melee = true;
											return;
										case 1948:
										case 1949:
										case 1950:
										case 1951:
										case 1952:
										case 1953:
										case 1954:
										case 1955:
										case 1956:
										case 1957:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 7;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createWall = 116 + type - 1948;
											this.width = 12;
											this.height = 12;
											this.value = Item.buyPrice(0, 0, 0, 75);
											return;
										}
										switch (type)
										{
										case 1958:
											this.useStyle = 4;
											this.width = 22;
											this.height = 14;
											this.consumable = true;
											this.useAnimation = 45;
											this.useTime = 45;
											this.maxStack = Item.CommonMaxStack;
											this.rare = 8;
											return;
										case 1959:
											this.useStyle = 1;
											this.shoot = 353;
											this.width = 16;
											this.height = 30;
											this.UseSound = new SoundStyle?(SoundID.Item2);
											this.useAnimation = 20;
											this.useTime = 20;
											this.rare = 3;
											this.noMelee = true;
											this.value = Item.sellPrice(0, 2, 0, 0);
											this.buffType = 92;
											return;
										case 1960:
										case 1961:
										case 1962:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 240;
											this.width = 30;
											this.height = 30;
											this.value = Item.sellPrice(0, 1, 0, 0);
											this.rare = 1;
											this.placeStyle = 38 + type - 1960;
											return;
										case 1963:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.consumable = true;
											this.createTile = 139;
											this.placeStyle = 28;
											this.width = 24;
											this.height = 24;
											this.rare = 4;
											this.value = 100000;
											this.accessory = true;
											this.hasVanityEffects = true;
											return;
										case 1964:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.consumable = true;
											this.createTile = 139;
											this.placeStyle = 29;
											this.width = 24;
											this.height = 24;
											this.rare = 4;
											this.value = 100000;
											this.accessory = true;
											this.hasVanityEffects = true;
											return;
										case 1965:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.consumable = true;
											this.createTile = 139;
											this.placeStyle = 30;
											this.width = 24;
											this.height = 24;
											this.rare = 4;
											this.value = 100000;
											this.accessory = true;
											this.hasVanityEffects = true;
											return;
										case 1966:
											this.paint = 28;
											this.width = 24;
											this.height = 24;
											this.value = 25;
											this.maxStack = Item.CommonMaxStack;
											return;
										case 1967:
											this.paint = 29;
											this.width = 24;
											this.height = 24;
											this.value = 50;
											this.maxStack = Item.CommonMaxStack;
											return;
										case 1968:
											this.paint = 30;
											this.width = 24;
											this.height = 24;
											this.value = 75;
											this.maxStack = Item.CommonMaxStack;
											return;
										case 1969:
											this.width = 20;
											this.height = 20;
											this.maxStack = Item.CommonMaxStack;
											this.value = 10000;
											this.rare = 1;
											return;
										case 1970:
										case 1971:
										case 1972:
										case 1973:
										case 1974:
										case 1975:
										case 1976:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 262 + type - 1970;
											this.width = 12;
											this.height = 12;
											return;
										default:
											if (type >= 1977 && type <= 1986)
											{
												this.width = 20;
												this.height = 26;
												this.maxStack = Item.CommonMaxStack;
												this.value = Item.buyPrice(0, 5, 0, 0);
												this.rare = 2;
												if (type == 1980)
												{
													this.value = Item.buyPrice(0, 10, 0, 0);
												}
												if (type == 1984)
												{
													this.value = Item.buyPrice(0, 7, 50, 0);
												}
												if (type == 1985)
												{
													this.value = Item.buyPrice(0, 15, 0, 0);
												}
												this.UseSound = new SoundStyle?(SoundID.Item3);
												this.useStyle = 9;
												this.useTurn = true;
												this.useAnimation = 17;
												this.useTime = 17;
												this.consumable = true;
												return;
											}
											switch (type)
											{
											case 1987:
												this.width = 18;
												this.height = 12;
												this.maxStack = 1;
												this.value = Item.buyPrice(0, 40, 0, 0);
												this.rare = 5;
												this.accessory = true;
												this.vanity = true;
												this.hasVanityEffects = true;
												return;
											case 1988:
												this.width = 20;
												this.height = 14;
												this.maxStack = 1;
												this.value = Item.buyPrice(0, 3, 50, 0);
												this.vanity = true;
												this.headSlot = 145;
												return;
											case 1989:
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 269;
												this.width = 22;
												this.height = 32;
												this.createTile = 470;
												this.placeStyle = 2;
												return;
											case 1990:
												this.width = 20;
												this.height = 26;
												this.maxStack = Item.CommonMaxStack;
												this.value = Item.buyPrice(0, 2, 0, 0);
												this.rare = 2;
												this.UseSound = new SoundStyle?(SoundID.Item3);
												this.useStyle = 9;
												this.useTurn = true;
												this.hairDye = 0;
												this.useAnimation = 17;
												this.useTime = 17;
												this.consumable = true;
												return;
											case 1991:
												this.useTurn = true;
												this.useStyle = 1;
												this.useTime = 25;
												this.useAnimation = 25;
												this.width = 24;
												this.height = 28;
												this.UseSound = new SoundStyle?(SoundID.Item1);
												this.value = Item.buyPrice(0, 0, 25, 0);
												this.autoReuse = true;
												return;
											case 1992:
												this.useStyle = 1;
												this.autoReuse = true;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.width = 12;
												this.height = 12;
												this.makeNPC = 355;
												this.noUseGraphic = true;
												this.bait = 20;
												return;
											case 1993:
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 270;
												this.width = 12;
												this.height = 28;
												return;
											case 1994:
											case 1995:
											case 1996:
											case 1997:
											case 1998:
											case 1999:
											case 2000:
											case 2001:
											{
												this.useStyle = 1;
												this.autoReuse = true;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.width = 12;
												this.height = 12;
												this.makeNPC = 356;
												this.placeStyle = 1 + type - 1994;
												this.noUseGraphic = true;
												int num = type - 1994;
												if (num == 0)
												{
													this.bait = 5;
												}
												if (num == 4)
												{
													this.bait = 10;
												}
												if (num == 6)
												{
													this.bait = 15;
												}
												if (num == 3)
												{
													this.bait = 20;
												}
												if (num == 7)
												{
													this.bait = 25;
												}
												if (num == 2)
												{
													this.bait = 30;
												}
												if (num == 1)
												{
													this.bait = 35;
												}
												if (num == 5)
												{
													this.bait = 50;
												}
												return;
											}
											default:
												return;
											}
											break;
										}
										break;
									}
									break;
								}
								break;
							}
							break;
						}
						break;
					}
					break;
				}
				break;
			}
		}

		// Token: 0x0600027C RID: 636 RVA: 0x00055588 File Offset: 0x00053788
		public void SetDefaults3(int type)
		{
			switch (type)
			{
			case 2002:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.makeNPC = 357;
				this.noUseGraphic = true;
				this.bait = 25;
				return;
			case 2003:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.makeNPC = 300;
				this.noUseGraphic = true;
				return;
			case 2004:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.makeNPC = 358;
				this.noUseGraphic = true;
				this.bait = 35;
				return;
			case 2005:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 271;
				this.width = 12;
				this.height = 28;
				return;
			case 2006:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.makeNPC = 359;
				this.noUseGraphic = true;
				this.bait = 10;
				return;
			case 2007:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.makeNPC = 360;
				this.noUseGraphic = true;
				this.bait = 15;
				return;
			case 2008:
			case 2009:
			case 2010:
			case 2011:
			case 2012:
			case 2013:
			case 2014:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 126 + type - 2008;
				this.width = 12;
				this.height = 12;
				this.value = Item.buyPrice(0, 0, 0, 75);
				return;
			default:
				if (type >= 2015 && type <= 2019)
				{
					this.useStyle = 1;
					this.autoReuse = true;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.width = 12;
					this.height = 12;
					this.noUseGraphic = true;
					if (type == 2015)
					{
						this.makeNPC = 74;
					}
					if (type == 2016)
					{
						this.makeNPC = 297;
					}
					if (type == 2017)
					{
						this.makeNPC = 298;
					}
					if (type == 2018)
					{
						this.makeNPC = 299;
					}
					if (type == 2019)
					{
						this.makeNPC = 46;
					}
					return;
				}
				switch (type)
				{
				case 2020:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 6;
					return;
				case 2021:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 7;
					return;
				case 2022:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 8;
					return;
				case 2023:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 9;
					return;
				case 2024:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 10;
					return;
				case 2025:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 11;
					return;
				case 2026:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 12;
					return;
				case 2027:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 13;
					return;
				case 2028:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 14;
					return;
				case 2029:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 15;
					return;
				case 2030:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 16;
					return;
				case 2031:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 101;
					this.width = 20;
					this.height = 20;
					this.value = 300;
					this.placeStyle = 17;
					return;
				case 2032:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 10;
					this.value = 150;
					return;
				case 2033:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 11;
					this.value = 150;
					return;
				case 2034:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 12;
					this.value = 150;
					return;
				case 2035:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 13;
					this.value = 150;
					return;
				case 2036:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 14;
					this.value = 150;
					return;
				case 2037:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 15;
					this.value = 150;
					return;
				case 2038:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 16;
					this.value = 150;
					return;
				case 2039:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 17;
					this.value = 150;
					return;
				case 2040:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 18;
					this.value = 150;
					return;
				case 2041:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 19;
					this.value = 150;
					return;
				case 2042:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 20;
					this.value = 150;
					return;
				case 2043:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 42;
					this.width = 12;
					this.height = 28;
					this.placeStyle = 21;
					this.value = 150;
					return;
				case 2044:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 10;
					this.placeStyle = 27;
					this.width = 14;
					this.height = 28;
					this.value = 200;
					return;
				case 2045:
				case 2046:
				case 2047:
				case 2048:
				case 2049:
				case 2050:
				case 2051:
				case 2052:
				case 2053:
				case 2054:
					this.noWet = true;
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 33;
					this.width = 8;
					this.height = 18;
					this.value = Item.sellPrice(0, 0, 0, 60);
					this.placeStyle = 4 + type - 2045;
					return;
				default:
					if (type >= 2055 && type <= 2065)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 34;
						this.placeStyle = 7 + type - 2055;
						this.width = 26;
						this.height = 26;
						this.value = 3000;
						return;
					}
					if (type >= 2066 && type <= 2071)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.autoReuse = true;
						this.createTile = 79;
						this.placeStyle = 13 + type - 2066;
						this.width = 28;
						this.height = 20;
						this.value = 2000;
						return;
					}
					if (type >= 2072 && type <= 2081)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 90;
						this.placeStyle = type + 1 - 2072;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						return;
					}
					if (type >= 2082 && type <= 2091)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 93;
						this.placeStyle = type + 1 - 2082;
						this.width = 10;
						this.height = 24;
						this.value = 500;
						return;
					}
					if (type >= 2092 && type <= 2103)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 100;
						this.placeStyle = type + 1 - 2092;
						this.width = 20;
						this.height = 20;
						this.value = 1500;
						return;
					}
					if (type >= 2104 && type <= 2113)
					{
						this.width = 28;
						this.height = 20;
						this.headSlot = type + 146 - 2104;
						this.rare = 1;
						this.value = Item.sellPrice(0, 0, 75, 0);
						this.vanity = true;
						return;
					}
					if (type >= 2114 && type <= 2118)
					{
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 240;
						this.width = 30;
						this.height = 30;
						this.value = Item.sellPrice(0, 0, 5, 0);
						this.placeStyle = 41 + type - 2114;
						this.maxStack = Item.CommonMaxStack;
						return;
					}
					switch (type)
					{
					case 2119:
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 273;
						this.width = 12;
						this.height = 12;
						return;
					case 2120:
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 274;
						this.width = 12;
						this.height = 12;
						return;
					case 2121:
						this.useStyle = 1;
						this.autoReuse = true;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 12;
						this.height = 12;
						this.makeNPC = 361;
						this.noUseGraphic = true;
						return;
					case 2122:
						this.useStyle = 1;
						this.autoReuse = true;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 12;
						this.height = 12;
						this.makeNPC = 362;
						this.noUseGraphic = true;
						return;
					case 2123:
						this.useStyle = 1;
						this.autoReuse = true;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.width = 12;
						this.height = 12;
						this.makeNPC = 364;
						this.noUseGraphic = true;
						return;
					case 2124:
					case 2125:
					case 2126:
					case 2127:
					case 2128:
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 90;
						this.placeStyle = type + 11 - 2124;
						this.width = 20;
						this.height = 20;
						this.value = 300;
						return;
					default:
						if (type >= 2129 && type <= 2134)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 93;
							this.placeStyle = type + 11 - 2129;
							this.width = 10;
							this.height = 24;
							this.value = 500;
							return;
						}
						if (type >= 2135 && type <= 2138)
						{
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 101;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							this.placeStyle = 18 + type - 2135;
							return;
						}
						switch (type)
						{
						case 2139:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.autoReuse = true;
							this.createTile = 79;
							this.placeStyle = 19;
							this.width = 28;
							this.height = 20;
							this.value = 2000;
							return;
						case 2140:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.autoReuse = true;
							this.createTile = 79;
							this.placeStyle = 20;
							this.width = 28;
							this.height = 20;
							this.value = 2000;
							return;
						case 2141:
						case 2142:
						case 2143:
						case 2144:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 34;
							this.placeStyle = 18 + type - 2141;
							this.width = 26;
							this.height = 26;
							this.value = 3000;
							return;
						default:
							if (type >= 2145 && type <= 2148)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 42;
								this.width = 12;
								this.height = 28;
								this.placeStyle = 22 + type - 2145;
								this.value = 150;
								return;
							}
							if (type >= 2149 && type <= 2152)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 100;
								this.placeStyle = type + 13 - 2149;
								this.width = 20;
								this.height = 20;
								this.value = 1500;
								return;
							}
							if (type >= 2153 && type <= 2155)
							{
								this.noWet = true;
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 33;
								this.width = 8;
								this.height = 18;
								this.value = Item.sellPrice(0, 0, 0, 60);
								this.placeStyle = 14 + type - 2153;
								return;
							}
							switch (type)
							{
							case 2156:
								this.useStyle = 1;
								this.autoReuse = true;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.width = 12;
								this.height = 12;
								this.makeNPC = 366;
								this.noUseGraphic = true;
								this.bait = 15;
								return;
							case 2157:
								this.useStyle = 1;
								this.autoReuse = true;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.width = 12;
								this.height = 12;
								this.makeNPC = 367;
								this.noUseGraphic = true;
								this.bait = 10;
								return;
							case 2158:
							case 2159:
							case 2160:
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 7;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createWall = 133 + type - 2158;
								this.width = 12;
								this.height = 12;
								this.value = Item.buyPrice(0, 0, 0, 75);
								return;
							default:
								if (type == 2161)
								{
									this.width = 18;
									this.height = 18;
									this.maxStack = Item.CommonMaxStack;
									this.value = 50000;
									this.rare = 5;
									return;
								}
								if (type - 2162 <= 6)
								{
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 275 + type - 2162;
									this.width = 12;
									this.height = 12;
									return;
								}
								switch (type)
								{
								case 2169:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 7;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createWall = 136;
									this.width = 12;
									this.height = 12;
									return;
								case 2170:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 7;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createWall = 137;
									this.width = 12;
									this.height = 12;
									return;
								case 2171:
									this.autoReuse = true;
									this.useTurn = true;
									this.useStyle = 1;
									this.useAnimation = 15;
									this.useTime = 10;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 199;
									this.width = 14;
									this.height = 14;
									this.value = 500;
									return;
								case 2172:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 283;
									this.width = 28;
									this.height = 14;
									this.value = 500;
									return;
								case 2173:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 284;
									this.width = 12;
									this.height = 12;
									return;
								case 2174:
								case 2175:
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.maxStack = Item.CommonMaxStack;
									this.consumable = true;
									this.createTile = 285 + type - 2174;
									this.width = 12;
									this.height = 12;
									return;
								default:
									switch (type)
									{
									case 2176:
										this.useStyle = 1;
										this.useAnimation = 12;
										this.useTime = 4;
										this.knockBack = 6f;
										this.useTurn = true;
										this.autoReuse = true;
										this.width = 20;
										this.height = 12;
										this.damage = 45;
										this.pick = 200;
										this.axe = 25;
										this.UseSound = new SoundStyle?(SoundID.Item1);
										this.rare = 8;
										this.value = Item.sellPrice(0, 4, 0, 0);
										this.melee = true;
										this.tileBoost--;
										return;
									case 2177:
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 287;
										this.width = 22;
										this.height = 22;
										this.value = Item.buyPrice(0, 10, 0, 0);
										this.rare = 6;
										return;
									case 2178:
									case 2179:
									case 2180:
									case 2181:
									case 2182:
									case 2183:
									case 2184:
									case 2185:
									case 2186:
									case 2187:
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 288 + type - 2178;
										this.width = 12;
										this.height = 12;
										return;
									default:
										switch (type)
										{
										case 2188:
											this.mana = 25;
											this.UseSound = new SoundStyle?(SoundID.Item43);
											this.useStyle = 5;
											this.damage = 44;
											this.useAnimation = 30;
											this.useTime = 30;
											this.width = 40;
											this.height = 40;
											this.shoot = 355;
											this.shootSpeed = 14f;
											this.knockBack = 7f;
											this.magic = true;
											this.autoReuse = true;
											this.rare = 7;
											this.noMelee = true;
											this.value = Item.sellPrice(0, 7, 0, 0);
											return;
										case 2189:
											this.width = 18;
											this.height = 18;
											this.defense = 18;
											this.headSlot = 156;
											this.rare = 8;
											this.value = 375000;
											return;
										case 2190:
										case 2191:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 298 + type - 2190;
											this.width = 12;
											this.height = 12;
											return;
										default:
											if (type < 2192 || type > 2198)
											{
												switch (type)
												{
												case 2199:
													this.width = 18;
													this.height = 18;
													this.defense = 23;
													this.headSlot = 157;
													this.rare = 8;
													this.value = 300000;
													return;
												case 2200:
													this.width = 18;
													this.height = 18;
													this.defense = 20;
													this.bodySlot = 105;
													this.rare = 8;
													this.value = 240000;
													return;
												case 2201:
													this.width = 18;
													this.height = 18;
													this.defense = 32;
													this.bodySlot = 106;
													this.rare = 8;
													this.value = 240000;
													return;
												case 2202:
													this.width = 18;
													this.height = 18;
													this.defense = 18;
													this.legSlot = 98;
													this.rare = 8;
													this.value = 180000;
													return;
												case 2203:
												case 2204:
													break;
												case 2205:
													this.useStyle = 1;
													this.autoReuse = true;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.width = 12;
													this.height = 12;
													this.makeNPC = 148;
													this.noUseGraphic = true;
													return;
												case 2206:
												case 2207:
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 309 + type - 2206;
													this.width = 12;
													this.height = 12;
													return;
												case 2208:
													this.width = 18;
													this.height = 20;
													this.maxStack = Item.CommonMaxStack;
													return;
												case 2209:
													this.UseSound = new SoundStyle?(SoundID.Item3);
													this.healMana = 300;
													this.useStyle = 9;
													this.useTurn = true;
													this.useAnimation = 17;
													this.useTime = 17;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.width = 14;
													this.height = 24;
													this.rare = 4;
													this.value = 1500;
													return;
												case 2210:
												case 2211:
												case 2212:
												case 2213:
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 7;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createWall = 138 + type - 2210;
													this.width = 12;
													this.height = 12;
													return;
												default:
													if (type >= 2214 && type <= 2217)
													{
														this.width = 30;
														this.height = 30;
														this.accessory = true;
														this.rare = 3;
														this.value = Item.buyPrice(0, 10, 0, 0);
														return;
													}
													switch (type)
													{
													case 2218:
														this.width = 14;
														this.height = 18;
														this.maxStack = Item.CommonMaxStack;
														this.rare = 8;
														this.value = Item.sellPrice(0, 0, 50, 0);
														return;
													case 2219:
														this.width = 24;
														this.height = 24;
														this.accessory = true;
														this.value = Item.buyPrice(0, 15, 0, 0);
														this.rare = 4;
														return;
													case 2220:
														this.width = 24;
														this.height = 24;
														this.accessory = true;
														this.value = Item.buyPrice(0, 16, 0, 0);
														this.rare = 5;
														return;
													case 2221:
														this.width = 24;
														this.height = 24;
														this.accessory = true;
														this.rare = 5;
														this.value = Item.buyPrice(0, 16, 0, 0);
														this.handOffSlot = 10;
														this.handOnSlot = 17;
														return;
													case 2222:
														this.width = 18;
														this.height = 18;
														this.headSlot = 158;
														this.vanity = true;
														this.value = Item.sellPrice(0, 0, 25, 0);
														return;
													case 2223:
														this.autoReuse = true;
														this.useStyle = 5;
														this.useAnimation = 20;
														this.useTime = 20;
														this.width = 50;
														this.height = 18;
														this.shoot = 10;
														this.useAmmo = AmmoID.Arrow;
														this.UseSound = new SoundStyle?(SoundID.Item75);
														this.crit = 7;
														this.damage = 80;
														this.knockBack = 3f;
														this.shootSpeed = 7.75f;
														this.noMelee = true;
														this.value = Item.buyPrice(0, 45, 0, 0);
														this.rare = 8;
														this.ranged = true;
														return;
													case 2224:
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 34;
														this.placeStyle = 22;
														this.width = 26;
														this.height = 26;
														this.value = 160;
														return;
													case 2225:
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 93;
														this.placeStyle = 17;
														this.width = 10;
														this.height = 24;
														this.value = 120;
														return;
													case 2226:
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 42;
														this.width = 12;
														this.height = 28;
														this.placeStyle = 26;
														this.value = 200;
														return;
													case 2227:
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 100;
														this.placeStyle = 17;
														this.width = 20;
														this.height = 20;
														this.value = 120;
														return;
													case 2228:
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 15;
														this.placeStyle = 27;
														this.width = 12;
														this.height = 30;
														this.value = 150;
														return;
													case 2229:
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 18;
														this.placeStyle = 18;
														this.width = 28;
														this.height = 14;
														this.value = 150;
														return;
													case 2230:
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 21;
														this.placeStyle = 28;
														this.width = 26;
														this.height = 22;
														this.value = 320;
														return;
													case 2231:
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.autoReuse = true;
														this.createTile = 79;
														this.placeStyle = 21;
														this.width = 28;
														this.height = 20;
														this.value = 600;
														return;
													case 2232:
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 90;
														this.placeStyle = 16;
														this.width = 20;
														this.height = 20;
														this.value = 300;
														return;
													case 2233:
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 101;
														this.width = 20;
														this.height = 20;
														this.value = 300;
														this.placeStyle = 22;
														return;
													case 2234:
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 13;
														this.placeStyle = 5;
														this.width = 16;
														this.height = 24;
														this.value = 20;
														return;
													case 2235:
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 103;
														this.placeStyle = 1;
														this.width = 16;
														this.height = 24;
														this.value = 20;
														return;
													case 2236:
														this.noWet = true;
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 33;
														this.width = 8;
														this.height = 18;
														this.value = Item.sellPrice(0, 0, 0, 60);
														this.placeStyle = 17;
														return;
													case 2237:
													case 2238:
													case 2239:
													case 2240:
													case 2241:
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 10;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createTile = 104;
														this.placeStyle = 1 + type - 2237;
														this.width = 20;
														this.height = 20;
														this.value = 300;
														return;
													default:
														switch (type)
														{
														case 2242:
														case 2243:
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 103;
															this.placeStyle = 2 + type - 2242;
															this.width = 16;
															this.height = 24;
															this.value = 20;
															if (type == 2242)
															{
																this.value = Item.buyPrice(0, 0, 20, 0);
															}
															return;
														case 2244:
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 13;
															this.placeStyle = 6;
															this.width = 16;
															this.height = 24;
															this.value = 20;
															return;
														case 2245:
														case 2246:
														case 2247:
															this.useStyle = 1;
															this.useTurn = true;
															this.useAnimation = 15;
															this.useTime = 10;
															this.autoReuse = true;
															this.maxStack = Item.CommonMaxStack;
															this.consumable = true;
															this.createTile = 87;
															this.placeStyle = 5 + type - 2245;
															this.width = 20;
															this.height = 20;
															this.value = 300;
															return;
														default:
															switch (type)
															{
															case 2248:
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.createTile = 14;
																this.placeStyle = 24;
																this.width = 26;
																this.height = 20;
																this.value = 300;
																return;
															case 2249:
															case 2250:
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.createTile = 21;
																this.placeStyle = 29 + type - 2249;
																this.width = 26;
																this.height = 22;
																this.value = 2500;
																return;
															case 2251:
															case 2252:
															case 2253:
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.createTile = 18;
																this.placeStyle = 19 + type - 2251;
																this.width = 28;
																this.height = 14;
																this.value = 150;
																return;
															default:
																if (type >= 2254 && type <= 2256)
																{
																	this.useStyle = 1;
																	this.useTurn = true;
																	this.useAnimation = 15;
																	this.useTime = 10;
																	this.autoReuse = true;
																	this.maxStack = Item.CommonMaxStack;
																	this.consumable = true;
																	this.createTile = 87;
																	this.placeStyle = 8 + type - 2254;
																	this.width = 20;
																	this.height = 20;
																	this.value = 300;
																	return;
																}
																switch (type)
																{
																case 2257:
																case 2258:
																	this.useStyle = 1;
																	this.useTurn = true;
																	this.useAnimation = 15;
																	this.useTime = 10;
																	this.autoReuse = true;
																	this.maxStack = Item.CommonMaxStack;
																	this.consumable = true;
																	this.createTile = 13;
																	this.placeStyle = 7 + type - 2257;
																	this.width = 16;
																	this.height = 24;
																	this.value = 20;
																	if (type == 2258)
																	{
																		this.value = Item.buyPrice(0, 0, 50, 0);
																	}
																	return;
																case 2259:
																	this.useStyle = 1;
																	this.useTurn = true;
																	this.useAnimation = 15;
																	this.useTime = 10;
																	this.autoReuse = true;
																	this.maxStack = Item.CommonMaxStack;
																	this.consumable = true;
																	this.createTile = 14;
																	this.placeStyle = 25;
																	this.width = 26;
																	this.height = 20;
																	this.value = 300;
																	return;
																case 2260:
																case 2261:
																case 2262:
																	this.useStyle = 1;
																	this.useTurn = true;
																	this.useAnimation = 15;
																	this.useTime = 10;
																	this.autoReuse = true;
																	this.maxStack = Item.CommonMaxStack;
																	this.consumable = true;
																	this.createTile = 311 + type - 2260;
																	this.width = 12;
																	this.height = 12;
																	this.value = Item.buyPrice(0, 0, 0, 50);
																	return;
																default:
																	if (type >= 2263 && type <= 2264)
																	{
																		this.useStyle = 1;
																		this.useTurn = true;
																		this.useAnimation = 15;
																		this.useTime = 7;
																		this.autoReuse = true;
																		this.maxStack = Item.CommonMaxStack;
																		this.consumable = true;
																		this.createWall = 142 + type - 2263;
																		this.width = 12;
																		this.height = 12;
																		return;
																	}
																	switch (type)
																	{
																	case 2265:
																		this.useStyle = 1;
																		this.useTurn = true;
																		this.useAnimation = 15;
																		this.useTime = 10;
																		this.maxStack = Item.CommonMaxStack;
																		this.consumable = true;
																		this.createTile = 10;
																		this.placeStyle = 28;
																		this.width = 14;
																		this.height = 28;
																		this.value = 200;
																		return;
																	case 2266:
																		this.UseSound = new SoundStyle?(SoundID.Item3);
																		this.useStyle = 9;
																		this.useTurn = true;
																		this.useAnimation = 17;
																		this.useTime = 17;
																		this.maxStack = Item.CommonMaxStack;
																		this.consumable = true;
																		this.width = 10;
																		this.height = 10;
																		this.buffType = 25;
																		this.buffTime = 14400;
																		this.rare = 1;
																		this.value = Item.buyPrice(0, 0, 5, 0);
																		return;
																	case 2269:
																		this.autoReuse = false;
																		this.useStyle = 5;
																		this.useAnimation = 22;
																		this.useTime = 22;
																		this.width = 24;
																		this.height = 24;
																		this.shoot = 14;
																		this.knockBack = 4f;
																		this.useAmmo = AmmoID.Bullet;
																		this.UseSound = new SoundStyle?(SoundID.Item41);
																		this.damage = 20;
																		this.shootSpeed = 16f;
																		this.noMelee = true;
																		this.value = Item.buyPrice(0, 10, 0, 0);
																		this.scale = 0.85f;
																		this.rare = 2;
																		this.ranged = true;
																		this.crit = 5;
																		return;
																	case 2270:
																		this.useStyle = 5;
																		this.autoReuse = true;
																		this.useAnimation = 7;
																		this.useTime = 7;
																		this.width = 50;
																		this.height = 18;
																		this.shoot = 10;
																		this.useAmmo = AmmoID.Bullet;
																		this.UseSound = new SoundStyle?(SoundID.Item41);
																		this.damage = 21;
																		this.shootSpeed = 8f;
																		this.noMelee = true;
																		this.value = Item.buyPrice(0, 35, 0, 0);
																		this.knockBack = 1.5f;
																		this.rare = 4;
																		this.ranged = true;
																		return;
																	case 2271:
																		this.useStyle = 1;
																		this.useTurn = true;
																		this.useAnimation = 15;
																		this.useTime = 7;
																		this.autoReuse = true;
																		this.maxStack = Item.CommonMaxStack;
																		this.consumable = true;
																		this.createWall = 144;
																		this.width = 12;
																		this.height = 12;
																		this.value = Item.buyPrice(0, 0, 2, 50);
																		return;
																	case 2272:
																		this.useStyle = 5;
																		this.useAnimation = 20;
																		this.useTime = 20;
																		this.width = 38;
																		this.height = 10;
																		this.damage = 0;
																		this.scale = 0.9f;
																		this.shoot = 358;
																		this.shootSpeed = 11f;
																		this.value = Item.buyPrice(0, 1, 50, 0);
																		return;
																	case 2273:
																		this.autoReuse = true;
																		this.useTurn = true;
																		this.useStyle = 1;
																		this.useAnimation = 20;
																		this.knockBack = 3.5f;
																		this.width = 34;
																		this.height = 34;
																		this.damage = 18;
																		this.crit = 15;
																		this.scale = 1f;
																		this.UseSound = new SoundStyle?(SoundID.Item1);
																		this.rare = 1;
																		this.value = Item.buyPrice(0, 10, 0, 0);
																		this.melee = true;
																		if (this.Variant == ItemVariants.StrongerVariant)
																		{
																			this.rare = 8;
																			this.value = Item.buyPrice(0, 20, 0, 0);
																			this.damage = 150;
																			this.useAnimation = 15;
																			this.crit = 29;
																		}
																		return;
																	case 2274:
																		this.flame = true;
																		this.noWet = true;
																		this.useStyle = 1;
																		this.useTurn = true;
																		this.useAnimation = 15;
																		this.useTime = 10;
																		this.holdStyle = 1;
																		this.autoReuse = true;
																		this.maxStack = Item.CommonMaxStack;
																		this.consumable = true;
																		this.createTile = 4;
																		this.placeStyle = 12;
																		this.width = 10;
																		this.height = 12;
																		this.value = Item.buyPrice(0, 0, 3, 0);
																		return;
																	case 2275:
																		this.width = 18;
																		this.height = 18;
																		this.headSlot = 159;
																		this.value = Item.buyPrice(0, 3, 0, 0);
																		this.defense = 2;
																		this.rare = 2;
																		return;
																	case 2276:
																		this.width = 24;
																		this.height = 24;
																		this.accessory = true;
																		this.vanity = true;
																		this.rare = 8;
																		this.value = Item.buyPrice(2, 0, 0, 0);
																		this.handOnSlot = 16;
																		return;
																	case 2277:
																		this.width = 18;
																		this.height = 14;
																		this.bodySlot = 165;
																		this.value = Item.buyPrice(0, 2, 0, 0);
																		this.defense = 4;
																		this.rare = 1;
																		return;
																	case 2278:
																		this.width = 18;
																		this.height = 14;
																		this.bodySlot = 166;
																		this.vanity = true;
																		this.value = Item.buyPrice(0, 1, 0, 0);
																		return;
																	case 2279:
																		this.width = 18;
																		this.height = 14;
																		this.bodySlot = 167;
																		this.value = Item.buyPrice(0, 3, 50, 0);
																		this.defense = 2;
																		this.rare = 1;
																		return;
																	case 2280:
																		this.width = 22;
																		this.height = 20;
																		this.accessory = true;
																		this.value = 400000;
																		this.rare = 7;
																		this.wingSlot = 24;
																		return;
																	case 2281:
																	case 2282:
																	case 2283:
																		this.useStyle = 1;
																		this.useTurn = true;
																		this.useAnimation = 15;
																		this.useTime = 10;
																		this.autoReuse = true;
																		this.maxStack = Item.CommonMaxStack;
																		this.consumable = true;
																		this.createTile = 242;
																		this.width = 30;
																		this.height = 30;
																		this.value = Item.buyPrice(0, 1, 0, 0);
																		this.placeStyle = 22 + type - 2281;
																		return;
																	}
																	if (type >= 2284 && type <= 2287)
																	{
																		this.width = 26;
																		this.height = 30;
																		this.maxStack = 1;
																		this.value = Item.buyPrice(0, 5, 0, 0);
																		this.rare = 5;
																		this.accessory = true;
																		this.backSlot = (int)((sbyte)(3 + type - 2284));
																		this.frontSlot = (int)((sbyte)(1 + type - 2284));
																		this.vanity = true;
																		return;
																	}
																	switch (type)
																	{
																	case 2288:
																		this.useStyle = 1;
																		this.useTurn = true;
																		this.useAnimation = 15;
																		this.useTime = 10;
																		this.autoReuse = true;
																		this.maxStack = Item.CommonMaxStack;
																		this.consumable = true;
																		this.createTile = 15;
																		this.placeStyle = 28;
																		this.width = 12;
																		this.height = 30;
																		this.value = 150;
																		return;
																	case 2289:
																	case 2291:
																	case 2292:
																	case 2293:
																	case 2294:
																	case 2295:
																	case 2296:
																		this.useStyle = 1;
																		this.useAnimation = 8;
																		this.useTime = 8;
																		this.width = 24;
																		this.height = 28;
																		this.UseSound = new SoundStyle?(SoundID.Item1);
																		this.shoot = 361 + type - 2291;
																		switch (type)
																		{
																		case 2289:
																			this.fishingPole = 5;
																			this.shootSpeed = 9f;
																			this.shoot = 360;
																			this.value = Item.sellPrice(0, 0, 0, 60);
																			return;
																		case 2290:
																			break;
																		case 2291:
																			this.fishingPole = 15;
																			this.shootSpeed = 11f;
																			this.value = Item.sellPrice(0, 0, 24, 0);
																			return;
																		case 2292:
																			this.fishingPole = 30;
																			this.shootSpeed = 14f;
																			this.rare = 2;
																			this.value = Item.sellPrice(0, 1, 0, 0);
																			return;
																		case 2293:
																			this.fishingPole = 20;
																			this.shootSpeed = 13f;
																			this.rare = 1;
																			this.value = Item.sellPrice(0, 2, 40, 0);
																			return;
																		case 2294:
																			this.fishingPole = 50;
																			this.shootSpeed = 17f;
																			this.rare = 3;
																			this.value = Item.sellPrice(0, 20, 0, 0);
																			break;
																		case 2295:
																			this.fishingPole = 35;
																			this.shootSpeed = 15f;
																			this.rare = 2;
																			this.value = Item.buyPrice(0, 20, 0, 0);
																			return;
																		case 2296:
																			this.fishingPole = 40;
																			this.shootSpeed = 16f;
																			this.rare = 2;
																			this.value = Item.buyPrice(0, 35, 0, 0);
																			return;
																		default:
																			return;
																		}
																		return;
																	}
																	if (type >= 2421 && type <= 2422)
																	{
																		this.useStyle = 1;
																		this.useAnimation = 8;
																		this.useTime = 8;
																		this.width = 24;
																		this.height = 28;
																		this.UseSound = new SoundStyle?(SoundID.Item1);
																		this.shoot = 381 + type - 2421;
																		if (type == 2421)
																		{
																			this.fishingPole = 22;
																			this.shootSpeed = 13.5f;
																			this.rare = 1;
																			this.value = Item.sellPrice(0, 3, 12, 0);
																			return;
																		}
																		this.fishingPole = 45;
																		this.shootSpeed = 16.5f;
																		this.rare = 3;
																		this.value = Item.sellPrice(0, 10, 0, 0);
																		return;
																	}
																	else
																	{
																		if (type == 2320)
																		{
																			this.autoReuse = true;
																			this.width = 26;
																			this.height = 26;
																			this.value = Item.sellPrice(0, 1, 50, 0);
																			this.useStyle = 1;
																			this.useAnimation = 24;
																			this.useTime = 14;
																			this.hammer = 70;
																			this.knockBack = 6f;
																			this.damage = 24;
																			this.scale = 1.05f;
																			this.UseSound = new SoundStyle?(SoundID.Item1);
																			this.rare = 3;
																			this.melee = true;
																			return;
																		}
																		switch (type)
																		{
																		case 2290:
																		case 2291:
																		case 2292:
																		case 2293:
																		case 2294:
																		case 2295:
																		case 2296:
																		case 2297:
																		case 2298:
																		case 2299:
																		case 2300:
																		case 2301:
																		case 2302:
																		case 2303:
																		case 2304:
																		case 2305:
																		case 2306:
																		case 2307:
																		case 2308:
																		case 2309:
																		case 2310:
																		case 2311:
																		case 2312:
																		case 2313:
																		case 2315:
																		case 2316:
																		case 2317:
																		case 2318:
																		case 2319:
																		case 2320:
																		case 2321:
																			this.maxStack = Item.CommonMaxStack;
																			this.width = 26;
																			this.height = 26;
																			this.value = Item.sellPrice(0, 0, 5, 0);
																			if (type == 2308)
																			{
																				this.value = Item.sellPrice(0, 10, 0, 0);
																				this.rare = 4;
																			}
																			if (type == 2312)
																			{
																				this.value = Item.sellPrice(0, 0, 50, 0);
																				this.rare = 2;
																			}
																			if (type == 2317)
																			{
																				this.value = Item.sellPrice(0, 3, 0, 0);
																				this.rare = 4;
																			}
																			if (type == 2310)
																			{
																				this.value = Item.sellPrice(0, 1, 0, 0);
																				this.rare = 3;
																			}
																			if (type == 2321)
																			{
																				this.value = Item.sellPrice(0, 0, 25, 0);
																				this.rare = 1;
																			}
																			if (type == 2315)
																			{
																				this.value = Item.sellPrice(0, 0, 15, 0);
																				this.rare = 2;
																			}
																			if (type == 2303)
																			{
																				this.value = Item.sellPrice(0, 0, 15, 0);
																				this.rare = 1;
																			}
																			if (type == 2304)
																			{
																				this.value = Item.sellPrice(0, 0, 30, 0);
																				this.rare = 1;
																			}
																			if (type == 2316)
																			{
																				this.value = Item.sellPrice(0, 0, 15, 0);
																			}
																			if (type == 2311)
																			{
																				this.value = Item.sellPrice(0, 0, 15, 0);
																				this.rare = 1;
																			}
																			if (type == 2313)
																			{
																				this.value = Item.sellPrice(0, 0, 15, 0);
																				this.rare = 1;
																			}
																			if (type == 2306)
																			{
																				this.value = Item.sellPrice(0, 0, 15, 0);
																				this.rare = 1;
																			}
																			if (type == 2307)
																			{
																				this.value = Item.sellPrice(0, 0, 25, 0);
																				this.rare = 2;
																			}
																			if (type == 2319)
																			{
																				this.value = Item.sellPrice(0, 0, 15, 0);
																				this.rare = 1;
																			}
																			if (type == 2318)
																			{
																				this.value = Item.sellPrice(0, 0, 15, 0);
																				this.rare = 1;
																			}
																			if (type == 2298)
																			{
																				this.value = Item.sellPrice(0, 0, 7, 50);
																			}
																			if (type == 2309)
																			{
																				this.value = Item.sellPrice(0, 0, 7, 50);
																				this.rare = 1;
																			}
																			if (type == 2300)
																			{
																				this.value = Item.sellPrice(0, 0, 7, 50);
																			}
																			if (type == 2301)
																			{
																				this.value = Item.sellPrice(0, 0, 7, 50);
																			}
																			if (type == 2302)
																			{
																				this.value = Item.sellPrice(0, 0, 15, 0);
																			}
																			if (type == 2299)
																			{
																				this.value = Item.sellPrice(0, 0, 7, 50);
																			}
																			if (type == 2305)
																			{
																				this.value = Item.sellPrice(0, 0, 7, 50);
																				this.rare = 1;
																			}
																			return;
																		case 2314:
																			this.maxStack = Item.CommonMaxStack;
																			this.width = 26;
																			this.height = 26;
																			this.value = Item.sellPrice(0, 0, 15, 0);
																			this.rare = 1;
																			this.UseSound = new SoundStyle?(SoundID.Item3);
																			this.healLife = 120;
																			this.useStyle = 2;
																			this.useTurn = true;
																			this.useAnimation = 17;
																			this.useTime = 17;
																			this.consumable = true;
																			this.potion = true;
																			return;
																		default:
																			switch (type)
																			{
																			case 2322:
																				this.UseSound = new SoundStyle?(SoundID.Item3);
																				this.useStyle = 9;
																				this.useTurn = true;
																				this.useAnimation = 17;
																				this.useTime = 17;
																				this.maxStack = Item.CommonMaxStack;
																				this.consumable = true;
																				this.width = 14;
																				this.height = 24;
																				this.buffType = 104;
																				this.buffTime = 36000;
																				this.value = 1000;
																				this.rare = 1;
																				return;
																			case 2323:
																				this.UseSound = new SoundStyle?(SoundID.Item3);
																				this.useStyle = 9;
																				this.useTurn = true;
																				this.useAnimation = 17;
																				this.useTime = 17;
																				this.maxStack = Item.CommonMaxStack;
																				this.consumable = true;
																				this.width = 14;
																				this.height = 24;
																				this.buffType = 105;
																				this.buffTime = 28800;
																				this.value = 1000;
																				this.rare = 1;
																				return;
																			case 2324:
																				this.UseSound = new SoundStyle?(SoundID.Item3);
																				this.useStyle = 9;
																				this.useTurn = true;
																				this.useAnimation = 17;
																				this.useTime = 17;
																				this.maxStack = Item.CommonMaxStack;
																				this.consumable = true;
																				this.width = 14;
																				this.height = 24;
																				this.buffType = 106;
																				this.buffTime = 43200;
																				this.value = 1000;
																				this.rare = 1;
																				return;
																			case 2325:
																				this.UseSound = new SoundStyle?(SoundID.Item3);
																				this.useStyle = 9;
																				this.useTurn = true;
																				this.useAnimation = 17;
																				this.useTime = 17;
																				this.maxStack = Item.CommonMaxStack;
																				this.consumable = true;
																				this.width = 14;
																				this.height = 24;
																				this.buffType = 107;
																				this.buffTime = 162000;
																				this.value = 1000;
																				this.rare = 1;
																				return;
																			case 2326:
																				this.UseSound = new SoundStyle?(SoundID.Item3);
																				this.useStyle = 9;
																				this.useTurn = true;
																				this.useAnimation = 17;
																				this.useTime = 17;
																				this.maxStack = Item.CommonMaxStack;
																				this.consumable = true;
																				this.width = 14;
																				this.height = 24;
																				this.buffType = 108;
																				this.buffTime = 28800;
																				this.value = 1000;
																				this.rare = 1;
																				return;
																			case 2327:
																				this.UseSound = new SoundStyle?(SoundID.Item3);
																				this.useStyle = 9;
																				this.useTurn = true;
																				this.useAnimation = 17;
																				this.useTime = 17;
																				this.maxStack = Item.CommonMaxStack;
																				this.consumable = true;
																				this.width = 14;
																				this.height = 24;
																				this.buffType = 109;
																				this.buffTime = 28800;
																				this.value = 1000;
																				this.rare = 1;
																				return;
																			case 2328:
																				this.UseSound = new SoundStyle?(SoundID.Item3);
																				this.useStyle = 9;
																				this.useTurn = true;
																				this.useAnimation = 17;
																				this.useTime = 17;
																				this.maxStack = Item.CommonMaxStack;
																				this.consumable = true;
																				this.width = 14;
																				this.height = 24;
																				this.buffType = 110;
																				this.buffTime = 28800;
																				this.value = 1000;
																				this.rare = 1;
																				return;
																			case 2329:
																				this.UseSound = new SoundStyle?(SoundID.Item3);
																				this.useStyle = 9;
																				this.useTurn = true;
																				this.useAnimation = 17;
																				this.useTime = 17;
																				this.maxStack = Item.CommonMaxStack;
																				this.consumable = true;
																				this.width = 14;
																				this.height = 24;
																				this.buffType = 111;
																				this.buffTime = 36000;
																				this.value = 1000;
																				this.rare = 1;
																				return;
																			case 2330:
																				this.autoReuse = true;
																				this.useStyle = 1;
																				this.useTime = 35;
																				this.useAnimation = 35;
																				this.width = 24;
																				this.height = 28;
																				this.damage = 35;
																				this.knockBack = 8f;
																				this.scale = 1.15f;
																				this.UseSound = new SoundStyle?(SoundID.Item1);
																				this.rare = 1;
																				this.value = Item.sellPrice(0, 1, 0, 0);
																				this.melee = true;
																				return;
																			case 2331:
																				this.useStyle = 5;
																				this.useAnimation = 20;
																				this.useTime = 20;
																				this.shootSpeed = 4f;
																				this.knockBack = 6.5f;
																				this.width = 40;
																				this.height = 40;
																				this.damage = 70;
																				this.crit = 20;
																				this.UseSound = new SoundStyle?(SoundID.Item1);
																				this.shoot = 367;
																				this.rare = 7;
																				this.value = Item.sellPrice(0, 1, 0, 0);
																				this.noMelee = true;
																				this.noUseGraphic = true;
																				this.melee = true;
																				return;
																			case 2332:
																				this.useStyle = 5;
																				this.useAnimation = 20;
																				this.useTime = 20;
																				this.shootSpeed = 4f;
																				this.knockBack = 4.25f;
																				this.width = 40;
																				this.height = 40;
																				this.damage = 19;
																				this.UseSound = new SoundStyle?(SoundID.Item1);
																				this.shoot = 368;
																				this.rare = 2;
																				this.value = Item.sellPrice(0, 0, 50, 0);
																				this.noMelee = true;
																				this.noUseGraphic = true;
																				this.melee = true;
																				return;
																			case 2333:
																				this.useStyle = 1;
																				this.useTurn = true;
																				this.useAnimation = 15;
																				this.useTime = 7;
																				this.autoReuse = true;
																				this.maxStack = Item.CommonMaxStack;
																				this.consumable = true;
																				this.createWall = 145;
																				this.width = 12;
																				this.height = 12;
																				return;
																			case 2334:
																				this.width = 12;
																				this.height = 12;
																				this.rare = 1;
																				this.maxStack = Item.CommonMaxStack;
																				this.value = Item.sellPrice(0, 0, 10, 0);
																				this.createTile = 376;
																				this.placeStyle = 0;
																				this.useAnimation = 15;
																				this.useTime = 15;
																				this.autoReuse = true;
																				this.useStyle = 1;
																				this.consumable = true;
																				return;
																			case 2335:
																				this.width = 12;
																				this.height = 12;
																				this.rare = 2;
																				this.maxStack = Item.CommonMaxStack;
																				this.value = Item.sellPrice(0, 0, 50, 0);
																				this.createTile = 376;
																				this.placeStyle = 1;
																				this.useAnimation = 15;
																				this.useTime = 15;
																				this.autoReuse = true;
																				this.useStyle = 1;
																				this.consumable = true;
																				return;
																			case 2336:
																				this.width = 12;
																				this.height = 12;
																				this.rare = 3;
																				this.maxStack = Item.CommonMaxStack;
																				this.value = Item.sellPrice(0, 2, 0, 0);
																				this.createTile = 376;
																				this.placeStyle = 2;
																				this.useAnimation = 15;
																				this.useTime = 15;
																				this.autoReuse = true;
																				this.useStyle = 1;
																				this.consumable = true;
																				return;
																			case 2337:
																			case 2338:
																			case 2339:
																				this.useStyle = 1;
																				this.useAnimation = 15;
																				this.useTime = 10;
																				this.width = 12;
																				this.height = 12;
																				this.rare = -1;
																				this.maxStack = Item.CommonMaxStack;
																				this.autoReuse = true;
																				this.MakeUsableWithChlorophyteExtractinator();
																				return;
																			default:
																				switch (type)
																				{
																				case 2340:
																					this.useStyle = 1;
																					this.useAnimation = 15;
																					this.useTime = 7;
																					this.useTurn = true;
																					this.autoReuse = true;
																					this.width = 16;
																					this.height = 16;
																					this.maxStack = Item.CommonMaxStack;
																					this.createTile = 314;
																					this.placeStyle = 0;
																					this.consumable = true;
																					this.cartTrack = true;
																					this.tileBoost = 5;
																					return;
																				case 2341:
																					this.useStyle = 1;
																					this.useTurn = true;
																					this.useAnimation = 22;
																					this.useTime = 13;
																					this.autoReuse = true;
																					this.width = 24;
																					this.height = 28;
																					this.damage = 16;
																					this.pick = 59;
																					this.scale = 1.15f;
																					this.UseSound = new SoundStyle?(SoundID.Item1);
																					this.knockBack = 3f;
																					this.rare = 3;
																					this.value = Item.sellPrice(0, 1, 50, 0);
																					this.melee = true;
																					return;
																				case 2342:
																					this.useStyle = 5;
																					this.useAnimation = 25;
																					this.useTime = 8;
																					this.shootSpeed = 48f;
																					this.knockBack = 2.25f;
																					this.width = 20;
																					this.height = 12;
																					this.damage = 13;
																					this.axe = 14;
																					this.UseSound = new SoundStyle?(SoundID.Item23);
																					this.shoot = 369;
																					this.rare = 3;
																					this.value = Item.sellPrice(0, 1, 50, 0);
																					this.noMelee = true;
																					this.noUseGraphic = true;
																					this.melee = true;
																					this.channel = true;
																					return;
																				case 2343:
																					this.width = 48;
																					this.height = 28;
																					this.mountType = 6;
																					this.rare = 1;
																					this.value = Item.sellPrice(0, 0, 2, 0);
																					return;
																				case 2344:
																					this.UseSound = new SoundStyle?(SoundID.Item3);
																					this.useStyle = 9;
																					this.useTurn = true;
																					this.useAnimation = 17;
																					this.useTime = 17;
																					this.maxStack = Item.CommonMaxStack;
																					this.consumable = true;
																					this.width = 14;
																					this.height = 24;
																					this.buffType = 112;
																					this.buffTime = 28800;
																					this.value = 1000;
																					this.rare = 1;
																					return;
																				case 2345:
																					this.UseSound = new SoundStyle?(SoundID.Item3);
																					this.useStyle = 9;
																					this.useTurn = true;
																					this.useAnimation = 17;
																					this.useTime = 17;
																					this.maxStack = Item.CommonMaxStack;
																					this.consumable = true;
																					this.width = 14;
																					this.height = 24;
																					this.buffType = 113;
																					this.buffTime = 28800;
																					this.value = 1000;
																					this.rare = 1;
																					return;
																				case 2346:
																					this.UseSound = new SoundStyle?(SoundID.Item3);
																					this.useStyle = 9;
																					this.useTurn = true;
																					this.useAnimation = 17;
																					this.useTime = 17;
																					this.maxStack = Item.CommonMaxStack;
																					this.consumable = true;
																					this.width = 14;
																					this.height = 24;
																					this.buffType = 114;
																					this.buffTime = 14400;
																					this.value = 1000;
																					this.rare = 1;
																					return;
																				case 2347:
																					this.UseSound = new SoundStyle?(SoundID.Item3);
																					this.useStyle = 9;
																					this.useTurn = true;
																					this.useAnimation = 17;
																					this.useTime = 17;
																					this.maxStack = Item.CommonMaxStack;
																					this.consumable = true;
																					this.width = 14;
																					this.height = 24;
																					this.buffType = 115;
																					this.buffTime = 14400;
																					this.value = 1000;
																					this.rare = 1;
																					return;
																				case 2348:
																					this.UseSound = new SoundStyle?(SoundID.Item3);
																					this.useStyle = 9;
																					this.useTurn = true;
																					this.useAnimation = 17;
																					this.useTime = 17;
																					this.maxStack = Item.CommonMaxStack;
																					this.consumable = true;
																					this.width = 14;
																					this.height = 24;
																					this.buffType = 116;
																					this.buffTime = 14400;
																					this.value = 1000;
																					this.rare = 1;
																					return;
																				case 2349:
																					this.UseSound = new SoundStyle?(SoundID.Item3);
																					this.useStyle = 9;
																					this.useTurn = true;
																					this.useAnimation = 17;
																					this.useTime = 17;
																					this.maxStack = Item.CommonMaxStack;
																					this.consumable = true;
																					this.width = 14;
																					this.height = 24;
																					this.buffType = 117;
																					this.buffTime = 14400;
																					this.value = 1000;
																					this.rare = 1;
																					return;
																				case 2350:
																					this.UseSound = new SoundStyle?(SoundID.Item6);
																					this.useStyle = 6;
																					this.useTurn = true;
																					this.useTime = (this.useAnimation = 30);
																					this.maxStack = Item.CommonMaxStack;
																					this.consumable = true;
																					this.width = 14;
																					this.height = 24;
																					this.value = 1000;
																					this.rare = 1;
																					return;
																				case 2351:
																					this.UseSound = new SoundStyle?(SoundID.Item6);
																					this.useStyle = 9;
																					this.useTurn = true;
																					this.useAnimation = 17;
																					this.useTime = 17;
																					this.maxStack = Item.CommonMaxStack;
																					this.consumable = true;
																					this.width = 14;
																					this.height = 24;
																					this.value = 1000;
																					this.rare = 1;
																					return;
																				case 2352:
																					this.useStyle = 1;
																					this.shootSpeed = 9f;
																					this.shoot = 370;
																					this.width = 18;
																					this.height = 20;
																					this.maxStack = Item.CommonMaxStack;
																					this.consumable = true;
																					this.UseSound = new SoundStyle?(SoundID.Item1);
																					this.useAnimation = 15;
																					this.useTime = 15;
																					this.noUseGraphic = true;
																					this.noMelee = true;
																					this.value = 200;
																					return;
																				case 2353:
																					this.useStyle = 1;
																					this.shootSpeed = 9f;
																					this.shoot = 371;
																					this.width = 18;
																					this.height = 20;
																					this.maxStack = Item.CommonMaxStack;
																					this.consumable = true;
																					this.UseSound = new SoundStyle?(SoundID.Item1);
																					this.useAnimation = 15;
																					this.useTime = 15;
																					this.noUseGraphic = true;
																					this.noMelee = true;
																					this.value = 200;
																					return;
																				case 2354:
																					this.UseSound = new SoundStyle?(SoundID.Item3);
																					this.useStyle = 9;
																					this.useTurn = true;
																					this.useAnimation = 17;
																					this.useTime = 17;
																					this.maxStack = Item.CommonMaxStack;
																					this.consumable = true;
																					this.width = 14;
																					this.height = 24;
																					this.buffType = 121;
																					this.buffTime = 28800;
																					this.rare = 1;
																					this.value = 1000;
																					return;
																				case 2355:
																					this.UseSound = new SoundStyle?(SoundID.Item3);
																					this.useStyle = 9;
																					this.useTurn = true;
																					this.useAnimation = 17;
																					this.useTime = 17;
																					this.maxStack = Item.CommonMaxStack;
																					this.consumable = true;
																					this.width = 14;
																					this.height = 24;
																					this.buffType = 122;
																					this.buffTime = 28800;
																					this.value = 1000;
																					this.rare = 1;
																					return;
																				case 2356:
																					this.UseSound = new SoundStyle?(SoundID.Item3);
																					this.useStyle = 9;
																					this.useTurn = true;
																					this.useAnimation = 17;
																					this.useTime = 17;
																					this.maxStack = Item.CommonMaxStack;
																					this.consumable = true;
																					this.width = 14;
																					this.height = 24;
																					this.buffType = 123;
																					this.buffTime = 14400;
																					this.value = 1000;
																					this.rare = 1;
																					return;
																				case 2357:
																					this.autoReuse = true;
																					this.useTurn = true;
																					this.useStyle = 1;
																					this.useAnimation = 15;
																					this.useTime = 10;
																					this.maxStack = Item.CommonMaxStack;
																					this.consumable = true;
																					this.createTile = 82;
																					this.placeStyle = 6;
																					this.width = 12;
																					this.height = 14;
																					this.value = 80;
																					return;
																				case 2358:
																					this.maxStack = Item.CommonMaxStack;
																					this.width = 12;
																					this.height = 14;
																					this.value = 100;
																					return;
																				case 2359:
																					this.UseSound = new SoundStyle?(SoundID.Item3);
																					this.useStyle = 9;
																					this.useTurn = true;
																					this.useAnimation = 17;
																					this.useTime = 17;
																					this.maxStack = Item.CommonMaxStack;
																					this.consumable = true;
																					this.width = 14;
																					this.height = 24;
																					this.buffType = 124;
																					this.buffTime = 54000;
																					this.value = 1000;
																					this.rare = 1;
																					return;
																				case 2360:
																					this.noUseGraphic = true;
																					this.damage = 0;
																					this.useStyle = 5;
																					this.shootSpeed = 13f;
																					this.shoot = 372;
																					this.width = 18;
																					this.height = 28;
																					this.UseSound = new SoundStyle?(SoundID.Item1);
																					this.useAnimation = 20;
																					this.useTime = 20;
																					this.rare = 3;
																					this.noMelee = true;
																					this.value = 20000;
																					return;
																				case 2361:
																					this.width = 18;
																					this.height = 18;
																					this.defense = 4;
																					this.headSlot = 160;
																					this.rare = 3;
																					this.value = Item.sellPrice(0, 0, 40, 0);
																					return;
																				case 2362:
																					this.width = 18;
																					this.height = 18;
																					this.defense = 5;
																					this.bodySlot = 168;
																					this.rare = 3;
																					this.value = Item.sellPrice(0, 0, 60, 0);
																					return;
																				case 2363:
																					this.width = 18;
																					this.height = 18;
																					this.defense = 4;
																					this.legSlot = 103;
																					this.rare = 3;
																					this.value = Item.sellPrice(0, 0, 50, 0);
																					return;
																				case 2364:
																					this.mana = 10;
																					this.damage = 12;
																					this.useStyle = 1;
																					this.shootSpeed = 10f;
																					this.shoot = 373;
																					this.width = 26;
																					this.height = 28;
																					this.UseSound = new SoundStyle?(SoundID.Item76);
																					this.useAnimation = 22;
																					this.useTime = 22;
																					this.rare = 3;
																					this.noMelee = true;
																					this.knockBack = 2f;
																					this.buffType = 125;
																					this.value = Item.sellPrice(0, 0, 70, 0);
																					this.summon = true;
																					this.autoReuse = true;
																					this.reuseDelay = 2;
																					return;
																				case 2365:
																					this.mana = 10;
																					this.damage = 17;
																					this.useStyle = 1;
																					this.shootSpeed = 10f;
																					this.shoot = 375;
																					this.width = 26;
																					this.height = 28;
																					this.UseSound = new SoundStyle?(SoundID.Item77);
																					this.useAnimation = 36;
																					this.useTime = 36;
																					this.rare = 3;
																					this.noMelee = true;
																					this.knockBack = 2f;
																					this.buffType = 126;
																					this.value = Item.sellPrice(0, 0, 54, 0);
																					this.summon = true;
																					this.autoReuse = true;
																					this.reuseDelay = 2;
																					return;
																				case 2366:
																					this.mana = 10;
																					this.damage = 26;
																					this.useStyle = 1;
																					this.shootSpeed = 14f;
																					this.shoot = 377;
																					this.width = 18;
																					this.height = 20;
																					this.UseSound = new SoundStyle?(SoundID.Item78);
																					this.useAnimation = 30;
																					this.useTime = 30;
																					this.noMelee = true;
																					this.value = Item.sellPrice(0, 5, 0, 0);
																					this.knockBack = 7.5f;
																					this.rare = 4;
																					this.summon = true;
																					this.sentry = true;
																					return;
																				case 2367:
																					this.width = 18;
																					this.height = 18;
																					this.defense = 1;
																					this.headSlot = 161;
																					this.rare = 1;
																					this.value = Item.sellPrice(0, 1, 0, 0);
																					return;
																				case 2368:
																					this.width = 18;
																					this.height = 18;
																					this.bodySlot = 169;
																					this.defense = 2;
																					this.rare = 1;
																					this.value = Item.sellPrice(0, 1, 0, 0);
																					return;
																				case 2369:
																					this.width = 18;
																					this.height = 18;
																					this.legSlot = 104;
																					this.defense = 1;
																					this.rare = 1;
																					this.value = Item.sellPrice(0, 1, 0, 0);
																					return;
																				case 2370:
																					this.width = 18;
																					this.height = 18;
																					this.headSlot = 162;
																					this.rare = 4;
																					this.value = Item.sellPrice(0, 0, 75, 0);
																					this.defense = 5;
																					return;
																				case 2371:
																					this.width = 18;
																					this.height = 18;
																					this.bodySlot = 170;
																					this.rare = 4;
																					this.value = Item.sellPrice(0, 0, 75, 0);
																					this.defense = 8;
																					return;
																				case 2372:
																					this.width = 18;
																					this.height = 18;
																					this.legSlot = 105;
																					this.rare = 4;
																					this.value = Item.sellPrice(0, 0, 75, 0);
																					this.defense = 7;
																					return;
																				case 2373:
																				case 2374:
																				case 2375:
																					this.width = 26;
																					this.height = 30;
																					this.maxStack = 1;
																					this.value = Item.sellPrice(0, 1, 0, 0);
																					this.rare = 1;
																					this.accessory = true;
																					return;
																				default:
																					if (type >= 2376 && type <= 2385)
																					{
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 87;
																						this.placeStyle = 11 + type - 2376;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						if (type == 2379)
																						{
																							this.value = Item.buyPrice(0, 10, 0, 0);
																						}
																						return;
																					}
																					if (type >= 2386 && type <= 2396)
																					{
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 88;
																						this.placeStyle = 5 + type - 2386;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						if (type == 2389)
																						{
																							this.value = Item.buyPrice(0, 10, 0, 0);
																						}
																						return;
																					}
																					if (type >= 2397 && type <= 2416)
																					{
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 89;
																						this.placeStyle = 1 + type - 2397;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					}
																					switch (type)
																					{
																					case 2417:
																						this.width = 18;
																						this.height = 18;
																						this.headSlot = 163;
																						this.vanity = true;
																						this.value = Item.sellPrice(0, 1, 0, 0);
																						return;
																					case 2418:
																						this.width = 18;
																						this.height = 18;
																						this.bodySlot = 171;
																						this.vanity = true;
																						this.value = Item.sellPrice(0, 1, 0, 0);
																						return;
																					case 2419:
																						this.width = 18;
																						this.height = 18;
																						this.legSlot = 106;
																						this.vanity = true;
																						this.value = Item.sellPrice(0, 1, 0, 0);
																						return;
																					case 2420:
																						this.damage = 0;
																						this.useStyle = 1;
																						this.shoot = 380;
																						this.width = 16;
																						this.height = 30;
																						this.UseSound = new SoundStyle?(SoundID.Item2);
																						this.useAnimation = 20;
																						this.useTime = 20;
																						this.rare = 3;
																						this.noMelee = true;
																						this.value = Item.sellPrice(0, 3, 0, 0);
																						this.buffType = 127;
																						return;
																					case 2423:
																						this.width = 16;
																						this.height = 24;
																						this.accessory = true;
																						this.rare = 1;
																						this.value = 50000;
																						this.shoeSlot = 15;
																						return;
																					case 2424:
																						this.noMelee = true;
																						this.useStyle = 1;
																						this.shootSpeed = 20f;
																						this.shoot = 383;
																						this.damage = 70;
																						this.knockBack = 8f;
																						this.width = 34;
																						this.height = 34;
																						this.UseSound = new SoundStyle?(SoundID.Item1);
																						this.useAnimation = 20;
																						this.useTime = 20;
																						this.noUseGraphic = true;
																						this.rare = 3;
																						this.value = 50000;
																						this.melee = true;
																						return;
																					case 2428:
																						this.useStyle = 1;
																						this.width = 16;
																						this.height = 30;
																						this.UseSound = new SoundStyle?(SoundID.Item79);
																						this.useAnimation = 20;
																						this.useTime = 20;
																						this.rare = 8;
																						this.noMelee = true;
																						this.mountType = 1;
																						this.value = Item.sellPrice(0, 5, 0, 0);
																						return;
																					case 2429:
																						this.useStyle = 1;
																						this.width = 16;
																						this.height = 30;
																						this.UseSound = new SoundStyle?(SoundID.Item80);
																						this.useAnimation = 20;
																						this.useTime = 20;
																						this.rare = 8;
																						this.noMelee = true;
																						this.mountType = 2;
																						this.value = Item.sellPrice(0, 5, 0, 0);
																						return;
																					case 2430:
																						this.useStyle = 1;
																						this.width = 16;
																						this.height = 30;
																						this.UseSound = new SoundStyle?(SoundID.Item81);
																						this.useAnimation = 20;
																						this.useTime = 20;
																						this.rare = 8;
																						this.noMelee = true;
																						this.mountType = 3;
																						this.value = Item.sellPrice(0, 5, 0, 0);
																						return;
																					case 2431:
																						this.width = 18;
																						this.height = 16;
																						this.maxStack = Item.CommonMaxStack;
																						this.value = Item.sellPrice(0, 0, 5, 0);
																						return;
																					case 2432:
																					case 2433:
																					case 2434:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 7;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createWall = 146 + type - 2432;
																						this.width = 12;
																						this.height = 12;
																						if (type == 2434)
																						{
																							this.value = Item.buyPrice(0, 0, 0, 50);
																						}
																						return;
																					}
																					if (type == 2435)
																					{
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 315;
																						this.width = 12;
																						this.height = 12;
																						this.value = Item.buyPrice(0, 0, 0, 50);
																						return;
																					}
																					if (type - 2436 <= 2)
																					{
																						this.useStyle = 1;
																						this.autoReuse = true;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.width = 12;
																						this.height = 12;
																						this.noUseGraphic = true;
																						this.bait = 20;
																						this.value = Item.sellPrice(0, 3, 50, 0);
																						return;
																					}
																					if (type >= 2439 && type <= 2441)
																					{
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 316 + type - 2439;
																						this.width = 12;
																						this.height = 12;
																						return;
																					}
																					if (type >= 2442 && type <= 2449)
																					{
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 240;
																						this.width = 30;
																						this.height = 30;
																						this.value = Item.sellPrice(0, 0, 50, 0);
																						this.placeStyle = 46 + type - 2442;
																						return;
																					}
																					if (type >= 2450 && type <= 2488)
																					{
																						this.DefaultToQuestFish();
																						return;
																					}
																					switch (type)
																					{
																					case 2413:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 89;
																						this.placeStyle = 23;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2489:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 240;
																						this.width = 30;
																						this.height = 30;
																						this.value = Item.sellPrice(0, 1, 0, 0);
																						this.placeStyle = 54;
																						this.rare = 1;
																						return;
																					case 2490:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 319;
																						this.width = 12;
																						this.height = 12;
																						this.value = Item.sellPrice(0, 3, 0, 0);
																						return;
																					case 2491:
																						this.useStyle = 1;
																						this.width = 16;
																						this.height = 30;
																						this.UseSound = new SoundStyle?(SoundID.Item25);
																						this.useAnimation = 20;
																						this.useTime = 20;
																						this.rare = 8;
																						this.noMelee = true;
																						this.mountType = 4;
																						this.value = Item.sellPrice(0, 5, 0, 0);
																						return;
																					case 2492:
																						this.useStyle = 1;
																						this.useAnimation = 15;
																						this.useTime = 7;
																						this.useTurn = true;
																						this.autoReuse = true;
																						this.width = 16;
																						this.height = 16;
																						this.maxStack = Item.CommonMaxStack;
																						this.createTile = 314;
																						this.placeStyle = 1;
																						this.consumable = true;
																						this.cartTrack = true;
																						this.mech = true;
																						this.tileBoost = 2;
																						this.value = Item.sellPrice(0, 0, 10, 0);
																						return;
																					case 2493:
																						this.width = 28;
																						this.height = 20;
																						this.headSlot = 164;
																						this.rare = 1;
																						this.value = Item.sellPrice(0, 0, 75, 0);
																						this.vanity = true;
																						return;
																					case 2494:
																						this.width = 22;
																						this.height = 20;
																						this.accessory = true;
																						this.value = Item.buyPrice(0, 40, 0, 0);
																						this.rare = 4;
																						this.wingSlot = 25;
																						return;
																					case 2495:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 242;
																						this.width = 30;
																						this.height = 30;
																						this.value = Item.sellPrice(0, 1, 0, 0);
																						this.placeStyle = 25;
																						return;
																					case 2496:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 320;
																						this.placeStyle = 0;
																						this.width = 22;
																						this.height = 30;
																						this.value = Item.sellPrice(0, 1, 0, 0);
																						return;
																					case 2497:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 242;
																						this.width = 30;
																						this.height = 30;
																						this.value = Item.sellPrice(0, 0, 50, 0);
																						this.placeStyle = 26;
																						return;
																					case 2498:
																						this.width = 18;
																						this.height = 18;
																						this.headSlot = 165;
																						this.vanity = true;
																						this.value = Item.sellPrice(0, 1, 0, 0);
																						return;
																					case 2499:
																						this.width = 18;
																						this.height = 18;
																						this.bodySlot = 172;
																						this.vanity = true;
																						this.value = Item.sellPrice(0, 1, 0, 0);
																						return;
																					case 2500:
																						this.width = 18;
																						this.height = 18;
																						this.legSlot = 107;
																						this.vanity = true;
																						this.value = Item.sellPrice(0, 1, 0, 0);
																						return;
																					case 2501:
																						this.width = 18;
																						this.height = 12;
																						this.maxStack = 1;
																						this.value = Item.sellPrice(0, 1, 0, 0);
																						this.rare = 5;
																						this.beardSlot = 1;
																						this.accessory = true;
																						this.vanity = true;
																						return;
																					case 2502:
																						this.useStyle = 1;
																						this.width = 16;
																						this.height = 30;
																						this.UseSound = new SoundStyle?(SoundID.Item25);
																						this.useAnimation = 20;
																						this.useTime = 20;
																						this.rare = 8;
																						this.noMelee = true;
																						this.mountType = 5;
																						this.value = Item.sellPrice(0, 5, 0, 0);
																						return;
																					case 2503:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 321;
																						this.width = 8;
																						this.height = 10;
																						return;
																					case 2504:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 322;
																						this.width = 8;
																						this.height = 10;
																						return;
																					case 2505:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 7;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createWall = 149;
																						this.width = 12;
																						this.height = 12;
																						return;
																					case 2506:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 7;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createWall = 151;
																						this.width = 12;
																						this.height = 12;
																						return;
																					case 2507:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 7;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createWall = 150;
																						this.width = 12;
																						this.height = 12;
																						return;
																					case 2508:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 7;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createWall = 152;
																						this.width = 12;
																						this.height = 12;
																						return;
																					case 2509:
																						this.width = 18;
																						this.height = 18;
																						this.defense = 1;
																						this.headSlot = 166;
																						return;
																					case 2510:
																						this.width = 18;
																						this.height = 18;
																						this.defense = 1;
																						this.bodySlot = 173;
																						return;
																					case 2511:
																						this.width = 18;
																						this.height = 18;
																						this.defense = 1;
																						this.legSlot = 108;
																						return;
																					case 2512:
																						this.width = 18;
																						this.height = 18;
																						this.defense = 1;
																						this.headSlot = 167;
																						return;
																					case 2513:
																						this.width = 18;
																						this.height = 18;
																						this.defense = 1;
																						this.bodySlot = 174;
																						return;
																					case 2514:
																						this.width = 18;
																						this.height = 18;
																						this.defense = 1;
																						this.legSlot = 109;
																						return;
																					case 2515:
																						this.useStyle = 5;
																						this.useAnimation = 29;
																						this.useTime = 29;
																						this.width = 12;
																						this.height = 28;
																						this.shoot = 1;
																						this.useAmmo = AmmoID.Arrow;
																						this.UseSound = new SoundStyle?(SoundID.Item5);
																						this.damage = 6;
																						this.shootSpeed = 6.6f;
																						this.noMelee = true;
																						this.value = 100;
																						this.ranged = true;
																						return;
																					case 2516:
																						this.autoReuse = true;
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 33;
																						this.useTime = 23;
																						this.hammer = 35;
																						this.width = 24;
																						this.height = 28;
																						this.damage = 4;
																						this.knockBack = 5.5f;
																						this.scale = 1f;
																						this.UseSound = new SoundStyle?(SoundID.Item1);
																						this.value = 50;
																						this.melee = true;
																						this.autoReuse = true;
																						return;
																					case 2517:
																						this.useStyle = 1;
																						this.useTurn = false;
																						this.useAnimation = 19;
																						this.useTime = 19;
																						this.width = 24;
																						this.height = 28;
																						this.damage = 8;
																						this.knockBack = 6f;
																						this.UseSound = new SoundStyle?(SoundID.Item1);
																						this.scale = 1f;
																						this.value = 100;
																						this.melee = true;
																						return;
																					case 2518:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 19;
																						this.placeStyle = 17;
																						this.width = 8;
																						this.height = 10;
																						return;
																					case 2519:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 90;
																						this.placeStyle = 17;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2520:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.autoReuse = true;
																						this.createTile = 79;
																						this.placeStyle = 22;
																						this.width = 28;
																						this.height = 20;
																						this.value = 2000;
																						return;
																					case 2521:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 89;
																						this.placeStyle = 21;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2522:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 100;
																						this.placeStyle = 18;
																						this.width = 20;
																						this.height = 20;
																						this.value = 1500;
																						return;
																					case 2523:
																						this.noWet = true;
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 33;
																						this.placeStyle = 18;
																						this.width = 8;
																						this.value = Item.sellPrice(0, 0, 0, 60);
																						this.height = 18;
																						return;
																					case 2524:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 15;
																						this.placeStyle = 29;
																						this.width = 12;
																						this.height = 30;
																						this.value = 150;
																						return;
																					case 2525:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 34;
																						this.placeStyle = 23;
																						this.width = 26;
																						this.height = 26;
																						this.value = 3000;
																						return;
																					case 2526:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 21;
																						this.placeStyle = 31;
																						this.width = 26;
																						this.height = 22;
																						this.value = 500;
																						return;
																					case 2527:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 89;
																						this.placeStyle = 22;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2528:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 10;
																						this.placeStyle = 29;
																						this.width = 14;
																						this.height = 28;
																						this.value = 200;
																						return;
																					case 2529:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 88;
																						this.placeStyle = 16;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2530:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 42;
																						this.width = 12;
																						this.height = 28;
																						this.placeStyle = 27;
																						this.value = 150;
																						return;
																					case 2531:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 87;
																						this.placeStyle = 21;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2532:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 14;
																						this.placeStyle = 26;
																						this.width = 26;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2533:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 93;
																						this.placeStyle = 18;
																						this.width = 10;
																						this.height = 24;
																						this.value = 500;
																						return;
																					case 2534:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 18;
																						this.placeStyle = 22;
																						this.width = 28;
																						this.height = 14;
																						this.value = 150;
																						return;
																					case 2535:
																						this.mana = 10;
																						this.damage = 24;
																						this.useStyle = 1;
																						this.shootSpeed = 10f;
																						this.shoot = 387;
																						this.width = 26;
																						this.height = 28;
																						this.UseSound = new SoundStyle?(SoundID.Item82);
																						this.useAnimation = 36;
																						this.useTime = 36;
																						this.rare = 5;
																						this.noMelee = true;
																						this.knockBack = 2f;
																						this.buffType = 134;
																						this.value = Item.buyPrice(0, 10, 0, 0);
																						this.summon = true;
																						this.autoReuse = true;
																						this.reuseDelay = 2;
																						return;
																					case 2536:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 101;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						this.placeStyle = 23;
																						return;
																					case 2537:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 90;
																						this.placeStyle = 18;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2538:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.autoReuse = true;
																						this.createTile = 79;
																						this.placeStyle = 23;
																						this.width = 28;
																						this.height = 20;
																						this.value = 2000;
																						return;
																					case 2539:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 89;
																						this.placeStyle = 23;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2540:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 101;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						this.placeStyle = 24;
																						return;
																					case 2541:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 100;
																						this.placeStyle = 19;
																						this.width = 20;
																						this.height = 20;
																						this.value = 1500;
																						return;
																					case 2542:
																						this.noWet = true;
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 33;
																						this.placeStyle = 19;
																						this.width = 8;
																						this.value = Item.sellPrice(0, 0, 0, 60);
																						this.height = 18;
																						return;
																					case 2543:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 34;
																						this.placeStyle = 24;
																						this.width = 26;
																						this.height = 26;
																						this.value = 3000;
																						return;
																					case 2544:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 21;
																						this.placeStyle = 32;
																						this.width = 26;
																						this.height = 22;
																						this.value = 500;
																						return;
																					case 2545:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 88;
																						this.placeStyle = 17;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2546:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 42;
																						this.width = 12;
																						this.height = 28;
																						this.placeStyle = 28;
																						this.value = 150;
																						return;
																					case 2547:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 93;
																						this.placeStyle = 19;
																						this.width = 10;
																						this.height = 24;
																						this.value = 500;
																						return;
																					case 2548:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 87;
																						this.placeStyle = 22;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2549:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 19;
																						this.placeStyle = 18;
																						this.width = 8;
																						this.height = 10;
																						return;
																					case 2550:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 14;
																						this.placeStyle = 27;
																						this.width = 26;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2551:
																						this.mana = 10;
																						this.damage = 26;
																						this.useStyle = 1;
																						this.shootSpeed = 10f;
																						this.shoot = 390;
																						this.width = 26;
																						this.height = 28;
																						this.UseSound = new SoundStyle?(SoundID.Item83);
																						this.useAnimation = 36;
																						this.useTime = 36;
																						this.rare = 4;
																						this.noMelee = true;
																						this.knockBack = 3f;
																						this.buffType = 133;
																						this.value = Item.buyPrice(0, 5, 0, 0);
																						this.summon = true;
																						this.autoReuse = true;
																						this.reuseDelay = 2;
																						return;
																					case 2552:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 90;
																						this.placeStyle = 19;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2553:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.autoReuse = true;
																						this.createTile = 79;
																						this.placeStyle = 24;
																						this.width = 28;
																						this.height = 20;
																						this.value = 2000;
																						return;
																					case 2554:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 101;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						this.placeStyle = 25;
																						return;
																					case 2555:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 100;
																						this.placeStyle = 20;
																						this.width = 20;
																						this.height = 20;
																						this.value = 1500;
																						return;
																					case 2556:
																						this.noWet = true;
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 33;
																						this.placeStyle = 20;
																						this.width = 8;
																						this.value = Item.sellPrice(0, 0, 0, 60);
																						this.height = 18;
																						return;
																					case 2557:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 15;
																						this.placeStyle = 30;
																						this.width = 12;
																						this.height = 30;
																						this.value = 150;
																						return;
																					case 2558:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 34;
																						this.placeStyle = 25;
																						this.width = 26;
																						this.height = 26;
																						this.value = 3000;
																						return;
																					case 2559:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 21;
																						this.placeStyle = 33;
																						this.width = 26;
																						this.height = 22;
																						this.value = 500;
																						return;
																					case 2560:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 104;
																						this.placeStyle = 6;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2561:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 10;
																						this.placeStyle = 30;
																						this.width = 14;
																						this.height = 28;
																						this.value = 200;
																						return;
																					case 2562:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 88;
																						this.placeStyle = 18;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2563:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 93;
																						this.placeStyle = 20;
																						this.width = 10;
																						this.height = 24;
																						this.value = 500;
																						return;
																					case 2564:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 42;
																						this.placeStyle = 29;
																						this.width = 12;
																						this.height = 28;
																						this.value = 150;
																						return;
																					case 2565:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 87;
																						this.placeStyle = 23;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2566:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 19;
																						this.placeStyle = 19;
																						this.width = 8;
																						this.height = 10;
																						return;
																					case 2567:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 90;
																						this.placeStyle = 20;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2568:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.autoReuse = true;
																						this.createTile = 79;
																						this.placeStyle = 25;
																						this.width = 28;
																						this.height = 20;
																						this.value = 2000;
																						return;
																					case 2569:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 101;
																						this.placeStyle = 26;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2570:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 100;
																						this.placeStyle = 21;
																						this.width = 20;
																						this.height = 20;
																						this.value = 1500;
																						return;
																					case 2571:
																						this.noWet = true;
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 33;
																						this.placeStyle = 21;
																						this.width = 8;
																						this.value = Item.sellPrice(0, 0, 0, 60);
																						this.height = 18;
																						return;
																					case 2572:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 15;
																						this.placeStyle = 31;
																						this.width = 12;
																						this.height = 30;
																						this.value = 150;
																						return;
																					case 2573:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 34;
																						this.placeStyle = 26;
																						this.width = 26;
																						this.height = 26;
																						this.value = 3000;
																						return;
																					case 2574:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 21;
																						this.placeStyle = 34;
																						this.width = 26;
																						this.height = 22;
																						this.value = 500;
																						return;
																					case 2575:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 104;
																						this.placeStyle = 7;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2576:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 10;
																						this.placeStyle = 31;
																						this.width = 14;
																						this.height = 28;
																						this.value = 200;
																						return;
																					case 2577:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 88;
																						this.placeStyle = 19;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2578:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 93;
																						this.placeStyle = 21;
																						this.width = 10;
																						this.height = 24;
																						this.value = 500;
																						return;
																					case 2579:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 42;
																						this.placeStyle = 30;
																						this.width = 12;
																						this.height = 28;
																						this.value = 150;
																						return;
																					case 2580:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 87;
																						this.placeStyle = 24;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2581:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 19;
																						this.placeStyle = 20;
																						this.width = 8;
																						this.height = 10;
																						return;
																					case 2582:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 89;
																						this.placeStyle = 25;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2583:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 14;
																						this.placeStyle = 29;
																						this.width = 26;
																						this.height = 20;
																						this.value = 300;
																						return;
																					case 2584:
																						this.mana = 10;
																						this.damage = 40;
																						this.useStyle = 1;
																						this.shootSpeed = 10f;
																						this.shoot = 393;
																						this.width = 26;
																						this.height = 28;
																						this.UseSound = new SoundStyle?(SoundID.Item44);
																						this.useAnimation = 36;
																						this.useTime = 36;
																						this.rare = 5;
																						this.noMelee = true;
																						this.knockBack = 6f;
																						this.buffType = 135;
																						this.value = Item.buyPrice(0, 5, 0, 0);
																						this.summon = true;
																						this.autoReuse = true;
																						this.reuseDelay = 2;
																						return;
																					case 2585:
																						this.noUseGraphic = true;
																						this.damage = 0;
																						this.useStyle = 5;
																						this.shootSpeed = 13f;
																						this.shoot = 396;
																						this.width = 18;
																						this.height = 28;
																						this.UseSound = new SoundStyle?(SoundID.Item1);
																						this.useAnimation = 20;
																						this.useTime = 20;
																						this.rare = 3;
																						this.noMelee = true;
																						this.value = 20000;
																						return;
																					case 2586:
																						this.useStyle = 5;
																						this.shootSpeed = 5.5f;
																						this.shoot = 397;
																						this.width = 20;
																						this.height = 20;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.UseSound = new SoundStyle?(SoundID.Item1);
																						this.useAnimation = 45;
																						this.useTime = 45;
																						this.noUseGraphic = true;
																						this.noMelee = true;
																						this.value = 75;
																						this.damage = 60;
																						this.knockBack = 8f;
																						this.ranged = true;
																						return;
																					case 2587:
																						this.damage = 0;
																						this.useStyle = 1;
																						this.shoot = 398;
																						this.width = 16;
																						this.height = 30;
																						this.UseSound = new SoundStyle?(SoundID.Item2);
																						this.useAnimation = 20;
																						this.useTime = 20;
																						this.rare = 3;
																						this.noMelee = true;
																						this.buffType = 136;
																						this.value = Item.sellPrice(0, 2, 0, 0);
																						return;
																					case 2588:
																						this.width = 28;
																						this.height = 20;
																						this.headSlot = 168;
																						this.rare = 1;
																						this.value = Item.sellPrice(0, 0, 75, 0);
																						this.vanity = true;
																						return;
																					case 2589:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 240;
																						this.width = 30;
																						this.height = 30;
																						this.value = Item.sellPrice(0, 1, 0, 0);
																						this.placeStyle = 55;
																						this.rare = 1;
																						return;
																					case 2590:
																						this.useStyle = 5;
																						this.shootSpeed = 6.5f;
																						this.shoot = 399;
																						this.width = 20;
																						this.height = 20;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.UseSound = new SoundStyle?(SoundID.Item1);
																						this.useAnimation = 40;
																						this.useTime = 40;
																						this.noUseGraphic = true;
																						this.noMelee = true;
																						this.value = Item.sellPrice(0, 0, 1, 0);
																						this.damage = 23;
																						this.knockBack = 7f;
																						this.ranged = true;
																						this.rare = 1;
																						return;
																					case 2591:
																					case 2592:
																					case 2593:
																					case 2594:
																					case 2595:
																					case 2596:
																					case 2597:
																					case 2598:
																					case 2599:
																					case 2600:
																					case 2601:
																					case 2602:
																					case 2603:
																					case 2604:
																					case 2605:
																					case 2606:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 104;
																						this.placeStyle = 8 + type - 2591;
																						this.width = 20;
																						this.height = 20;
																						this.value = 300;
																						return;
																					}
																					switch (type)
																					{
																					case 2607:
																						this.maxStack = Item.CommonMaxStack;
																						this.width = 12;
																						this.height = 12;
																						this.rare = 4;
																						this.value = Item.sellPrice(0, 0, 5, 0);
																						return;
																					case 2608:
																						this.autoReuse = true;
																						this.scale = 1.05f;
																						this.useStyle = 1;
																						this.useTime = 20;
																						this.useAnimation = 20;
																						this.knockBack = 6f;
																						this.width = 24;
																						this.height = 28;
																						this.damage = 25;
																						this.scale = 1f;
																						this.UseSound = new SoundStyle?(SoundID.Item1);
																						this.rare = 4;
																						this.value = 10000;
																						this.melee = true;
																						return;
																					case 2609:
																						this.width = 22;
																						this.height = 20;
																						this.accessory = true;
																						this.value = Item.buyPrice(0, 40, 0, 0);
																						this.rare = 8;
																						this.wingSlot = 26;
																						return;
																					case 2610:
																						this.useStyle = 5;
																						this.useAnimation = 12;
																						this.useTime = 12;
																						this.width = 38;
																						this.height = 10;
																						this.damage = 0;
																						this.scale = 0.9f;
																						this.shoot = 406;
																						this.shootSpeed = 8f;
																						this.autoReuse = true;
																						this.value = Item.buyPrice(0, 1, 50, 0);
																						return;
																					case 2611:
																						this.autoReuse = false;
																						this.useStyle = 5;
																						this.useAnimation = 20;
																						this.useTime = 20;
																						this.autoReuse = true;
																						this.knockBack = 4.5f;
																						this.width = 30;
																						this.height = 10;
																						this.damage = 66;
																						this.shoot = 404;
																						this.shootSpeed = 14f;
																						this.UseSound = new SoundStyle?(SoundID.Item1);
																						this.rare = 8;
																						this.value = Item.sellPrice(0, 5, 0, 0);
																						this.melee = true;
																						this.noMelee = true;
																						this.noUseGraphic = true;
																						return;
																					case 2612:
																					case 2613:
																					case 2614:
																					case 2615:
																					case 2616:
																					case 2617:
																					case 2618:
																					case 2619:
																					case 2620:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 21;
																						if (type <= 2614)
																						{
																							this.placeStyle = 35 + (type - 2612) * 2;
																						}
																						else
																						{
																							this.placeStyle = 41 + type - 2615;
																						}
																						this.width = 26;
																						this.height = 22;
																						this.value = 500;
																						return;
																					default:
																						switch (type)
																						{
																						case 2621:
																							this.mana = 10;
																							this.damage = 50;
																							this.useStyle = 1;
																							this.shootSpeed = 10f;
																							this.shoot = 407;
																							this.width = 26;
																							this.height = 28;
																							this.UseSound = new SoundStyle?(SoundID.Item44);
																							this.useAnimation = 36;
																							this.useTime = 36;
																							this.rare = 8;
																							this.noMelee = true;
																							this.knockBack = 2f;
																							this.buffType = 139;
																							this.value = Item.sellPrice(0, 5, 0, 0);
																							this.summon = true;
																							this.autoReuse = true;
																							this.reuseDelay = 2;
																							return;
																						case 2622:
																							this.mana = 20;
																							this.damage = 85;
																							this.useStyle = 5;
																							this.shootSpeed = 6f;
																							this.shoot = 409;
																							this.width = 26;
																							this.height = 28;
																							this.UseSound = new SoundStyle?(SoundID.Item84);
																							this.useAnimation = 40;
																							this.useTime = 40;
																							this.autoReuse = true;
																							this.rare = 8;
																							this.noMelee = true;
																							this.knockBack = 5f;
																							this.scale = 0.9f;
																							this.value = Item.sellPrice(0, 5, 0, 0);
																							this.magic = true;
																							return;
																						case 2624:
																							this.useStyle = 5;
																							this.autoReuse = true;
																							this.useAnimation = 24;
																							this.useTime = 24;
																							this.width = 50;
																							this.height = 18;
																							this.shoot = 1;
																							this.useAmmo = AmmoID.Arrow;
																							this.UseSound = new SoundStyle?(SoundID.Item5);
																							this.damage = 53;
																							this.shootSpeed = 10f;
																							this.noMelee = true;
																							this.value = Item.sellPrice(0, 5, 0, 0);
																							this.ranged = true;
																							this.rare = 8;
																							this.knockBack = 2f;
																							return;
																						case 2625:
																						case 2626:
																							this.DefaultToSeaShell();
																							return;
																						case 2627:
																						case 2628:
																						case 2629:
																						case 2630:
																							this.useStyle = 1;
																							this.useTurn = true;
																							this.useAnimation = 15;
																							this.useTime = 10;
																							this.autoReuse = true;
																							this.maxStack = Item.CommonMaxStack;
																							this.consumable = true;
																							this.createTile = 19;
																							this.placeStyle = 21 + type - 2627;
																							this.width = 8;
																							this.height = 10;
																							return;
																						}
																						if (type >= 2631 && type <= 2633)
																						{
																							this.useStyle = 1;
																							this.useTurn = true;
																							this.useAnimation = 15;
																							this.useTime = 10;
																							this.autoReuse = true;
																							this.maxStack = Item.CommonMaxStack;
																							this.consumable = true;
																							this.createTile = 18;
																							this.placeStyle = 24 + type - 2631;
																							this.width = 28;
																							this.height = 14;
																							this.value = 150;
																							return;
																						}
																						if (type >= 2634 && type <= 2636)
																						{
																							this.useStyle = 1;
																							this.useTurn = true;
																							this.useAnimation = 15;
																							this.useTime = 10;
																							this.autoReuse = true;
																							this.maxStack = Item.CommonMaxStack;
																							this.consumable = true;
																							this.createTile = 89;
																							this.placeStyle = 26 + type - 2634;
																							this.width = 20;
																							this.height = 20;
																							this.value = 300;
																							return;
																						}
																						if (type == 2623)
																						{
																							this.autoReuse = true;
																							this.mana = 5;
																							this.UseSound = new SoundStyle?(SoundID.Item85);
																							this.useStyle = 5;
																							this.damage = 70;
																							this.useAnimation = 9;
																							this.useTime = 9;
																							this.width = 40;
																							this.height = 40;
																							this.shoot = 410;
																							this.shootSpeed = 15f;
																							this.knockBack = 3f;
																							this.value = Item.sellPrice(0, 5, 0, 0);
																							this.magic = true;
																							this.rare = 8;
																							this.noMelee = true;
																							if (this.Variant == ItemVariants.WeakerVariant)
																							{
																								this.rare = 2;
																								this.value = this.dungeonPrice;
																								this.damage = 5;
																							}
																							return;
																						}
																						if (type - 2637 <= 3)
																						{
																							this.useStyle = 1;
																							this.useTurn = true;
																							this.useAnimation = 15;
																							this.useTime = 10;
																							this.autoReuse = true;
																							this.maxStack = Item.CommonMaxStack;
																							this.consumable = true;
																							this.createTile = 88;
																							this.placeStyle = 20 + type - 2637;
																							this.width = 20;
																							this.height = 20;
																							this.value = 300;
																							return;
																						}
																						if (type - 2641 <= 1)
																						{
																							this.useStyle = 1;
																							this.useTurn = true;
																							this.useAnimation = 15;
																							this.useTime = 10;
																							this.autoReuse = true;
																							this.maxStack = Item.CommonMaxStack;
																							this.consumable = true;
																							this.createTile = 42;
																							if (type == 2641)
																							{
																								this.placeStyle = 31;
																							}
																							else
																							{
																								this.placeStyle = 32;
																							}
																							this.width = 12;
																							this.height = 28;
																							this.value = 150;
																							return;
																						}
																						if (type - 2643 <= 4)
																						{
																							this.useStyle = 1;
																							this.useTurn = true;
																							this.useAnimation = 15;
																							this.useTime = 10;
																							this.autoReuse = true;
																							this.maxStack = Item.CommonMaxStack;
																							this.consumable = true;
																							this.createTile = 93;
																							this.placeStyle = 22 + type - 2643;
																							this.width = 10;
																							this.height = 24;
																							this.value = 500;
																							return;
																						}
																						if (type >= 2648 && type <= 2651)
																						{
																							this.noWet = true;
																							this.useStyle = 1;
																							this.useTurn = true;
																							this.useAnimation = 15;
																							this.useTime = 10;
																							this.autoReuse = true;
																							this.maxStack = Item.CommonMaxStack;
																							this.consumable = true;
																							this.createTile = 33;
																							this.width = 8;
																							this.height = 18;
																							this.value = Item.sellPrice(0, 0, 0, 60);
																							this.placeStyle = 22 + type - 2648;
																							return;
																						}
																						if (type >= 2652 && type <= 2657)
																						{
																							this.useStyle = 1;
																							this.useTurn = true;
																							this.useAnimation = 15;
																							this.useTime = 10;
																							this.autoReuse = true;
																							this.maxStack = Item.CommonMaxStack;
																							this.consumable = true;
																							this.createTile = 34;
																							this.placeStyle = 27 + type - 2652;
																							this.width = 26;
																							this.height = 26;
																							this.value = 3000;
																							return;
																						}
																						if (type >= 2658 && type <= 2663)
																						{
																							this.useStyle = 1;
																							this.useTurn = true;
																							this.useAnimation = 15;
																							this.useTime = 10;
																							this.autoReuse = true;
																							this.maxStack = Item.CommonMaxStack;
																							this.consumable = true;
																							this.createTile = 90;
																							this.placeStyle = 21 + type - 2658;
																							this.width = 20;
																							this.height = 20;
																							this.value = 300;
																							return;
																						}
																						if (type >= 2664 && type <= 2668)
																						{
																							this.useStyle = 1;
																							this.useTurn = true;
																							this.useAnimation = 15;
																							this.useTime = 10;
																							this.autoReuse = true;
																							this.maxStack = Item.CommonMaxStack;
																							this.consumable = true;
																							this.createTile = 100;
																							this.placeStyle = 22 + type - 2664;
																							this.width = 20;
																							this.height = 20;
																							this.value = 1500;
																							return;
																						}
																						switch (type)
																						{
																						case 2669:
																							this.useStyle = 1;
																							this.useTurn = true;
																							this.useAnimation = 15;
																							this.useTime = 10;
																							this.maxStack = Item.CommonMaxStack;
																							this.consumable = true;
																							this.autoReuse = true;
																							this.createTile = 79;
																							this.placeStyle = 26;
																							this.width = 28;
																							this.height = 20;
																							this.value = 2000;
																							return;
																						case 2670:
																							this.useStyle = 1;
																							this.useTurn = true;
																							this.useAnimation = 15;
																							this.useTime = 10;
																							this.autoReuse = true;
																							this.maxStack = Item.CommonMaxStack;
																							this.consumable = true;
																							this.createTile = 101;
																							this.width = 20;
																							this.height = 20;
																							this.value = 300;
																							this.placeStyle = 27;
																							return;
																						case 2671:
																							this.useStyle = 1;
																							this.useTurn = true;
																							this.useAnimation = 15;
																							this.useTime = 10;
																							this.autoReuse = true;
																							this.maxStack = Item.CommonMaxStack;
																							this.consumable = true;
																							this.createTile = 87;
																							this.placeStyle = 25;
																							this.width = 20;
																							this.height = 20;
																							this.value = 300;
																							return;
																						case 2672:
																							this.useStyle = 1;
																							this.useTurn = true;
																							this.useAnimation = 15;
																							this.useTime = 10;
																							this.autoReuse = true;
																							this.maxStack = Item.CommonMaxStack;
																							this.consumable = true;
																							this.createTile = 105;
																							this.width = 20;
																							this.height = 20;
																							this.value = 300;
																							this.placeStyle = 50;
																							return;
																						case 2673:
																							this.useStyle = 1;
																							this.autoReuse = true;
																							this.useTurn = true;
																							this.useAnimation = 15;
																							this.useTime = 10;
																							this.maxStack = Item.CommonMaxStack;
																							this.consumable = true;
																							this.width = 12;
																							this.height = 12;
																							this.makeNPC = 374;
																							this.noUseGraphic = true;
																							this.bait = 666;
																							return;
																						case 2674:
																						case 2675:
																						case 2676:
																							this.maxStack = Item.CommonMaxStack;
																							this.consumable = true;
																							this.width = 12;
																							this.height = 12;
																							if (type == 2675)
																							{
																								this.bait = 30;
																								this.value = Item.sellPrice(0, 0, 3, 0);
																								return;
																							}
																							if (type != 2676)
																							{
																								this.bait = 15;
																								this.value = Item.sellPrice(0, 0, 1, 0);
																								return;
																							}
																							this.bait = 50;
																							this.value = Item.sellPrice(0, 0, 10, 0);
																							return;
																						default:
																							if (type >= 2677 && type <= 2690)
																							{
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 7;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								switch (type)
																								{
																								case 2677:
																									this.createWall = 153;
																									break;
																								case 2678:
																									this.createWall = 157;
																									break;
																								case 2679:
																									this.createWall = 154;
																									break;
																								case 2680:
																									this.createWall = 158;
																									break;
																								case 2681:
																									this.createWall = 155;
																									break;
																								case 2682:
																									this.createWall = 159;
																									break;
																								case 2683:
																									this.createWall = 156;
																									break;
																								case 2684:
																									this.createWall = 160;
																									break;
																								case 2685:
																									this.createWall = 164;
																									break;
																								case 2686:
																									this.createWall = 161;
																									break;
																								case 2687:
																									this.createWall = 165;
																									break;
																								case 2688:
																									this.createWall = 162;
																									break;
																								case 2689:
																									this.createWall = 166;
																									break;
																								case 2690:
																									this.createWall = 163;
																									break;
																								}
																								this.width = 12;
																								this.height = 12;
																								return;
																							}
																							switch (type)
																							{
																							case 2691:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 7;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createWall = 167;
																								this.width = 12;
																								this.height = 12;
																								return;
																							case 2692:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 325;
																								this.width = 12;
																								this.height = 12;
																								return;
																							case 2693:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 326;
																								this.width = 12;
																								this.height = 12;
																								return;
																							case 2694:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 327;
																								this.width = 12;
																								this.height = 12;
																								return;
																							case 2695:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 328;
																								this.width = 12;
																								this.height = 12;
																								return;
																							case 2696:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 7;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createWall = 168;
																								this.width = 12;
																								this.height = 12;
																								return;
																							case 2697:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 329;
																								this.width = 12;
																								this.height = 12;
																								return;
																							case 2698:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 7;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createWall = 169;
																								this.width = 12;
																								this.height = 12;
																								return;
																							case 2699:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 471;
																								this.width = 30;
																								this.height = 30;
																								this.value = Item.sellPrice(0, 0, 0, 50);
																								return;
																							case 2700:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 335;
																								this.width = 26;
																								this.height = 22;
																								this.value = Item.buyPrice(0, 5, 0, 0);
																								this.mech = true;
																								return;
																							case 2701:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 336;
																								this.width = 12;
																								this.height = 12;
																								return;
																							case 2702:
																							case 2703:
																							case 2704:
																							case 2705:
																							case 2706:
																							case 2707:
																							case 2708:
																							case 2709:
																							case 2710:
																							case 2711:
																							case 2712:
																							case 2713:
																							case 2714:
																							case 2715:
																							case 2716:
																							case 2717:
																							case 2718:
																							case 2719:
																							case 2720:
																							case 2721:
																							case 2722:
																							case 2723:
																							case 2724:
																							case 2725:
																							case 2726:
																							case 2727:
																							case 2728:
																							case 2729:
																							case 2730:
																							case 2731:
																							case 2732:
																							case 2733:
																							case 2734:
																							case 2735:
																							case 2736:
																							case 2737:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 337;
																								this.width = 20;
																								this.height = 20;
																								this.value = 300;
																								this.placeStyle = type - 2702;
																								return;
																							default:
																								switch (type)
																								{
																								case 2738:
																									this.createTile = 338;
																									this.placeStyle = 0;
																									this.useStyle = 1;
																									this.useTurn = true;
																									this.useAnimation = 15;
																									this.useTime = 10;
																									this.autoReuse = true;
																									this.maxStack = Item.CommonMaxStack;
																									this.consumable = true;
																									this.width = 12;
																									this.height = 30;
																									this.value = Item.buyPrice(0, 3, 0, 0);
																									this.mech = true;
																									return;
																								case 2739:
																									this.useStyle = 1;
																									this.useAnimation = 15;
																									this.useTime = 7;
																									this.useTurn = true;
																									this.autoReuse = true;
																									this.width = 16;
																									this.height = 16;
																									this.maxStack = Item.CommonMaxStack;
																									this.createTile = 314;
																									this.placeStyle = 2;
																									this.consumable = true;
																									this.cartTrack = true;
																									this.mech = true;
																									this.tileBoost = 2;
																									this.value = Item.buyPrice(0, 0, 50, 0);
																									return;
																								case 2740:
																									this.useStyle = 1;
																									this.autoReuse = true;
																									this.useTurn = true;
																									this.useAnimation = 15;
																									this.useTime = 10;
																									this.maxStack = Item.CommonMaxStack;
																									this.consumable = true;
																									this.width = 12;
																									this.height = 12;
																									this.makeNPC = 377;
																									this.noUseGraphic = true;
																									this.bait = 10;
																									return;
																								case 2741:
																									this.useStyle = 1;
																									this.useTurn = true;
																									this.useAnimation = 15;
																									this.useTime = 10;
																									this.autoReuse = true;
																									this.maxStack = Item.CommonMaxStack;
																									this.consumable = true;
																									this.createTile = 339;
																									this.width = 12;
																									this.height = 12;
																									return;
																								case 2742:
																									this.useStyle = 1;
																									this.useTurn = true;
																									this.useAnimation = 15;
																									this.useTime = 10;
																									this.autoReuse = true;
																									this.consumable = true;
																									this.createTile = 139;
																									this.placeStyle = 31;
																									this.width = 24;
																									this.height = 24;
																									this.rare = 4;
																									this.value = 100000;
																									this.accessory = true;
																									this.hasVanityEffects = true;
																									return;
																								case 2743:
																									this.useStyle = 1;
																									this.useTurn = true;
																									this.useAnimation = 15;
																									this.useTime = 10;
																									this.autoReuse = true;
																									this.maxStack = Item.CommonMaxStack;
																									this.consumable = true;
																									this.createTile = 14;
																									this.placeStyle = 30;
																									this.width = 26;
																									this.height = 20;
																									this.value = 300;
																									return;
																								case 2744:
																									this.useStyle = 1;
																									this.useTurn = true;
																									this.useAnimation = 15;
																									this.useTime = 10;
																									this.autoReuse = true;
																									this.maxStack = Item.CommonMaxStack;
																									this.consumable = true;
																									this.createTile = 19;
																									this.placeStyle = 25;
																									this.width = 8;
																									this.height = 10;
																									return;
																								case 2745:
																									this.useStyle = 1;
																									this.useTurn = false;
																									this.useAnimation = 20;
																									this.useTime = 20;
																									this.width = 24;
																									this.height = 28;
																									this.damage = 8;
																									this.knockBack = 6f;
																									this.UseSound = new SoundStyle?(SoundID.Item1);
																									this.scale = 1f;
																									this.value = 100;
																									this.melee = true;
																									return;
																								case 2746:
																									this.autoReuse = true;
																									this.useStyle = 1;
																									this.useTurn = true;
																									this.useAnimation = 33;
																									this.useTime = 23;
																									this.hammer = 35;
																									this.width = 24;
																									this.height = 28;
																									this.damage = 4;
																									this.knockBack = 5.5f;
																									this.scale = 1f;
																									this.UseSound = new SoundStyle?(SoundID.Item1);
																									this.value = 50;
																									this.melee = true;
																									return;
																								case 2747:
																									this.useStyle = 5;
																									this.useAnimation = 29;
																									this.useTime = 29;
																									this.width = 12;
																									this.height = 28;
																									this.shoot = 1;
																									this.useAmmo = AmmoID.Arrow;
																									this.UseSound = new SoundStyle?(SoundID.Item5);
																									this.damage = 6;
																									this.shootSpeed = 6.6f;
																									this.noMelee = true;
																									this.value = 100;
																									this.ranged = true;
																									return;
																								case 2748:
																									this.useStyle = 1;
																									this.useTurn = true;
																									this.useAnimation = 15;
																									this.useTime = 10;
																									this.autoReuse = true;
																									this.maxStack = Item.CommonMaxStack;
																									this.consumable = true;
																									this.createTile = 21;
																									this.placeStyle = 47;
																									this.width = 26;
																									this.height = 22;
																									this.value = 500;
																									return;
																								case 2749:
																									this.mana = 10;
																									this.damage = 36;
																									this.useStyle = 1;
																									this.shootSpeed = 10f;
																									this.shoot = 423;
																									this.width = 26;
																									this.height = 28;
																									this.UseSound = new SoundStyle?(SoundID.Item44);
																									this.useAnimation = 36;
																									this.useTime = 36;
																									this.rare = 8;
																									this.noMelee = true;
																									this.knockBack = 2f;
																									this.buffType = 140;
																									this.value = Item.sellPrice(0, 10, 0, 0);
																									this.summon = true;
																									this.autoReuse = true;
																									this.reuseDelay = 2;
																									return;
																								case 2750:
																									this.autoReuse = true;
																									this.mana = 9;
																									this.useStyle = 5;
																									this.damage = 50;
																									this.useAnimation = 10;
																									this.useTime = 10;
																									this.width = 40;
																									this.height = 40;
																									this.shoot = 424;
																									this.shootSpeed = 10f;
																									this.knockBack = 4.5f;
																									this.value = Item.sellPrice(0, 2, 0, 0);
																									this.magic = true;
																									this.rare = 5;
																									this.noMelee = true;
																									this.UseSound = new SoundStyle?(SoundID.Item88);
																									return;
																								case 2751:
																								case 2752:
																								case 2753:
																								case 2754:
																								case 2755:
																									this.useStyle = 1;
																									this.useTurn = true;
																									this.useAnimation = 15;
																									this.useTime = 10;
																									this.autoReuse = true;
																									this.maxStack = Item.CommonMaxStack;
																									this.consumable = true;
																									this.createTile = 340 + type - 2751;
																									this.width = 12;
																									this.height = 12;
																									return;
																								default:
																									switch (type)
																									{
																									case 2756:
																										this.UseSound = new SoundStyle?(SoundID.Item6);
																										this.useStyle = 9;
																										this.useTurn = true;
																										this.useAnimation = 17;
																										this.useTime = 17;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.width = 14;
																										this.height = 24;
																										this.value = 1000;
																										this.rare = 1;
																										return;
																									case 2757:
																										this.width = 18;
																										this.height = 18;
																										this.defense = 14;
																										this.headSlot = 169;
																										this.glowMask = 26;
																										this.rare = 10;
																										this.value = Item.sellPrice(0, 7, 0, 0);
																										return;
																									case 2758:
																										this.width = 18;
																										this.height = 18;
																										this.defense = 28;
																										this.bodySlot = 175;
																										this.glowMask = 27;
																										this.rare = 10;
																										this.value = Item.sellPrice(0, 7, 0, 0) * 2;
																										return;
																									case 2759:
																										this.width = 18;
																										this.height = 18;
																										this.defense = 20;
																										this.legSlot = 110;
																										this.rare = 10;
																										this.value = (int)((double)Item.sellPrice(0, 7, 0, 0) * 1.5);
																										return;
																									case 2760:
																										this.width = 18;
																										this.height = 18;
																										this.defense = 14;
																										this.headSlot = 170;
																										this.glowMask = 28;
																										this.rare = 10;
																										this.value = Item.sellPrice(0, 7, 0, 0);
																										return;
																									case 2761:
																										this.width = 18;
																										this.height = 18;
																										this.defense = 18;
																										this.bodySlot = 176;
																										this.glowMask = 29;
																										this.rare = 10;
																										this.value = Item.sellPrice(0, 7, 0, 0) * 2;
																										return;
																									case 2762:
																										this.width = 18;
																										this.height = 18;
																										this.defense = 14;
																										this.legSlot = 111;
																										this.glowMask = 30;
																										this.rare = 10;
																										this.value = (int)((double)Item.sellPrice(0, 7, 0, 0) * 1.5);
																										return;
																									case 2763:
																										this.width = 18;
																										this.height = 18;
																										this.defense = 24;
																										this.headSlot = 171;
																										this.rare = 10;
																										this.value = Item.sellPrice(0, 7, 0, 0);
																										return;
																									case 2764:
																										this.width = 18;
																										this.height = 18;
																										this.defense = 34;
																										this.bodySlot = 177;
																										this.rare = 10;
																										this.value = Item.sellPrice(0, 7, 0, 0) * 2;
																										return;
																									case 2765:
																										this.width = 18;
																										this.height = 18;
																										this.defense = 20;
																										this.legSlot = 112;
																										this.rare = 10;
																										this.value = (int)((double)Item.sellPrice(0, 7, 0, 0) * 1.5);
																										return;
																									case 2766:
																										this.width = 22;
																										this.height = 14;
																										this.maxStack = Item.CommonMaxStack;
																										this.rare = 8;
																										return;
																									case 2767:
																										this.useStyle = 4;
																										this.width = 22;
																										this.height = 14;
																										this.consumable = true;
																										this.useAnimation = 45;
																										this.useTime = 45;
																										this.maxStack = Item.CommonMaxStack;
																										this.rare = 8;
																										return;
																									case 2768:
																										this.useStyle = 1;
																										this.width = 32;
																										this.height = 30;
																										this.UseSound = new SoundStyle?(SoundID.Item25);
																										this.useAnimation = 20;
																										this.useTime = 20;
																										this.rare = 8;
																										this.noMelee = true;
																										this.mountType = 8;
																										this.value = Item.sellPrice(0, 5, 0, 0);
																										return;
																									case 2769:
																										this.useStyle = 1;
																										this.width = 32;
																										this.height = 30;
																										this.UseSound = new SoundStyle?(SoundID.Item25);
																										this.useAnimation = 20;
																										this.useTime = 20;
																										this.rare = 8;
																										this.noMelee = true;
																										this.mountType = 7;
																										this.value = Item.sellPrice(0, 5, 0, 0);
																										return;
																									case 2770:
																										this.width = 22;
																										this.height = 20;
																										this.accessory = true;
																										this.value = this.eclipseMothronPrice;
																										this.rare = 8;
																										this.wingSlot = 27;
																										return;
																									case 2771:
																										this.useStyle = 1;
																										this.channel = true;
																										this.width = 34;
																										this.height = 34;
																										this.UseSound = new SoundStyle?(SoundID.Item90);
																										this.useAnimation = 20;
																										this.useTime = 20;
																										this.rare = 8;
																										this.noMelee = true;
																										this.mountType = 9;
																										this.value = Item.sellPrice(0, 5, 0, 0);
																										return;
																									case 2772:
																										this.autoReuse = true;
																										this.useStyle = 1;
																										this.useAnimation = 25;
																										this.knockBack = 6f;
																										this.useTime = 7;
																										this.width = 54;
																										this.height = 54;
																										this.damage = 100;
																										this.axe = 27;
																										this.UseSound = new SoundStyle?(SoundID.Item1);
																										this.rare = 10;
																										this.scale = 1.05f;
																										this.value = Item.sellPrice(0, 6, 0, 0);
																										this.melee = true;
																										this.glowMask = 1;
																										this.tileBoost += 4;
																										return;
																									case 2773:
																										this.useStyle = 5;
																										this.useAnimation = 25;
																										this.useTime = 7;
																										this.shootSpeed = 28f;
																										this.knockBack = 4f;
																										this.width = 56;
																										this.height = 22;
																										this.damage = 80;
																										this.axe = 27;
																										this.UseSound = new SoundStyle?(SoundID.Item23);
																										this.shoot = 427;
																										this.rare = 10;
																										this.value = Item.sellPrice(0, 6, 0, 0);
																										this.noMelee = true;
																										this.noUseGraphic = true;
																										this.melee = true;
																										this.channel = true;
																										this.glowMask = 20;
																										this.tileBoost += 4;
																										return;
																									case 2774:
																										this.useStyle = 5;
																										this.useAnimation = 25;
																										this.useTime = 4;
																										this.shootSpeed = 32f;
																										this.knockBack = 0.5f;
																										this.width = 54;
																										this.height = 26;
																										this.damage = 50;
																										this.pick = 225;
																										this.UseSound = new SoundStyle?(SoundID.Item23);
																										this.shoot = 428;
																										this.rare = 10;
																										this.value = Item.sellPrice(0, 7, 0, 0);
																										this.noMelee = true;
																										this.noUseGraphic = true;
																										this.melee = true;
																										this.channel = true;
																										this.glowMask = 21;
																										this.tileBoost += 3;
																										return;
																									case 2775:
																										this.useTurn = true;
																										this.autoReuse = true;
																										this.useStyle = 1;
																										this.useAnimation = 30;
																										this.useTime = 7;
																										this.knockBack = 7f;
																										this.width = 44;
																										this.height = 42;
																										this.damage = 110;
																										this.hammer = 100;
																										this.UseSound = new SoundStyle?(SoundID.Item1);
																										this.rare = 10;
																										this.value = Item.sellPrice(0, 8, 0, 0);
																										this.melee = true;
																										this.scale = 1.1f;
																										this.glowMask = 4;
																										this.tileBoost += 4;
																										return;
																									case 2776:
																										this.useStyle = 1;
																										this.useAnimation = 12;
																										this.useTime = 6;
																										this.knockBack = 5.5f;
																										this.useTurn = true;
																										this.autoReuse = true;
																										this.width = 36;
																										this.height = 36;
																										this.damage = 80;
																										this.pick = 225;
																										this.UseSound = new SoundStyle?(SoundID.Item1);
																										this.rare = 10;
																										this.value = Item.sellPrice(0, 7, 0, 0);
																										this.melee = true;
																										this.glowMask = 5;
																										this.tileBoost += 4;
																										return;
																									case 2777:
																										this.SetDefaults3(2772);
																										type = 2777;
																										this.glowMask = 6;
																										return;
																									case 2778:
																										this.SetDefaults3(2773);
																										type = 2778;
																										this.shoot = 429;
																										this.glowMask = 22;
																										return;
																									case 2779:
																										this.SetDefaults3(2774);
																										type = 2779;
																										this.shoot = 430;
																										this.glowMask = 23;
																										return;
																									case 2780:
																										this.SetDefaults3(2775);
																										type = 2780;
																										this.glowMask = 9;
																										return;
																									case 2781:
																										this.SetDefaults3(2776);
																										type = 2781;
																										this.glowMask = 10;
																										return;
																									case 2782:
																										this.SetDefaults3(2772);
																										type = 2782;
																										this.glowMask = -1;
																										return;
																									case 2783:
																										this.SetDefaults3(2773);
																										type = 2783;
																										this.shoot = 431;
																										this.glowMask = -1;
																										return;
																									case 2784:
																										this.SetDefaults3(2774);
																										type = 2784;
																										this.shoot = 432;
																										this.glowMask = -1;
																										return;
																									case 2785:
																										this.SetDefaults3(2775);
																										type = 2785;
																										this.glowMask = -1;
																										return;
																									case 2786:
																										this.SetDefaults3(2776);
																										type = 2786;
																										this.glowMask = -1;
																										return;
																									case 2787:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 345;
																										this.width = 12;
																										this.height = 12;
																										return;
																									case 2788:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 7;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createWall = 172;
																										this.width = 12;
																										this.height = 12;
																										return;
																									case 2789:
																									case 2790:
																									case 2791:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 7;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createWall = 173 + type - 2789;
																										this.width = 12;
																										this.height = 12;
																										return;
																									default:
																										if (type >= 2792 && type <= 2794)
																										{
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.autoReuse = true;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 346 + type - 2792;
																											this.width = 12;
																											this.height = 12;
																											return;
																										}
																										switch (type)
																										{
																										case 2795:
																											this.useStyle = 5;
																											this.useAnimation = 20;
																											this.useTime = 20;
																											this.shootSpeed = 20f;
																											this.knockBack = 2f;
																											this.width = 20;
																											this.height = 12;
																											this.damage = 60;
																											this.shoot = 439;
																											this.mana = 6;
																											this.rare = 8;
																											this.value = Item.sellPrice(0, 10, 0, 0);
																											this.noMelee = true;
																											this.noUseGraphic = true;
																											this.magic = true;
																											this.channel = true;
																											this.glowMask = 47;
																											return;
																										case 2796:
																											this.useStyle = 5;
																											this.useAnimation = 12;
																											this.useTime = 12;
																											this.width = 50;
																											this.height = 18;
																											this.shoot = 442;
																											this.useAmmo = 771;
																											this.glowMask = 36;
																											this.UseSound = new SoundStyle?(SoundID.Item92);
																											this.damage = 40;
																											this.shootSpeed = 12f;
																											this.noMelee = true;
																											this.value = Item.sellPrice(0, 10, 0, 0);
																											this.ranged = true;
																											this.rare = 8;
																											this.knockBack = 2f;
																											return;
																										case 2797:
																											this.useStyle = 5;
																											this.useAnimation = 21;
																											this.useTime = 21;
																											this.autoReuse = true;
																											this.width = 50;
																											this.height = 18;
																											this.shoot = 444;
																											this.useAmmo = AmmoID.Bullet;
																											this.glowMask = 38;
																											this.UseSound = new SoundStyle?(SoundID.Item95);
																											this.damage = 45;
																											this.shootSpeed = 12f;
																											this.noMelee = true;
																											this.value = Item.sellPrice(0, 10, 0, 0);
																											this.ranged = true;
																											this.rare = 8;
																											this.knockBack = 3f;
																											return;
																										case 2798:
																											this.useStyle = 5;
																											this.useAnimation = 25;
																											this.useTime = 6;
																											this.shootSpeed = 36f;
																											this.knockBack = 4.75f;
																											this.width = 20;
																											this.height = 12;
																											this.damage = 35;
																											this.pick = 230;
																											this.shoot = 445;
																											this.rare = 8;
																											this.value = Item.sellPrice(0, 10, 0, 0);
																											this.tileBoost = 11;
																											this.noMelee = true;
																											this.noUseGraphic = true;
																											this.melee = true;
																											this.channel = true;
																											this.glowMask = 39;
																											return;
																										case 2799:
																											this.width = 10;
																											this.height = 26;
																											this.accessory = true;
																											this.value = Item.buyPrice(0, 1, 0, 0);
																											this.rare = 1;
																											return;
																										case 2800:
																											this.noUseGraphic = true;
																											this.damage = 0;
																											this.knockBack = 7f;
																											this.useStyle = 5;
																											this.shootSpeed = 14f;
																											this.shoot = 446;
																											this.width = 18;
																											this.height = 28;
																											this.UseSound = new SoundStyle?(SoundID.Item1);
																											this.useAnimation = 20;
																											this.useTime = 20;
																											this.rare = 7;
																											this.noMelee = true;
																											this.value = Item.sellPrice(0, 2, 50, 0);
																											return;
																										case 2801:
																											this.width = 28;
																											this.height = 20;
																											this.headSlot = 172;
																											this.rare = 1;
																											this.vanity = true;
																											return;
																										case 2802:
																											this.width = 28;
																											this.height = 20;
																											this.headSlot = 173;
																											this.rare = 1;
																											this.vanity = true;
																											return;
																										case 2803:
																											this.width = 18;
																											this.height = 18;
																											this.headSlot = 174;
																											this.vanity = true;
																											this.value = Item.sellPrice(0, 1, 0, 0);
																											return;
																										case 2804:
																											this.width = 18;
																											this.height = 18;
																											this.bodySlot = 178;
																											this.vanity = true;
																											this.value = Item.sellPrice(0, 1, 0, 0);
																											return;
																										case 2805:
																											this.width = 18;
																											this.height = 18;
																											this.legSlot = 113;
																											this.vanity = true;
																											this.value = Item.sellPrice(0, 1, 0, 0);
																											return;
																										case 2806:
																											this.width = 18;
																											this.height = 18;
																											this.headSlot = 175;
																											this.vanity = true;
																											this.value = Item.sellPrice(0, 1, 0, 0);
																											this.glowMask = 46;
																											return;
																										case 2807:
																											this.width = 18;
																											this.height = 18;
																											this.bodySlot = 179;
																											this.vanity = true;
																											this.value = Item.sellPrice(0, 1, 0, 0);
																											this.glowMask = 45;
																											return;
																										case 2808:
																											this.width = 18;
																											this.height = 18;
																											this.legSlot = 114;
																											this.vanity = true;
																											this.value = Item.sellPrice(0, 1, 0, 0);
																											return;
																										case 2809:
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.autoReuse = true;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 104;
																											this.width = 20;
																											this.height = 20;
																											this.value = 300;
																											this.placeStyle = 24;
																											return;
																										case 2810:
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.autoReuse = true;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 90;
																											this.placeStyle = 27;
																											this.width = 20;
																											this.height = 20;
																											this.value = 300;
																											return;
																										case 2811:
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.autoReuse = true;
																											this.createTile = 79;
																											this.placeStyle = 27;
																											this.width = 28;
																											this.height = 20;
																											this.value = 2000;
																											return;
																										case 2812:
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.autoReuse = true;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 15;
																											this.placeStyle = 32;
																											this.width = 12;
																											this.height = 30;
																											this.value = 150;
																											return;
																										case 2813:
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.autoReuse = true;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 34;
																											this.placeStyle = 33;
																											this.width = 26;
																											this.height = 26;
																											this.value = 3000;
																											return;
																										case 2814:
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.autoReuse = true;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 21;
																											this.placeStyle = 48;
																											this.width = 26;
																											this.height = 22;
																											this.value = 500;
																											return;
																										case 2815:
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 10;
																											this.placeStyle = 32;
																											this.width = 14;
																											this.height = 28;
																											this.value = 200;
																											return;
																										case 2816:
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.autoReuse = true;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 88;
																											this.placeStyle = 24;
																											this.width = 20;
																											this.height = 20;
																											this.value = 300;
																											return;
																										case 2817:
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.autoReuse = true;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 101;
																											this.width = 20;
																											this.height = 20;
																											this.value = 300;
																											this.placeStyle = 28;
																											return;
																										case 2818:
																											this.noWet = true;
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.autoReuse = true;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 33;
																											this.placeStyle = 26;
																											this.width = 8;
																											this.value = Item.sellPrice(0, 0, 0, 60);
																											this.height = 18;
																											return;
																										case 2819:
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.autoReuse = true;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 93;
																											this.placeStyle = 27;
																											this.width = 10;
																											this.height = 24;
																											this.value = 500;
																											return;
																										case 2820:
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.autoReuse = true;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 42;
																											this.width = 12;
																											this.height = 28;
																											this.placeStyle = 33;
																											this.value = 150;
																											return;
																										case 2821:
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.autoReuse = true;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 87;
																											this.placeStyle = 26;
																											this.width = 20;
																											this.height = 20;
																											this.value = 300;
																											return;
																										case 2822:
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.autoReuse = true;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 19;
																											this.placeStyle = 26;
																											this.width = 8;
																											this.height = 10;
																											return;
																										case 2823:
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.autoReuse = true;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 89;
																											this.placeStyle = 29;
																											this.width = 20;
																											this.height = 20;
																											this.value = 300;
																											return;
																										case 2824:
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.autoReuse = true;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 14;
																											this.placeStyle = 31;
																											this.width = 26;
																											this.height = 20;
																											this.value = 300;
																											return;
																										case 2825:
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.autoReuse = true;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 100;
																											this.placeStyle = 27;
																											this.width = 20;
																											this.height = 20;
																											this.value = 1500;
																											return;
																										case 2826:
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.autoReuse = true;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 18;
																											this.placeStyle = 27;
																											this.width = 28;
																											this.height = 14;
																											this.value = 150;
																											return;
																										case 2827:
																										case 2828:
																										case 2829:
																										case 2830:
																										case 2831:
																										case 2832:
																										case 2833:
																										case 2834:
																										case 2835:
																										case 2836:
																										case 2837:
																										case 2838:
																										case 2839:
																										case 2840:
																										case 2841:
																										case 2842:
																										case 2843:
																										case 2844:
																										case 2845:
																										case 2846:
																										case 2847:
																										case 2848:
																										case 2849:
																										case 2850:
																										case 2851:
																										case 2852:
																										case 2853:
																										case 2854:
																										case 2855:
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.autoReuse = true;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 172;
																											this.placeStyle = type - 2827;
																											this.width = 20;
																											this.height = 20;
																											this.value = 300;
																											if (type == 2843)
																											{
																												this.value = Item.buyPrice(0, 10, 0, 0);
																											}
																											return;
																										default:
																											switch (type)
																											{
																											case 2856:
																												this.width = 28;
																												this.height = 20;
																												this.headSlot = 176;
																												this.rare = 1;
																												this.vanity = true;
																												this.value = Item.buyPrice(0, 10, 0, 0);
																												return;
																											case 2857:
																												this.width = 28;
																												this.height = 20;
																												this.headSlot = 177;
																												this.rare = 1;
																												this.vanity = true;
																												this.value = Item.buyPrice(0, 10, 0, 0);
																												return;
																											case 2858:
																												this.width = 18;
																												this.height = 14;
																												this.bodySlot = 180;
																												this.rare = 1;
																												this.vanity = true;
																												this.value = Item.buyPrice(0, 10, 0, 0);
																												return;
																											case 2859:
																												this.width = 18;
																												this.height = 14;
																												this.bodySlot = 181;
																												this.rare = 1;
																												this.vanity = true;
																												this.value = Item.buyPrice(0, 10, 0, 0);
																												return;
																											case 2860:
																												this.useStyle = 1;
																												this.useTurn = true;
																												this.useAnimation = 15;
																												this.useTime = 10;
																												this.autoReuse = true;
																												this.maxStack = Item.CommonMaxStack;
																												this.consumable = true;
																												this.glowMask = 93;
																												this.createTile = 350;
																												this.width = 12;
																												this.height = 12;
																												return;
																											case 2861:
																												this.useStyle = 1;
																												this.useTurn = true;
																												this.useAnimation = 15;
																												this.useTime = 7;
																												this.autoReuse = true;
																												this.maxStack = Item.CommonMaxStack;
																												this.consumable = true;
																												this.glowMask = 95;
																												this.createWall = 176;
																												this.width = 12;
																												this.height = 12;
																												return;
																											case 2862:
																												this.width = 28;
																												this.height = 12;
																												this.headSlot = 178;
																												this.rare = 3;
																												this.value = Item.sellPrice(0, 1, 0, 0);
																												this.vanity = true;
																												this.glowMask = 97;
																												return;
																											case 2863:
																												this.width = 20;
																												this.height = 26;
																												this.maxStack = Item.CommonMaxStack;
																												this.rare = 3;
																												this.glowMask = 98;
																												this.value = Item.buyPrice(0, 30, 0, 0);
																												this.UseSound = new SoundStyle?(SoundID.Item3);
																												this.useStyle = 9;
																												this.useTurn = true;
																												this.useAnimation = 17;
																												this.useTime = 17;
																												this.consumable = true;
																												return;
																											case 2864:
																												this.glowMask = 99;
																												this.width = 20;
																												this.height = 20;
																												this.maxStack = Item.CommonMaxStack;
																												this.value = Item.sellPrice(0, 1, 50, 0);
																												this.rare = 3;
																												return;
																											case 2865:
																												this.useStyle = 1;
																												this.useTurn = true;
																												this.useAnimation = 15;
																												this.useTime = 10;
																												this.autoReuse = true;
																												this.maxStack = Item.CommonMaxStack;
																												this.consumable = true;
																												this.createTile = 242;
																												this.width = 30;
																												this.height = 30;
																												this.value = Item.buyPrice(0, 2, 0, 0);
																												this.placeStyle = 27;
																												return;
																											case 2866:
																												this.useStyle = 1;
																												this.useTurn = true;
																												this.useAnimation = 15;
																												this.useTime = 10;
																												this.autoReuse = true;
																												this.maxStack = Item.CommonMaxStack;
																												this.consumable = true;
																												this.createTile = 242;
																												this.width = 30;
																												this.height = 30;
																												this.value = Item.buyPrice(0, 2, 0, 0);
																												this.placeStyle = 28;
																												return;
																											case 2867:
																												this.useStyle = 1;
																												this.useTurn = true;
																												this.useAnimation = 15;
																												this.useTime = 10;
																												this.autoReuse = true;
																												this.maxStack = Item.CommonMaxStack;
																												this.consumable = true;
																												this.createTile = 242;
																												this.width = 30;
																												this.height = 30;
																												this.value = Item.buyPrice(0, 2, 0, 0);
																												this.placeStyle = 29;
																												return;
																											case 2868:
																												this.useStyle = 1;
																												this.useTurn = true;
																												this.useAnimation = 15;
																												this.useTime = 10;
																												this.autoReuse = true;
																												this.maxStack = Item.CommonMaxStack;
																												this.consumable = true;
																												this.createTile = 351;
																												this.width = 12;
																												this.height = 12;
																												this.value = Item.buyPrice(0, 0, 1, 0);
																												return;
																											case 2869:
																												this.width = 20;
																												this.height = 20;
																												this.maxStack = Item.CommonMaxStack;
																												this.value = Item.sellPrice(0, 1, 50, 0);
																												this.rare = 3;
																												return;
																											case 2870:
																												this.width = 20;
																												this.height = 20;
																												this.maxStack = Item.CommonMaxStack;
																												this.value = Item.sellPrice(0, 1, 50, 0);
																												this.rare = 3;
																												return;
																											case 2871:
																												this.width = 20;
																												this.height = 20;
																												this.maxStack = Item.CommonMaxStack;
																												this.value = Item.sellPrice(0, 0, 75, 0);
																												this.rare = 2;
																												return;
																											case 2872:
																												this.width = 20;
																												this.height = 20;
																												this.maxStack = Item.CommonMaxStack;
																												this.value = Item.sellPrice(0, 0, 75, 0);
																												this.rare = 2;
																												return;
																											case 2873:
																												this.width = 20;
																												this.height = 20;
																												this.maxStack = Item.CommonMaxStack;
																												this.value = Item.sellPrice(0, 1, 50, 0);
																												this.rare = 3;
																												return;
																											case 2874:
																												this.width = 20;
																												this.height = 20;
																												this.maxStack = Item.CommonMaxStack;
																												this.value = 10000;
																												this.rare = 1;
																												return;
																											case 2875:
																												this.width = 20;
																												this.height = 20;
																												this.maxStack = Item.CommonMaxStack;
																												this.value = 10000;
																												this.rare = 1;
																												return;
																											case 2876:
																												this.width = 20;
																												this.height = 20;
																												this.maxStack = Item.CommonMaxStack;
																												this.value = 10000;
																												this.rare = 1;
																												return;
																											case 2877:
																												this.width = 20;
																												this.height = 20;
																												this.maxStack = Item.CommonMaxStack;
																												this.value = 10000;
																												this.rare = 1;
																												return;
																											case 2878:
																												this.width = 20;
																												this.height = 20;
																												this.maxStack = Item.CommonMaxStack;
																												this.value = Item.sellPrice(0, 1, 50, 0);
																												this.rare = 3;
																												this.glowMask = 105;
																												return;
																											case 2879:
																												this.width = 20;
																												this.height = 20;
																												this.maxStack = Item.CommonMaxStack;
																												this.value = Item.sellPrice(0, 1, 50, 0);
																												this.rare = 3;
																												this.glowMask = 104;
																												return;
																											case 2880:
																												this.useStyle = 1;
																												this.useAnimation = 20;
																												this.useTime = 20;
																												this.autoReuse = true;
																												this.shoot = 451;
																												this.shootSpeed = 11f;
																												this.knockBack = 4.5f;
																												this.width = 40;
																												this.height = 40;
																												this.damage = 100;
																												this.scale = 1.05f;
																												this.UseSound = new SoundStyle?(SoundID.Item1);
																												this.rare = 8;
																												this.value = Item.sellPrice(0, 10, 0, 0);
																												this.melee = true;
																												return;
																											case 2882:
																												this.useStyle = 5;
																												this.useAnimation = 20;
																												this.useTime = 20;
																												this.shootSpeed = 14f;
																												this.knockBack = 2f;
																												this.width = 16;
																												this.height = 16;
																												this.damage = 100;
																												this.UseSound = new SoundStyle?(SoundID.Item75);
																												this.shoot = 460;
																												this.mana = 14;
																												this.rare = 8;
																												this.value = Item.sellPrice(0, 10, 0, 0);
																												this.noMelee = true;
																												this.noUseGraphic = true;
																												this.magic = true;
																												this.channel = true;
																												this.glowMask = 102;
																												return;
																											case 2883:
																												this.width = 20;
																												this.height = 20;
																												this.maxStack = Item.CommonMaxStack;
																												this.value = Item.sellPrice(0, 1, 50, 0);
																												this.rare = 3;
																												this.glowMask = 103;
																												return;
																											case 2884:
																												this.width = 20;
																												this.height = 20;
																												this.maxStack = Item.CommonMaxStack;
																												this.value = Item.sellPrice(0, 1, 50, 0);
																												this.rare = 3;
																												this.glowMask = 107;
																												return;
																											case 2885:
																												this.width = 20;
																												this.height = 20;
																												this.maxStack = Item.CommonMaxStack;
																												this.value = Item.sellPrice(0, 1, 50, 0);
																												this.rare = 3;
																												this.glowMask = 106;
																												return;
																											case 2886:
																												this.damage = 0;
																												this.useStyle = 1;
																												this.shootSpeed = 4f;
																												this.shoot = 463;
																												this.width = 16;
																												this.height = 24;
																												this.maxStack = Item.CommonMaxStack;
																												this.consumable = true;
																												this.UseSound = new SoundStyle?(SoundID.Item1);
																												this.useAnimation = 15;
																												this.useTime = 15;
																												this.noMelee = true;
																												this.value = 100;
																												return;
																											case 2887:
																												this.width = 16;
																												this.height = 18;
																												this.maxStack = Item.CommonMaxStack;
																												this.value = 50;
																												return;
																											case 2888:
																												this.useStyle = 5;
																												this.useAnimation = 23;
																												this.useTime = 23;
																												this.width = 12;
																												this.height = 28;
																												this.shoot = 469;
																												this.useAmmo = AmmoID.Arrow;
																												this.UseSound = new SoundStyle?(SoundID.Item97);
																												this.damage = 23;
																												this.shootSpeed = 8f;
																												this.knockBack = 3f;
																												this.rare = 3;
																												this.noMelee = true;
																												this.value = this.queenBeePrice;
																												this.ranged = true;
																												return;
																											case 2889:
																											case 2890:
																											case 2891:
																											case 2892:
																											case 2893:
																											case 2894:
																											case 2895:
																												this.useStyle = 1;
																												this.autoReuse = true;
																												this.useTurn = true;
																												this.useAnimation = 15;
																												this.useTime = 10;
																												this.maxStack = Item.CommonMaxStack;
																												this.consumable = true;
																												this.width = 12;
																												this.height = 12;
																												this.makeNPC = (int)((short)(442 + type - 2889));
																												this.noUseGraphic = true;
																												this.value = Item.sellPrice(0, 10, 0, 0);
																												this.rare = 3;
																												if (type == 2895 || type == 2893 || type == 2891)
																												{
																													this.bait = 50;
																												}
																												return;
																											}
																											if (type == 2896)
																											{
																												this.useStyle = 1;
																												this.shootSpeed = 4f;
																												this.shoot = 470;
																												this.width = 8;
																												this.height = 28;
																												this.maxStack = Item.CommonMaxStack;
																												this.consumable = true;
																												this.UseSound = new SoundStyle?(SoundID.Item1);
																												this.useAnimation = 40;
																												this.useTime = 40;
																												this.noUseGraphic = true;
																												this.noMelee = true;
																												this.value = Item.buyPrice(0, 0, 20, 0);
																												this.rare = 1;
																												return;
																											}
																											if (type - 2897 <= 97)
																											{
																												this.useStyle = 1;
																												this.useTurn = true;
																												this.useAnimation = 15;
																												this.useTime = 10;
																												this.autoReuse = true;
																												this.maxStack = Item.CommonMaxStack;
																												this.consumable = true;
																												this.createTile = 91;
																												this.placeStyle = 109 + type - 2897;
																												this.width = 10;
																												this.height = 24;
																												this.value = 1000;
																												this.rare = 1;
																												return;
																											}
																											switch (type)
																											{
																											case 2995:
																												this.useStyle = 1;
																												this.useTurn = true;
																												this.useAnimation = 15;
																												this.useTime = 10;
																												this.autoReuse = true;
																												this.maxStack = Item.CommonMaxStack;
																												this.consumable = true;
																												this.createTile = 242;
																												this.width = 30;
																												this.height = 30;
																												this.value = Item.sellPrice(0, 0, 10, 0);
																												this.placeStyle = 30;
																												return;
																											case 2996:
																												this.useStyle = 1;
																												this.useTurn = true;
																												this.useAnimation = 15;
																												this.useTime = 8;
																												this.autoReuse = true;
																												this.maxStack = Item.CommonMaxStack;
																												this.consumable = true;
																												this.createTile = 353;
																												this.width = 12;
																												this.height = 12;
																												this.tileBoost += 3;
																												return;
																											case 2997:
																												this.maxStack = Item.CommonMaxStack;
																												this.consumable = true;
																												this.width = 14;
																												this.height = 24;
																												this.value = 1000;
																												this.rare = 1;
																												return;
																											case 2998:
																												this.width = 24;
																												this.height = 24;
																												this.accessory = true;
																												this.value = 100000;
																												this.rare = 4;
																												return;
																											case 2999:
																												this.rare = 1;
																												this.useStyle = 1;
																												this.useTurn = true;
																												this.useAnimation = 15;
																												this.useTime = 10;
																												this.autoReuse = true;
																												this.maxStack = Item.CommonMaxStack;
																												this.consumable = true;
																												this.createTile = 354;
																												this.width = 12;
																												this.height = 12;
																												this.value = 100000;
																												return;
																											case 3000:
																												this.rare = 1;
																												this.useStyle = 1;
																												this.useTurn = true;
																												this.useAnimation = 15;
																												this.useTime = 10;
																												this.autoReuse = true;
																												this.maxStack = Item.CommonMaxStack;
																												this.consumable = true;
																												this.createTile = 355;
																												this.width = 12;
																												this.height = 12;
																												this.value = 100000;
																												return;
																											default:
																												return;
																											}
																											break;
																										}
																										break;
																									}
																									break;
																								}
																								break;
																							}
																							break;
																						}
																						break;
																					}
																					break;
																				}
																				break;
																			}
																			break;
																		}
																	}
																	break;
																}
																break;
															}
															break;
														}
														break;
													}
													break;
												}
											}
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											if (type != 2203)
											{
												if (type != 2204)
												{
													this.createTile = 300 + type - 2192;
												}
												else
												{
													this.createTile = 308;
												}
											}
											else
											{
												this.createTile = 307;
											}
											this.width = 12;
											this.height = 12;
											this.value = Item.buyPrice(0, 10, 0, 0);
											if (type == 2194)
											{
												this.value = Item.buyPrice(0, 2, 70, 0);
											}
											return;
										}
										break;
									}
									break;
								}
								break;
							}
							break;
						}
						break;
					}
					break;
				}
				break;
			}
		}

		/// <summary>
		/// This method sets a variety of Item values common to quest fish items.<br />
		/// Specifically:<code>
		/// questItem = true;
		/// maxStack = 1;
		/// width = 26;
		/// height = 26;
		/// uniqueStack = true;
		/// rare = <see cref="F:Terraria.ID.ItemRarityID.Quest" />;
		/// </code>
		/// </summary>
		// Token: 0x0600027D RID: 637 RVA: 0x0006189B File Offset: 0x0005FA9B
		public void DefaultToQuestFish()
		{
			this.questItem = true;
			this.maxStack = 1;
			this.width = 26;
			this.height = 26;
			this.uniqueStack = true;
			this.rare = -11;
		}

		// Token: 0x0600027E RID: 638 RVA: 0x000618CC File Offset: 0x0005FACC
		public void SetDefaults4(int type)
		{
			switch (type)
			{
			case 3001:
				this.rare = 1;
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.healLife = 70;
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.potion = true;
				this.value = Item.buyPrice(0, 0, 5, 0);
				return;
			case 3002:
				this.alpha = 0;
				this.color = new Color(255, 255, 255, 0);
				this.rare = 1;
				this.useStyle = 1;
				this.shootSpeed = 6f;
				this.shoot = 473;
				this.width = 12;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.useTime = 15;
				this.noMelee = true;
				this.value = Item.buyPrice(0, 0, 1, 50);
				this.holdStyle = 1;
				return;
			case 3003:
				this.shootSpeed = 3.5f;
				this.shoot = 474;
				this.damage = 8;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 2.5f;
				this.value = Item.buyPrice(0, 0, 0, 15);
				this.ranged = true;
				return;
			case 3004:
				this.flame = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.holdStyle = 1;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 4;
				this.placeStyle = 13;
				this.width = 10;
				this.height = 12;
				this.value = Item.buyPrice(0, 0, 1, 0);
				return;
			case 3005:
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 475;
				this.damage = 0;
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.noUseGraphic = true;
				this.noMelee = true;
				return;
			case 3006:
				this.mana = 10;
				this.autoReuse = true;
				this.damage = 35;
				this.useStyle = 5;
				this.shootSpeed = 10f;
				this.shoot = 476;
				this.width = 26;
				this.height = 28;
				this.useAnimation = 12;
				this.useTime = 12;
				this.rare = 5;
				this.noMelee = true;
				this.knockBack = 2.5f;
				this.value = Item.sellPrice(0, 8, 0, 0);
				this.magic = true;
				return;
			case 3007:
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 22;
				this.useTime = 22;
				this.width = 38;
				this.height = 6;
				this.shoot = 10;
				this.useAmmo = AmmoID.Dart;
				this.UseSound = new SoundStyle?(SoundID.Item98);
				this.damage = 28;
				this.shootSpeed = 13f;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 8, 0, 0);
				this.knockBack = 3.5f;
				this.useAmmo = AmmoID.Dart;
				this.ranged = true;
				this.rare = 5;
				this.scale = 0.9f;
				return;
			case 3008:
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 38;
				this.useTime = 38;
				this.width = 38;
				this.height = 6;
				this.shoot = 10;
				this.useAmmo = AmmoID.Dart;
				this.UseSound = new SoundStyle?(SoundID.Item99);
				this.damage = 52;
				this.shootSpeed = 14.5f;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 8, 0, 0);
				this.knockBack = 5.5f;
				this.useAmmo = AmmoID.Dart;
				this.ranged = true;
				this.rare = 5;
				this.scale = 1f;
				return;
			case 3009:
				this.shoot = 477;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.ammo = AmmoID.Dart;
				this.damage = 14;
				this.knockBack = 3.5f;
				this.shootSpeed = 1f;
				this.ranged = true;
				this.rare = 3;
				this.value = Item.sellPrice(0, 0, 0, 6);
				this.consumable = true;
				return;
			case 3010:
				this.shoot = 478;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.ammo = AmmoID.Dart;
				this.damage = 9;
				this.knockBack = 2.2f;
				this.shootSpeed = 3f;
				this.ranged = true;
				this.rare = 3;
				this.value = Item.sellPrice(0, 0, 0, 6);
				this.consumable = true;
				return;
			case 3011:
				this.shoot = 479;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.ammo = AmmoID.Dart;
				this.damage = 10;
				this.knockBack = 2.5f;
				this.shootSpeed = 3f;
				this.ranged = true;
				this.rare = 3;
				this.value = Item.sellPrice(0, 0, 0, 6);
				this.consumable = true;
				return;
			case 3012:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 14;
				this.useTime = 14;
				this.knockBack = 3.25f;
				this.width = 30;
				this.height = 10;
				this.damage = 59;
				this.shoot = 481;
				this.shootSpeed = 9f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 5;
				this.value = Item.sellPrice(0, 8, 0, 0);
				this.melee = true;
				this.noUseGraphic = true;
				this.noMelee = true;
				return;
			case 3013:
				this.useStyle = 1;
				this.useTurn = true;
				this.autoReuse = true;
				this.useAnimation = 8;
				this.useTime = 8;
				this.width = 24;
				this.height = 28;
				this.damage = 60;
				this.knockBack = 6f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.scale = 1f;
				this.melee = true;
				this.rare = 5;
				this.value = Item.sellPrice(0, 8, 0, 0);
				this.melee = true;
				return;
			case 3014:
				this.mana = 40;
				this.autoReuse = true;
				this.damage = 43;
				this.useStyle = 1;
				this.shootSpeed = 15f;
				this.shoot = 482;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item100);
				this.useAnimation = 24;
				this.useTime = 24;
				this.rare = 5;
				this.noMelee = true;
				this.knockBack = 8f;
				this.value = Item.sellPrice(0, 8, 0, 0);
				this.magic = true;
				return;
			case 3015:
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.value = Item.sellPrice(0, 8, 0, 0);
				this.rare = 6;
				return;
			case 3016:
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.defense = 8;
				this.value = Item.sellPrice(0, 8, 0, 0);
				this.rare = 5;
				return;
			case 3017:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 7;
				this.value = Item.sellPrice(0, 6, 0, 0);
				this.shoeSlot = 16;
				return;
			case 3018:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useAnimation = 23;
				this.useTime = 23;
				this.width = 50;
				this.height = 20;
				this.shoot = 483;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.damage = 50;
				this.shootSpeed = 12f;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.knockBack = 6f;
				this.rare = 5;
				this.melee = true;
				return;
			case 3019:
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 13;
				this.useTime = 13;
				this.width = 18;
				this.height = 46;
				this.shoot = 485;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 22;
				this.knockBack = 5.5f;
				this.shootSpeed = 6f;
				this.noMelee = true;
				this.value = this.hellPrice;
				this.rare = 3;
				this.ranged = true;
				return;
			case 3020:
			case 3021:
			case 3022:
			case 3023:
				this.noUseGraphic = true;
				this.damage = 0;
				this.useStyle = 5;
				this.shootSpeed = 15f;
				this.shoot = 486 + type - 3020;
				this.width = 18;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 6;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 6, 0, 0);
				if (type == 3021)
				{
					this.shootSpeed = 16f;
				}
				return;
			case 3024:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 9;
				this.value = Item.sellPrice(0, 3, 0, 0);
				return;
			default:
				if (type == 3061)
				{
					this.width = 30;
					this.height = 30;
					this.accessory = true;
					this.rare = 5;
					this.value = Item.buyPrice(0, 20, 0, 0);
					this.backSlot = 8;
					return;
				}
				if (type == 3599)
				{
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.rare = 9;
					this.value = Item.sellPrice(0, 3, 0, 0);
					return;
				}
				switch (type)
				{
				case 3025:
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 0, 75, 0);
					this.rare = 2;
					return;
				case 3026:
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 0, 75, 0);
					this.rare = 2;
					return;
				case 3027:
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 0, 75, 0);
					this.rare = 2;
					return;
				case 3028:
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 0, 75, 0);
					this.rare = 2;
					return;
				case 3029:
					this.useStyle = 5;
					this.autoReuse = true;
					this.useAnimation = 19;
					this.useTime = 19;
					this.width = 28;
					this.height = 60;
					this.shoot = 1;
					this.useAmmo = AmmoID.Arrow;
					this.UseSound = new SoundStyle?(SoundID.Item5);
					this.damage = 38;
					this.shootSpeed = 12.5f;
					this.noMelee = true;
					this.value = Item.sellPrice(0, 8, 0, 0);
					this.ranged = true;
					this.rare = 6;
					this.knockBack = 2.25f;
					return;
				case 3030:
					this.channel = true;
					this.damage = 40;
					this.useStyle = 1;
					this.shootSpeed = 17f;
					this.shoot = 491;
					this.width = 26;
					this.height = 28;
					this.UseSound = new SoundStyle?(SoundID.Item1);
					this.useAnimation = 15;
					this.useTime = 15;
					this.rare = 6;
					this.noMelee = true;
					this.knockBack = 4.5f;
					this.value = Item.sellPrice(0, 8, 0, 0);
					this.melee = true;
					this.noUseGraphic = true;
					return;
				case 3031:
				case 3032:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 12;
					this.useTime = 5;
					this.width = 20;
					this.height = 20;
					this.autoReuse = true;
					this.rare = 7;
					this.value = Item.sellPrice(0, 10, 0, 0);
					this.tileBoost += 2;
					return;
				case 3033:
					this.width = 16;
					this.height = 24;
					this.accessory = true;
					this.rare = 5;
					this.value = 50000;
					return;
				case 3034:
					this.width = 16;
					this.height = 24;
					this.accessory = true;
					this.rare = 5;
					this.value = 100000;
					return;
				case 3035:
					this.width = 16;
					this.height = 24;
					this.accessory = true;
					this.rare = 6;
					this.value = 150000;
					return;
				case 3036:
					this.width = 24;
					this.height = 28;
					this.rare = 3;
					this.value = Item.sellPrice(0, 3, 0, 0);
					this.accessory = true;
					return;
				case 3037:
					this.width = 24;
					this.height = 28;
					this.rare = 1;
					this.value = Item.sellPrice(0, 1, 0, 0);
					this.accessory = true;
					return;
				case 3038:
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 1, 50, 0);
					this.rare = 3;
					return;
				case 3039:
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 1, 50, 0);
					this.rare = 3;
					return;
				case 3040:
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 0, 75, 0);
					this.rare = 2;
					return;
				case 3041:
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 0, 75, 0);
					this.rare = 2;
					return;
				case 3042:
					this.width = 20;
					this.height = 20;
					this.maxStack = Item.CommonMaxStack;
					this.value = Item.sellPrice(0, 1, 50, 0);
					this.rare = 3;
					return;
				case 3043:
					this.damage = 0;
					this.useStyle = 1;
					this.shoot = 492;
					this.width = 16;
					this.height = 30;
					this.UseSound = new SoundStyle?(SoundID.Item25);
					this.useAnimation = 20;
					this.useTime = 20;
					this.rare = 3;
					this.noMelee = true;
					this.value = Item.buyPrice(0, 10, 0, 0);
					this.buffType = 152;
					return;
				case 3044:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.consumable = true;
					this.createTile = 139;
					this.placeStyle = 32;
					this.width = 24;
					this.height = 24;
					this.rare = 4;
					this.value = 100000;
					this.accessory = true;
					this.hasVanityEffects = true;
					return;
				case 3045:
					this.flame = true;
					this.noWet = true;
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.holdStyle = 1;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 4;
					this.placeStyle = 14;
					this.width = 10;
					this.height = 12;
					this.value = 250;
					this.rare = 1;
					return;
				case 3046:
				case 3047:
				case 3048:
				case 3049:
				case 3050:
					this.useStyle = 1;
					this.useTurn = true;
					this.useAnimation = 15;
					this.useTime = 10;
					this.autoReuse = true;
					this.maxStack = Item.CommonMaxStack;
					this.consumable = true;
					this.createTile = 215;
					this.placeStyle = 1 + type - 3046;
					this.width = 12;
					this.height = 12;
					return;
				default:
					if (type == 3190)
					{
						this.width = 20;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.value = Item.sellPrice(0, 0, 75, 0);
						this.rare = 2;
						return;
					}
					switch (type)
					{
					case 3597:
						this.width = 20;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.value = Item.sellPrice(0, 1, 50, 0);
						this.rare = 3;
						return;
					case 3598:
						this.width = 20;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.value = Item.sellPrice(0, 1, 50, 0);
						this.rare = 3;
						return;
					case 3600:
						this.width = 20;
						this.height = 20;
						this.maxStack = Item.CommonMaxStack;
						this.value = Item.sellPrice(0, 1, 50, 0);
						this.rare = 3;
						return;
					}
					switch (type)
					{
					case 3051:
						this.mana = 13;
						this.damage = 25;
						this.useStyle = 5;
						this.shootSpeed = 32f;
						this.shoot = 494;
						this.width = 26;
						this.height = 28;
						this.useAnimation = 33;
						this.useTime = 33;
						this.rare = 5;
						this.noMelee = true;
						this.knockBack = 3f;
						this.value = Item.sellPrice(0, 8, 0, 0);
						this.magic = true;
						this.autoReuse = true;
						return;
					case 3052:
						this.autoReuse = true;
						this.useStyle = 5;
						this.useAnimation = 20;
						this.useTime = 20;
						this.width = 14;
						this.height = 32;
						this.shoot = 495;
						this.useAmmo = AmmoID.Arrow;
						this.UseSound = new SoundStyle?(SoundID.Item102);
						this.damage = 47;
						this.shootSpeed = 11f;
						this.knockBack = 4.5f;
						this.rare = 5;
						this.crit = 3;
						this.noMelee = true;
						this.value = Item.sellPrice(0, 2, 0, 0);
						this.ranged = true;
						return;
					case 3053:
						this.autoReuse = true;
						this.rare = 5;
						this.mana = 6;
						this.UseSound = new SoundStyle?(SoundID.Item103);
						this.useStyle = 5;
						this.damage = 32;
						this.useAnimation = 21;
						this.useTime = 7;
						this.width = 24;
						this.height = 28;
						this.shoot = 496;
						this.shootSpeed = 9f;
						this.knockBack = 3.75f;
						this.magic = true;
						this.value = Item.sellPrice(0, 2, 0, 0);
						this.noMelee = true;
						this.noUseGraphic = true;
						this.crit = 3;
						return;
					case 3054:
						this.crit = 3;
						this.autoReuse = true;
						this.useStyle = 1;
						this.shootSpeed = 13f;
						this.shoot = 497;
						this.damage = 38;
						this.width = 18;
						this.height = 20;
						this.UseSound = new SoundStyle?(SoundID.Item1);
						this.useAnimation = 12;
						this.useTime = 12;
						this.noUseGraphic = true;
						this.noMelee = true;
						this.value = Item.sellPrice(0, 2, 0, 0);
						this.knockBack = 5.75f;
						this.melee = true;
						this.rare = 5;
						return;
					case 3055:
					case 3056:
					case 3057:
					case 3058:
					case 3059:
						this.useStyle = 1;
						this.useTurn = true;
						this.useAnimation = 15;
						this.useTime = 10;
						this.autoReuse = true;
						this.maxStack = Item.CommonMaxStack;
						this.consumable = true;
						this.createTile = 242;
						this.width = 30;
						this.height = 30;
						this.value = Item.sellPrice(0, 0, 10, 0);
						this.placeStyle = 31 + type - 3055;
						return;
					default:
						switch (type)
						{
						case 3060:
							this.damage = 0;
							this.useStyle = 1;
							this.shoot = 499;
							this.width = 16;
							this.height = 30;
							this.UseSound = new SoundStyle?(SoundID.Item2);
							this.useAnimation = 20;
							this.useTime = 20;
							this.rare = 3;
							this.noMelee = true;
							this.value = Item.sellPrice(0, 7, 50, 0);
							this.buffType = 154;
							return;
						case 3062:
							this.channel = true;
							this.damage = 0;
							this.useStyle = 4;
							this.shoot = 500;
							this.width = 24;
							this.height = 24;
							this.UseSound = new SoundStyle?(SoundID.Item8);
							this.useAnimation = 20;
							this.useTime = 20;
							this.rare = 1;
							this.noMelee = true;
							this.value = this.shadowOrbPrice;
							this.buffType = 155;
							return;
						case 3063:
							this.rare = 10;
							this.UseSound = new SoundStyle?(SoundID.Item1);
							this.useStyle = 1;
							this.damage = 200;
							this.useAnimation = 14;
							this.useTime = 14;
							this.width = 30;
							this.height = 30;
							this.shoot = 502;
							this.scale = 1.1f;
							this.shootSpeed = 12f;
							this.knockBack = 6.5f;
							this.melee = true;
							this.value = Item.sellPrice(0, 20, 0, 0);
							this.autoReuse = true;
							return;
						case 3064:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 356;
							this.width = 18;
							this.height = 34;
							this.value = Item.sellPrice(0, 3, 0, 0);
							this.rare = 7;
							return;
						case 3065:
							this.rare = 10;
							this.UseSound = new SoundStyle?(SoundID.Item105);
							this.useStyle = 1;
							this.damage = 170;
							this.useAnimation = 16;
							this.useTime = 16;
							this.width = 30;
							this.height = 30;
							this.shoot = 503;
							this.scale = 1.1f;
							this.shootSpeed = 8f;
							this.knockBack = 6.5f;
							this.melee = true;
							this.value = Item.sellPrice(0, 20, 0, 0);
							this.autoReuse = true;
							return;
						case 3066:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 357;
							this.width = 12;
							this.height = 12;
							return;
						case 3067:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 177;
							this.width = 12;
							this.height = 12;
							return;
						case 3068:
							this.width = 16;
							this.height = 24;
							this.accessory = true;
							this.rare = 1;
							this.value = Item.sellPrice(0, 0, 50, 0);
							return;
						case 3069:
							this.mana = 2;
							this.damage = 14;
							this.useStyle = 1;
							this.shootSpeed = 7f;
							this.shoot = 954;
							this.width = 26;
							this.height = 28;
							this.UseSound = new SoundStyle?(SoundID.Item8);
							this.useAnimation = 26;
							this.useTime = 26;
							this.rare = 1;
							this.noMelee = true;
							this.value = 10000;
							this.magic = true;
							this.crit = 10;
							if (this.Variant == ItemVariants.StrongerVariant)
							{
								this.value = Item.sellPrice(0, 5, 0, 0);
								this.rare = 4;
								this.damage = 40;
								this.useAnimation = 10;
								this.useTime = 10;
								this.mana = 6;
								this.shootSpeed = 12f;
								this.autoReuse = true;
							}
							return;
						case 3070:
						case 3071:
						case 3072:
						case 3073:
						case 3074:
						case 3075:
						case 3076:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 358 + type - 3070;
							this.width = 12;
							this.height = 12;
							this.value = Item.sellPrice(0, 10, 0, 0);
							this.rare = 3;
							return;
						}
						switch (type)
						{
						case 3077:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 8;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 365;
							this.width = 12;
							this.height = 12;
							this.value = 10;
							this.tileBoost += 3;
							return;
						case 3078:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 8;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 366;
							this.width = 12;
							this.height = 12;
							this.value = 10;
							this.tileBoost += 3;
							return;
						case 3079:
							this.useStyle = 1;
							this.shootSpeed = 10f;
							this.shoot = 505;
							this.damage = 0;
							this.width = 18;
							this.height = 20;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.UseSound = new SoundStyle?(SoundID.Item1);
							this.useAnimation = 20;
							this.useTime = 20;
							this.noUseGraphic = true;
							this.noMelee = true;
							this.value = 100;
							return;
						case 3080:
							this.useStyle = 1;
							this.shootSpeed = 10f;
							this.shoot = 506;
							this.damage = 0;
							this.width = 18;
							this.height = 20;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.UseSound = new SoundStyle?(SoundID.Item1);
							this.useAnimation = 20;
							this.useTime = 20;
							this.noUseGraphic = true;
							this.noMelee = true;
							this.value = 100;
							return;
						case 3081:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 367;
							this.width = 12;
							this.height = 12;
							return;
						case 3082:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 183;
							this.width = 12;
							this.height = 12;
							return;
						case 3083:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 179;
							this.width = 12;
							this.height = 12;
							return;
						case 3084:
							this.width = 24;
							this.height = 18;
							this.accessory = true;
							this.rare = 1;
							this.value = Item.sellPrice(0, 0, 50, 0);
							return;
						case 3085:
							this.width = 12;
							this.height = 12;
							this.rare = 2;
							this.maxStack = Item.CommonMaxStack;
							this.value = Item.buyPrice(0, 2, 0, 0);
							return;
						case 3086:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 368;
							this.width = 12;
							this.height = 12;
							return;
						case 3087:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 369;
							this.width = 12;
							this.height = 12;
							return;
						case 3088:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 184;
							this.width = 12;
							this.height = 12;
							return;
						case 3089:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 181;
							this.width = 12;
							this.height = 12;
							return;
						case 3090:
							this.width = 16;
							this.height = 24;
							this.accessory = true;
							this.rare = 2;
							this.value = 100000;
							this.expert = true;
							return;
						case 3091:
						case 3092:
							this.width = 14;
							this.height = 20;
							this.maxStack = Item.CommonMaxStack;
							this.useAnimation = 20;
							this.useTime = 20;
							return;
						case 3093:
							this.width = 12;
							this.height = 12;
							this.rare = 1;
							this.maxStack = Item.CommonMaxStack;
							this.value = Item.sellPrice(0, 0, 10, 0);
							return;
						case 3094:
							this.useStyle = 1;
							this.shootSpeed = 11.5f;
							this.shoot = 507;
							this.damage = 17;
							this.width = 30;
							this.height = 30;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.UseSound = new SoundStyle?(SoundID.Item1);
							this.useAnimation = 24;
							this.useTime = 24;
							this.noUseGraphic = true;
							this.noMelee = true;
							this.knockBack = 4.75f;
							this.value = Item.sellPrice(0, 0, 0, 5);
							this.ranged = true;
							return;
						case 3095:
							this.width = 24;
							this.height = 18;
							this.accessory = true;
							this.rare = 1;
							this.value = Item.sellPrice(0, 1, 0, 0);
							return;
						case 3096:
							break;
						case 3097:
							this.melee = true;
							this.damage = 30;
							this.width = 24;
							this.height = 28;
							this.rare = 1;
							this.value = Item.sellPrice(0, 2, 0, 0);
							this.accessory = true;
							this.defense = 2;
							this.shieldSlot = 5;
							this.knockBack = 9f;
							this.expert = true;
							return;
						case 3098:
							this.useStyle = 5;
							this.useAnimation = 25;
							this.useTime = 8;
							this.shootSpeed = 48f;
							this.knockBack = 8f;
							this.width = 54;
							this.height = 20;
							this.damage = 120;
							this.axe = 30;
							this.UseSound = new SoundStyle?(SoundID.Item23);
							this.shoot = 509;
							this.rare = 8;
							this.value = this.eclipsePostPlanteraPrice;
							this.noMelee = true;
							this.noUseGraphic = true;
							this.melee = true;
							this.channel = true;
							return;
						case 3099:
							this.width = 24;
							this.height = 18;
							this.accessory = true;
							this.rare = 1;
							this.value = Item.sellPrice(0, 1, 0, 0);
							return;
						case 3100:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 370;
							this.width = 12;
							this.height = 12;
							return;
						case 3101:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 7;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createWall = 182;
							this.width = 12;
							this.height = 12;
							return;
						case 3102:
							this.width = 24;
							this.height = 18;
							this.accessory = true;
							this.rare = 1;
							this.value = Item.sellPrice(0, 1, 0, 0);
							return;
						case 3103:
							this.shootSpeed = 3f;
							this.shoot = 1;
							this.damage = 5;
							this.width = 26;
							this.height = 26;
							this.ammo = AmmoID.Arrow;
							this.knockBack = 2f;
							this.value = Item.sellPrice(0, 1, 0, 0);
							this.ranged = true;
							this.rare = 2;
							return;
						case 3104:
							this.shootSpeed = 4f;
							this.shoot = 14;
							this.damage = 7;
							this.width = 26;
							this.height = 26;
							this.ammo = AmmoID.Bullet;
							this.knockBack = 2f;
							this.value = Item.sellPrice(0, 1, 0, 0);
							this.ranged = true;
							this.rare = 2;
							return;
						case 3105:
							this.magic = true;
							this.mana = 30;
							this.useStyle = 1;
							this.shootSpeed = 14f;
							this.rare = 8;
							this.damage = 52;
							this.shoot = 510;
							this.width = 18;
							this.height = 20;
							this.knockBack = 4f;
							this.UseSound = new SoundStyle?(SoundID.Item106);
							this.useAnimation = 45;
							this.useTime = 45;
							this.noUseGraphic = true;
							this.noMelee = true;
							this.value = this.eclipsePostPlanteraPrice;
							return;
						case 3106:
							this.autoReuse = true;
							this.useStyle = 1;
							this.useAnimation = 8;
							this.useTime = 8;
							this.knockBack = 3.5f;
							this.width = 30;
							this.height = 30;
							this.damage = 85;
							this.scale = 1.1f;
							this.UseSound = new SoundStyle?(SoundID.Item1);
							this.rare = 8;
							this.value = this.eclipsePostPlanteraPrice;
							this.melee = true;
							return;
						case 3107:
							this.useStyle = 5;
							this.autoReuse = true;
							this.useAnimation = 15;
							this.useTime = 15;
							this.width = 50;
							this.height = 18;
							this.shoot = 514;
							this.useAmmo = AmmoID.NailFriendly;
							this.UseSound = new SoundStyle?(SoundID.Item108);
							this.damage = 85;
							this.shootSpeed = 10f;
							this.noMelee = true;
							this.value = this.eclipsePostPlanteraPrice;
							this.rare = 8;
							this.ranged = true;
							return;
						case 3108:
							this.shootSpeed = 6f;
							this.shoot = 514;
							this.damage = 30;
							this.width = 8;
							this.height = 8;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.ammo = AmmoID.NailFriendly;
							this.knockBack = 3f;
							this.value = Item.buyPrice(0, 0, 1, 0);
							this.ranged = true;
							this.rare = 8;
							return;
						case 3109:
							this.width = 22;
							this.height = 22;
							this.defense = 4;
							this.headSlot = 179;
							this.rare = 2;
							this.value = Item.sellPrice(0, 1, 0, 0);
							return;
						case 3110:
							this.width = 16;
							this.height = 24;
							this.accessory = true;
							this.rare = 8;
							this.value = 700000;
							this.hasVanityEffects = true;
							return;
						case 3111:
							this.width = 10;
							this.height = 12;
							this.maxStack = Item.CommonMaxStack;
							this.alpha = 100;
							this.value = 15;
							return;
						case 3112:
							this.color = new Color(255, 255, 255, 0);
							this.useStyle = 1;
							this.shootSpeed = 6f;
							this.shoot = 515;
							this.width = 12;
							this.height = 12;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.UseSound = new SoundStyle?(SoundID.Item1);
							this.useAnimation = 15;
							this.useTime = 15;
							this.noMelee = true;
							this.value = 10;
							this.holdStyle = 1;
							return;
						case 3113:
							this.createTile = 371;
							this.width = 12;
							this.height = 12;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							return;
						case 3114:
							this.flame = true;
							this.noWet = true;
							this.holdStyle = 1;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 4;
							this.placeStyle = 15;
							this.width = 10;
							this.height = 12;
							this.value = 80;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							return;
						case 3115:
							this.useStyle = 1;
							this.shootSpeed = 5f;
							this.shoot = 516;
							this.width = 20;
							this.height = 20;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.UseSound = new SoundStyle?(SoundID.Item1);
							this.useAnimation = 25;
							this.useTime = 25;
							this.noUseGraphic = true;
							this.noMelee = true;
							this.value = Item.buyPrice(0, 0, 4, 0);
							this.damage = 0;
							return;
						case 3116:
							this.useStyle = 5;
							this.shootSpeed = 6.5f;
							this.shoot = 517;
							this.width = 20;
							this.height = 20;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.UseSound = new SoundStyle?(SoundID.Item1);
							this.useAnimation = 40;
							this.useTime = 40;
							this.noUseGraphic = true;
							this.noMelee = true;
							this.value = 100;
							this.damage = 65;
							this.knockBack = 8f;
							this.ranged = true;
							return;
						case 3117:
							this.flame = true;
							this.noWet = true;
							this.createTile = 372;
							this.width = 8;
							this.height = 18;
							this.holdStyle = 1;
							this.rare = 1;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.value = Item.sellPrice(0, 0, 1, 0);
							this.consumable = true;
							return;
						default:
							if (type - 3203 <= 5)
							{
								this.width = 12;
								this.height = 12;
								this.rare = 2;
								this.maxStack = Item.CommonMaxStack;
								this.createTile = 376;
								this.placeStyle = 3 + type - 3203;
								this.useAnimation = 15;
								this.useTime = 15;
								this.autoReuse = true;
								this.useStyle = 1;
								this.consumable = true;
								this.value = Item.sellPrice(0, 1, 0, 0);
								return;
							}
							break;
						}
						switch (type)
						{
						case 3096:
							this.width = 24;
							this.height = 18;
							this.accessory = true;
							this.rare = 1;
							this.value = Item.sellPrice(0, 1, 0, 0);
							return;
						case 3118:
							this.width = 24;
							this.height = 18;
							this.accessory = true;
							this.rare = 1;
							this.value = Item.sellPrice(0, 1, 0, 0);
							return;
						case 3119:
							this.width = 24;
							this.height = 18;
							this.accessory = true;
							this.rare = 1;
							this.value = Item.sellPrice(0, 1, 0, 0);
							return;
						case 3120:
							this.width = 24;
							this.height = 28;
							this.rare = 1;
							this.value = Item.sellPrice(0, 1, 0, 0);
							this.accessory = true;
							return;
						case 3121:
							this.width = 24;
							this.height = 28;
							this.rare = 3;
							this.value = Item.sellPrice(0, 3, 0, 0);
							this.accessory = true;
							return;
						case 3122:
							this.width = 24;
							this.height = 28;
							this.rare = 3;
							this.value = Item.sellPrice(0, 3, 0, 0);
							this.accessory = true;
							return;
						case 3123:
							this.width = 24;
							this.height = 28;
							this.rare = 5;
							this.value = Item.sellPrice(0, 5, 0, 0);
							this.accessory = true;
							return;
						case 3124:
							this.width = 24;
							this.height = 28;
							this.rare = 7;
							this.value = Item.sellPrice(0, 8, 0, 0);
							this.useTurn = true;
							this.useStyle = 4;
							this.useTime = 90;
							this.UseSound = new SoundStyle?(SoundID.Item6);
							this.useAnimation = 90;
							return;
						case 3125:
						case 3180:
						case 3181:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 21;
							this.width = 26;
							this.height = 22;
							this.value = 500;
							if (type == 3125)
							{
								this.placeStyle = 50;
								return;
							}
							if (type == 3180)
							{
								this.placeStyle = 49;
								return;
							}
							if (type != 3181)
							{
								return;
							}
							this.placeStyle = 51;
							return;
						case 3126:
						case 3127:
						case 3128:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 104;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							switch (type)
							{
							case 3126:
								this.placeStyle = 25;
								return;
							case 3127:
								this.placeStyle = 27;
								return;
							case 3128:
								this.placeStyle = 26;
								return;
							default:
								return;
							}
							break;
						case 3129:
						case 3130:
						case 3131:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 10;
							this.width = 14;
							this.height = 28;
							this.value = 200;
							switch (type)
							{
							case 3129:
								this.placeStyle = 33;
								return;
							case 3130:
								this.placeStyle = 35;
								return;
							case 3131:
								this.placeStyle = 34;
								return;
							default:
								return;
							}
							break;
						case 3132:
						case 3133:
						case 3134:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 88;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							switch (type)
							{
							case 3132:
								this.placeStyle = 25;
								return;
							case 3133:
								this.placeStyle = 27;
								return;
							case 3134:
								this.placeStyle = 26;
								return;
							default:
								return;
							}
							break;
						case 3135:
						case 3136:
						case 3137:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 93;
							this.width = 10;
							this.height = 24;
							this.value = 500;
							switch (type)
							{
							case 3135:
								this.placeStyle = 28;
								return;
							case 3136:
								this.placeStyle = 30;
								return;
							case 3137:
								this.placeStyle = 29;
								return;
							default:
								return;
							}
							break;
						case 3138:
						case 3139:
						case 3140:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 42;
							this.width = 12;
							this.height = 28;
							switch (type)
							{
							case 3138:
								this.placeStyle = 34;
								break;
							case 3139:
								this.placeStyle = 36;
								break;
							case 3140:
								this.placeStyle = 35;
								break;
							}
							this.value = 150;
							return;
						case 3141:
						case 3142:
						case 3143:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 87;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							switch (type)
							{
							case 3141:
								this.placeStyle = 27;
								return;
							case 3142:
								this.placeStyle = 29;
								return;
							case 3143:
								this.placeStyle = 28;
								return;
							default:
								return;
							}
							break;
						case 3144:
						case 3145:
						case 3146:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 19;
							this.width = 8;
							this.height = 10;
							switch (type)
							{
							case 3144:
								this.placeStyle = 27;
								return;
							case 3145:
								this.placeStyle = 29;
								return;
							case 3146:
								this.placeStyle = 28;
								return;
							default:
								return;
							}
							break;
						case 3147:
						case 3148:
						case 3149:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 172;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							switch (type)
							{
							case 3147:
								this.placeStyle = 29;
								return;
							case 3148:
								this.placeStyle = 31;
								return;
							case 3149:
								this.placeStyle = 30;
								return;
							default:
								return;
							}
							break;
						case 3150:
						case 3151:
						case 3152:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 89;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							switch (type)
							{
							case 3150:
								this.placeStyle = 30;
								return;
							case 3151:
								this.placeStyle = 32;
								return;
							case 3152:
								this.placeStyle = 31;
								return;
							default:
								return;
							}
							break;
						case 3153:
						case 3154:
						case 3155:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 14;
							this.width = 26;
							this.height = 20;
							this.value = 300;
							switch (type)
							{
							case 3153:
								this.placeStyle = 32;
								return;
							case 3154:
								this.placeStyle = 34;
								return;
							case 3155:
								this.placeStyle = 33;
								return;
							default:
								return;
							}
							break;
						case 3156:
						case 3157:
						case 3158:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 18;
							this.width = 28;
							this.height = 14;
							this.value = 150;
							switch (type)
							{
							case 3156:
								this.placeStyle = 28;
								return;
							case 3157:
								this.placeStyle = 30;
								return;
							case 3158:
								this.placeStyle = 29;
								return;
							default:
								return;
							}
							break;
						case 3159:
						case 3160:
						case 3161:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 90;
							switch (type)
							{
							case 3159:
								this.placeStyle = 28;
								break;
							case 3160:
								this.placeStyle = 30;
								break;
							case 3161:
								this.placeStyle = 29;
								break;
							}
							this.width = 20;
							this.height = 20;
							this.value = 300;
							return;
						case 3162:
						case 3163:
						case 3164:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.autoReuse = true;
							this.createTile = 79;
							this.width = 28;
							this.height = 20;
							this.value = 2000;
							switch (type)
							{
							case 3162:
								this.placeStyle = 28;
								return;
							case 3163:
								this.placeStyle = 30;
								return;
							case 3164:
								this.placeStyle = 29;
								return;
							default:
								return;
							}
							break;
						case 3165:
						case 3166:
						case 3167:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 101;
							this.width = 20;
							this.height = 20;
							this.value = 300;
							switch (type)
							{
							case 3165:
								this.placeStyle = 29;
								return;
							case 3166:
								this.placeStyle = 31;
								return;
							case 3167:
								this.placeStyle = 30;
								return;
							default:
								return;
							}
							break;
						case 3168:
						case 3169:
						case 3170:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 100;
							this.width = 20;
							this.height = 20;
							this.value = 1500;
							switch (type)
							{
							case 3168:
								this.placeStyle = 28;
								return;
							case 3169:
								this.placeStyle = 30;
								return;
							case 3170:
								this.placeStyle = 29;
								return;
							default:
								return;
							}
							break;
						case 3171:
						case 3172:
						case 3173:
							this.noWet = true;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 33;
							this.width = 8;
							this.height = 18;
							this.value = Item.sellPrice(0, 0, 0, 60);
							switch (type)
							{
							case 3171:
								this.placeStyle = 27;
								return;
							case 3172:
								this.placeStyle = 29;
								return;
							case 3173:
								this.placeStyle = 28;
								return;
							default:
								return;
							}
							break;
						case 3174:
						case 3175:
						case 3176:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 15;
							this.width = 12;
							this.height = 30;
							this.value = 150;
							switch (type)
							{
							case 3174:
								this.placeStyle = 33;
								return;
							case 3175:
								this.placeStyle = 35;
								return;
							case 3176:
								this.placeStyle = 34;
								return;
							default:
								return;
							}
							break;
						case 3177:
						case 3178:
						case 3179:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 34;
							this.width = 26;
							this.height = 26;
							this.value = 3000;
							switch (type)
							{
							case 3177:
								this.placeStyle = 34;
								return;
							case 3178:
								this.placeStyle = 36;
								return;
							case 3179:
								this.placeStyle = 35;
								return;
							default:
								return;
							}
							break;
						case 3182:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 373;
							this.width = 24;
							this.height = 24;
							this.value = Item.sellPrice(0, 0, 0, 40);
							return;
						case 3183:
							this.useTurn = true;
							this.useStyle = 1;
							this.useTime = 18;
							this.useAnimation = 18;
							this.width = 24;
							this.height = 28;
							this.UseSound = new SoundStyle?(SoundID.Item1);
							this.value = Item.sellPrice(0, 5, 0, 0);
							this.autoReuse = true;
							this.rare = 4;
							this.scale = 1.15f;
							return;
						case 3184:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 374;
							this.width = 24;
							this.height = 24;
							this.value = Item.sellPrice(0, 0, 0, 40);
							return;
						case 3185:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 375;
							this.width = 24;
							this.height = 24;
							this.value = Item.sellPrice(0, 0, 0, 40);
							return;
						case 3186:
							this.maxStack = Item.CommonMaxStack;
							this.width = 24;
							this.height = 24;
							this.value = Item.buyPrice(0, 0, 1, 0);
							return;
						case 3187:
							this.width = 18;
							this.height = 18;
							this.defense = 5;
							this.headSlot = 180;
							this.value = 17500;
							return;
						case 3188:
							this.width = 18;
							this.height = 18;
							this.defense = 6;
							this.bodySlot = 182;
							this.value = 14000;
							return;
						case 3189:
							this.width = 18;
							this.height = 18;
							this.defense = 5;
							this.legSlot = 122;
							this.value = 10500;
							return;
						case 3191:
						case 3192:
						case 3193:
						case 3194:
							this.useStyle = 1;
							this.autoReuse = true;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.width = 12;
							this.height = 12;
							this.makeNPC = (int)((short)(484 + type - 3191));
							this.noUseGraphic = true;
							switch (type)
							{
							case 3192:
								this.bait = 15;
								return;
							case 3193:
								this.bait = 25;
								return;
							case 3194:
								this.bait = 40;
								return;
							default:
								this.bait = 35;
								return;
							}
							break;
						case 3209:
							this.mana = 9;
							this.UseSound = new SoundStyle?(SoundID.Item109);
							this.useStyle = 5;
							this.damage = 40;
							this.useAnimation = 29;
							this.useTime = 29;
							this.width = 36;
							this.height = 40;
							this.shoot = 521;
							this.shootSpeed = 13f;
							this.knockBack = 4.4f;
							this.magic = true;
							this.autoReuse = true;
							this.value = Item.sellPrice(0, 4, 0, 0);
							this.rare = 5;
							this.noMelee = true;
							return;
						case 3210:
							this.UseSound = new SoundStyle?(SoundID.Item111);
							this.useStyle = 5;
							this.damage = 43;
							this.useAnimation = 10;
							this.useTime = 10;
							this.width = 30;
							this.height = 28;
							this.shoot = 523;
							this.shootSpeed = 8.5f;
							this.knockBack = 3f;
							this.ranged = true;
							this.autoReuse = true;
							this.value = Item.sellPrice(0, 4, 0, 0);
							this.rare = 5;
							this.noMelee = true;
							return;
						case 3211:
							this.useStyle = 1;
							this.useAnimation = 28;
							this.useTime = 28;
							this.knockBack = 5.75f;
							this.width = 40;
							this.height = 40;
							this.damage = 55;
							this.scale = 1.125f;
							this.UseSound = new SoundStyle?(SoundID.Item1);
							this.rare = 5;
							this.autoReuse = true;
							this.value = Item.sellPrice(0, 4, 0, 0);
							this.melee = true;
							return;
						case 3212:
							this.width = 22;
							this.height = 22;
							this.accessory = true;
							this.rare = 1;
							this.value = Item.sellPrice(0, 1, 0, 0);
							this.neckSlot = 7;
							return;
						case 3213:
							this.useStyle = 1;
							this.shootSpeed = 4f;
							this.shoot = 525;
							this.width = 26;
							this.height = 24;
							this.UseSound = new SoundStyle?(SoundID.Item59);
							this.useAnimation = 28;
							this.useTime = 28;
							this.rare = 3;
							this.value = Item.sellPrice(0, 2, 0, 0);
							return;
						}
						switch (type)
						{
						case 3196:
							this.useStyle = 1;
							this.shootSpeed = 6f;
							this.shoot = 519;
							this.width = 26;
							this.height = 26;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.UseSound = new SoundStyle?(SoundID.Item1);
							this.useAnimation = 25;
							this.useTime = 25;
							this.noUseGraphic = true;
							this.noMelee = true;
							this.value = Item.sellPrice(0, 0, 2, 0);
							this.damage = 0;
							this.rare = 1;
							return;
						case 3197:
							this.rare = 1;
							this.useStyle = 1;
							this.shootSpeed = 12.5f;
							this.shoot = 520;
							this.damage = 17;
							this.width = 28;
							this.height = 28;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.UseSound = new SoundStyle?(SoundID.Item1);
							this.useAnimation = 13;
							this.useTime = 13;
							this.noUseGraphic = true;
							this.noMelee = true;
							this.value = 80;
							this.knockBack = 3.5f;
							this.ranged = true;
							return;
						case 3198:
							this.rare = 1;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 377;
							this.width = 28;
							this.height = 22;
							this.value = 100000;
							return;
						case 3199:
							this.useTurn = true;
							this.width = 20;
							this.height = 20;
							this.useStyle = 4;
							this.useTime = 90;
							this.UseSound = new SoundStyle?(SoundID.Item6);
							this.useAnimation = 90;
							this.rare = 1;
							this.value = 50000;
							return;
						case 3200:
							this.width = 28;
							this.height = 24;
							this.accessory = true;
							this.rare = 1;
							this.value = 50000;
							this.shoeSlot = 17;
							return;
						case 3201:
							this.width = 16;
							this.height = 24;
							this.accessory = true;
							this.rare = 1;
							this.value = 50000;
							this.waistSlot = 11;
							return;
						case 3202:
							this.rare = 1;
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 378;
							this.width = 20;
							this.height = 30;
							this.value = Item.sellPrice(0, 0, 1, 0);
							return;
						case 3214:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 379;
							this.width = 12;
							this.height = 12;
							this.value = Item.buyPrice(0, 0, 2, 0);
							return;
						case 3215:
						case 3216:
						case 3217:
						case 3218:
						case 3219:
						case 3220:
						case 3221:
						case 3222:
							this.useStyle = 1;
							this.useTurn = true;
							this.useAnimation = 15;
							this.useTime = 10;
							this.autoReuse = true;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 380;
							this.placeStyle = type - 3215;
							this.width = 24;
							this.height = 20;
							this.value = Item.buyPrice(0, 0, 1, 0);
							return;
						}
						switch (type)
						{
						case 3223:
							this.width = 22;
							this.height = 22;
							this.accessory = true;
							this.rare = 1;
							this.value = 100000;
							this.expert = true;
							return;
						case 3224:
							this.width = 22;
							this.height = 22;
							this.accessory = true;
							this.rare = 1;
							this.value = 100000;
							this.neckSlot = 8;
							this.expert = true;
							return;
						case 3225:
							this.width = 14;
							this.height = 28;
							this.rare = 1;
							this.value = Item.sellPrice(0, 2, 50, 0);
							this.accessory = true;
							this.balloonSlot = 11;
							return;
						case 3226:
							this.width = 28;
							this.height = 20;
							this.headSlot = 181;
							this.rare = 9;
							this.vanity = true;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						case 3227:
							this.width = 18;
							this.height = 14;
							this.bodySlot = 183;
							this.rare = 9;
							this.vanity = true;
							this.value = Item.sellPrice(0, 5, 0, 0);
							return;
						case 3228:
							this.width = 24;
							this.height = 8;
							this.accessory = true;
							this.rare = 9;
							this.wingSlot = 28;
							this.value = 400000;
							return;
						case 3229:
						case 3230:
						case 3231:
						case 3232:
						case 3233:
							this.useTurn = true;
							this.useStyle = 1;
							this.useAnimation = 15;
							this.useTime = 10;
							this.maxStack = Item.CommonMaxStack;
							this.consumable = true;
							this.createTile = 85;
							this.placeStyle = 6 + type - 3229;
							this.width = 20;
							this.height = 20;
							return;
						default:
							if (type == 3234)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 385;
								this.width = 12;
								this.height = 12;
								return;
							}
							if (type - 3235 <= 2)
							{
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.consumable = true;
								this.createTile = 139;
								this.placeStyle = 33 + type - 3235;
								this.width = 24;
								this.height = 24;
								this.rare = 4;
								this.value = 100000;
								this.accessory = true;
								this.hasVanityEffects = true;
								return;
							}
							switch (type)
							{
							case 3238:
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 7;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createWall = 186;
								this.width = 12;
								this.height = 12;
								return;
							case 3239:
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 387;
								this.width = 20;
								this.height = 12;
								return;
							case 3240:
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 388;
								this.width = 18;
								this.height = 26;
								return;
							case 3241:
								this.width = 14;
								this.height = 28;
								this.rare = 1;
								this.value = Item.sellPrice(0, 3, 0, 0);
								this.accessory = true;
								this.balloonSlot = 12;
								return;
							case 3242:
								this.width = 18;
								this.height = 18;
								this.value = Item.buyPrice(0, 3, 0, 0);
								this.vanity = true;
								this.headSlot = 182;
								return;
							case 3243:
								this.width = 18;
								this.height = 18;
								this.value = Item.buyPrice(0, 3, 0, 0);
								this.vanity = true;
								this.bodySlot = 184;
								return;
							case 3244:
								this.width = 18;
								this.height = 18;
								this.value = Item.buyPrice(0, 3, 0, 0);
								this.vanity = true;
								this.legSlot = 124;
								return;
							case 3245:
								this.width = 16;
								this.height = 16;
								this.value = Item.sellPrice(0, 2, 0, 0);
								this.rare = 2;
								this.handOnSlot = 22;
								this.handOffSlot = 14;
								this.accessory = true;
								this.expert = true;
								return;
							case 3246:
								this.width = 18;
								this.height = 18;
								this.value = Item.buyPrice(0, 3, 0, 0);
								this.vanity = true;
								this.bodySlot = 185;
								return;
							case 3247:
								this.width = 18;
								this.height = 18;
								this.value = Item.buyPrice(0, 3, 0, 0);
								this.vanity = true;
								this.legSlot = 125;
								return;
							case 3248:
								this.width = 18;
								this.height = 18;
								this.value = Item.buyPrice(0, 3, 0, 0);
								this.vanity = true;
								this.headSlot = 183;
								return;
							case 3249:
								this.mana = 10;
								this.damage = 40;
								this.useStyle = 1;
								this.shootSpeed = 10f;
								this.shoot = 533;
								this.buffType = 161;
								this.width = 26;
								this.height = 28;
								this.UseSound = new SoundStyle?(SoundID.Item113);
								this.useAnimation = 36;
								this.useTime = 36;
								this.rare = 8;
								this.noMelee = true;
								this.knockBack = 2f;
								this.value = this.eclipsePostPlanteraPrice;
								this.summon = true;
								this.autoReuse = true;
								this.reuseDelay = 2;
								return;
							case 3250:
							case 3251:
							case 3252:
								this.width = 20;
								this.height = 22;
								this.rare = 4;
								this.value = Item.buyPrice(0, 15, 0, 0);
								this.accessory = true;
								this.balloonSlot = (int)((sbyte)(13 + type - 3250));
								return;
							case 3253:
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 390;
								this.width = 12;
								this.height = 30;
								this.value = Item.buyPrice(0, 2, 0, 0);
								this.rare = 1;
								this.glowMask = 129;
								return;
							case 3254:
							case 3255:
							case 3256:
							case 3257:
								this.useStyle = 1;
								this.useTurn = true;
								this.useAnimation = 15;
								this.useTime = 10;
								this.autoReuse = true;
								this.maxStack = Item.CommonMaxStack;
								this.consumable = true;
								this.createTile = 391 + type - 3254;
								this.width = 12;
								this.height = 12;
								return;
							default:
								switch (type)
								{
								case 3258:
									this.useStyle = 1;
									this.useAnimation = 20;
									this.useTime = 20;
									this.autoReuse = true;
									this.knockBack = 20f;
									this.width = 36;
									this.height = 36;
									this.damage = 55;
									this.scale = 1.1f;
									this.UseSound = new SoundStyle?(SoundID.Item1);
									this.rare = 4;
									this.value = Item.buyPrice(0, 25, 0, 0);
									this.melee = true;
									this.crit = 15;
									return;
								case 3259:
									this.width = 20;
									this.height = 26;
									this.maxStack = Item.CommonMaxStack;
									this.rare = 3;
									this.value = Item.buyPrice(0, 30, 0, 0);
									this.UseSound = new SoundStyle?(SoundID.Item3);
									this.useStyle = 9;
									this.useTurn = true;
									this.useAnimation = 17;
									this.useTime = 17;
									this.consumable = true;
									return;
								case 3260:
									this.useStyle = 4;
									this.channel = true;
									this.width = 34;
									this.height = 34;
									this.UseSound = new SoundStyle?(SoundID.Item25);
									this.useAnimation = 20;
									this.useTime = 20;
									this.rare = 8;
									this.noMelee = true;
									this.mountType = 10;
									this.value = Item.sellPrice(0, 5, 0, 0);
									return;
								case 3261:
									this.width = 20;
									this.height = 20;
									this.maxStack = Item.CommonMaxStack;
									this.rare = 7;
									this.value = Item.sellPrice(0, 1, 0, 0);
									this.useStyle = 1;
									this.useTurn = true;
									this.useAnimation = 15;
									this.useTime = 10;
									this.autoReuse = true;
									this.consumable = true;
									this.createTile = 239;
									this.placeStyle = 21;
									return;
								case 3262:
								case 3278:
								case 3279:
								case 3280:
								case 3281:
								case 3282:
								case 3283:
								case 3284:
								case 3285:
								case 3286:
								case 3287:
								case 3288:
								case 3289:
								case 3290:
								case 3291:
								case 3292:
									goto IL_4A21;
								}
								if (type < 3315 || type > 3317)
								{
									if (type - 3293 <= 15)
									{
										this.width = 24;
										this.height = 24;
										this.rare = 1;
										this.value = Item.sellPrice(0, 0, 3, 0);
										this.accessory = true;
										switch (type)
										{
										case 3305:
											this.stringColor = 28;
											break;
										case 3306:
											this.stringColor = 14;
											break;
										case 3307:
											this.stringColor = 27;
											break;
										case 3308:
											this.stringColor = 13;
											break;
										default:
											this.stringColor = 1 + type - 3293;
											break;
										}
										this.hasVanityEffects = true;
										return;
									}
									if (type == 3389)
									{
										this.useStyle = 5;
										this.width = 24;
										this.height = 24;
										this.noUseGraphic = true;
										this.UseSound = new SoundStyle?(SoundID.Item1);
										this.melee = true;
										this.channel = true;
										this.noMelee = true;
										this.shoot = 603;
										this.useAnimation = 25;
										this.useTime = 25;
										this.shootSpeed = 16f;
										this.damage = 190;
										this.knockBack = 6.5f;
										this.value = Item.sellPrice(0, 10, 0, 0);
										this.crit = 10;
										this.rare = 10;
										return;
									}
									if (type >= 3309 && type <= 3314)
									{
										this.width = 24;
										this.height = 24;
										this.rare = 2;
										this.value = Item.buyPrice(0, 5, 0, 0);
										this.accessory = true;
										return;
									}
									switch (type)
									{
									case 3263:
										this.width = 18;
										this.height = 18;
										this.value = Item.buyPrice(0, 3, 0, 0);
										this.vanity = true;
										this.headSlot = 184;
										return;
									case 3264:
										this.width = 18;
										this.height = 18;
										this.value = Item.buyPrice(0, 3, 0, 0);
										this.vanity = true;
										this.bodySlot = 186;
										return;
									case 3265:
										this.width = 18;
										this.height = 18;
										this.value = Item.buyPrice(0, 3, 0, 0);
										this.vanity = true;
										this.legSlot = 126;
										return;
									case 3266:
										this.width = 18;
										this.height = 18;
										this.value = 4500;
										this.headSlot = 185;
										this.defense = 4;
										this.rare = 1;
										return;
									case 3267:
										this.width = 18;
										this.height = 18;
										this.value = 4500;
										this.bodySlot = 187;
										this.defense = 6;
										this.rare = 1;
										return;
									case 3268:
										this.width = 18;
										this.height = 18;
										this.value = 4500;
										this.legSlot = 127;
										this.defense = 5;
										this.rare = 1;
										return;
									case 3269:
										this.useStyle = 4;
										this.useAnimation = 20;
										this.useTime = 20;
										this.autoReuse = true;
										this.reuseDelay = 10;
										this.shootSpeed = 1f;
										this.knockBack = 2f;
										this.width = 16;
										this.height = 16;
										this.damage = 40;
										this.UseSound = null;
										this.shoot = 535;
										this.mana = 15;
										this.rare = 4;
										this.value = Item.sellPrice(0, 4, 0, 0);
										this.noMelee = true;
										this.noUseGraphic = true;
										this.magic = true;
										this.channel = true;
										return;
									case 3270:
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 395;
										this.width = 28;
										this.height = 28;
										return;
									case 3271:
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 396;
										this.width = 12;
										this.height = 12;
										return;
									case 3272:
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 397;
										this.width = 12;
										this.height = 12;
										return;
									case 3273:
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 7;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createWall = 275;
										this.width = 12;
										this.height = 12;
										return;
									case 3274:
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 398;
										this.width = 12;
										this.height = 12;
										return;
									case 3275:
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 399;
										this.width = 12;
										this.height = 12;
										return;
									case 3276:
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 400;
										this.width = 12;
										this.height = 12;
										return;
									case 3277:
										this.useStyle = 1;
										this.useTurn = true;
										this.useAnimation = 15;
										this.useTime = 10;
										this.autoReuse = true;
										this.maxStack = Item.CommonMaxStack;
										this.consumable = true;
										this.createTile = 401;
										this.width = 12;
										this.height = 12;
										return;
									default:
										switch (type)
										{
										case 3318:
										case 3319:
										case 3320:
										case 3321:
										case 3322:
										case 3323:
										case 3324:
										case 3325:
										case 3326:
										case 3327:
										case 3328:
										case 3329:
										case 3330:
										case 3331:
										case 3332:
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 24;
											this.height = 24;
											this.rare = 1;
											if (type == 3320)
											{
												this.rare = 2;
											}
											if (type == 3321)
											{
												this.rare = 2;
											}
											if (type == 3322)
											{
												this.rare = 3;
											}
											if (type == 3323)
											{
												this.rare = 3;
											}
											if (type == 3324)
											{
												this.rare = 4;
											}
											if (type == 3325)
											{
												this.rare = 5;
											}
											if (type == 3326)
											{
												this.rare = 5;
											}
											if (type == 3327)
											{
												this.rare = 5;
											}
											if (type == 3328)
											{
												this.rare = 6;
											}
											if (type == 3329)
											{
												this.rare = 7;
											}
											if (type == 3330)
											{
												this.rare = 7;
											}
											if (type == 3331)
											{
												this.rare = 8;
											}
											if (type == 3332)
											{
												this.rare = 8;
											}
											this.expert = true;
											return;
										case 3338:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 402;
											this.width = 12;
											this.height = 12;
											return;
										case 3339:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 403;
											this.width = 12;
											this.height = 12;
											return;
										case 3340:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 7;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createWall = 304;
											this.width = 12;
											this.height = 12;
											return;
										case 3341:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 7;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createWall = 305;
											this.width = 12;
											this.height = 12;
											return;
										case 3342:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 7;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createWall = 306;
											this.width = 12;
											this.height = 12;
											return;
										case 3343:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 7;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createWall = 307;
											this.width = 12;
											this.height = 12;
											return;
										case 3344:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 7;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createWall = 308;
											this.width = 12;
											this.height = 12;
											return;
										case 3345:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 7;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createWall = 309;
											this.width = 12;
											this.height = 12;
											return;
										case 3346:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 7;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createWall = 310;
											this.width = 12;
											this.height = 12;
											return;
										case 3347:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 404;
											this.width = 12;
											this.height = 12;
											return;
										case 3348:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 7;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createWall = 311;
											this.width = 12;
											this.height = 12;
											return;
										}
										switch (type)
										{
										case 3333:
											this.width = 22;
											this.height = 22;
											this.accessory = true;
											this.rare = 3;
											this.value = Item.sellPrice(0, 2, 0, 0);
											this.backSlot = 9;
											this.expert = true;
											return;
										case 3334:
											this.width = 22;
											this.height = 22;
											this.accessory = true;
											this.rare = 4;
											this.value = Item.buyPrice(0, 50, 0, 0);
											this.handOffSlot = 11;
											this.handOnSlot = 18;
											return;
										case 3335:
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.width = 18;
											this.height = 18;
											this.useStyle = 4;
											this.useTime = 30;
											this.UseSound = new SoundStyle?(SoundID.Item4);
											this.useAnimation = 30;
											this.rare = 4;
											this.value = Item.sellPrice(0, 2, 0, 0);
											this.expert = true;
											return;
										case 3336:
											this.width = 22;
											this.height = 22;
											this.accessory = true;
											this.rare = 8;
											this.value = Item.sellPrice(0, 4, 0, 0);
											this.expert = true;
											return;
										case 3337:
											this.width = 22;
											this.height = 22;
											this.accessory = true;
											this.rare = 8;
											this.value = Item.sellPrice(0, 5, 0, 0);
											this.expert = true;
											return;
										case 3353:
											this.width = 36;
											this.height = 26;
											this.mountType = 11;
											this.rare = 6;
											this.value = Item.sellPrice(0, 1, 0, 0);
											this.expert = true;
											return;
										case 3354:
										case 3355:
										case 3356:
											this.width = 20;
											this.height = 20;
											this.maxStack = Item.CommonMaxStack;
											this.rare = 5;
											this.value = Item.sellPrice(0, 0, 50, 0);
											this.expert = true;
											return;
										case 3357:
										case 3358:
										case 3359:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 240;
											this.width = 30;
											this.height = 30;
											this.value = Item.sellPrice(0, 1, 0, 0);
											this.placeStyle = 56 + type - 3357;
											this.rare = 1;
											return;
										case 3360:
											this.tileWand = 620;
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.createTile = 383;
											this.width = 8;
											this.height = 10;
											this.rare = 1;
											this.value = Item.sellPrice(0, 0, 25, 0);
											return;
										case 3361:
											this.tileWand = 620;
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.createTile = 384;
											this.width = 8;
											this.height = 10;
											this.rare = 1;
											this.value = Item.sellPrice(0, 0, 25, 0);
											return;
										case 3362:
											this.width = 28;
											this.height = 20;
											this.bodySlot = 188;
											this.rare = 1;
											this.vanity = true;
											this.value = Item.buyPrice(0, 25, 0, 0);
											return;
										case 3363:
											this.width = 28;
											this.height = 20;
											this.legSlot = 128;
											this.rare = 1;
											this.vanity = true;
											this.value = Item.buyPrice(0, 25, 0, 0);
											return;
										case 3364:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 405;
											this.width = 28;
											this.height = 28;
											this.rare = 1;
											return;
										case 3365:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 406;
											this.width = 28;
											this.height = 28;
											this.rare = 1;
											return;
										case 3366:
											this.width = 24;
											this.height = 24;
											this.rare = 4;
											this.value = Item.buyPrice(0, 50, 0, 0);
											this.accessory = true;
											return;
										case 3367:
											this.useStyle = 4;
											this.channel = true;
											this.width = 34;
											this.height = 34;
											this.UseSound = new SoundStyle?(SoundID.Item25);
											this.useAnimation = 20;
											this.useTime = 20;
											this.rare = 8;
											this.noMelee = true;
											this.mountType = 12;
											this.value = Item.sellPrice(0, 5, 0, 0);
											this.expert = true;
											return;
										case 3368:
											this.width = 14;
											this.height = 38;
											this.useAnimation = 25;
											this.useTime = 15;
											this.useStyle = 5;
											this.rare = 9;
											this.noUseGraphic = true;
											this.channel = true;
											this.noMelee = true;
											this.damage = 25;
											this.knockBack = 4f;
											this.autoReuse = false;
											this.noMelee = true;
											this.melee = true;
											this.shoot = 595;
											this.shootSpeed = 15f;
											this.value = Item.sellPrice(0, 5, 0, 0);
											return;
										case 3369:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 209;
											this.placeStyle = 2;
											this.width = 12;
											this.height = 12;
											this.rare = 3;
											this.value = Item.buyPrice(0, 25, 0, 0);
											return;
										case 3370:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.consumable = true;
											this.createTile = 139;
											this.placeStyle = 36;
											this.width = 24;
											this.height = 24;
											this.rare = 4;
											this.value = 100000;
											this.accessory = true;
											this.hasVanityEffects = true;
											return;
										case 3371:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.consumable = true;
											this.createTile = 139;
											this.placeStyle = 37;
											this.width = 24;
											this.height = 24;
											this.rare = 4;
											this.value = 100000;
											this.accessory = true;
											this.hasVanityEffects = true;
											return;
										case 3372:
										case 3373:
											this.width = 28;
											this.height = 20;
											this.headSlot = type + 186 - 3372;
											this.rare = 1;
											this.value = Item.sellPrice(0, 0, 75, 0);
											this.vanity = true;
											return;
										}
										switch (type)
										{
										case 3374:
											this.width = 18;
											this.height = 18;
											this.defense = 4;
											this.headSlot = 188;
											this.rare = 1;
											this.value = Item.sellPrice(0, 0, 30, 0);
											return;
										case 3375:
											this.width = 18;
											this.height = 18;
											this.defense = 5;
											this.bodySlot = 189;
											this.rare = 1;
											this.value = Item.sellPrice(0, 0, 50, 0);
											return;
										case 3376:
											this.width = 18;
											this.height = 18;
											this.defense = 4;
											this.legSlot = 129;
											this.rare = 1;
											this.value = Item.sellPrice(0, 0, 40, 0);
											return;
										case 3377:
											this.mana = 7;
											this.UseSound = new SoundStyle?(SoundID.Item43);
											this.useStyle = 5;
											this.damage = 21;
											this.useAnimation = 28;
											this.useTime = 28;
											this.width = 40;
											this.height = 40;
											this.shoot = 597;
											this.shootSpeed = 9f;
											this.knockBack = 4.75f;
											this.magic = true;
											this.autoReuse = true;
											this.value = 20000;
											this.rare = 1;
											this.noMelee = true;
											return;
										case 3378:
											this.shoot = 598;
											this.shootSpeed = 10f;
											this.damage = 20;
											this.knockBack = 5f;
											this.ranged = true;
											this.useStyle = 1;
											this.UseSound = new SoundStyle?(SoundID.Item1);
											this.useAnimation = 25;
											this.useTime = 25;
											this.width = 30;
											this.height = 30;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.noUseGraphic = true;
											this.noMelee = true;
											this.autoReuse = true;
											this.value = 50;
											this.rare = 1;
											return;
										case 3379:
											this.autoReuse = true;
											this.useStyle = 1;
											this.shootSpeed = 10f;
											this.shoot = 599;
											this.damage = 14;
											this.width = 18;
											this.height = 20;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.UseSound = new SoundStyle?(SoundID.Item1);
											this.useAnimation = 14;
											this.useTime = 14;
											this.noUseGraphic = true;
											this.noMelee = true;
											this.value = 50;
											this.knockBack = 1.5f;
											this.ranged = true;
											this.rare = 1;
											return;
										case 3380:
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.maxStack = Item.CommonMaxStack;
											this.consumable = true;
											this.createTile = 407;
											this.width = 12;
											this.height = 12;
											this.rare = 1;
											return;
										case 3381:
											this.width = 18;
											this.height = 18;
											this.defense = 10;
											this.headSlot = 189;
											this.rare = 10;
											this.value = Item.sellPrice(0, 7, 0, 0);
											return;
										case 3382:
											this.width = 18;
											this.height = 18;
											this.defense = 16;
											this.bodySlot = 190;
											this.rare = 10;
											this.value = Item.sellPrice(0, 7, 0, 0) * 2;
											return;
										case 3383:
											this.width = 18;
											this.height = 18;
											this.defense = 12;
											this.legSlot = 130;
											this.rare = 10;
											this.value = (int)((double)Item.sellPrice(0, 7, 0, 0) * 1.5);
											return;
										case 3384:
											this.useStyle = 5;
											this.useAnimation = 20;
											this.useTime = 20;
											this.shootSpeed = 24f;
											this.knockBack = 2f;
											this.width = 16;
											this.height = 16;
											this.UseSound = null;
											this.shoot = 600;
											this.rare = 8;
											this.value = Item.sellPrice(0, 10, 0, 0);
											this.noMelee = true;
											this.noUseGraphic = true;
											this.channel = true;
											this.autoReuse = true;
											return;
										case 3385:
										case 3386:
										case 3387:
										case 3388:
											this.width = 20;
											this.height = 20;
											this.maxStack = Item.CommonMaxStack;
											this.value = 10000;
											this.rare = -11;
											this.placeStyle = type - 3385 + 8;
											this.createTile = 227;
											this.useStyle = 1;
											this.useTurn = true;
											this.useAnimation = 15;
											this.useTime = 10;
											this.autoReuse = true;
											this.consumable = true;
											return;
										default:
											if (type >= 3390 && type <= 3452)
											{
												this.useStyle = 1;
												this.useTurn = true;
												this.useAnimation = 15;
												this.useTime = 10;
												this.autoReuse = true;
												this.maxStack = Item.CommonMaxStack;
												this.consumable = true;
												this.createTile = 91;
												this.placeStyle = 207 + type - 3390;
												this.width = 10;
												this.height = 24;
												this.value = 1000;
												this.rare = 1;
												return;
											}
											if (type >= 3453 && type <= 3455)
											{
												this.width = 12;
												this.height = 12;
												switch (type)
												{
												case 3453:
													this.buffType = 179;
													return;
												case 3454:
													this.buffType = 173;
													return;
												case 3455:
													this.buffType = 176;
													return;
												default:
													return;
												}
											}
											else
											{
												if (type >= 3456 && type <= 3459)
												{
													this.width = 18;
													this.height = 18;
													this.maxStack = Item.CommonMaxStack;
													this.value = Item.sellPrice(0, 0, 20, 0);
													this.rare = 9;
													return;
												}
												switch (type)
												{
												case 3460:
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 408;
													this.width = 12;
													this.height = 12;
													this.rare = 10;
													this.value = Item.sellPrice(0, 1, 20, 0) / 4;
													return;
												case 3461:
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.maxStack = Item.CommonMaxStack;
													this.consumable = true;
													this.createTile = 409;
													this.rare = 9;
													this.width = 12;
													this.height = 12;
													return;
												case 3462:
													this.SetDefaults3(2772);
													type = 3462;
													this.glowMask = 174;
													return;
												case 3463:
													this.SetDefaults3(2773);
													type = 3463;
													this.shoot = 610;
													this.glowMask = 175;
													return;
												case 3464:
													this.SetDefaults3(2774);
													type = 3464;
													this.shoot = 609;
													this.glowMask = 176;
													return;
												case 3465:
													this.SetDefaults3(2775);
													type = 3465;
													this.glowMask = 177;
													return;
												case 3466:
													this.SetDefaults3(2776);
													type = 3466;
													this.glowMask = 178;
													return;
												case 3467:
													this.width = 20;
													this.height = 20;
													this.maxStack = Item.CommonMaxStack;
													this.rare = 10;
													this.value = Item.sellPrice(0, 1, 20, 0);
													this.useStyle = 1;
													this.useTurn = true;
													this.useAnimation = 15;
													this.useTime = 10;
													this.autoReuse = true;
													this.consumable = true;
													this.createTile = 239;
													this.placeStyle = 22;
													return;
												case 3468:
												case 3469:
												case 3470:
												case 3471:
													this.width = 22;
													this.height = 20;
													this.accessory = true;
													this.value = Item.buyPrice(0, 40, 0, 0);
													this.rare = 10;
													this.wingSlot = (int)((sbyte)(29 + type - 3468));
													return;
												default:
													switch (type)
													{
													case 3472:
														this.useStyle = 1;
														this.useTurn = true;
														this.useAnimation = 15;
														this.useTime = 7;
														this.autoReuse = true;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.createWall = 224;
														this.rare = 9;
														this.width = 12;
														this.height = 12;
														return;
													case 3473:
														this.useStyle = 5;
														this.useAnimation = 20;
														this.useTime = 20;
														this.shootSpeed = 24f;
														this.knockBack = 2f;
														this.width = 16;
														this.height = 16;
														this.shoot = 611;
														this.rare = 10;
														this.value = Item.sellPrice(0, 10, 0, 0);
														this.noMelee = true;
														this.noUseGraphic = true;
														this.channel = true;
														this.autoReuse = true;
														this.melee = true;
														this.damage = 105;
														return;
													case 3474:
														this.mana = 10;
														this.damage = 60;
														this.useStyle = 1;
														this.shootSpeed = 10f;
														this.shoot = 613;
														this.width = 26;
														this.height = 28;
														this.UseSound = new SoundStyle?(SoundID.Item44);
														this.useAnimation = 36;
														this.useTime = 36;
														this.rare = 10;
														this.noMelee = true;
														this.knockBack = 2f;
														this.buffType = 182;
														this.value = Item.sellPrice(0, 10, 0, 0);
														this.summon = true;
														this.autoReuse = true;
														this.reuseDelay = 2;
														return;
													case 3475:
														this.useStyle = 5;
														this.useAnimation = 20;
														this.useTime = 20;
														this.shootSpeed = 20f;
														this.knockBack = 2f;
														this.width = 20;
														this.height = 12;
														this.damage = 50;
														this.UseSound = null;
														this.shoot = 615;
														this.rare = 10;
														this.value = Item.sellPrice(0, 10, 0, 0);
														this.noMelee = true;
														this.noUseGraphic = true;
														this.ranged = true;
														this.channel = true;
														this.glowMask = 191;
														this.useAmmo = AmmoID.Bullet;
														this.autoReuse = true;
														return;
													case 3476:
														this.mana = 30;
														this.damage = 70;
														this.useStyle = 5;
														this.shootSpeed = 7f;
														this.shoot = 617;
														this.width = 26;
														this.height = 28;
														this.UseSound = new SoundStyle?(SoundID.Item117);
														this.useAnimation = 30;
														this.useTime = 30;
														this.autoReuse = true;
														this.noMelee = true;
														this.knockBack = 5f;
														this.rare = 10;
														this.value = Item.sellPrice(0, 10, 0, 0);
														this.magic = true;
														this.glowMask = 194;
														this.holdStyle = 1;
														return;
													case 3477:
														this.useStyle = 1;
														this.shootSpeed = 9f;
														this.rare = 3;
														this.damage = 20;
														this.shoot = 621;
														this.width = 18;
														this.height = 20;
														this.maxStack = Item.CommonMaxStack;
														this.consumable = true;
														this.knockBack = 3f;
														this.UseSound = new SoundStyle?(SoundID.Item1);
														this.useAnimation = 15;
														this.useTime = 15;
														this.noUseGraphic = true;
														this.noMelee = true;
														this.value = 100;
														return;
													case 3478:
														this.width = 18;
														this.height = 18;
														this.headSlot = 190;
														this.value = 5000;
														this.vanity = true;
														return;
													case 3479:
														this.width = 18;
														this.height = 18;
														this.bodySlot = 191;
														this.value = 5000;
														this.vanity = true;
														return;
													default:
														if (type - 3522 <= 3)
														{
															this.useTurn = true;
															this.autoReuse = true;
															this.useStyle = 1;
															this.useAnimation = 28;
															this.useTime = 7;
															this.knockBack = 7f;
															this.width = 42;
															this.height = 42;
															this.damage = 60;
															this.axe = 30;
															this.hammer = 100;
															this.UseSound = new SoundStyle?(SoundID.Item1);
															this.rare = 10;
															this.value = Item.sellPrice(0, 5, 0, 0);
															this.melee = true;
															this.tileBoost += 4;
															switch (type)
															{
															case 3522:
																break;
															case 3523:
																this.glowMask = 196;
																return;
															case 3524:
																this.glowMask = 197;
																return;
															case 3525:
																this.glowMask = 198;
																break;
															default:
																return;
															}
															return;
														}
														switch (type)
														{
														case 3349:
															this.SetDefaults1(4);
															this.type = type;
															this.useAnimation = 18;
															this.useTime = 18;
															this.damage = 20;
															this.width = (this.height = 32);
															this.knockBack = 4.25f;
															this.scale = 1f;
															this.rare = 2;
															this.value = Item.sellPrice(0, 0, 50, 0);
															return;
														case 3350:
															this.useStyle = 5;
															this.useAnimation = 24;
															this.useTime = 9;
															this.width = 24;
															this.height = 14;
															this.shoot = 587;
															this.UseSound = null;
															this.damage = 12;
															this.shootSpeed = 10f;
															this.noMelee = true;
															this.value = Item.sellPrice(0, 0, 50, 0);
															this.knockBack = 1.25f;
															this.scale = 0.85f;
															this.rare = 2;
															this.ranged = true;
															this.crit = 7;
															return;
														case 3351:
															this.SetDefaults1(4);
															this.type = type;
															this.useAnimation = 15;
															this.useTime = 15;
															this.damage = 16;
															this.width = (this.height = 28);
															this.knockBack = 3.5f;
															this.rare = 2;
															this.value = Item.sellPrice(0, 0, 50, 0);
															return;
														case 3352:
															this.SetDefaults1(4);
															this.type = type;
															this.useAnimation = 12;
															this.useTime = 12;
															this.damage = 14;
															this.width = (this.height = 32);
															this.knockBack = 5f;
															this.rare = 2;
															this.value = Item.sellPrice(0, 0, 50, 0);
															return;
														default:
															switch (type)
															{
															case 3480:
																this.SetDefaults1(99);
																this.type = type;
																this.useAnimation = 25;
																this.useTime = 25;
																this.damage = 13;
																this.value = 10500;
																return;
															case 3481:
																this.SetDefaults1(7);
																this.type = type;
																this.useAnimation = 27;
																this.useTime = 21;
																this.scale = 1f;
																this.damage = 10;
																this.hammer = 59;
																this.value = 12000;
																return;
															case 3482:
																this.SetDefaults1(10);
																this.type = type;
																this.useTime = 17;
																this.axe = 12;
																this.useAnimation = 25;
																this.scale = 1f;
																this.damage = 8;
																this.value = 12000;
																return;
															case 3483:
																this.SetDefaults1(6);
																this.type = type;
																this.damage = 13;
																this.useAnimation = 10;
																this.useTime = 10;
																this.knockBack = 5f;
																this.shoot = 945;
																this.scale = 0.975f;
																this.value = 10500;
																return;
															case 3484:
																this.SetDefaults1(4);
																this.type = type;
																this.useAnimation = 17;
																this.damage = 16;
																this.knockBack = 6.5f;
																this.scale = 1f;
																this.value = 13500;
																return;
															case 3485:
																this.SetDefaults1(1);
																this.type = type;
																this.useTime = 15;
																this.pick = 59;
																this.useAnimation = 19;
																this.scale = 1.05f;
																this.damage = 7;
																this.value = 15000;
																return;
															case 3486:
																this.SetDefaults1(99);
																this.type = type;
																this.useAnimation = 26;
																this.useTime = 26;
																this.damage = 10;
																this.value = 5250;
																return;
															case 3487:
																this.SetDefaults1(7);
																this.type = type;
																this.useAnimation = 28;
																this.useTime = 25;
																this.scale = 1f;
																this.damage = 9;
																this.hammer = 50;
																this.value = 6000;
																return;
															case 3488:
																this.SetDefaults1(10);
																this.type = type;
																this.useTime = 18;
																this.axe = 11;
																this.useAnimation = 26;
																this.scale = 1f;
																this.damage = 7;
																this.value = 6000;
																return;
															case 3489:
																this.SetDefaults1(6);
																this.type = type;
																this.damage = 10;
																this.useAnimation = 11;
																this.useTime = 11;
																this.knockBack = 4f;
																this.shoot = 943;
																this.scale = 0.95f;
																this.value = 5250;
																return;
															case 3490:
																this.SetDefaults1(4);
																this.type = type;
																this.useAnimation = 19;
																this.damage = 14;
																this.knockBack = 6f;
																this.scale = 1f;
																this.value = 6750;
																return;
															case 3491:
																this.SetDefaults1(1);
																this.type = type;
																this.useTime = 19;
																this.pick = 50;
																this.useAnimation = 21;
																this.scale = 1.05f;
																this.damage = 6;
																this.value = 7500;
																return;
															case 3492:
																this.SetDefaults1(99);
																this.type = type;
																this.useAnimation = 27;
																this.useTime = 27;
																this.damage = 9;
																this.value = 2100;
																return;
															case 3493:
																this.SetDefaults1(7);
																this.type = type;
																this.useAnimation = 29;
																this.useTime = 19;
																this.scale = 1f;
																this.damage = 8;
																this.hammer = 43;
																this.value = 2400;
																return;
															case 3494:
																this.SetDefaults1(10);
																this.type = type;
																this.useTime = 19;
																this.axe = 10;
																this.useAnimation = 28;
																this.scale = 1f;
																this.damage = 6;
																this.value = 2400;
																return;
															case 3495:
																this.SetDefaults1(6);
																this.type = type;
																this.damage = 9;
																this.useAnimation = 12;
																this.useTime = 12;
																this.knockBack = 4f;
																this.shoot = 941;
																this.scale = 0.925f;
																this.value = 2100;
																return;
															case 3496:
																this.SetDefaults1(4);
																this.type = type;
																this.useAnimation = 20;
																this.damage = 13;
																this.value = 2700;
																this.scale = 1f;
																this.knockBack = 5.5f;
																return;
															case 3497:
																this.SetDefaults1(1);
																this.type = type;
																this.useTime = 12;
																this.pick = 43;
																this.useAnimation = 19;
																this.damage = 6;
																this.scale = 1.025f;
																this.value = 3000;
																return;
															case 3498:
																this.SetDefaults1(99);
																this.type = type;
																this.useAnimation = 28;
																this.useTime = 28;
																this.damage = 7;
																this.value = 525;
																return;
															case 3499:
																this.SetDefaults1(7);
																this.type = type;
																this.useAnimation = 31;
																this.useTime = 21;
																this.scale = 1f;
																this.damage = 6;
																this.hammer = 38;
																this.value = 600;
																return;
															case 3500:
																this.SetDefaults1(10);
																this.type = type;
																this.useTime = 20;
																this.axe = 8;
																this.useAnimation = 28;
																this.scale = 1f;
																this.damage = 4;
																this.value = 600;
																return;
															case 3501:
																this.SetDefaults1(6);
																this.type = type;
																this.damage = 7;
																this.useAnimation = 12;
																this.useTime = 12;
																this.knockBack = 4f;
																this.shoot = 939;
																this.scale = 0.85f;
																this.value = 525;
																return;
															case 3502:
																this.SetDefaults1(4);
																this.type = type;
																this.useAnimation = 20;
																this.damage = 10;
																this.value = 675;
																this.scale = 1f;
																return;
															case 3503:
																this.SetDefaults1(1);
																this.type = type;
																this.useTime = 14;
																this.pick = 35;
																this.useAnimation = 21;
																this.damage = 5;
																this.scale = 0.95f;
																this.value = 750;
																return;
															case 3504:
																this.SetDefaults1(99);
																this.type = type;
																this.useAnimation = 29;
																this.useTime = 29;
																this.damage = 6;
																this.value = 350;
																return;
															case 3505:
																this.SetDefaults1(7);
																this.type = type;
																this.useAnimation = 33;
																this.useTime = 23;
																this.scale = 1f;
																this.damage = 4;
																this.hammer = 35;
																this.tileBoost = -1;
																this.value = 400;
																return;
															case 3506:
																this.SetDefaults1(10);
																this.type = type;
																this.useTime = 21;
																this.axe = 7;
																this.useAnimation = 30;
																this.scale = 1f;
																this.damage = 3;
																this.tileBoost = -1;
																this.value = 400;
																return;
															case 3507:
																this.SetDefaults1(6);
																this.type = type;
																this.damage = 5;
																this.useAnimation = 13;
																this.useTime = 13;
																this.knockBack = 4f;
																this.shoot = 938;
																this.scale = 0.8f;
																this.value = 350;
																return;
															case 3508:
																this.SetDefaults1(4);
																this.type = type;
																this.useAnimation = 21;
																this.damage = 9;
																this.value = 450;
																this.scale = 1f;
																return;
															case 3509:
																this.SetDefaults1(1);
																this.type = type;
																this.useTime = 15;
																this.pick = 35;
																this.useAnimation = 23;
																this.damage = 4;
																this.scale = 0.9f;
																this.tileBoost = -1;
																this.value = 500;
																return;
															case 3510:
																this.SetDefaults1(99);
																this.type = type;
																this.useAnimation = 27;
																this.useTime = 27;
																this.damage = 9;
																this.value = 3500;
																return;
															case 3511:
																this.SetDefaults1(7);
																this.type = type;
																this.useAnimation = 29;
																this.useTime = 19;
																this.scale = 1f;
																this.damage = 9;
																this.hammer = 45;
																this.value = 4000;
																return;
															case 3512:
																this.SetDefaults1(10);
																this.type = type;
																this.useTime = 18;
																this.axe = 10;
																this.useAnimation = 26;
																this.scale = 1f;
																this.damage = 6;
																this.value = 4000;
																return;
															case 3513:
																this.SetDefaults1(6);
																this.type = type;
																this.damage = 9;
																this.useAnimation = 12;
																this.useTime = 12;
																this.knockBack = 4f;
																this.shoot = 942;
																this.scale = 0.95f;
																this.value = 3500;
																return;
															case 3514:
																this.SetDefaults1(4);
																this.type = type;
																this.useAnimation = 20;
																this.damage = 14;
																this.value = 4500;
																this.knockBack = 6f;
																this.scale = 1f;
																return;
															case 3515:
																this.SetDefaults1(1);
																this.type = type;
																this.useTime = 11;
																this.pick = 45;
																this.useAnimation = 19;
																this.scale = 1.05f;
																this.damage = 6;
																this.value = 5000;
																return;
															case 3516:
																this.SetDefaults1(99);
																this.type = type;
																this.useAnimation = 26;
																this.useTime = 26;
																this.damage = 11;
																this.value = 7000;
																return;
															case 3517:
																this.SetDefaults1(7);
																this.type = type;
																this.useAnimation = 28;
																this.useTime = 23;
																this.scale = 1f;
																this.damage = 9;
																this.hammer = 55;
																this.value = 8000;
																return;
															case 3518:
																this.SetDefaults1(10);
																this.type = type;
																this.useTime = 18;
																this.axe = 11;
																this.useAnimation = 26;
																this.scale = 1f;
																this.damage = 7;
																this.value = 8000;
																return;
															case 3519:
																this.SetDefaults1(6);
																this.type = type;
																this.damage = 12;
																this.useAnimation = 11;
																this.useTime = 11;
																this.knockBack = 5f;
																this.shoot = 944;
																this.scale = 0.95f;
																this.value = 7000;
																return;
															case 3520:
																this.SetDefaults1(4);
																this.type = type;
																this.useAnimation = 18;
																this.damage = 15;
																this.knockBack = 6.5f;
																this.scale = 1f;
																this.value = 9000;
																return;
															case 3521:
																this.SetDefaults1(1);
																this.type = type;
																this.useTime = 17;
																this.pick = 55;
																this.useAnimation = 20;
																this.scale = 1.05f;
																this.damage = 6;
																this.value = 10000;
																return;
															case 3526:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 2, 50, 0);
																this.rare = 4;
																return;
															case 3527:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 2, 50, 0);
																this.rare = 4;
																return;
															case 3528:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 2, 50, 0);
																this.rare = 4;
																return;
															case 3529:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 2, 50, 0);
																this.rare = 4;
																return;
															case 3530:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 2, 50, 0);
																this.rare = 4;
																return;
															case 3531:
																this.mana = 10;
																this.damage = 40;
																this.useStyle = 1;
																this.shootSpeed = 10f;
																this.shoot = 625;
																this.width = 26;
																this.height = 28;
																this.UseSound = new SoundStyle?(SoundID.Item44);
																this.useAnimation = 36;
																this.useTime = 36;
																this.rare = 10;
																this.noMelee = true;
																this.knockBack = 2f;
																this.buffType = 188;
																this.value = Item.sellPrice(0, 10, 0, 0);
																this.summon = true;
																this.autoReuse = true;
																this.reuseDelay = 2;
																return;
															case 3533:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 1, 50, 0);
																this.rare = 3;
																return;
															case 3534:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 0, 75, 0);
																this.rare = 2;
																return;
															case 3535:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 1, 50, 0);
																this.rare = 3;
																return;
															case 3536:
																this.width = 22;
																this.height = 32;
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.createTile = 410;
																this.placeStyle = 0;
																this.rare = 9;
																this.accessory = true;
																this.vanity = true;
																this.value = Item.buyPrice(1, 0, 0, 0);
																return;
															case 3537:
																this.width = 22;
																this.height = 32;
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.createTile = 410;
																this.placeStyle = 1;
																this.rare = 9;
																this.accessory = true;
																this.vanity = true;
																this.value = Item.buyPrice(1, 0, 0, 0);
																return;
															case 3538:
																this.width = 22;
																this.height = 32;
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.createTile = 410;
																this.placeStyle = 2;
																this.rare = 9;
																this.accessory = true;
																this.vanity = true;
																this.value = Item.buyPrice(1, 0, 0, 0);
																return;
															case 3539:
																this.width = 22;
																this.height = 32;
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.createTile = 410;
																this.placeStyle = 3;
																this.rare = 9;
																this.accessory = true;
																this.vanity = true;
																this.value = Item.buyPrice(1, 0, 0, 0);
																return;
															case 3540:
																this.useStyle = 5;
																this.useAnimation = 12;
																this.useTime = 12;
																this.shootSpeed = 20f;
																this.knockBack = 2f;
																this.width = 20;
																this.height = 12;
																this.damage = 50;
																this.UseSound = new SoundStyle?(SoundID.Item5);
																this.shoot = 630;
																this.rare = 10;
																this.value = Item.sellPrice(0, 10, 0, 0);
																this.noMelee = true;
																this.noUseGraphic = true;
																this.ranged = true;
																this.channel = true;
																this.glowMask = 200;
																this.useAmmo = AmmoID.Arrow;
																this.autoReuse = true;
																return;
															case 3541:
																this.useStyle = 5;
																this.useAnimation = 10;
																this.useTime = 10;
																this.reuseDelay = 5;
																this.shootSpeed = 30f;
																this.knockBack = 0.25f;
																this.width = 16;
																this.height = 16;
																this.damage = 100;
																this.UseSound = null;
																this.shoot = 633;
																this.mana = 12;
																this.rare = 10;
																this.value = Item.sellPrice(0, 10, 0, 0);
																this.noMelee = true;
																this.noUseGraphic = true;
																this.magic = true;
																this.channel = true;
																return;
															case 3542:
																this.useStyle = 5;
																this.useAnimation = 12;
																this.useTime = 12;
																this.shootSpeed = 6f;
																this.knockBack = 3f;
																this.width = 16;
																this.height = 16;
																this.damage = 130;
																this.UseSound = new SoundStyle?(SoundID.Item20);
																this.shoot = 634;
																this.mana = 12;
																this.rare = 10;
																this.value = Item.sellPrice(0, 10, 0, 0);
																this.noMelee = true;
																this.magic = true;
																this.autoReuse = true;
																this.noUseGraphic = true;
																this.glowMask = 207;
																return;
															case 3543:
																this.shoot = 636;
																this.shootSpeed = 10f;
																this.damage = 150;
																this.knockBack = 5f;
																this.melee = true;
																this.useStyle = 1;
																this.UseSound = new SoundStyle?(SoundID.Item1);
																this.useAnimation = 16;
																this.useTime = 16;
																this.width = 30;
																this.height = 30;
																this.noUseGraphic = true;
																this.noMelee = true;
																this.autoReuse = true;
																this.value = Item.sellPrice(0, 10, 0, 0);
																this.rare = 10;
																return;
															case 3544:
																this.UseSound = new SoundStyle?(SoundID.Item3);
																this.healLife = 200;
																this.useStyle = 9;
																this.useTurn = true;
																this.useAnimation = 17;
																this.useTime = 17;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.potion = true;
																this.width = 14;
																this.height = 24;
																this.rare = 7;
																this.value = Item.sellPrice(0, 0, 30, 0);
																return;
															case 3545:
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.createTile = 411;
																this.width = 28;
																this.height = 28;
																this.rare = 1;
																this.mech = true;
																this.value = Item.sellPrice(0, 0, 20, 0);
																return;
															case 3546:
																this.useStyle = 5;
																this.autoReuse = true;
																this.useAnimation = 30;
																this.useTime = 30;
																this.useAmmo = AmmoID.Rocket;
																this.width = 50;
																this.height = 20;
																this.shoot = 134;
																this.UseSound = new SoundStyle?(SoundID.Item156);
																this.damage = 25;
																this.shootSpeed = 15f;
																this.noMelee = true;
																this.value = Item.buyPrice(0, 80, 0, 0);
																this.knockBack = 4f;
																this.rare = 8;
																this.ranged = true;
																return;
															case 3547:
																this.useStyle = 1;
																this.shootSpeed = 4f;
																this.shoot = 637;
																this.width = 8;
																this.height = 28;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.UseSound = new SoundStyle?(SoundID.Item1);
																this.useAnimation = 40;
																this.useTime = 40;
																this.noUseGraphic = true;
																this.noMelee = true;
																this.value = Item.buyPrice(0, 0, 20, 0);
																this.rare = 1;
																return;
															case 3548:
																this.useStyle = 5;
																this.shootSpeed = 6f;
																this.shoot = 588;
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.UseSound = new SoundStyle?(SoundID.Item1);
																this.useAnimation = 20;
																this.useTime = 20;
																this.noUseGraphic = true;
																this.noMelee = true;
																this.value = Item.sellPrice(0, 0, 0, 50);
																this.damage = 30;
																this.knockBack = 6f;
																this.rare = 2;
																this.ranged = true;
																return;
															case 3549:
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.createTile = 412;
																this.width = 28;
																this.height = 28;
																this.SetShopValues(ItemRarityColor.StrongRed10, Item.sellPrice(0, 5, 0, 0));
																return;
															case 3550:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = 10000;
																this.rare = 1;
																return;
															case 3551:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = 10000;
																this.rare = 1;
																return;
															case 3552:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = 10000;
																this.rare = 1;
																return;
															case 3553:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 0, 75, 0);
																this.rare = 2;
																return;
															case 3554:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 0, 75, 0);
																this.rare = 2;
																return;
															case 3555:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 0, 75, 0);
																this.rare = 2;
																return;
															case 3556:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 1, 50, 0);
																this.rare = 3;
																return;
															case 3557:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = 10000;
																this.rare = 1;
																return;
															case 3558:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = 10000;
																this.rare = 1;
																return;
															case 3559:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = 10000;
																this.rare = 1;
																return;
															case 3560:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = 10000;
																this.rare = 2;
																return;
															case 3561:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 1, 50, 0);
																this.rare = 3;
																return;
															case 3562:
																this.width = 20;
																this.height = 20;
																this.maxStack = Item.CommonMaxStack;
																this.value = Item.sellPrice(0, 1, 50, 0);
																this.rare = 3;
																return;
															case 3563:
																this.useStyle = 1;
																this.autoReuse = true;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.width = 12;
																this.height = 12;
																this.noUseGraphic = true;
																this.makeNPC = 538;
																return;
															case 3564:
																this.useStyle = 1;
																this.autoReuse = true;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.width = 12;
																this.height = 12;
																this.makeNPC = 539;
																this.noUseGraphic = true;
																this.value = Item.sellPrice(0, 10, 0, 0);
																this.rare = 3;
																return;
															case 3565:
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.createTile = 413;
																this.width = 12;
																this.height = 12;
																return;
															case 3566:
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.createTile = 414;
																this.width = 12;
																this.height = 12;
																this.value = Item.sellPrice(0, 10, 0, 0);
																this.rare = 3;
																return;
															case 3567:
																this.shootSpeed = 2f;
																this.shoot = 638;
																this.damage = 20;
																this.width = 8;
																this.height = 8;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.ammo = AmmoID.Bullet;
																this.knockBack = 3f;
																this.value = 7;
																this.ranged = true;
																this.rare = 9;
																this.value = Item.sellPrice(0, 0, 0, 2);
																return;
															case 3568:
																this.shootSpeed = 3f;
																this.shoot = 639;
																this.damage = 15;
																this.width = 10;
																this.height = 28;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.ammo = AmmoID.Arrow;
																this.knockBack = 3.5f;
																this.value = 5;
																this.ranged = true;
																this.rare = 9;
																this.value = Item.sellPrice(0, 0, 0, 2);
																return;
															case 3569:
																this.mana = 10;
																this.damage = 100;
																this.useStyle = 1;
																this.shootSpeed = 14f;
																this.shoot = 641;
																this.width = 18;
																this.height = 20;
																this.UseSound = new SoundStyle?(SoundID.Item78);
																this.useAnimation = 30;
																this.useTime = 30;
																this.noMelee = true;
																this.value = Item.sellPrice(0, 10, 0, 0);
																this.knockBack = 7.5f;
																this.rare = 10;
																this.summon = true;
																this.sentry = true;
																return;
															case 3570:
																this.autoReuse = true;
																this.mana = 9;
																this.useStyle = 5;
																this.damage = 100;
																this.useAnimation = 10;
																this.useTime = 10;
																this.width = 40;
																this.height = 40;
																this.shoot = 645;
																this.shootSpeed = 10f;
																this.knockBack = 4.5f;
																this.value = Item.sellPrice(0, 10, 0, 0);
																this.magic = true;
																this.rare = 10;
																this.noMelee = true;
																this.UseSound = new SoundStyle?(SoundID.Item88);
																return;
															case 3571:
																this.mana = 10;
																this.damage = 130;
																this.useStyle = 1;
																this.shootSpeed = 14f;
																this.shoot = 643;
																this.width = 18;
																this.height = 20;
																this.UseSound = new SoundStyle?(SoundID.Item78);
																this.useAnimation = 30;
																this.useTime = 30;
																this.noMelee = true;
																this.value = Item.sellPrice(0, 10, 0, 0);
																this.knockBack = 7.5f;
																this.rare = 10;
																this.summon = true;
																this.sentry = true;
																return;
															case 3572:
																this.noUseGraphic = true;
																this.damage = 0;
																this.useStyle = 5;
																this.shootSpeed = 18f;
																this.shoot = 646;
																this.width = 18;
																this.height = 28;
																this.UseSound = new SoundStyle?(SoundID.Item1);
																this.useAnimation = 20;
																this.useTime = 20;
																this.rare = 10;
																this.noMelee = true;
																this.value = Item.sellPrice(0, 10, 0, 0);
																return;
															case 3573:
															case 3574:
															case 3575:
															case 3576:
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.createTile = 415 + type - 3573;
																this.width = 12;
																this.height = 12;
																return;
															}
															switch (type)
															{
															case 3577:
																this.channel = true;
																this.damage = 0;
																this.useStyle = 4;
																this.shoot = 650;
																this.width = 24;
																this.height = 24;
																this.UseSound = new SoundStyle?(SoundID.Item8);
																this.useAnimation = 20;
																this.useTime = 20;
																this.rare = 10;
																this.noMelee = true;
																this.value = Item.sellPrice(0, 10, 0, 0);
																this.buffType = 190;
																this.expert = true;
																return;
															case 3578:
																this.width = 28;
																this.height = 20;
																this.bodySlot = 192;
																this.rare = 9;
																this.value = Item.sellPrice(0, 5, 0, 0);
																this.vanity = true;
																return;
															case 3579:
																this.width = 18;
																this.height = 14;
																this.legSlot = 132;
																this.rare = 9;
																this.value = Item.sellPrice(0, 5, 0, 0);
																this.vanity = true;
																return;
															case 3580:
																this.width = 18;
																this.height = 14;
																this.wingSlot = 33;
																this.rare = 9;
																this.accessory = true;
																this.value = 400000;
																return;
															case 3581:
																this.width = 18;
																this.height = 14;
																this.rare = 9;
																this.vanity = true;
																this.value = Item.sellPrice(0, 5, 0, 0);
																this.accessory = true;
																this.hasVanityEffects = true;
																return;
															case 3582:
																this.width = 24;
																this.height = 8;
																this.accessory = true;
																this.rare = 9;
																this.wingSlot = 34;
																this.value = 400000;
																return;
															case 3583:
																this.width = 28;
																this.height = 20;
																this.headSlot = 191;
																this.rare = 9;
																this.value = Item.sellPrice(0, 5, 0, 0);
																this.vanity = true;
																return;
															case 3584:
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 7;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.createWall = 60;
																this.width = 12;
																this.height = 12;
																return;
															case 3585:
																this.width = 28;
																this.height = 20;
																this.headSlot = 192;
																this.rare = 9;
																this.value = Item.sellPrice(0, 5, 0, 0);
																this.vanity = true;
																return;
															case 3586:
																this.width = 28;
																this.height = 20;
																this.bodySlot = 193;
																this.rare = 9;
																this.value = Item.sellPrice(0, 5, 0, 0);
																this.vanity = true;
																return;
															case 3587:
																this.width = 18;
																this.height = 14;
																this.legSlot = 133;
																this.rare = 9;
																this.value = Item.sellPrice(0, 5, 0, 0);
																this.vanity = true;
																return;
															case 3588:
																this.width = 24;
																this.height = 8;
																this.accessory = true;
																this.rare = 9;
																this.wingSlot = 35;
																this.value = 400000;
																return;
															case 3589:
																this.width = 28;
																this.height = 20;
																this.headSlot = 193;
																this.rare = 9;
																this.value = Item.sellPrice(0, 5, 0, 0);
																this.vanity = true;
																return;
															case 3590:
																this.width = 28;
																this.height = 20;
																this.bodySlot = 194;
																this.rare = 9;
																this.value = Item.sellPrice(0, 5, 0, 0);
																this.vanity = true;
																return;
															case 3591:
																this.width = 18;
																this.height = 14;
																this.legSlot = 134;
																this.rare = 9;
																this.value = Item.sellPrice(0, 5, 0, 0);
																this.vanity = true;
																return;
															case 3592:
																this.width = 24;
																this.height = 8;
																this.accessory = true;
																this.rare = 9;
																this.wingSlot = 36;
																this.value = 400000;
																return;
															case 3593:
															case 3594:
																this.useStyle = 1;
																this.useTurn = true;
																this.useAnimation = 15;
																this.useTime = 10;
																this.autoReuse = true;
																this.maxStack = Item.CommonMaxStack;
																this.consumable = true;
																this.createTile = 91;
																this.placeStyle = 270 + type - 3593;
																this.width = 10;
																this.height = 24;
																this.value = 1000;
																this.rare = 1;
																return;
															default:
																switch (type)
																{
																case 3595:
																	this.useStyle = 1;
																	this.useTurn = true;
																	this.useAnimation = 15;
																	this.useTime = 10;
																	this.autoReuse = true;
																	this.maxStack = Item.CommonMaxStack;
																	this.consumable = true;
																	this.createTile = 240;
																	this.width = 30;
																	this.height = 30;
																	this.value = Item.sellPrice(0, 1, 0, 0);
																	this.placeStyle = 59;
																	this.rare = 1;
																	return;
																case 3596:
																	this.useStyle = 1;
																	this.useTurn = true;
																	this.useAnimation = 15;
																	this.useTime = 10;
																	this.autoReuse = true;
																	this.maxStack = Item.CommonMaxStack;
																	this.consumable = true;
																	this.createTile = 242;
																	this.width = 30;
																	this.height = 30;
																	this.value = Item.buyPrice(0, 3, 0, 0);
																	this.placeStyle = 36;
																	return;
																case 3601:
																	this.useStyle = 4;
																	this.width = 22;
																	this.height = 14;
																	this.consumable = true;
																	this.useAnimation = 45;
																	this.useTime = 45;
																	this.maxStack = Item.CommonMaxStack;
																	this.rare = 10;
																	return;
																case 3602:
																	this.createTile = 419;
																	this.width = 16;
																	this.height = 16;
																	this.rare = 1;
																	this.useStyle = 1;
																	this.useTurn = true;
																	this.useAnimation = 15;
																	this.useTime = 10;
																	this.autoReuse = true;
																	this.maxStack = Item.CommonMaxStack;
																	this.consumable = true;
																	this.mech = true;
																	this.value = Item.buyPrice(0, 0, 10, 0);
																	return;
																case 3603:
																case 3604:
																case 3605:
																case 3606:
																case 3607:
																case 3608:
																	this.createTile = 420;
																	this.width = 16;
																	this.height = 16;
																	this.rare = 1;
																	this.useStyle = 1;
																	this.useTurn = true;
																	this.useAnimation = 15;
																	this.useTime = 10;
																	this.autoReuse = true;
																	this.maxStack = Item.CommonMaxStack;
																	this.consumable = true;
																	this.placeStyle = type - 3603;
																	this.mech = true;
																	this.value = Item.buyPrice(0, 2, 0, 0);
																	return;
																}
																switch (type)
																{
																case 3609:
																	this.createTile = 421;
																	this.width = 16;
																	this.height = 16;
																	this.rare = 1;
																	this.useStyle = 1;
																	this.useTurn = true;
																	this.useAnimation = 15;
																	this.useTime = 10;
																	this.autoReuse = true;
																	this.maxStack = Item.CommonMaxStack;
																	this.consumable = true;
																	this.value = Item.buyPrice(0, 0, 5, 0);
																	return;
																case 3610:
																	this.createTile = 422;
																	this.width = 16;
																	this.height = 16;
																	this.rare = 1;
																	this.useStyle = 1;
																	this.useTurn = true;
																	this.useAnimation = 15;
																	this.useTime = 10;
																	this.autoReuse = true;
																	this.maxStack = Item.CommonMaxStack;
																	this.consumable = true;
																	this.value = Item.buyPrice(0, 0, 5, 0);
																	return;
																case 3611:
																	this.useStyle = 5;
																	this.useAnimation = 10;
																	this.useTime = 10;
																	this.width = 20;
																	this.height = 20;
																	this.shoot = 651;
																	this.channel = true;
																	this.shootSpeed = 10f;
																	this.value = Item.sellPrice(0, 4, 0, 0);
																	this.rare = 2;
																	this.UseSound = new SoundStyle?(SoundID.Item64);
																	this.mech = true;
																	this.ChangePlayerDirectionOnShoot = false;
																	return;
																case 3612:
																	this.useStyle = 1;
																	this.useTurn = true;
																	this.useAnimation = 15;
																	this.useTime = 5;
																	this.autoReuse = true;
																	this.width = 24;
																	this.height = 28;
																	this.rare = 1;
																	this.value = 20000;
																	this.tileBoost = 20;
																	this.mech = true;
																	return;
																case 3613:
																case 3614:
																case 3615:
																	this.createTile = 423;
																	this.width = 16;
																	this.height = 16;
																	this.rare = 1;
																	this.useStyle = 1;
																	this.useTurn = true;
																	this.useAnimation = 15;
																	this.useTime = 10;
																	this.autoReuse = true;
																	this.maxStack = Item.CommonMaxStack;
																	this.consumable = true;
																	this.placeStyle = type - 3613;
																	this.mech = true;
																	return;
																default:
																	switch (type)
																	{
																	case 3616:
																		this.createTile = 424;
																		this.width = 16;
																		this.height = 16;
																		this.rare = 1;
																		this.useStyle = 1;
																		this.useTurn = true;
																		this.useAnimation = 15;
																		this.useTime = 10;
																		this.autoReuse = true;
																		this.maxStack = Item.CommonMaxStack;
																		this.consumable = true;
																		this.mech = true;
																		this.value = Item.buyPrice(0, 0, 2, 0);
																		return;
																	case 3617:
																		this.useStyle = 1;
																		this.useTurn = true;
																		this.useAnimation = 15;
																		this.useTime = 10;
																		this.autoReuse = true;
																		this.maxStack = Item.CommonMaxStack;
																		this.consumable = true;
																		this.createTile = 425;
																		this.width = 28;
																		this.height = 28;
																		this.mech = true;
																		return;
																	case 3618:
																		this.createTile = 419;
																		this.placeStyle = 1;
																		this.width = 16;
																		this.height = 16;
																		this.rare = 1;
																		this.useStyle = 1;
																		this.useTurn = true;
																		this.useAnimation = 15;
																		this.useTime = 10;
																		this.autoReuse = true;
																		this.maxStack = Item.CommonMaxStack;
																		this.consumable = true;
																		this.mech = true;
																		this.value = Item.buyPrice(0, 0, 10, 0);
																		return;
																	case 3619:
																		this.width = 24;
																		this.height = 28;
																		this.rare = 3;
																		this.value = Item.buyPrice(0, 1, 0, 0);
																		this.accessory = true;
																		return;
																	case 3620:
																		this.useStyle = 1;
																		this.useTurn = true;
																		this.useAnimation = 15;
																		this.useTime = 5;
																		this.autoReuse = true;
																		this.width = 24;
																		this.height = 28;
																		this.rare = 1;
																		this.value = 20000;
																		this.tileBoost = 20;
																		this.mech = true;
																		return;
																	case 3621:
																		this.createTile = 426;
																		this.width = 16;
																		this.height = 16;
																		this.rare = 1;
																		this.useStyle = 1;
																		this.useTurn = true;
																		this.useAnimation = 15;
																		this.useTime = 10;
																		this.autoReuse = true;
																		this.maxStack = Item.CommonMaxStack;
																		this.consumable = true;
																		this.value = Item.buyPrice(0, 0, 1, 0);
																		return;
																	case 3622:
																		this.createTile = 427;
																		this.width = 16;
																		this.height = 16;
																		this.rare = 1;
																		this.useStyle = 1;
																		this.useTurn = true;
																		this.useAnimation = 15;
																		this.useTime = 10;
																		this.autoReuse = true;
																		this.maxStack = Item.CommonMaxStack;
																		this.consumable = true;
																		this.value = Item.buyPrice(0, 0, 1, 0);
																		return;
																	case 3623:
																		this.noUseGraphic = true;
																		this.damage = 0;
																		this.useStyle = 5;
																		this.shootSpeed = 16f;
																		this.shoot = 652;
																		this.width = 18;
																		this.height = 28;
																		this.UseSound = new SoundStyle?(SoundID.Item1);
																		this.useAnimation = 20;
																		this.useTime = 20;
																		this.rare = 10;
																		this.noMelee = true;
																		this.value = Item.sellPrice(0, 10, 0, 0);
																		return;
																	case 3624:
																		this.width = 30;
																		this.height = 30;
																		this.accessory = true;
																		this.rare = 3;
																		this.value = Item.buyPrice(0, 10, 0, 0);
																		return;
																	case 3625:
																		this.useStyle = 1;
																		this.useTurn = true;
																		this.useAnimation = 15;
																		this.useTime = 5;
																		this.autoReuse = true;
																		this.width = 24;
																		this.height = 28;
																		this.rare = 1;
																		this.value = Item.buyPrice(0, 12, 0, 0);
																		this.tileBoost = 20;
																		this.mech = true;
																		return;
																	case 3626:
																		this.createTile = 428;
																		this.width = 16;
																		this.height = 16;
																		this.rare = 1;
																		this.useStyle = 1;
																		this.useTurn = true;
																		this.useAnimation = 15;
																		this.useTime = 10;
																		this.autoReuse = true;
																		this.maxStack = Item.CommonMaxStack;
																		this.consumable = true;
																		this.placeStyle = 3;
																		this.mech = true;
																		return;
																	case 3627:
																		this.width = 18;
																		this.height = 18;
																		this.headSlot = 194;
																		this.value = Item.buyPrice(0, 1, 0, 0);
																		this.vanity = true;
																		return;
																	case 3628:
																		this.channel = true;
																		this.damage = 0;
																		this.useStyle = 4;
																		this.shoot = 653;
																		this.width = 24;
																		this.height = 24;
																		this.UseSound = new SoundStyle?(SoundID.Item8);
																		this.useAnimation = 20;
																		this.useTime = 20;
																		this.rare = 1;
																		this.noMelee = true;
																		this.value = Item.buyPrice(5, 0, 0, 0);
																		this.buffType = 191;
																		return;
																	case 3629:
																		this.createTile = 429;
																		this.width = 16;
																		this.height = 16;
																		this.rare = 2;
																		this.useStyle = 1;
																		this.useTurn = true;
																		this.useAnimation = 15;
																		this.useTime = 10;
																		this.autoReuse = true;
																		this.maxStack = Item.CommonMaxStack;
																		this.consumable = true;
																		this.mech = true;
																		this.value = Item.buyPrice(0, 5, 0, 0);
																		return;
																	case 3630:
																		this.createTile = 428;
																		this.width = 16;
																		this.height = 16;
																		this.rare = 1;
																		this.useStyle = 1;
																		this.useTurn = true;
																		this.useAnimation = 15;
																		this.useTime = 10;
																		this.autoReuse = true;
																		this.maxStack = Item.CommonMaxStack;
																		this.consumable = true;
																		this.placeStyle = 0;
																		this.mech = true;
																		return;
																	case 3631:
																		this.createTile = 428;
																		this.width = 16;
																		this.height = 16;
																		this.rare = 1;
																		this.useStyle = 1;
																		this.useTurn = true;
																		this.useAnimation = 15;
																		this.useTime = 10;
																		this.autoReuse = true;
																		this.maxStack = Item.CommonMaxStack;
																		this.consumable = true;
																		this.placeStyle = 2;
																		this.mech = true;
																		return;
																	case 3632:
																		this.createTile = 428;
																		this.width = 16;
																		this.height = 16;
																		this.rare = 1;
																		this.useStyle = 1;
																		this.useTurn = true;
																		this.useAnimation = 15;
																		this.useTime = 10;
																		this.autoReuse = true;
																		this.maxStack = Item.CommonMaxStack;
																		this.consumable = true;
																		this.placeStyle = 1;
																		this.mech = true;
																		return;
																	case 3633:
																	case 3634:
																	case 3635:
																	case 3636:
																	case 3637:
																		this.createTile = 430 + (type - 3633);
																		this.width = 16;
																		this.height = 16;
																		this.rare = 1;
																		this.useStyle = 1;
																		this.useTurn = true;
																		this.useAnimation = 15;
																		this.useTime = 10;
																		this.autoReuse = true;
																		this.maxStack = Item.CommonMaxStack;
																		this.consumable = true;
																		this.value = Item.buyPrice(0, 0, 1, 0);
																		return;
																	default:
																		if (type >= 3638 && type <= 3642)
																		{
																			this.createTile = 435 + (type - 3638);
																			this.width = 16;
																			this.height = 16;
																			this.rare = 1;
																			this.useStyle = 1;
																			this.useTurn = true;
																			this.useAnimation = 15;
																			this.useTime = 10;
																			this.autoReuse = true;
																			this.maxStack = Item.CommonMaxStack;
																			this.consumable = true;
																			this.value = Item.buyPrice(0, 0, 1, 0);
																			return;
																		}
																		if (type == 3643)
																		{
																			this.width = 20;
																			this.height = 20;
																			this.rare = 1;
																			return;
																		}
																		if (type - 3644 <= 6)
																		{
																			this.useStyle = 1;
																			this.useTurn = true;
																			this.useAnimation = 15;
																			this.useTime = 10;
																			this.autoReuse = true;
																			this.maxStack = Item.CommonMaxStack;
																			this.consumable = true;
																			this.createTile = 440;
																			this.placeStyle = type - 3644;
																			this.width = 22;
																			this.height = 22;
																			this.value = Item.sellPrice(0, 0, 1, 0);
																			return;
																		}
																		if (type >= 3651 && type <= 3662)
																		{
																			this.useStyle = 1;
																			this.useTurn = true;
																			this.useAnimation = 15;
																			this.useTime = 10;
																			this.autoReuse = true;
																			this.maxStack = Item.CommonMaxStack;
																			this.consumable = true;
																			this.createTile = 105;
																			this.width = 20;
																			this.height = 20;
																			this.value = 300;
																			this.placeStyle = 51 + type - 3651;
																			return;
																		}
																		switch (type)
																		{
																		case 3663:
																			this.createTile = 419;
																			this.width = 16;
																			this.height = 16;
																			this.rare = 1;
																			this.useStyle = 1;
																			this.useTurn = true;
																			this.useAnimation = 15;
																			this.useTime = 10;
																			this.autoReuse = true;
																			this.maxStack = Item.CommonMaxStack;
																			this.consumable = true;
																			this.mech = true;
																			this.placeStyle = 2;
																			this.value = Item.buyPrice(0, 2, 0, 0);
																			return;
																		case 3664:
																			this.useStyle = 1;
																			this.useTurn = true;
																			this.useAnimation = 15;
																			this.useTime = 10;
																			this.autoReuse = true;
																			this.maxStack = Item.CommonMaxStack;
																			this.consumable = true;
																			this.createTile = 209;
																			this.placeStyle = 3;
																			this.width = 12;
																			this.height = 12;
																			this.rare = 3;
																			this.value = Item.buyPrice(0, 10, 0, 0);
																			return;
																		case 3665:
																		case 3666:
																		case 3667:
																		case 3668:
																		case 3669:
																		case 3670:
																		case 3671:
																		case 3672:
																		case 3673:
																		case 3674:
																		case 3675:
																		case 3676:
																		case 3677:
																		case 3678:
																		case 3679:
																		case 3680:
																		case 3681:
																		case 3682:
																		case 3683:
																		case 3684:
																		case 3685:
																		case 3686:
																		case 3687:
																		case 3688:
																		case 3689:
																		case 3690:
																		case 3691:
																		case 3692:
																		case 3693:
																		case 3694:
																		case 3695:
																		case 3696:
																		case 3697:
																		case 3698:
																		case 3699:
																		case 3700:
																		case 3701:
																		case 3702:
																		case 3703:
																		case 3704:
																		case 3705:
																		case 3706:
																			this.useStyle = 1;
																			this.useTurn = true;
																			this.useAnimation = 15;
																			this.useTime = 10;
																			this.autoReuse = true;
																			this.maxStack = Item.CommonMaxStack;
																			this.consumable = true;
																			this.createTile = 441;
																			this.placeStyle = type - 3665 + (type > 3666).ToInt() + (type > 3667).ToInt() * 3 + (type > 3683).ToInt() * 5 + (type > 3691).ToInt() + (type > 3692).ToInt() + (type > 3693).ToInt();
																			this.width = 26;
																			this.height = 22;
																			this.value = 500;
																			return;
																		default:
																			if (type == 3707)
																			{
																				this.useStyle = 1;
																				this.useTurn = true;
																				this.useAnimation = 15;
																				this.useTime = 10;
																				this.autoReuse = true;
																				this.maxStack = Item.CommonMaxStack;
																				this.consumable = true;
																				this.createTile = 442;
																				this.width = 12;
																				this.height = 12;
																				this.placeStyle = 0;
																				this.mech = true;
																				this.value = Item.buyPrice(0, 2, 0, 0);
																				this.mech = true;
																				return;
																			}
																			if (type - 3708 <= 12)
																			{
																				this.useStyle = 1;
																				this.useTurn = true;
																				this.useAnimation = 15;
																				this.useTime = 10;
																				this.autoReuse = true;
																				this.maxStack = Item.CommonMaxStack;
																				this.consumable = true;
																				this.createTile = 105;
																				this.width = 20;
																				this.height = 20;
																				this.value = 300;
																				this.placeStyle = 63 + type - 3708;
																				return;
																			}
																			switch (type)
																			{
																			case 3721:
																				this.width = 26;
																				this.height = 30;
																				this.maxStack = 1;
																				this.value = Item.sellPrice(0, 3, 0, 0);
																				this.rare = 3;
																				this.accessory = true;
																				this.backSlot = 10;
																				return;
																			case 3722:
																				this.useStyle = 1;
																				this.useTurn = true;
																				this.useAnimation = 15;
																				this.useTime = 10;
																				this.autoReuse = true;
																				this.maxStack = Item.CommonMaxStack;
																				this.consumable = true;
																				this.createTile = 443;
																				this.width = 20;
																				this.height = 12;
																				this.value = 10000;
																				this.mech = true;
																				return;
																			case 3723:
																			case 3724:
																				this.useStyle = 1;
																				this.useTurn = true;
																				this.useAnimation = 15;
																				this.useTime = 10;
																				this.autoReuse = true;
																				this.maxStack = Item.CommonMaxStack;
																				this.consumable = true;
																				this.createTile = 215;
																				this.placeStyle = 6 + type - 3723;
																				this.width = 12;
																				this.height = 12;
																				return;
																			default:
																				if (type == 3725)
																				{
																					this.createTile = 445;
																					this.width = 16;
																					this.height = 16;
																					this.rare = 1;
																					this.useStyle = 1;
																					this.useTurn = true;
																					this.useAnimation = 15;
																					this.useTime = 10;
																					this.autoReuse = true;
																					this.maxStack = Item.CommonMaxStack;
																					this.consumable = true;
																					this.mech = true;
																					this.value = Item.buyPrice(0, 0, 2, 0);
																					return;
																				}
																				if (type - 3726 <= 3)
																				{
																					this.createTile = 423;
																					this.width = 16;
																					this.height = 16;
																					this.rare = 1;
																					this.useStyle = 1;
																					this.useTurn = true;
																					this.useAnimation = 15;
																					this.useTime = 10;
																					this.autoReuse = true;
																					this.maxStack = Item.CommonMaxStack;
																					this.consumable = true;
																					this.placeStyle = type - 3726 + 3;
																					this.mech = true;
																					return;
																				}
																				switch (type)
																				{
																				case 3730:
																				case 3731:
																					this.width = 20;
																					this.height = 22;
																					this.rare = 1;
																					this.value = Item.buyPrice(0, 2, 0, 0);
																					this.accessory = true;
																					this.vanity = true;
																					this.balloonSlot = (int)((sbyte)(16 + type - 3730));
																					return;
																				case 3732:
																					this.width = 18;
																					this.height = 18;
																					this.headSlot = 195;
																					this.value = Item.buyPrice(0, 1, 0, 0);
																					this.vanity = true;
																					return;
																				case 3733:
																					this.width = 18;
																					this.height = 18;
																					this.headSlot = 196;
																					this.value = Item.buyPrice(0, 3, 0, 0);
																					this.vanity = true;
																					return;
																				case 3734:
																					this.width = 28;
																					this.height = 20;
																					this.bodySlot = 195;
																					this.value = Item.buyPrice(0, 3, 0, 0);
																					this.vanity = true;
																					return;
																				case 3735:
																					this.width = 18;
																					this.height = 14;
																					this.legSlot = 138;
																					this.value = Item.buyPrice(0, 3, 0, 0);
																					this.vanity = true;
																					return;
																				case 3736:
																				case 3737:
																				case 3738:
																					this.createTile = 446 + (type - 3736);
																					this.width = 16;
																					this.height = 16;
																					this.useStyle = 1;
																					this.useTurn = true;
																					this.useAnimation = 15;
																					this.useTime = 10;
																					this.autoReuse = true;
																					this.maxStack = Item.CommonMaxStack;
																					this.consumable = true;
																					this.value = Item.buyPrice(0, 0, 1, 0);
																					return;
																				default:
																					if (type >= 3739 && type <= 3741)
																					{
																						this.createTile = 449 + (type - 3739);
																						this.width = 16;
																						this.height = 16;
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.value = Item.buyPrice(0, 0, 0, 50);
																						this.tileBoost += 3;
																						return;
																					}
																					if (type == 3742)
																					{
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 452;
																						this.width = 26;
																						this.height = 20;
																						this.value = Item.buyPrice(0, 5, 0, 0);
																						this.rare = 1;
																						return;
																					}
																					if (type - 3743 <= 2)
																					{
																						this.createTile = 453;
																						this.placeStyle = type - 3743;
																						if (3744 == type)
																						{
																							this.placeStyle = 0;
																						}
																						if (3745 == type)
																						{
																							this.placeStyle = 2;
																						}
																						if (3743 == type)
																						{
																							this.placeStyle = 4;
																						}
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.width = 12;
																						this.height = 30;
																						this.value = Item.buyPrice(0, 0, 10, 0);
																						return;
																					}
																					switch (type)
																					{
																					case 3746:
																						this.createTile = 454;
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.width = 12;
																						this.height = 30;
																						this.value = Item.buyPrice(0, 1, 0, 0);
																						return;
																					case 3747:
																						this.createTile = 455;
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.width = 12;
																						this.height = 30;
																						this.value = Item.buyPrice(0, 20, 0, 0);
																						this.rare = 3;
																						return;
																					case 3748:
																						this.createTile = 456;
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.width = 12;
																						this.height = 30;
																						this.value = Item.buyPrice(0, 0, 20, 0);
																						return;
																					case 3749:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 457;
																						this.width = 26;
																						this.height = 20;
																						this.value = Item.buyPrice(0, 0, 20, 0);
																						this.rare = 1;
																						return;
																					case 3750:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createTile = 621;
																						this.width = 22;
																						this.height = 22;
																						this.value = Item.sellPrice(0, 0, 50, 0);
																						this.rare = 3;
																						return;
																					case 3751:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 7;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createWall = 225;
																						this.width = 12;
																						this.height = 12;
																						return;
																					case 3752:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 7;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createWall = 226;
																						this.width = 12;
																						this.height = 12;
																						return;
																					case 3753:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 7;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createWall = 227;
																						this.width = 12;
																						this.height = 12;
																						return;
																					case 3754:
																						this.createTile = 458;
																						this.width = 16;
																						this.height = 16;
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.value = Item.buyPrice(0, 0, 0, 5);
																						return;
																					case 3755:
																						this.createTile = 459;
																						this.width = 16;
																						this.height = 16;
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						return;
																					case 3756:
																						this.createTile = 460;
																						this.width = 16;
																						this.height = 16;
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 10;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						return;
																					case 3757:
																						this.width = 18;
																						this.height = 18;
																						this.headSlot = 197;
																						this.value = Item.sellPrice(0, 0, 30, 0);
																						this.vanity = true;
																						this.rare = 9;
																						return;
																					case 3758:
																						this.width = 28;
																						this.height = 20;
																						this.bodySlot = 196;
																						this.value = Item.sellPrice(0, 0, 30, 0);
																						this.vanity = true;
																						this.rare = 9;
																						return;
																					case 3759:
																						this.width = 18;
																						this.height = 14;
																						this.legSlot = 139;
																						this.value = Item.sellPrice(0, 0, 30, 0);
																						this.vanity = true;
																						this.rare = 9;
																						return;
																					case 3760:
																					case 3761:
																					case 3762:
																						this.useStyle = 1;
																						this.useTurn = true;
																						this.useAnimation = 15;
																						this.useTime = 7;
																						this.autoReuse = true;
																						this.maxStack = Item.CommonMaxStack;
																						this.consumable = true;
																						this.createWall = 228 + (type - 3760);
																						this.width = 12;
																						this.height = 12;
																						return;
																					default:
																						if (type == 3763)
																						{
																							this.width = 18;
																							this.height = 18;
																							this.headSlot = 198;
																							this.value = Item.sellPrice(0, 1, 0, 0);
																							this.vanity = true;
																							this.rare = 9;
																							return;
																						}
																						if (type - 3764 <= 5)
																						{
																							this.SetDefaults(198);
																							this.type = type;
																							this.damage = 48;
																							this.useTime = 16;
																							this.useAnimation = 16;
																							this.scale = 1f;
																							this.autoReuse = true;
																							this.useTurn = true;
																							this.rare = 4;
																							this.value = Item.sellPrice(0, 1, 0, 0);
																							return;
																						}
																						switch (type)
																						{
																						case 3770:
																							this.width = 18;
																							this.height = 14;
																							this.legSlot = 140;
																							this.value = Item.sellPrice(0, 1, 0, 0);
																							this.rare = 4;
																							return;
																						case 3771:
																							this.useStyle = 4;
																							this.channel = true;
																							this.width = 34;
																							this.height = 34;
																							this.UseSound = new SoundStyle?(SoundID.Item25);
																							this.useAnimation = 20;
																							this.useTime = 20;
																							this.rare = 8;
																							this.noMelee = true;
																							this.mountType = 14;
																							this.value = Item.sellPrice(0, 5, 0, 0);
																							return;
																						case 3772:
																							this.useStyle = 1;
																							this.useTurn = true;
																							this.autoReuse = true;
																							this.useAnimation = 18;
																							this.useTime = 18;
																							this.width = 28;
																							this.height = 28;
																							this.damage = 16;
																							this.knockBack = 4.5f;
																							this.UseSound = new SoundStyle?(SoundID.Item1);
																							this.scale = 1.1f;
																							this.melee = true;
																							this.value = Item.sellPrice(0, 0, 10, 0);
																							this.rare = 2;
																							return;
																						case 3773:
																							this.width = 18;
																							this.height = 18;
																							this.headSlot = 199;
																							this.rare = 3;
																							this.vanity = true;
																							this.value = Item.sellPrice(0, 0, 50, 0);
																							return;
																						case 3774:
																							this.width = 18;
																							this.height = 18;
																							this.bodySlot = 197;
																							this.rare = 3;
																							this.vanity = true;
																							this.value = Item.sellPrice(0, 0, 50, 0);
																							return;
																						case 3775:
																							this.width = 18;
																							this.height = 18;
																							this.legSlot = 141;
																							this.rare = 3;
																							this.vanity = true;
																							this.value = Item.sellPrice(0, 0, 50, 0);
																							return;
																						case 3776:
																							this.width = 18;
																							this.height = 18;
																							this.defense = 6;
																							this.headSlot = 200;
																							this.rare = 5;
																							this.value = 250000;
																							return;
																						case 3777:
																							this.width = 18;
																							this.height = 18;
																							this.defense = 12;
																							this.bodySlot = 198;
																							this.rare = 5;
																							this.value = 200000;
																							return;
																						case 3778:
																							this.width = 18;
																							this.height = 18;
																							this.defense = 8;
																							this.legSlot = 142;
																							this.rare = 5;
																							this.value = 150000;
																							return;
																						case 3779:
																							this.mana = 14;
																							this.damage = 85;
																							this.useStyle = 5;
																							this.shootSpeed = 3f;
																							this.shoot = 659;
																							this.width = 26;
																							this.height = 28;
																							this.UseSound = new SoundStyle?(SoundID.Item117);
																							this.useAnimation = 22;
																							this.useTime = 22;
																							this.autoReuse = true;
																							this.noMelee = true;
																							this.knockBack = 5f;
																							this.rare = 4;
																							this.value = Item.sellPrice(0, 1, 0, 0);
																							this.magic = true;
																							this.glowMask = 218;
																							return;
																						case 3780:
																							this.useStyle = 1;
																							this.useTurn = true;
																							this.useAnimation = 15;
																							this.useTime = 10;
																							this.autoReuse = true;
																							this.maxStack = Item.CommonMaxStack;
																							this.consumable = true;
																							this.createTile = 91;
																							this.placeStyle = 272;
																							this.width = 10;
																							this.height = 24;
																							this.value = 1000;
																							this.rare = 1;
																							return;
																						case 3781:
																							this.width = 24;
																							this.height = 28;
																							this.rare = 3;
																							this.value = 100000;
																							this.accessory = true;
																							return;
																						case 3782:
																							this.useStyle = 1;
																							this.useTurn = true;
																							this.useAnimation = 15;
																							this.useTime = 10;
																							this.autoReuse = true;
																							this.maxStack = Item.CommonMaxStack;
																							this.consumable = true;
																							this.createTile = 461;
																							this.width = 24;
																							this.height = 24;
																							this.value = Item.sellPrice(0, 0, 0, 40);
																							return;
																						case 3783:
																							this.width = 18;
																							this.height = 18;
																							this.maxStack = Item.CommonMaxStack;
																							this.value = 50000;
																							this.rare = 5;
																							return;
																						case 3784:
																							this.width = 18;
																							this.height = 18;
																							this.legSlot = 143;
																							this.rare = 3;
																							this.vanity = true;
																							this.value = Item.sellPrice(0, 0, 50, 0);
																							return;
																						case 3785:
																							this.width = 18;
																							this.height = 18;
																							this.bodySlot = 199;
																							this.rare = 3;
																							this.vanity = true;
																							this.value = Item.sellPrice(0, 0, 50, 0);
																							return;
																						case 3786:
																							this.width = 18;
																							this.height = 18;
																							this.headSlot = 201;
																							this.rare = 3;
																							this.vanity = true;
																							this.value = Item.sellPrice(0, 0, 50, 0);
																							return;
																						case 3787:
																							this.useStyle = 5;
																							this.useAnimation = 12;
																							this.useTime = 4;
																							this.reuseDelay = this.useAnimation + 6;
																							this.shootSpeed = 14f;
																							this.knockBack = 6f;
																							this.width = 16;
																							this.height = 16;
																							this.damage = 38;
																							this.UseSound = new SoundStyle?(SoundID.Item9);
																							this.crit = 20;
																							this.shoot = 660;
																							this.mana = 17;
																							this.rare = 4;
																							this.value = 300000;
																							this.noMelee = true;
																							this.magic = true;
																							this.autoReuse = true;
																							return;
																						case 3788:
																							this.knockBack = 6.5f;
																							this.useStyle = 5;
																							this.useAnimation = 48;
																							this.useTime = 48;
																							this.width = 50;
																							this.height = 14;
																							this.shoot = 10;
																							this.useAmmo = AmmoID.Bullet;
																							this.UseSound = new SoundStyle?(SoundID.Item36);
																							this.damage = 24;
																							this.shootSpeed = 7f;
																							this.noMelee = true;
																							this.value = 250000;
																							this.rare = 4;
																							this.ranged = true;
																							return;
																						case 3789:
																						case 3790:
																						case 3791:
																						case 3792:
																						case 3793:
																							this.useStyle = 1;
																							this.useTurn = true;
																							this.useAnimation = 15;
																							this.useTime = 10;
																							this.autoReuse = true;
																							this.maxStack = Item.CommonMaxStack;
																							this.consumable = true;
																							this.createTile = 91;
																							this.placeStyle = 273 + type - 3789;
																							this.width = 10;
																							this.height = 24;
																							this.value = 1000;
																							this.rare = 1;
																							return;
																						default:
																							switch (type)
																							{
																							case 3794:
																								this.width = 18;
																								this.height = 18;
																								this.maxStack = Item.CommonMaxStack;
																								this.value = Item.sellPrice(0, 0, 1, 0);
																								this.rare = 1;
																								return;
																							case 3795:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 462;
																								this.width = 26;
																								this.height = 18;
																								this.value = Item.sellPrice(0, 0, 50, 0);
																								this.rare = 3;
																								return;
																							case 3796:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.consumable = true;
																								this.createTile = 139;
																								this.placeStyle = 38;
																								this.width = 24;
																								this.height = 24;
																								this.rare = 4;
																								this.value = 100000;
																								this.accessory = true;
																								this.hasVanityEffects = true;
																								return;
																							case 3797:
																								this.width = 18;
																								this.height = 18;
																								this.headSlot = 203;
																								this.rare = 8;
																								this.defense = 7;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								return;
																							case 3798:
																								this.width = 18;
																								this.height = 18;
																								this.bodySlot = 200;
																								this.rare = 8;
																								this.defense = 15;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								return;
																							case 3799:
																								this.width = 18;
																								this.height = 18;
																								this.legSlot = 144;
																								this.rare = 8;
																								this.defense = 10;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								return;
																							case 3800:
																								this.width = 18;
																								this.height = 18;
																								this.headSlot = 204;
																								this.rare = 8;
																								this.defense = 13;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								return;
																							case 3801:
																								this.width = 18;
																								this.height = 18;
																								this.bodySlot = 201;
																								this.rare = 8;
																								this.defense = 27;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								return;
																							case 3802:
																								this.width = 18;
																								this.height = 18;
																								this.legSlot = 145;
																								this.rare = 8;
																								this.defense = 18;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								return;
																							case 3803:
																								this.width = 18;
																								this.height = 18;
																								this.headSlot = 205;
																								this.rare = 8;
																								this.defense = 7;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								return;
																							case 3804:
																								this.width = 18;
																								this.height = 18;
																								this.bodySlot = 202;
																								this.rare = 8;
																								this.defense = 17;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								return;
																							case 3805:
																								this.width = 18;
																								this.height = 18;
																								this.legSlot = 146;
																								this.rare = 8;
																								this.defense = 12;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								return;
																							case 3806:
																								this.width = 18;
																								this.height = 18;
																								this.headSlot = 206;
																								this.rare = 8;
																								this.defense = 8;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								return;
																							case 3807:
																								this.width = 18;
																								this.height = 18;
																								this.bodySlot = 203;
																								this.rare = 8;
																								this.defense = 22;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								return;
																							case 3808:
																								this.width = 18;
																								this.height = 18;
																								this.legSlot = 148;
																								this.rare = 8;
																								this.defense = 16;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								return;
																							case 3809:
																								this.width = 22;
																								this.height = 22;
																								this.accessory = true;
																								this.rare = 5;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								this.neckSlot = 9;
																								return;
																							case 3810:
																								this.width = 22;
																								this.height = 22;
																								this.accessory = true;
																								this.rare = 5;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								this.shieldSlot = 6;
																								return;
																							case 3811:
																								this.width = 22;
																								this.height = 22;
																								this.accessory = true;
																								this.rare = 5;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								this.handOnSlot = 19;
																								return;
																							case 3812:
																								this.width = 22;
																								this.height = 22;
																								this.accessory = true;
																								this.rare = 5;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								this.waistSlot = 12;
																								return;
																							case 3813:
																								this.rare = 3;
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 463;
																								this.width = 12;
																								this.height = 12;
																								this.value = 100000;
																								this.glowMask = 244;
																								return;
																							case 3814:
																								this.rare = 1;
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 464;
																								this.width = 12;
																								this.height = 12;
																								this.value = 100000;
																								return;
																							case 3815:
																								this.rare = 1;
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 465;
																								this.width = 12;
																								this.height = 12;
																								this.value = 100000;
																								return;
																							case 3816:
																								this.rare = 3;
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 466;
																								this.width = 12;
																								this.height = 12;
																								this.value = Item.buyPrice(0, 1, 0, 0);
																								return;
																							case 3817:
																								this.width = 12;
																								this.height = 12;
																								this.maxStack = Item.CommonMaxStack;
																								this.value = 0;
																								this.rare = 3;
																								return;
																							case 3818:
																							case 3819:
																							case 3820:
																							case 3824:
																							case 3825:
																							case 3826:
																							case 3829:
																							case 3830:
																							case 3831:
																							case 3832:
																							case 3833:
																							case 3834:
																								this.width = 18;
																								this.height = 20;
																								this.UseSound = new SoundStyle?(SoundID.DD2_DefenseTowerSpawn);
																								this.useStyle = 1;
																								this.useAnimation = 30;
																								this.useTime = 30;
																								this.shootSpeed = 1f;
																								this.noMelee = true;
																								this.value = Item.sellPrice(0, 1, 0, 0);
																								this.rare = 3;
																								this.shoot = 663;
																								this.summon = true;
																								this.damage = 17;
																								this.knockBack = 3f;
																								this.mana = 5;
																								this.DD2Summon = true;
																								this.sentry = true;
																								switch (type)
																								{
																								case 3819:
																									this.shoot = 665;
																									this.damage = 42;
																									this.rare = 5;
																									this.mana = 10;
																									this.value = Item.sellPrice(0, 5, 0, 0);
																									return;
																								case 3820:
																									this.shoot = 667;
																									this.damage = 88;
																									this.rare = 8;
																									this.mana = 15;
																									this.value = Item.sellPrice(0, 15, 0, 0);
																									return;
																								case 3821:
																								case 3822:
																								case 3823:
																								case 3827:
																								case 3828:
																									break;
																								case 3824:
																									this.shoot = 677;
																									this.damage = 30;
																									this.knockBack = 4.7f;
																									return;
																								case 3825:
																									this.shoot = 678;
																									this.damage = 74;
																									this.rare = 5;
																									this.mana = 10;
																									this.knockBack = 4.7f;
																									this.value = Item.sellPrice(0, 5, 0, 0);
																									return;
																								case 3826:
																									this.shoot = 679;
																									this.damage = 156;
																									this.rare = 8;
																									this.mana = 15;
																									this.knockBack = 4.7f;
																									this.value = Item.sellPrice(0, 15, 0, 0);
																									return;
																								case 3829:
																									this.shoot = 688;
																									this.damage = 4;
																									this.knockBack = 0.25f;
																									return;
																								case 3830:
																									this.shoot = 689;
																									this.damage = 11;
																									this.rare = 5;
																									this.mana = 10;
																									this.knockBack = 0.25f;
																									this.value = Item.sellPrice(0, 5, 0, 0);
																									return;
																								case 3831:
																									this.shoot = 690;
																									this.damage = 34;
																									this.rare = 8;
																									this.mana = 15;
																									this.knockBack = 0.25f;
																									this.value = Item.sellPrice(0, 15, 0, 0);
																									break;
																								case 3832:
																									this.shoot = 691;
																									this.damage = 24;
																									this.knockBack = 0.5f;
																									return;
																								case 3833:
																									this.shoot = 692;
																									this.damage = 59;
																									this.rare = 5;
																									this.mana = 10;
																									this.knockBack = 0.5f;
																									this.value = Item.sellPrice(0, 5, 0, 0);
																									return;
																								case 3834:
																									this.shoot = 693;
																									this.damage = 126;
																									this.rare = 8;
																									this.mana = 15;
																									this.knockBack = 0.5f;
																									this.value = Item.sellPrice(0, 15, 0, 0);
																									return;
																								default:
																									return;
																								}
																								return;
																							case 3821:
																								this.shootSpeed = 6.5f;
																								this.shoot = 669;
																								this.width = 20;
																								this.height = 20;
																								this.maxStack = 1;
																								this.UseSound = new SoundStyle?(SoundID.Item1);
																								this.useStyle = 5;
																								this.useAnimation = 40;
																								this.useTime = 40;
																								this.noUseGraphic = true;
																								this.noMelee = true;
																								this.value = Item.sellPrice(0, 0, 1, 0);
																								this.damage = 20;
																								this.knockBack = 7f;
																								this.ranged = true;
																								this.rare = 1;
																								this.useAmmo = 353;
																								return;
																							case 3822:
																								this.width = 12;
																								this.height = 12;
																								this.maxStack = Item.CommonMaxStack;
																								this.value = 0;
																								return;
																							case 3823:
																								this.UseSound = new SoundStyle?(SoundID.Item1);
																								this.useStyle = 1;
																								this.damage = 95;
																								this.useAnimation = 20;
																								this.useTime = 20;
																								this.width = 34;
																								this.height = 34;
																								this.scale = 1.1f;
																								this.knockBack = 6.5f;
																								this.melee = true;
																								this.rare = 5;
																								this.value = Item.sellPrice(0, 1, 0, 0);
																								this.autoReuse = true;
																								this.flame = true;
																								this.useTurn = true;
																								return;
																							case 3828:
																								this.rare = 3;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.width = 22;
																								this.height = 18;
																								this.value = Item.buyPrice(0, 0, 25, 0);
																								return;
																							case 3835:
																								this.useStyle = 5;
																								this.useAnimation = 30;
																								this.useTime = 30;
																								this.shootSpeed = 24f;
																								this.knockBack = 7f;
																								this.width = 16;
																								this.height = 16;
																								this.UseSound = new SoundStyle?(SoundID.DD2_MonkStaffSwing);
																								this.shoot = 697;
																								this.rare = 5;
																								this.value = Item.sellPrice(0, 1, 0, 0);
																								this.noMelee = true;
																								this.noUseGraphic = true;
																								this.channel = true;
																								this.autoReuse = true;
																								this.melee = true;
																								this.damage = 50;
																								return;
																							case 3836:
																								this.useStyle = 5;
																								this.useAnimation = 27;
																								this.useTime = 27;
																								this.shootSpeed = 42f;
																								this.knockBack = 7f;
																								this.width = 16;
																								this.height = 16;
																								this.UseSound = new SoundStyle?(SoundID.DD2_GhastlyGlaivePierce);
																								this.shoot = 699;
																								this.rare = 5;
																								this.value = Item.sellPrice(0, 1, 0, 0);
																								this.noMelee = true;
																								this.noUseGraphic = true;
																								this.channel = true;
																								this.melee = true;
																								this.damage = 45;
																								return;
																							case 3837:
																							case 3838:
																							case 3839:
																							case 3840:
																							case 3841:
																							case 3842:
																							case 3843:
																							case 3844:
																							case 3845:
																							case 3846:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 91;
																								this.placeStyle = 278 + type - 3837;
																								this.width = 10;
																								this.height = 24;
																								this.value = 1000;
																								this.rare = 1;
																								return;
																							}
																							if (type == 3827)
																							{
																								this.rare = 8;
																								this.UseSound = new SoundStyle?(SoundID.DD2_SonicBoomBladeSlash);
																								this.useStyle = 1;
																								this.damage = 180;
																								this.useAnimation = 20;
																								this.useTime = 20;
																								this.width = 30;
																								this.height = 30;
																								this.knockBack = 5.5f;
																								this.melee = true;
																								this.value = Item.sellPrice(0, 5, 0, 0);
																								this.autoReuse = true;
																								this.useTurn = false;
																								this.glowMask = 227;
																								this.shoot = 684;
																								this.shootSpeed = 17f;
																								return;
																							}
																							switch (type)
																							{
																							case 3852:
																								this.useLimitPerAnimation = new int?(4);
																								this.useStyle = 5;
																								this.useAnimation = 25;
																								this.useTime = 3;
																								this.shootSpeed = 11f;
																								this.knockBack = 9f;
																								this.width = 16;
																								this.height = 16;
																								this.damage = 36;
																								this.UseSound = new SoundStyle?(SoundID.DD2_BookStaffCast);
																								this.shoot = 712;
																								this.mana = 20;
																								this.rare = 5;
																								this.value = Item.sellPrice(0, 1, 0, 0);
																								this.noMelee = true;
																								this.magic = true;
																								this.autoReuse = true;
																								return;
																							case 3854:
																								this.useStyle = 5;
																								this.useAnimation = 18;
																								this.useTime = 18;
																								this.shootSpeed = 20f;
																								this.knockBack = 2f;
																								this.width = 20;
																								this.height = 12;
																								this.damage = 32;
																								this.UseSound = new SoundStyle?(SoundID.Item5);
																								this.shoot = 705;
																								this.rare = 5;
																								this.value = Item.sellPrice(0, 1, 0, 0);
																								this.noMelee = true;
																								this.noUseGraphic = true;
																								this.ranged = true;
																								this.channel = true;
																								this.useAmmo = AmmoID.Arrow;
																								this.autoReuse = true;
																								return;
																							case 3855:
																							case 3856:
																							case 3857:
																								this.damage = 0;
																								this.useStyle = 1;
																								this.width = 16;
																								this.height = 30;
																								this.UseSound = new SoundStyle?(SoundID.Item2);
																								this.useAnimation = 20;
																								this.useTime = 20;
																								this.rare = 3;
																								this.noMelee = true;
																								this.value = Item.sellPrice(0, 2, 0, 0);
																								this.buffType = 200;
																								this.shoot = 703;
																								if (type == 3856)
																								{
																									this.buffType = 201;
																									this.shoot = 702;
																									return;
																								}
																								if (type != 3857)
																								{
																									return;
																								}
																								this.buffType = 202;
																								this.shoot = 701;
																								return;
																							case 3858:
																								this.useStyle = 5;
																								this.useAnimation = 30;
																								this.useTime = 30;
																								this.shootSpeed = 24f;
																								this.knockBack = 5f;
																								this.width = 16;
																								this.height = 16;
																								this.UseSound = new SoundStyle?(SoundID.DD2_SkyDragonsFurySwing);
																								this.shoot = 707;
																								this.rare = 8;
																								this.value = Item.sellPrice(0, 5, 0, 0);
																								this.noMelee = true;
																								this.noUseGraphic = true;
																								this.channel = true;
																								this.autoReuse = true;
																								this.melee = true;
																								this.damage = 140;
																								return;
																							case 3859:
																								this.autoReuse = true;
																								this.useStyle = 5;
																								this.useAnimation = 30;
																								this.useTime = 30;
																								this.width = 14;
																								this.height = 32;
																								this.shoot = 710;
																								this.useAmmo = AmmoID.Arrow;
																								this.UseSound = new SoundStyle?(SoundID.Item102);
																								this.damage = 39;
																								this.shootSpeed = 11f;
																								this.knockBack = 4.5f;
																								this.rare = 8;
																								this.crit = 3;
																								this.noMelee = true;
																								this.value = Item.sellPrice(0, 5, 0, 0);
																								this.ranged = true;
																								this.glowMask = 234;
																								return;
																							case 3860:
																							case 3861:
																							case 3862:
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.width = 24;
																								this.height = 24;
																								this.rare = 1;
																								if (type == 3860)
																								{
																									this.rare = 8;
																								}
																								if (type == 3862)
																								{
																									this.rare = 3;
																								}
																								if (type == 3861)
																								{
																									this.rare = 5;
																								}
																								this.expert = true;
																								return;
																							case 3863:
																							case 3864:
																							case 3865:
																								this.width = 28;
																								this.height = 20;
																								this.rare = 1;
																								this.vanity = true;
																								this.value = Item.sellPrice(0, 0, 75, 0);
																								switch (type)
																								{
																								case 3863:
																									this.headSlot = 207;
																									return;
																								case 3864:
																									this.headSlot = 208;
																									return;
																								case 3865:
																									this.headSlot = 209;
																									return;
																								default:
																									return;
																								}
																								break;
																							}
																							switch (type)
																							{
																							case 3866:
																							case 3867:
																							case 3868:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 240;
																								this.width = 30;
																								this.height = 30;
																								this.value = Item.sellPrice(0, 1, 0, 0);
																								this.placeStyle = 60;
																								if (type == 3866)
																								{
																									this.placeStyle = 61;
																								}
																								if (type == 3868)
																								{
																									this.placeStyle = 62;
																								}
																								this.rare = 1;
																								return;
																							case 3869:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.consumable = true;
																								this.createTile = 139;
																								this.placeStyle = 39;
																								this.width = 24;
																								this.height = 24;
																								this.rare = 4;
																								this.value = 100000;
																								this.accessory = true;
																								this.hasVanityEffects = true;
																								return;
																							case 3870:
																								this.useStyle = 5;
																								this.useAnimation = 20;
																								this.useTime = 20;
																								this.reuseDelay = 10;
																								this.shootSpeed = 14f;
																								this.knockBack = 7f;
																								this.width = 16;
																								this.height = 16;
																								this.damage = 100;
																								this.UseSound = new SoundStyle?(SoundID.DD2_BetsysWrathShot);
																								this.shoot = 711;
																								this.mana = 14;
																								this.rare = 8;
																								this.value = Item.sellPrice(0, 5, 0, 0);
																								this.noMelee = true;
																								this.magic = true;
																								this.autoReuse = true;
																								this.glowMask = 238;
																								return;
																							case 3871:
																								this.width = 18;
																								this.height = 18;
																								this.rare = 8;
																								this.defense = 20;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								this.headSlot = 210;
																								return;
																							case 3872:
																								this.width = 18;
																								this.height = 18;
																								this.rare = 8;
																								this.defense = 24;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								this.bodySlot = 204;
																								return;
																							case 3873:
																								this.width = 18;
																								this.height = 18;
																								this.rare = 8;
																								this.defense = 24;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								this.legSlot = 152;
																								return;
																							case 3874:
																								this.width = 18;
																								this.height = 18;
																								this.rare = 8;
																								this.defense = 7;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								this.headSlot = 211;
																								return;
																							case 3875:
																								this.width = 18;
																								this.height = 18;
																								this.rare = 8;
																								this.defense = 21;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								this.bodySlot = 205;
																								return;
																							case 3876:
																								this.width = 18;
																								this.height = 18;
																								this.rare = 8;
																								this.defense = 14;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								this.legSlot = 153;
																								return;
																							case 3877:
																								this.width = 18;
																								this.height = 18;
																								this.rare = 8;
																								this.defense = 8;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								this.headSlot = 212;
																								return;
																							case 3878:
																								this.width = 18;
																								this.height = 18;
																								this.rare = 8;
																								this.defense = 24;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								this.bodySlot = 206;
																								return;
																							case 3879:
																								this.width = 18;
																								this.height = 18;
																								this.rare = 8;
																								this.defense = 16;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								this.legSlot = 154;
																								return;
																							case 3880:
																								this.width = 18;
																								this.height = 18;
																								this.rare = 8;
																								this.defense = 10;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								this.headSlot = 213;
																								return;
																							case 3881:
																								this.width = 18;
																								this.height = 18;
																								this.rare = 8;
																								this.defense = 26;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								this.bodySlot = 207;
																								return;
																							case 3882:
																								this.width = 18;
																								this.height = 18;
																								this.rare = 8;
																								this.defense = 18;
																								this.value = Item.sellPrice(0, 3, 0, 0);
																								this.legSlot = 156;
																								return;
																							case 3883:
																								this.width = 22;
																								this.height = 20;
																								this.accessory = true;
																								this.value = Item.buyPrice(0, 40, 0, 0);
																								this.rare = 8;
																								this.wingSlot = 37;
																								return;
																							case 3884:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 467;
																								this.width = 26;
																								this.height = 22;
																								this.value = 500;
																								this.placeStyle = 0;
																								return;
																							case 3885:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 467;
																								this.width = 26;
																								this.height = 22;
																								this.value = Item.buyPrice(0, 10, 0, 0);
																								this.placeStyle = 1;
																								return;
																							case 3886:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 468;
																								this.width = 26;
																								this.height = 22;
																								this.value = 500;
																								this.placeStyle = 0;
																								return;
																							case 3887:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 468;
																								this.width = 26;
																								this.height = 22;
																								this.value = 500;
																								this.placeStyle = 1;
																								return;
																							case 3888:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 10;
																								this.width = 14;
																								this.height = 28;
																								this.value = 200;
																								this.placeStyle = 36;
																								return;
																							case 3889:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 15;
																								this.width = 12;
																								this.height = 30;
																								this.placeStyle = 36;
																								this.value = 150;
																								return;
																							case 3890:
																								this.noWet = true;
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 33;
																								this.width = 8;
																								this.height = 18;
																								this.value = Item.sellPrice(0, 0, 0, 60);
																								this.placeStyle = 30;
																								return;
																							case 3891:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 42;
																								this.width = 12;
																								this.height = 28;
																								this.placeStyle = 37;
																								this.value = 150;
																								return;
																							case 3892:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 93;
																								this.width = 10;
																								this.height = 24;
																								this.value = 500;
																								this.placeStyle = 31;
																								return;
																							case 3893:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 100;
																								this.width = 20;
																								this.height = 20;
																								this.value = 1500;
																								this.placeStyle = 31;
																								return;
																							case 3894:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 34;
																								this.width = 26;
																								this.height = 26;
																								this.value = 3000;
																								this.placeStyle = 37;
																								return;
																							case 3895:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 90;
																								this.width = 20;
																								this.height = 20;
																								this.value = 300;
																								this.placeStyle = 31;
																								return;
																							case 3896:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 172;
																								this.width = 20;
																								this.height = 20;
																								this.value = 300;
																								this.placeStyle = 32;
																								return;
																							case 3897:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.autoReuse = true;
																								this.createTile = 79;
																								this.width = 28;
																								this.height = 20;
																								this.value = 2000;
																								this.placeStyle = 31;
																								return;
																							case 3898:
																							case 3899:
																							case 3900:
																							case 3901:
																							case 3902:
																								this.useStyle = 1;
																								this.useTurn = true;
																								this.useAnimation = 15;
																								this.useTime = 10;
																								this.autoReuse = true;
																								this.maxStack = Item.CommonMaxStack;
																								this.consumable = true;
																								this.createTile = 104;
																								this.width = 20;
																								this.height = 20;
																								this.value = 300;
																								this.placeStyle = 28 + type - 3898;
																								return;
																							default:
																								if (type >= 3903 && type <= 3908)
																								{
																									this.useStyle = 1;
																									this.useTurn = true;
																									this.useAnimation = 15;
																									this.useTime = 10;
																									this.autoReuse = true;
																									this.maxStack = Item.CommonMaxStack;
																									this.consumable = true;
																									this.createTile = 19;
																									this.width = 8;
																									this.height = 10;
																									this.placeStyle = 30 + type - 3903;
																									return;
																								}
																								switch (type)
																								{
																								case 3909:
																									this.useStyle = 1;
																									this.useTurn = true;
																									this.useAnimation = 15;
																									this.useTime = 10;
																									this.autoReuse = true;
																									this.maxStack = Item.CommonMaxStack;
																									this.consumable = true;
																									this.createTile = 18;
																									this.width = 28;
																									this.height = 14;
																									this.value = 150;
																									this.placeStyle = 31;
																									return;
																								case 3910:
																									this.useStyle = 1;
																									this.useTurn = true;
																									this.useAnimation = 15;
																									this.useTime = 10;
																									this.autoReuse = true;
																									this.maxStack = Item.CommonMaxStack;
																									this.consumable = true;
																									this.createTile = 18;
																									this.width = 28;
																									this.height = 14;
																									this.value = Item.buyPrice(0, 10, 0, 0);
																									this.placeStyle = 32;
																									return;
																								case 3911:
																								case 3912:
																								case 3913:
																								case 3914:
																									this.useStyle = 1;
																									this.useTurn = true;
																									this.useAnimation = 15;
																									this.useTime = 10;
																									this.autoReuse = true;
																									this.maxStack = Item.CommonMaxStack;
																									this.consumable = true;
																									this.createTile = 88;
																									this.width = 20;
																									this.height = 20;
																									this.value = 300;
																									this.placeStyle = 28 + type - 3911;
																									return;
																								default:
																									if (type >= 3915 && type <= 3916)
																									{
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 87;
																										this.width = 20;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 30 + type - 3915;
																										return;
																									}
																									switch (type)
																									{
																									case 3917:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 101;
																										this.width = 20;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 32;
																										return;
																									case 3918:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 89;
																										this.width = 20;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 33;
																										return;
																									case 3919:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 89;
																										this.width = 20;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 34;
																										return;
																									case 3920:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 469;
																										this.width = 26;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 0;
																										return;
																									case 3921:
																										this.width = 28;
																										this.height = 20;
																										this.headSlot = 214;
																										this.rare = 9;
																										this.value = Item.sellPrice(0, 5, 0, 0);
																										this.vanity = true;
																										return;
																									case 3922:
																										this.width = 28;
																										this.height = 20;
																										this.bodySlot = 208;
																										this.rare = 9;
																										this.value = Item.sellPrice(0, 5, 0, 0);
																										this.vanity = true;
																										return;
																									case 3923:
																										this.width = 18;
																										this.height = 14;
																										this.legSlot = 158;
																										this.rare = 9;
																										this.value = Item.sellPrice(0, 5, 0, 0);
																										this.vanity = true;
																										return;
																									case 3924:
																										this.width = 24;
																										this.height = 8;
																										this.accessory = true;
																										this.rare = 9;
																										this.wingSlot = 38;
																										this.value = 400000;
																										return;
																									case 3925:
																										this.width = 28;
																										this.height = 20;
																										this.headSlot = 215;
																										this.rare = 9;
																										this.value = Item.sellPrice(0, 5, 0, 0);
																										this.vanity = true;
																										return;
																									case 3926:
																										this.width = 28;
																										this.height = 20;
																										this.bodySlot = 209;
																										this.rare = 9;
																										this.value = Item.sellPrice(0, 5, 0, 0);
																										this.vanity = true;
																										return;
																									case 3927:
																										this.width = 18;
																										this.height = 14;
																										this.legSlot = 159;
																										this.rare = 9;
																										this.value = Item.sellPrice(0, 5, 0, 0);
																										this.vanity = true;
																										return;
																									case 3928:
																										this.width = 24;
																										this.height = 8;
																										this.accessory = true;
																										this.rare = 9;
																										this.wingSlot = 39;
																										this.value = 400000;
																										return;
																									case 3929:
																										this.width = 18;
																										this.height = 14;
																										this.rare = 9;
																										this.vanity = true;
																										this.value = Item.sellPrice(0, 5, 0, 0);
																										this.accessory = true;
																										this.hasVanityEffects = true;
																										return;
																									case 3930:
																										this.useStyle = 5;
																										this.useAnimation = 6;
																										this.useTime = 6;
																										this.shootSpeed = 17f;
																										this.knockBack = 10f;
																										this.width = 20;
																										this.height = 12;
																										this.damage = 50;
																										this.UseSound = null;
																										this.shoot = 714;
																										this.rare = 10;
																										this.value = Item.sellPrice(0, 10, 0, 0);
																										this.noMelee = true;
																										this.noUseGraphic = true;
																										this.ranged = true;
																										this.channel = true;
																										this.autoReuse = true;
																										this.useAmmo = AmmoID.Rocket;
																										return;
																									case 3931:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 90;
																										this.width = 20;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 32;
																										return;
																									case 3932:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.autoReuse = true;
																										this.createTile = 79;
																										this.width = 28;
																										this.height = 20;
																										this.value = 2000;
																										this.placeStyle = 32;
																										return;
																									case 3933:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 101;
																										this.width = 20;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 33;
																										return;
																									case 3934:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 88;
																										this.width = 20;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 32;
																										return;
																									case 3935:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 100;
																										this.width = 20;
																										this.height = 20;
																										this.value = 1500;
																										this.placeStyle = 32;
																										return;
																									case 3936:
																										this.noWet = true;
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 33;
																										this.width = 8;
																										this.height = 18;
																										this.value = Item.sellPrice(0, 0, 0, 60);
																										this.placeStyle = 31;
																										return;
																									case 3937:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 15;
																										this.width = 12;
																										this.height = 30;
																										this.placeStyle = 37;
																										this.value = 150;
																										return;
																									case 3938:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 34;
																										this.width = 26;
																										this.height = 26;
																										this.value = 3000;
																										this.placeStyle = 38;
																										return;
																									case 3939:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 467;
																										this.width = 26;
																										this.height = 22;
																										this.value = 500;
																										this.placeStyle = 2;
																										return;
																									case 3940:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 104;
																										this.width = 20;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 33;
																										return;
																									case 3941:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 10;
																										this.width = 14;
																										this.height = 28;
																										this.value = 200;
																										this.placeStyle = 37;
																										return;
																									case 3942:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 93;
																										this.width = 10;
																										this.height = 24;
																										this.value = 500;
																										this.placeStyle = 32;
																										return;
																									case 3943:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 42;
																										this.width = 12;
																										this.height = 28;
																										this.placeStyle = 38;
																										this.value = 150;
																										return;
																									case 3944:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 87;
																										this.width = 20;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 32;
																										return;
																									case 3945:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 19;
																										this.width = 8;
																										this.height = 10;
																										this.placeStyle = 36;
																										return;
																									case 3946:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 172;
																										this.width = 20;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 33;
																										return;
																									case 3947:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 89;
																										this.width = 20;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 35;
																										return;
																									case 3948:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 469;
																										this.width = 26;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 1;
																										return;
																									case 3949:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 18;
																										this.width = 28;
																										this.height = 14;
																										this.value = 150;
																										this.placeStyle = 33;
																										return;
																									case 3950:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 468;
																										this.width = 26;
																										this.height = 22;
																										this.value = 500;
																										this.placeStyle = 2;
																										return;
																									case 3951:
																										this.createTile = 472;
																										this.width = 16;
																										this.height = 16;
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										return;
																									case 3952:
																										this.createWall = 231;
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 7;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.width = 12;
																										this.height = 12;
																										return;
																									case 3953:
																										this.createTile = 473;
																										this.width = 16;
																										this.height = 16;
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										return;
																									case 3954:
																										this.createWall = 232;
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 7;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.width = 12;
																										this.height = 12;
																										return;
																									case 3955:
																										this.createTile = 474;
																										this.width = 16;
																										this.height = 16;
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										return;
																									case 3956:
																										this.createWall = 233;
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 7;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.width = 12;
																										this.height = 12;
																										return;
																									case 3957:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 19;
																										this.width = 8;
																										this.height = 10;
																										this.placeStyle = 37;
																										return;
																									case 3958:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 90;
																										this.width = 20;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 33;
																										return;
																									case 3959:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.autoReuse = true;
																										this.createTile = 79;
																										this.width = 28;
																										this.height = 20;
																										this.value = 2000;
																										this.placeStyle = 33;
																										return;
																									case 3960:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 101;
																										this.width = 20;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 34;
																										return;
																									case 3961:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 100;
																										this.width = 20;
																										this.height = 20;
																										this.value = 1500;
																										this.placeStyle = 33;
																										return;
																									case 3962:
																										this.noWet = true;
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 33;
																										this.width = 8;
																										this.height = 18;
																										this.value = Item.sellPrice(0, 0, 0, 60);
																										this.placeStyle = 32;
																										return;
																									case 3963:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 15;
																										this.width = 12;
																										this.height = 30;
																										this.placeStyle = 38;
																										this.value = 150;
																										return;
																									case 3964:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 34;
																										this.width = 26;
																										this.height = 26;
																										this.value = 3000;
																										this.placeStyle = 39;
																										return;
																									case 3965:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 467;
																										this.width = 26;
																										this.height = 22;
																										this.value = 500;
																										this.placeStyle = 3;
																										return;
																									case 3966:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 104;
																										this.width = 20;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 34;
																										return;
																									case 3967:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 10;
																										this.width = 14;
																										this.height = 28;
																										this.value = 200;
																										this.placeStyle = 38;
																										return;
																									case 3968:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 88;
																										this.width = 20;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 33;
																										return;
																									case 3969:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 93;
																										this.width = 10;
																										this.height = 24;
																										this.value = 500;
																										this.placeStyle = 33;
																										return;
																									case 3970:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 42;
																										this.width = 12;
																										this.height = 28;
																										this.placeStyle = 39;
																										this.value = 150;
																										return;
																									case 3971:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 87;
																										this.width = 20;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 33;
																										return;
																									case 3972:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 172;
																										this.width = 20;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 34;
																										return;
																									case 3973:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 89;
																										this.width = 20;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 36;
																										return;
																									case 3974:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 469;
																										this.width = 26;
																										this.height = 20;
																										this.value = 300;
																										this.placeStyle = 2;
																										return;
																									case 3975:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 18;
																										this.width = 28;
																										this.height = 14;
																										this.value = 150;
																										this.placeStyle = 34;
																										return;
																									case 3976:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 468;
																										this.width = 26;
																										this.height = 22;
																										this.value = 500;
																										this.placeStyle = 3;
																										return;
																									case 3977:
																										this.useStyle = 1;
																										this.useTurn = true;
																										this.useAnimation = 15;
																										this.useTime = 10;
																										this.autoReuse = true;
																										this.maxStack = Item.CommonMaxStack;
																										this.consumable = true;
																										this.createTile = 269;
																										this.width = 22;
																										this.height = 32;
																										this.createTile = 475;
																										return;
																									case 3978:
																										this.width = 20;
																										this.height = 20;
																										this.maxStack = Item.CommonMaxStack;
																										this.value = Item.sellPrice(0, 1, 50, 0);
																										this.rare = 3;
																										return;
																									case 3979:
																										this.width = 12;
																										this.height = 12;
																										this.rare = 1;
																										this.maxStack = Item.CommonMaxStack;
																										this.value = Item.sellPrice(0, 0, 10, 0);
																										this.createTile = 376;
																										this.placeStyle = 9;
																										this.useAnimation = 15;
																										this.useTime = 15;
																										this.autoReuse = true;
																										this.useStyle = 1;
																										this.consumable = true;
																										return;
																									case 3980:
																										this.width = 12;
																										this.height = 12;
																										this.rare = 2;
																										this.maxStack = Item.CommonMaxStack;
																										this.value = Item.sellPrice(0, 0, 50, 0);
																										this.createTile = 376;
																										this.placeStyle = 10;
																										this.useAnimation = 15;
																										this.useTime = 15;
																										this.autoReuse = true;
																										this.useStyle = 1;
																										this.consumable = true;
																										return;
																									case 3981:
																										this.width = 12;
																										this.height = 12;
																										this.rare = 3;
																										this.maxStack = Item.CommonMaxStack;
																										this.value = Item.sellPrice(0, 2, 0, 0);
																										this.createTile = 376;
																										this.placeStyle = 11;
																										this.useAnimation = 15;
																										this.useTime = 15;
																										this.autoReuse = true;
																										this.useStyle = 1;
																										this.consumable = true;
																										return;
																									case 3982:
																									case 3983:
																									case 3984:
																									case 3985:
																									case 3986:
																									case 3987:
																										this.width = 12;
																										this.height = 12;
																										this.rare = 2;
																										this.maxStack = Item.CommonMaxStack;
																										this.createTile = 376;
																										this.placeStyle = 12 + type - 3982;
																										this.useAnimation = 15;
																										this.useTime = 15;
																										this.autoReuse = true;
																										this.useStyle = 1;
																										this.consumable = true;
																										this.value = Item.sellPrice(0, 1, 0, 0);
																										return;
																									default:
																										if (type == 3988)
																										{
																											this.useStyle = 1;
																											this.useTurn = true;
																											this.useAnimation = 15;
																											this.useTime = 10;
																											this.autoReuse = true;
																											this.maxStack = Item.CommonMaxStack;
																											this.consumable = true;
																											this.createTile = 467;
																											this.width = 26;
																											this.height = 22;
																											this.value = 500;
																											this.placeStyle = 4;
																											return;
																										}
																										if (type != 3989)
																										{
																											return;
																										}
																										this.DefaultToGolfBall(721);
																										return;
																									}
																									break;
																								}
																								break;
																							}
																							break;
																						}
																						break;
																					}
																					break;
																				}
																				break;
																			}
																			break;
																		}
																		break;
																	}
																	break;
																}
																break;
															}
															break;
														}
														break;
													}
													break;
												}
											}
											break;
										}
										break;
									}
								}
								IL_4A21:
								this.useStyle = 5;
								this.width = 24;
								this.height = 24;
								this.noUseGraphic = true;
								this.UseSound = new SoundStyle?(SoundID.Item1);
								this.melee = true;
								this.channel = true;
								this.noMelee = true;
								this.shoot = 541 + type - 3278;
								this.useAnimation = 25;
								this.useTime = 25;
								this.shootSpeed = 16f;
								switch (type)
								{
								case 3262:
									this.knockBack = 3.25f;
									this.damage = 21;
									this.value = Item.buyPrice(0, 5, 0, 0);
									this.rare = 2;
									this.shoot = 534;
									return;
								case 3263:
								case 3264:
								case 3265:
								case 3266:
								case 3267:
								case 3268:
								case 3269:
								case 3270:
								case 3271:
								case 3272:
								case 3273:
								case 3274:
								case 3275:
								case 3276:
								case 3277:
									break;
								case 3278:
									this.knockBack = 2.5f;
									this.damage = 9;
									this.value = Item.sellPrice(0, 0, 1, 0);
									this.rare = 0;
									return;
								case 3279:
									this.knockBack = 4.5f;
									this.damage = 16;
									this.value = Item.sellPrice(0, 1, 0, 0);
									this.rare = 1;
									return;
								case 3280:
									this.knockBack = 4f;
									this.damage = 17;
									this.value = Item.sellPrice(0, 1, 0, 0);
									this.rare = 1;
									return;
								case 3281:
									this.knockBack = 3.75f;
									this.damage = 18;
									this.value = Item.sellPrice(0, 1, 30, 0);
									this.rare = 3;
									return;
								case 3282:
									this.knockBack = 4.3f;
									this.damage = 27;
									this.value = Item.sellPrice(0, 1, 80, 0);
									this.rare = 3;
									return;
								case 3283:
									this.knockBack = 3.3f;
									this.damage = 39;
									this.value = Item.sellPrice(0, 4, 0, 0);
									this.rare = 4;
									return;
								case 3284:
									this.knockBack = 3.8f;
									this.damage = 54;
									this.value = Item.buyPrice(0, 25, 0, 0);
									this.rare = 5;
									return;
								case 3285:
									this.knockBack = 3.5f;
									this.damage = 14;
									this.value = Item.sellPrice(0, 0, 50, 0);
									this.rare = 1;
									return;
								case 3286:
									this.knockBack = 3.1f;
									this.damage = 60;
									this.value = Item.sellPrice(0, 5, 0, 0);
									this.rare = 7;
									return;
								case 3287:
								case 3288:
									this.knockBack = 4.5f;
									this.damage = 70;
									this.rare = 9;
									this.value = Item.sellPrice(0, 4, 0, 0);
									return;
								case 3289:
									this.knockBack = 2.8f;
									this.damage = 43;
									this.value = Item.sellPrice(0, 4, 0, 0);
									this.rare = 4;
									return;
								case 3290:
									this.knockBack = 4.5f;
									this.damage = 41;
									this.value = Item.sellPrice(0, 4, 0, 0);
									this.rare = 4;
									return;
								case 3291:
									this.knockBack = 4.3f;
									this.damage = 95;
									this.value = Item.sellPrice(0, 11, 0, 0);
									this.rare = 8;
									this.crit += 10;
									return;
								case 3292:
									this.knockBack = 3.5f;
									this.damage = 115;
									this.value = this.eclipseMothronPrice;
									this.rare = 8;
									return;
								default:
									switch (type)
									{
									case 3315:
										this.knockBack = 3.25f;
										this.damage = 39;
										this.value = Item.sellPrice(0, 4, 0, 0);
										this.rare = 3;
										this.shoot = 562;
										return;
									case 3316:
										this.knockBack = 3.8f;
										this.damage = 49;
										this.value = Item.sellPrice(0, 4, 0, 0);
										this.rare = 3;
										this.shoot = 563;
										return;
									case 3317:
										this.knockBack = 3.85f;
										this.damage = 28;
										this.value = this.dungeonPrice;
										this.rare = 3;
										this.shoot = 564;
										return;
									}
									break;
								}
								this.knockBack = 4f;
								this.damage = 15;
								this.rare = 2;
								this.value = Item.sellPrice(0, 1, 0, 0);
								return;
							}
							break;
						}
						break;
					}
					break;
				}
				break;
			}
		}

		/// <summary>
		/// This method sets a variety of Item values common to golf ball items.<br />
		/// Specifically:<code>
		/// shoot = <paramref name="projid" />;
		/// useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Swing" />;
		/// shootSpeed = 12f;
		/// width = 18;
		/// height = 20;
		/// maxStack = 1;
		/// UseSound = <see cref="F:Terraria.ID.SoundID.Item1" />;
		/// useAnimation = 15;
		/// useTime = 15;
		/// noUseGraphic = true;
		/// noMelee = true;
		/// accessory = true;
		/// SetShopValues(ItemRarityColor.Green2, buyPrice(0, 1));
		/// hasVanityEffects = true;
		/// </code>
		/// </summary>
		/// <param name="projid"></param>
		// Token: 0x0600027F RID: 639 RVA: 0x000708A0 File Offset: 0x0006EAA0
		public void DefaultToGolfBall(int projid)
		{
			this.shoot = projid;
			this.useStyle = 1;
			this.shootSpeed = 12f;
			this.width = 18;
			this.height = 20;
			this.maxStack = 1;
			this.UseSound = new SoundStyle?(SoundID.Item1);
			this.useAnimation = 15;
			this.useTime = 15;
			this.noUseGraphic = true;
			this.noMelee = true;
			this.value = 0;
			this.accessory = true;
			this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 1, 0, 0));
			this.hasVanityEffects = true;
		}

		// Token: 0x06000280 RID: 640 RVA: 0x00070930 File Offset: 0x0006EB30
		public void SetDefaults5(int type)
		{
			switch (type)
			{
			case 3990:
				this.DefaultToAccessory(36, 28);
				this.shoeSlot = 18;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 2, 0, 0));
				return;
			case 3991:
				this.DefaultToAccessory(30, 42);
				this.faceSlot = 9;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				return;
			case 3992:
				this.defense = 8;
				this.DefaultToAccessory(20, 40);
				this.handOnSlot = 20;
				this.handOffSlot = 12;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				return;
			case 3993:
				this.DefaultToAccessory(34, 30);
				this.shoeSlot = 19;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 8, 0, 0));
				return;
			case 3994:
				this.DefaultToAccessory(24, 30);
				this.shoeSlot = 20;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 2, 0, 0));
				return;
			case 3995:
				this.DefaultToAccessory(34, 32);
				this.handOnSlot = 21;
				this.handOffSlot = 13;
				this.shoeSlot = 20;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 5, 0, 0));
				return;
			case 3996:
				this.DefaultToAccessory(28, 30);
				this.handOnSlot = 21;
				this.handOffSlot = 13;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 2, 0, 0));
				return;
			case 3997:
				this.defense = 6;
				this.DefaultToAccessory(36, 38);
				this.shieldSlot = 7;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 8, 0, 0));
				return;
			case 3998:
				this.defense = 10;
				this.DefaultToAccessory(36, 40);
				this.shieldSlot = 8;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				return;
			case 3999:
				this.DefaultToAccessory(22, 32);
				this.faceSlot = 10;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 2, 50, 0));
				return;
			case 4000:
				this.DefaultToAccessory(28, 32);
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 4, 0, 0));
				return;
			case 4001:
				this.DefaultToAccessory(26, 36);
				this.backSlot = 14;
				this.frontSlot = 5;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 3, 0, 0));
				return;
			case 4002:
				this.DefaultToAccessory(34, 36);
				this.backSlot = 15;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 7, 50, 0));
				return;
			case 4003:
				this.DefaultToAccessory(30, 34);
				this.faceSlot = 11;
				this.SetShopValues(ItemRarityColor.LightPurple6, Item.sellPrice(0, 5, 0, 0));
				return;
			case 4004:
				this.DefaultToAccessory(30, 32);
				this.faceSlot = 13;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 3, 0, 0));
				return;
			case 4005:
				this.DefaultToAccessory(30, 30);
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				return;
			case 4006:
				this.DefaultToAccessory(36, 38);
				this.backSlot = 16;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				return;
			case 4007:
				this.DefaultToAccessory(26, 30);
				this.neckSlot = 10;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 3, 0, 0));
				return;
			case 4008:
				this.defense = 4;
				this.DefaultToHeadgear(24, 22, 216);
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 2, 0, 0));
				return;
			case 4009:
			case 4010:
			case 4011:
			case 4012:
			case 4013:
			case 4014:
			case 4015:
			case 4016:
			case 4017:
			case 4018:
			case 4019:
			case 4020:
			case 4021:
			case 4022:
			case 4023:
			case 4024:
			case 4025:
			case 4026:
			case 4027:
			case 4028:
			case 4029:
			case 4030:
			case 4031:
			case 4032:
			case 4033:
			case 4034:
			case 4035:
			case 4036:
			case 4037:
			case 4282:
			case 4283:
			case 4284:
			case 4285:
			case 4286:
			case 4287:
			case 4288:
			case 4289:
			case 4290:
			case 4291:
			case 4292:
			case 4293:
			case 4294:
			case 4295:
			case 4296:
			case 4297:
			case 4403:
			case 4411:
			case 4614:
			case 4615:
			case 4616:
			case 4617:
			case 4618:
			case 4619:
			case 4620:
			case 4621:
			case 4622:
			case 4623:
			case 4624:
			case 4625:
			case 5009:
			case 5013:
			case 5041:
			case 5042:
			case 5092:
			case 5093:
			case 5275:
			case 5277:
			case 5278:
				break;
			case 4038:
				this.DefaultToAccessory(28, 34);
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 7, 50, 0));
				this.neckSlot = 12;
				return;
			case 4039:
				this.DefaultToGolfClub(20, 20);
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 1, 0, 0));
				return;
			case 4040:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 476;
				this.width = 12;
				this.height = 12;
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 1, 0, 0));
				return;
			case 4041:
			case 4042:
			case 4043:
			case 4044:
			case 4045:
			case 4046:
			case 4047:
			case 4048:
			case 4241:
				this.DefaultToPlaceableTile(3, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 5, 0));
				this.autoReuse = false;
				this.useTime = this.useAnimation;
				return;
			case 4049:
				this.DefaultToLawnMower(20, 20);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
				return;
			case 4050:
				this.DefaultToPlaceableTile(478, 0);
				return;
			case 4051:
				this.DefaultToPlaceableTile(479, 0);
				return;
			case 4052:
				this.DefaultToPlaceableWall(234);
				return;
			case 4053:
				this.DefaultToPlaceableWall(235);
				return;
			case 4054:
				this.DefaultToPlaceableTile(480, 0);
				this.width = 22;
				this.height = 32;
				this.rare = 3;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.accessory = true;
				this.vanity = true;
				return;
			case 4055:
				this.DefaultToAccessory(34, 30);
				this.shoeSlot = 21;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4056:
				this.DefaultToAccessory(30, 30);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4057:
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 1, 0, 0));
				this.DefaultToGuitar(24, 24);
				return;
			case 4058:
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 10, 0, 0));
				this.DefaultToBow(17, 11f, false);
				this.SetWeaponValues(8, 5f, 0);
				return;
			case 4059:
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 30, 0));
				this.SetWeaponValues(8, 4f, 0);
				this.width = 16;
				this.height = 16;
				this.melee = true;
				this.autoReuse = true;
				this.useTurn = true;
				this.useTime = 14;
				this.useAnimation = 18;
				this.useStyle = 1;
				this.pick = 55;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				return;
			case 4060:
				this.width = 42;
				this.height = 20;
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 50, 0, 0));
				this.DefaultToRangedWeapon(728, AmmoID.FallenStar, 18, 20f, true);
				this.SetWeaponValues(60, 5f, 0);
				if (this.Variant == ItemVariants.RebalancedVariant)
				{
					this.damage = (int)((double)this.damage * 0.9);
					this.useTime = (int)((double)this.useTime * 1.1);
					return;
				}
				break;
			case 4061:
				this.DefaultToSpear(730, 3.5f, 28);
				this.SetWeaponValues(14, 6f, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 30, 0));
				return;
			case 4062:
				this.DefaultToStaff(731, 8f, 17, 7);
				this.SetWeaponValues(20, 3f, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 30, 0));
				return;
			case 4063:
				this.DefaultToPlaceableTile(486, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4064:
				this.DefaultToPlaceableTile(487, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 0, 80));
				return;
			case 4065:
				this.DefaultToPlaceableTile(487, 1);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 1, 0));
				return;
			case 4066:
				this.DefaultToMount(15);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				return;
			case 4067:
				this.DefaultToMount(16);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4068:
				this.DefaultToCapturedCritter(583);
				this.rare = 1;
				this.value = Item.sellPrice(0, 1, 0, 0);
				return;
			case 4069:
				this.DefaultToCapturedCritter(584);
				this.rare = 1;
				this.value = Item.sellPrice(0, 1, 0, 0);
				return;
			case 4070:
				this.DefaultToCapturedCritter(585);
				this.rare = 1;
				this.value = Item.sellPrice(0, 1, 0, 0);
				return;
			case 4071:
			case 4072:
			case 4073:
				this.DefaultToSeaShell();
				return;
			case 4074:
				this.DefaultToPlaceableTile(489, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 20, 0));
				return;
			case 4075:
				this.DefaultToPlaceableTile(490, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 10, 0));
				return;
			case 4076:
				this.rare = 3;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 491;
				this.width = 12;
				this.height = 12;
				this.value = 100000;
				return;
			case 4077:
				this.DefaultToMusicBox(43);
				return;
			case 4078:
				this.DefaultToMusicBox(41);
				return;
			case 4079:
				this.DefaultToMusicBox(42);
				return;
			case 4080:
				this.DefaultToMusicBox(44);
				return;
			case 4081:
				this.DefaultToMusicBox(45);
				return;
			case 4082:
				this.DefaultToMusicBox(40);
				return;
			case 4083:
			case 4084:
			case 4085:
			case 4086:
			case 4087:
			case 4088:
				this.DefaultToPlaceableTile(493, type - 4083);
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 20, 0));
				return;
			case 4089:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 494;
				this.width = 12;
				this.height = 12;
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 1, 0, 0));
				return;
			case 4090:
				this.DefaultToPlaceableTile(495, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 1, 0));
				return;
			case 4091:
				this.DefaultToPlaceableTile(496, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 1, 0));
				return;
			case 4092:
				this.DefaultToGolfClub(20, 20);
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 1, 0, 0));
				return;
			case 4093:
				this.DefaultToGolfClub(20, 20);
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 1, 0, 0));
				return;
			case 4094:
				this.DefaultToGolfClub(20, 20);
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 1, 0, 0));
				return;
			case 4095:
				this.maxStack = 1;
				this.consumable = false;
				this.width = 18;
				this.height = 18;
				this.useStyle = 4;
				this.useTime = 10;
				this.UseSound = new SoundStyle?(SoundID.Item128);
				this.useAnimation = 10;
				this.rare = 4;
				this.value = Item.sellPrice(0, 2, 0, 0);
				return;
			case 4096:
			case 4097:
			case 4098:
			case 4099:
			case 4100:
			case 4101:
			case 4102:
			case 4103:
			case 4104:
			case 4105:
			case 4106:
			case 4107:
			case 4108:
			case 4109:
			case 4110:
			case 4111:
			case 4112:
			case 4113:
			case 4114:
			case 4115:
			case 4116:
			case 4117:
			case 4118:
			case 4119:
			case 4120:
			case 4121:
			case 4122:
			case 4123:
			case 4124:
			case 4125:
			case 4126:
				this.DefaultToPlaceableTile(497, type - 4096);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 4127:
				this.DefaultToPlaceableTile(497, type - 4096);
				this.maxStack = Item.CommonMaxStack;
				this.value = 100000;
				return;
			case 4128:
				this.width = 18;
				this.height = 18;
				this.headSlot = 217;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4129:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 210;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4130:
				this.width = 18;
				this.height = 18;
				this.legSlot = 180;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4131:
			case 5325:
				this.useStyle = 1;
				this.shootSpeed = 4f;
				this.shoot = 734;
				this.width = 26;
				this.height = 24;
				this.UseSound = new SoundStyle?(SoundID.Item130);
				this.useAnimation = 28;
				this.useTime = 28;
				this.rare = 3;
				this.value = Item.sellPrice(0, 2, 0, 0);
				return;
			case 4132:
				this.width = 18;
				this.height = 18;
				this.headSlot = 218;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4133:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 211;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4134:
				this.width = 18;
				this.height = 18;
				this.legSlot = 184;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4135:
				this.width = 18;
				this.height = 18;
				this.headSlot = 219;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4136:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 212;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4137:
				this.width = 18;
				this.height = 18;
				this.legSlot = 185;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4138:
				this.width = 18;
				this.height = 18;
				this.headSlot = 220;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4139:
				this.DefaultToPlaceableTile(498, 0);
				this.SetShopValues(ItemRarityColor.White0, 0);
				return;
			case 4140:
				this.DefaultToPlaceableWall(236);
				this.SetShopValues(ItemRarityColor.White0, 0);
				return;
			case 4141:
				this.DefaultToPlaceableTile(497, 32);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 4142:
				this.DefaultToPlaceableTile(499, 0);
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.White0, 100000);
				return;
			case 4143:
				this.width = 12;
				this.height = 12;
				return;
			case 4144:
				this.width = 14;
				this.height = 38;
				this.useAnimation = 25;
				this.useTime = 15;
				this.useStyle = 5;
				this.rare = 2;
				this.noUseGraphic = true;
				this.channel = true;
				this.noMelee = true;
				this.damage = 17;
				this.knockBack = 3f;
				this.autoReuse = false;
				this.noMelee = true;
				this.melee = true;
				this.shoot = 735;
				this.shootSpeed = 15f;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4145:
				this.DefaultToPlaceableTile(90, 34);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4146:
				this.DefaultToPlaceableTile(79, 34);
				this.SetShopValues(ItemRarityColor.White0, 2000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 20;
				return;
			case 4147:
				this.DefaultToPlaceableTile(101, 35);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4148:
				this.DefaultToPlaceableTile(88, 34);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4149:
				this.DefaultToPlaceableTile(100, 34);
				this.SetShopValues(ItemRarityColor.White0, 1500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4150:
				this.DefaultToPlaceableTile(33, 33);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.noWet = true;
				return;
			case 4151:
				this.DefaultToPlaceableTile(15, 39);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 30;
				return;
			case 4152:
				this.DefaultToPlaceableTile(34, 40);
				this.SetShopValues(ItemRarityColor.White0, 3000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 4153:
				this.DefaultToPlaceableTile(467, 5);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4154:
				this.DefaultToPlaceableTile(104, 35);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4155:
				this.DefaultToPlaceableTile(10, 39);
				this.SetShopValues(ItemRarityColor.White0, 200);
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 4156:
				this.DefaultToPlaceableTile(93, 34);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 10;
				this.height = 24;
				return;
			case 4157:
				this.DefaultToPlaceableTile(42, 40);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 28;
				return;
			case 4158:
				this.DefaultToPlaceableTile(87, 34);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4159:
				this.DefaultToPlaceableTile(19, 38);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 4160:
				this.DefaultToPlaceableTile(172, 35);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4161:
				this.DefaultToPlaceableTile(89, 37);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4162:
				this.DefaultToPlaceableTile(469, 3);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 20;
				return;
			case 4163:
				this.DefaultToPlaceableTile(18, 35);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 14;
				return;
			case 4164:
				this.DefaultToPlaceableTile(468, 5);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4165:
				this.DefaultToPlaceableTile(497, 33);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 4166:
				this.DefaultToPlaceableTile(90, 35);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4167:
				this.DefaultToPlaceableTile(79, 35);
				this.SetShopValues(ItemRarityColor.White0, 2000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 20;
				return;
			case 4168:
				this.DefaultToPlaceableTile(101, 36);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4169:
				this.DefaultToPlaceableTile(88, 35);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4170:
				this.DefaultToPlaceableTile(100, 35);
				this.SetShopValues(ItemRarityColor.White0, 1500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4171:
				this.DefaultToPlaceableTile(33, 34);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.noWet = true;
				return;
			case 4172:
				this.DefaultToPlaceableTile(15, 40);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 30;
				return;
			case 4173:
				this.DefaultToPlaceableTile(34, 41);
				this.SetShopValues(ItemRarityColor.White0, 3000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 4174:
				this.DefaultToPlaceableTile(467, 6);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4175:
				this.DefaultToPlaceableTile(104, 36);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4176:
				this.DefaultToPlaceableTile(10, 40);
				this.SetShopValues(ItemRarityColor.White0, 200);
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 4177:
				this.DefaultToPlaceableTile(93, 35);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 10;
				this.height = 24;
				return;
			case 4178:
				this.DefaultToPlaceableTile(42, 41);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 28;
				return;
			case 4179:
				this.DefaultToPlaceableTile(87, 35);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4180:
				this.DefaultToPlaceableTile(19, 39);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 4181:
				this.DefaultToPlaceableTile(172, 36);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4182:
				this.DefaultToPlaceableTile(89, 38);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4183:
				this.DefaultToPlaceableTile(469, 4);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 20;
				return;
			case 4184:
				this.DefaultToPlaceableTile(18, 36);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 14;
				return;
			case 4185:
				this.DefaultToPlaceableTile(468, 6);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4186:
				this.DefaultToPlaceableTile(497, 34);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 4187:
				this.DefaultToPlaceableTile(90, 36);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4188:
				this.DefaultToPlaceableTile(79, 36);
				this.SetShopValues(ItemRarityColor.White0, 2000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 20;
				return;
			case 4189:
				this.DefaultToPlaceableTile(101, 37);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4190:
				this.DefaultToPlaceableTile(88, 36);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4191:
				this.DefaultToPlaceableTile(100, 36);
				this.SetShopValues(ItemRarityColor.White0, 1500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4192:
				this.DefaultToPlaceableTile(33, 35);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.noWet = true;
				return;
			case 4193:
				this.DefaultToPlaceableTile(15, 41);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 30;
				return;
			case 4194:
				this.DefaultToPlaceableTile(34, 42);
				this.SetShopValues(ItemRarityColor.White0, 3000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 4195:
				this.DefaultToPlaceableTile(467, 7);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4196:
				this.DefaultToPlaceableTile(104, 37);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4197:
				this.DefaultToPlaceableTile(10, 41);
				this.SetShopValues(ItemRarityColor.White0, 200);
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 4198:
				this.DefaultToPlaceableTile(93, 36);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 10;
				this.height = 24;
				return;
			case 4199:
				this.DefaultToPlaceableTile(42, 42);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 28;
				return;
			case 4200:
				this.DefaultToPlaceableTile(87, 36);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4201:
				this.DefaultToPlaceableTile(19, 40);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 4202:
				this.DefaultToPlaceableTile(172, 37);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4203:
				this.DefaultToPlaceableTile(89, 39);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4204:
				this.DefaultToPlaceableTile(469, 5);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 20;
				return;
			case 4205:
				this.DefaultToPlaceableTile(18, 37);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 14;
				return;
			case 4206:
				this.DefaultToPlaceableTile(468, 7);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4207:
				this.DefaultToPlaceableTile(497, 35);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 4208:
				this.DefaultToPlaceableTile(90, 37);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4209:
				this.DefaultToPlaceableTile(79, 37);
				this.SetShopValues(ItemRarityColor.White0, 2000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 20;
				return;
			case 4210:
				this.DefaultToPlaceableTile(101, 38);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4211:
				this.DefaultToPlaceableTile(88, 37);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4212:
				this.DefaultToPlaceableTile(100, 37);
				this.SetShopValues(ItemRarityColor.White0, 1500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4213:
				this.DefaultToPlaceableTile(33, 36);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.noWet = true;
				return;
			case 4214:
				this.DefaultToPlaceableTile(15, 42);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 30;
				return;
			case 4215:
				this.DefaultToPlaceableTile(34, 43);
				this.SetShopValues(ItemRarityColor.White0, 3000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 4216:
				this.DefaultToPlaceableTile(467, 8);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4217:
				this.DefaultToPlaceableTile(104, 38);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4218:
				this.DefaultToPlaceableTile(10, 42);
				this.SetShopValues(ItemRarityColor.White0, 200);
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 4219:
				this.DefaultToPlaceableTile(93, 37);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 10;
				this.height = 24;
				return;
			case 4220:
				this.DefaultToPlaceableTile(42, 43);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 28;
				return;
			case 4221:
				this.DefaultToPlaceableTile(87, 37);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4222:
				this.DefaultToPlaceableTile(19, 41);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 4223:
				this.DefaultToPlaceableTile(172, 38);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4224:
				this.DefaultToPlaceableTile(89, 40);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4225:
				this.DefaultToPlaceableTile(469, 6);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 20;
				return;
			case 4226:
				this.DefaultToPlaceableTile(18, 38);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 14;
				return;
			case 4227:
				this.DefaultToPlaceableTile(468, 8);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4228:
				this.DefaultToPlaceableTile(497, 36);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 4229:
				this.DefaultToPlaceableTile(500, 0);
				return;
			case 4230:
				this.DefaultToPlaceableTile(501, 0);
				return;
			case 4231:
				this.DefaultToPlaceableTile(502, 0);
				return;
			case 4232:
				this.DefaultToPlaceableTile(503, 0);
				return;
			case 4233:
				this.DefaultToPlaceableWall(237);
				return;
			case 4234:
				this.DefaultToPlaceableWall(238);
				return;
			case 4235:
				this.DefaultToPlaceableWall(239);
				return;
			case 4236:
				this.DefaultToPlaceableWall(240);
				return;
			case 4237:
				this.DefaultToMusicBox(46);
				return;
			case 4238:
				this.DefaultToPlaceableTile(481, 0);
				return;
			case 4239:
				this.DefaultToPlaceableTile(482, 0);
				return;
			case 4240:
				this.DefaultToPlaceableTile(483, 0);
				return;
			case 4242:
				this.DefaultToGolfBall(739);
				return;
			case 4243:
				this.DefaultToGolfBall(740);
				return;
			case 4244:
				this.DefaultToGolfBall(741);
				return;
			case 4245:
				this.DefaultToGolfBall(742);
				return;
			case 4246:
				this.DefaultToGolfBall(743);
				return;
			case 4247:
				this.DefaultToGolfBall(744);
				return;
			case 4248:
				this.DefaultToGolfBall(745);
				return;
			case 4249:
				this.DefaultToGolfBall(746);
				return;
			case 4250:
				this.DefaultToGolfBall(747);
				return;
			case 4251:
				this.DefaultToGolfBall(748);
				return;
			case 4252:
				this.DefaultToGolfBall(749);
				return;
			case 4253:
				this.DefaultToGolfBall(750);
				return;
			case 4254:
				this.DefaultToGolfBall(751);
				return;
			case 4255:
				this.DefaultToGolfBall(752);
				return;
			case 4256:
				this.defense = 3;
				this.width = 18;
				this.height = 14;
				this.bodySlot = 213;
				this.value = Item.sellPrice(0, 0, 50, 0) * 6;
				this.rare = 2;
				return;
			case 4257:
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 12.5f;
				this.shoot = 753;
				this.width = 18;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = 20000;
				return;
			case 4258:
				this.useStyle = 1;
				this.useTime = 18;
				this.useAnimation = 18;
				this.knockBack = 3f;
				this.width = 40;
				this.height = 40;
				this.damage = 26;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item15);
				this.rare = 1;
				this.value = 27000;
				this.melee = true;
				return;
			case 4259:
				this.SetDefaults(198);
				this.type = type;
				this.damage = 48;
				this.useTime = 16;
				this.useAnimation = 16;
				this.scale = 1f;
				this.autoReuse = true;
				this.useTurn = true;
				this.rare = 4;
				this.value = Item.sellPrice(0, 1, 0, 0);
				return;
			case 4260:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 7;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createWall = 241;
				this.width = 12;
				this.height = 12;
				this.value = Item.sellPrice(0, 0, 1, 60);
				return;
			case 4261:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 135;
				this.width = 12;
				this.height = 12;
				this.placeStyle = 7;
				this.mech = true;
				this.value = 5000;
				return;
			case 4262:
				this.useTurn = true;
				this.width = 20;
				this.height = 20;
				this.useStyle = 5;
				this.useTime = 90;
				this.UseSound = new SoundStyle?(SoundID.Item151);
				this.useAnimation = 90;
				this.rare = 1;
				this.value = 50000;
				this.shoot = 754;
				return;
			case 4263:
				this.useTurn = true;
				this.width = 20;
				this.height = 20;
				this.useStyle = 4;
				this.useTime = 90;
				this.UseSound = new SoundStyle?(SoundID.Item6);
				this.useAnimation = 90;
				this.rare = 1;
				this.value = 50000;
				return;
			case 4264:
				this.useStyle = 4;
				this.channel = true;
				this.width = 34;
				this.height = 34;
				this.UseSound = new SoundStyle?(SoundID.Item25);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 8;
				this.noMelee = true;
				this.mountType = 17;
				this.value = Item.sellPrice(0, 10, 0, 0);
				return;
			case 4265:
				this.DefaultToPlaceableTile(467, 9);
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 3, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4266:
				this.DefaultToPlaceableTile(468, 9);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4267:
				this.DefaultToPlaceableTile(467, 10);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4268:
				this.DefaultToPlaceableTile(468, 10);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4269:
				this.mana = 10;
				this.damage = 35;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 755;
				this.buffType = 213;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item83);
				this.useAnimation = 36;
				this.useTime = 36;
				this.rare = 4;
				this.noMelee = true;
				this.knockBack = 3f;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			case 4270:
				this.mana = 20;
				this.damage = 34;
				this.useStyle = 4;
				this.shootSpeed = 32f;
				this.shoot = 756;
				this.width = 26;
				this.height = 28;
				this.useAnimation = 33;
				this.useTime = 11;
				this.rare = 4;
				this.noMelee = true;
				this.knockBack = 1f;
				this.value = Item.sellPrice(0, 4, 0, 0);
				this.magic = true;
				this.autoReuse = true;
				return;
			case 4271:
				this.useStyle = 4;
				this.width = 22;
				this.height = 14;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 2;
				return;
			case 4272:
				this.noMelee = true;
				this.useStyle = 5;
				this.useAnimation = 40;
				this.useTime = 40;
				this.knockBack = 6.5f;
				this.width = 30;
				this.height = 10;
				this.damage = 55;
				this.scale = 1.1f;
				this.noUseGraphic = true;
				this.shoot = 757;
				this.shootSpeed = 15.9f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 4;
				this.value = Item.sellPrice(0, 4, 0, 0);
				this.melee = true;
				this.channel = true;
				return;
			case 4273:
				this.mana = 10;
				this.damage = 11;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 758;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item44);
				this.useAnimation = 36;
				this.useTime = 36;
				this.noMelee = true;
				this.knockBack = 5f;
				this.buffType = 214;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.rare = 3;
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			case 4274:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.noUseGraphic = true;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				this.makeNPC = 592;
				return;
			case 4275:
				this.width = 18;
				this.height = 18;
				this.headSlot = 221;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				this.vanity = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 505;
				this.width = 12;
				this.height = 12;
				return;
			case 4276:
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 506;
				this.width = 20;
				this.height = 20;
				return;
			case 4277:
				this.DefaultToPlaceableTile(507, 0);
				return;
			case 4278:
				this.DefaultToPlaceableTile(508, 0);
				return;
			case 4279:
				this.DefaultToPlaceableWall(242);
				return;
			case 4280:
				this.DefaultToPlaceableWall(243);
				return;
			case 4281:
				this.mana = 10;
				this.damage = 7;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 759;
				this.buffType = 216;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item44);
				this.useAnimation = 36;
				this.useTime = 36;
				this.rare = 1;
				this.noMelee = true;
				this.knockBack = 4f;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			case 4298:
				this.DefaultToPlaceableTile(90, 38);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4299:
				this.DefaultToPlaceableTile(79, 38);
				this.SetShopValues(ItemRarityColor.White0, 2000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 20;
				return;
			case 4300:
				this.DefaultToPlaceableTile(101, 39);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4301:
				this.DefaultToPlaceableTile(88, 38);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4302:
				this.DefaultToPlaceableTile(100, 38);
				this.SetShopValues(ItemRarityColor.White0, 1500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4303:
				this.DefaultToPlaceableTile(33, 37);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.noWet = true;
				return;
			case 4304:
				this.DefaultToPlaceableTile(15, 43);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 30;
				return;
			case 4305:
				this.DefaultToPlaceableTile(34, 44);
				this.SetShopValues(ItemRarityColor.White0, 3000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 4306:
				this.DefaultToPlaceableTile(104, 39);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4307:
				this.DefaultToPlaceableTile(10, 43);
				this.SetShopValues(ItemRarityColor.White0, 200);
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 4308:
				this.DefaultToPlaceableTile(93, 38);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 10;
				this.height = 24;
				return;
			case 4309:
				this.DefaultToPlaceableTile(42, 44);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 28;
				return;
			case 4310:
				this.DefaultToPlaceableTile(87, 38);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4311:
				this.DefaultToPlaceableTile(19, 42);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 4312:
				this.DefaultToPlaceableTile(172, 39);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4313:
				this.DefaultToPlaceableTile(89, 41);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4314:
				this.DefaultToPlaceableTile(469, 7);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 20;
				return;
			case 4315:
				this.DefaultToPlaceableTile(18, 39);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 14;
				return;
			case 4316:
				this.DefaultToPlaceableTile(497, 37);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 4317:
				this.SetShopValues(ItemRarityColor.LightRed4, Item.sellPrice(0, 2, 0, 0));
				this.SetWeaponValues(30, 7f, 0);
				this.melee = true;
				this.autoReuse = true;
				this.useTime = 11;
				this.useAnimation = 27;
				this.useStyle = 1;
				this.hammer = 80;
				this.axe = 30;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.width = 20;
				this.height = 20;
				return;
			case 4318:
				this.DefaultToPlaceableTile(509, 0);
				this.width = 22;
				this.height = 32;
				this.rare = 9;
				this.value = Item.sellPrice(0, 25, 0, 0);
				this.accessory = true;
				this.vanity = true;
				return;
			case 4319:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 510;
				this.width = 28;
				this.height = 28;
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 20, 0));
				return;
			case 4320:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 511;
				this.width = 28;
				this.height = 28;
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 20, 0));
				return;
			case 4321:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 214;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.buyPrice(0, 5, 0, 0);
				return;
			case 4322:
				this.width = 18;
				this.height = 18;
				this.legSlot = 188;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.buyPrice(0, 5, 0, 0);
				return;
			case 4323:
				this.width = 18;
				this.height = 18;
				this.headSlot = 222;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.buyPrice(0, 50, 0, 0);
				return;
			case 4324:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 215;
				this.value = Item.buyPrice(0, 50, 0, 0);
				this.rare = 3;
				this.vanity = true;
				return;
			case 4325:
				this.useStyle = 1;
				this.useAnimation = 8;
				this.useTime = 8;
				this.width = 24;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.shoot = 760;
				this.fishingPole = 25;
				this.shootSpeed = 15f;
				this.rare = 2;
				this.value = Item.sellPrice(0, 2, 0, 0);
				return;
			case 4326:
				this.DefaultToPlaceableTile(520, 0);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 4327:
			case 4328:
			case 4329:
			case 4330:
			case 4331:
			case 4332:
				this.DefaultToPlaceableTile((ushort)(type - 4327 + 521), 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4333:
				this.DefaultToPlaceableTile(527, 0);
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4334:
			case 4335:
			case 4336:
			case 4337:
			case 4338:
			case 4339:
				this.DefaultToCapturedCritter((int)((short)(type - 4334 + 595)));
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 10, 0));
				this.width = 20;
				this.height = 20;
				this.bait = 20;
				return;
			case 4340:
				this.DefaultToCapturedCritter(601);
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				this.width = 20;
				this.height = 20;
				this.bait = 50;
				return;
			case 4341:
				this.DefaultToAccessory(30, 30);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				return;
			case 4342:
				this.DefaultToPlaceableTile(105, 78);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 60));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4343:
				this.width = 22;
				this.height = 16;
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 10, 0));
				this.DefaultToThrownWeapon(761, 17, 5f, false);
				this.SetWeaponValues(4, 2f, 0);
				return;
			case 4344:
				this.width = 22;
				this.height = 16;
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 10, 0));
				this.DefaultToThrownWeapon(762, 17, 5f, false);
				this.SetWeaponValues(4, 2f, 0);
				return;
			case 4345:
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 5, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 12;
				return;
			case 4346:
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
				this.width = 30;
				this.height = 30;
				return;
			case 4347:
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 17, 0, 0));
				this.DefaultToMagicWeapon(876, 36, 15f, false);
				this.mana = 16;
				this.width = 40;
				this.height = 40;
				this.knockBack = 6f;
				this.scale = 0.75f;
				this.damage = 42;
				this.UseSound = new SoundStyle?(SoundID.Item158);
				return;
			case 4348:
				this.SetShopValues(ItemRarityColor.Pink5, Item.buyPrice(0, 50, 0, 0));
				this.DefaultToMagicWeapon(876, 36, 15f, false);
				this.mana = 16;
				this.width = 40;
				this.height = 40;
				this.knockBack = 6f;
				this.scale = 0.75f;
				this.damage = 100;
				this.UseSound = new SoundStyle?(SoundID.Item158);
				return;
			case 4349:
			case 4350:
			case 4351:
			case 4352:
			case 4353:
				this.DefaultToPlaceableTile(179 + type - 4349, 0);
				return;
			case 4354:
				this.DefaultToPlaceableTile(381, 0);
				this.rare = 1;
				return;
			case 4355:
				this.DefaultToPlaceableTile(531, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 60));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4356:
				this.DefaultToMusicBox(47);
				return;
			case 4357:
				this.DefaultToMusicBox(48);
				return;
			case 4358:
				this.DefaultToMusicBox(49);
				return;
			case 4359:
				this.DefaultToCapturedCritter(602);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 7, 50));
				this.width = 20;
				this.height = 20;
				return;
			case 4360:
				this.DefaultToPlaceableTile(105, 77);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 60));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4361:
				this.DefaultToCapturedCritter(604);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 10, 0));
				this.width = 20;
				this.height = 20;
				this.bait = 17;
				return;
			case 4362:
				this.DefaultToCapturedCritter(605);
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				this.width = 20;
				this.height = 20;
				this.bait = 50;
				return;
			case 4363:
				this.DefaultToCapturedCritter(606);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 5, 0));
				this.width = 12;
				this.height = 12;
				this.bait = 22;
				return;
			case 4364:
				this.DefaultToPlaceableTile(532, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4365:
				this.DefaultToVanitypet(764, 217);
				this.SetShopValues(ItemRarityColor.Pink5, Item.buyPrice(1, 0, 0, 0));
				return;
			case 4366:
				this.DefaultToVanitypet(765, 218);
				return;
			case 4367:
			case 4368:
			case 4369:
			case 4370:
			case 4371:
				this.DefaultTokite(type - 4367 + 766);
				return;
			case 4372:
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 1, 0, 0));
				this.DefaultToGuitar(24, 24);
				return;
			case 4373:
				this.DefaultToCapturedCritter(607);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 7, 50));
				this.width = 12;
				this.height = 12;
				return;
			case 4374:
				this.DefaultToCapturedCritter(608);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 7, 50));
				this.width = 12;
				this.height = 12;
				return;
			case 4375:
				this.DefaultToCapturedCritter(610);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 10, 0));
				this.width = 12;
				this.height = 12;
				return;
			case 4376:
				this.DefaultToPlaceableTile(533, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4377:
				this.DefaultToPlaceableTile(534, 0);
				this.rare = 1;
				return;
			case 4378:
				this.DefaultToPlaceableTile(536, 0);
				this.rare = 1;
				return;
			case 4379:
				this.DefaultTokite(771);
				return;
			case 4380:
				this.DefaultToPlaceableTile(538, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4381:
				this.DefaultToBow(19, 9f, true);
				this.SetWeaponValues(14, 3f, 0);
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.rare = 3;
				return;
			case 4382:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = new SoundStyle?(SoundID.Item92);
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 2;
				return;
			case 4383:
				this.DefaultToTorch(16, false);
				return;
			case 4384:
				this.DefaultToTorch(17, true);
				return;
			case 4385:
				this.DefaultToTorch(18, false);
				return;
			case 4386:
				this.DefaultToTorch(19, false);
				return;
			case 4387:
				this.DefaultToTorch(20, false);
				return;
			case 4388:
				this.DefaultToTorch(21, false);
				return;
			case 4389:
				this.DefaultToPlaceableTile(539, 0);
				this.rare = 1;
				return;
			case 4390:
				this.DefaultToPlaceableTile(484, 0);
				return;
			case 4391:
				this.DefaultToPlaceableTile(162, 0);
				return;
			case 4392:
				this.DefaultToPlaceableTile(541, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 10, 0));
				return;
			case 4393:
			case 4394:
				this.DefaultToQuestFish();
				return;
			case 4395:
				this.DefaultToCapturedCritter(611);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 10, 0));
				this.width = 12;
				this.height = 12;
				return;
			case 4396:
				this.DefaultToPlaceableTile(542, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4397:
				this.DefaultToPlaceableTile(105, 76);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 60));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4398:
				this.DefaultToPlaceableTile(543, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				this.value = Item.sellPrice(0, 0, 20, 0);
				return;
			case 4399:
				this.DefaultToPlaceableTile(544, 0);
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4400:
				this.useStyle = 1;
				this.shootSpeed = 7f;
				this.shoot = 772;
				this.width = 22;
				this.height = 22;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.noUseGraphic = true;
				this.useTime = 15;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 5, 0);
				this.consumable = true;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4401:
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 7, 50));
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 4402:
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 50, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 4404:
				this.DefaultToAccessory(20, 12);
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 1, 0, 0));
				this.hasVanityEffects = true;
				return;
			case 4405:
			case 4406:
			case 4407:
			case 4408:
				this.DefaultToPlaceableTile(376, 18 + type - 4405);
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 1, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4409:
				this.DefaultToAccessory(28, 24);
				this.faceSlot = 14;
				this.SetShopValues(ItemRarityColor.Pink5, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4410:
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 1, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 32;
				this.height = 22;
				return;
			case 4412:
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 22;
				this.height = 22;
				return;
			case 4413:
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 3, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 22;
				this.height = 22;
				return;
			case 4414:
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 15, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 22;
				this.height = 22;
				return;
			case 4415:
				this.DefaultToPlaceableTile(10, 44);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 40));
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 4416:
				this.DefaultToPlaceableTile(19, 43);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 4417:
				this.DefaultToPlaceableTile(207, 9);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 4, 0, 0));
				this.width = 8;
				this.height = 10;
				return;
			case 4418:
				this.DefaultToCapturedCritter(612);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 10, 0));
				this.width = 20;
				this.height = 20;
				this.bait = 17;
				return;
			case 4419:
				this.DefaultToCapturedCritter(613);
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				this.width = 20;
				this.height = 20;
				this.bait = 50;
				return;
			case 4420:
				this.DefaultToPlaceableTile(545, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 5, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4421:
				this.DefaultToMusicBox(50);
				return;
			case 4422:
				this.DefaultToPlaceableTile(546, 0);
				return;
			case 4423:
				this.useStyle = 1;
				this.shootSpeed = 5f;
				this.shoot = 773;
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.consumable = true;
				this.useAnimation = 25;
				this.noUseGraphic = true;
				this.useTime = 25;
				this.value = Item.sellPrice(0, 0, 3, 0);
				this.rare = 1;
				return;
			case 4424:
				this.DefaultToPlaceableWall(245);
				return;
			case 4425:
				this.DefaultToVanitypet(774, 219);
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4426:
				this.DefaultToMount(18);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4427:
				this.DefaultToMount(19);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				return;
			case 4428:
				this.DefaultToMount(20);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4429:
				this.DefaultToMount(21);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				return;
			case 4430:
				this.DefaultToPlaceableTile(547, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4431:
				this.DefaultToPlaceableTile(547, 1);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4432:
				this.DefaultToPlaceableTile(547, 2);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4433:
				this.DefaultToPlaceableTile(547, 3);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4434:
				this.DefaultToPlaceableTile(547, 4);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4435:
				this.DefaultToPlaceableTile(548, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4436:
				this.DefaultToPlaceableTile(548, 1);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4437:
				this.DefaultToPlaceableTile(548, 2);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4438:
				this.DefaultToPlaceableTile(548, 3);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4439:
				this.DefaultToPlaceableTile(548, 4);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4440:
				this.DefaultToPlaceableTile(548, 5);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4441:
				this.DefaultToPlaceableTile(548, 6);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4442:
				this.useStyle = 1;
				this.useAnimation = 8;
				this.useTime = 8;
				this.width = 24;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.shoot = 775;
				this.fishingPole = 30;
				this.shootSpeed = 15f;
				this.rare = 1;
				this.value = Item.sellPrice(0, 2, 0, 0);
				return;
			case 4443:
				this.DefaultToMount(22);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4444:
				this.useStyle = 4;
				this.channel = true;
				this.width = 34;
				this.height = 34;
				this.UseSound = new SoundStyle?(SoundID.Item25);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 8;
				this.noMelee = true;
				this.mountType = 23;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.expert = true;
				return;
			case 4445:
				this.damage = 50;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 4f;
				this.value = Item.buyPrice(0, 0, 7, 50);
				this.ranged = true;
				return;
			case 4446:
				this.damage = 50;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 4f;
				this.value = Item.buyPrice(0, 0, 15, 0);
				this.ranged = true;
				return;
			case 4447:
				this.damage = 40;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 4f;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.ranged = true;
				return;
			case 4448:
				this.damage = 40;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 4f;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.ranged = true;
				return;
			case 4449:
				this.damage = 40;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 4f;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.ranged = true;
				return;
			case 4450:
				this.DefaultToMount(24);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4451:
				this.DefaultToMount(25);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4452:
				this.DefaultToMount(26);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4453:
				this.DefaultToMount(27);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4454:
				this.DefaultToMount(28);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4455:
				this.DefaultToMount(29);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4456:
				this.DefaultToMount(30);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4457:
				this.damage = 75;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 4f;
				this.value = Item.buyPrice(0, 0, 5, 0);
				this.ranged = true;
				return;
			case 4458:
				this.damage = 75;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 4f;
				this.value = Item.buyPrice(0, 0, 10, 0);
				this.ranged = true;
				return;
			case 4459:
				this.damage = 40;
				this.width = 20;
				this.height = 14;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Rocket;
				this.knockBack = 4f;
				this.value = Item.buyPrice(0, 0, 50, 0);
				this.ranged = true;
				return;
			case 4460:
				this.tileWand = 169;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.createTile = 552;
				this.width = 8;
				this.height = 10;
				this.rare = 1;
				this.value = Item.sellPrice(0, 1, 0, 0);
				return;
			case 4461:
				this.DefaultToPlaceableTile(550, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4462:
				this.DefaultToPlaceableTile(551, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4463:
				this.autoReuse = false;
				this.useStyle = 13;
				this.useAnimation = 21;
				this.useTime = 7;
				this.width = 50;
				this.height = 18;
				this.shoot = 802;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.damage = 15;
				this.shootSpeed = 2.4f;
				this.noMelee = true;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 30, 0));
				this.melee = true;
				this.knockBack = 3f;
				this.noUseGraphic = true;
				return;
			case 4464:
				this.DefaultToCapturedCritter(616);
				this.value = Item.sellPrice(0, 0, 10, 0);
				return;
			case 4465:
				this.DefaultToCapturedCritter(617);
				this.value = Item.sellPrice(0, 0, 10, 0);
				return;
			case 4466:
				this.DefaultToPlaceableTile(105, 79);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 60));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4467:
				this.DefaultToMount(31);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4468:
				this.DefaultToMount(32);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 4, 0, 0));
				return;
			case 4469:
				this.DefaultToMount(33);
				this.SetShopValues(ItemRarityColor.StrongRed10, Item.sellPrice(0, 10, 0, 0));
				return;
			case 4470:
				this.DefaultToMount(34);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4471:
				this.DefaultToMount(35);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4472:
				this.DefaultToMount(36);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4473:
				this.DefaultToPlaceableTile(553, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4474:
				this.DefaultToPlaceableTile(554, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4475:
				this.DefaultToPlaceableTile(555, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4476:
				this.DefaultToPlaceableTile(556, 0);
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				return;
			case 4477:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 257;
				this.buffTime = 18000;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4478:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 257;
				this.buffTime = 36000;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 5, 0, 0));
				return;
			case 4479:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 257;
				this.buffTime = 54000;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 25, 0, 0));
				return;
			case 4480:
				this.DefaultToCapturedCritter(626);
				this.value = Item.sellPrice(0, 0, 15, 0);
				return;
			case 4481:
				this.DefaultToPlaceableTile(558, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4482:
				this.DefaultToCapturedCritter(627);
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				return;
			case 4483:
				this.DefaultToPlaceableTile(559, 0);
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.rare = 3;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4484:
			case 4485:
				this.mech = true;
				this.noWet = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 144;
				this.placeStyle = type - 4484 + 3;
				this.width = 10;
				this.height = 12;
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 2, 0, 0));
				return;
			case 4486:
			case 4487:
			case 4488:
			case 4489:
			case 4490:
			case 4491:
			case 4492:
			case 4493:
			case 4494:
			case 4495:
			case 4496:
			case 4497:
			case 4498:
			case 4499:
			case 4500:
			case 4501:
			case 4502:
			case 4503:
				this.DefaultToPlaceableWall((int)((ushort)(246 + type - 4486)));
				return;
			case 4504:
			case 4505:
				this.DefaultToPlaceableWall((int)((ushort)(264 + type - 4504)));
				this.value = 250;
				return;
			case 4506:
			case 4507:
				this.DefaultToPlaceableWall((int)((ushort)(266 + type - 4506)));
				return;
			case 4508:
				this.DefaultToPlaceableWall((int)((ushort)(268 + type - 4508)));
				this.value = 250;
				return;
			case 4509:
			case 4510:
			case 4511:
				this.DefaultToPlaceableWall((int)((ushort)(269 + type - 4509)));
				return;
			case 4512:
				this.DefaultToPlaceableWall(274);
				return;
			case 4513:
			case 4514:
			case 4515:
			case 4516:
			case 4517:
			case 4518:
			case 4519:
			case 4520:
			case 4521:
			case 4522:
			case 4523:
			case 4524:
			case 4525:
			case 4526:
			case 4527:
			case 4528:
			case 4529:
			case 4530:
			case 4531:
			case 4532:
			case 4533:
			case 4534:
			case 4535:
			case 4536:
			case 4537:
			case 4538:
			case 4539:
			case 4540:
				this.DefaultToPlaceableWall((int)((ushort)(276 + type - 4513)));
				return;
			case 4541:
			case 4542:
			case 4543:
			case 4544:
			case 4545:
			case 4546:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 288 + (type - 4541);
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				this.rare = 1;
				return;
			case 4547:
				this.DefaultToPlaceableTile(563, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 20));
				return;
			case 4548:
				this.DefaultToPlaceableWall(313);
				return;
			case 4549:
				this.width = 18;
				this.height = 18;
				this.headSlot = 223;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4550:
				this.DefaultToVanitypet(825, 262);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(1, 0, 0, 0));
				return;
			case 4551:
				this.DefaultToVanitypet(821, 261);
				return;
			case 4552:
				this.DefaultToPlaceableTile(565, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 4, 0, 0));
				return;
			case 4553:
				this.DefaultToPlaceableTile(564, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
				return;
			case 4554:
				this.DefaultToPlaceableTile(561, 0);
				return;
			case 4555:
				this.width = 18;
				this.height = 18;
				this.headSlot = 227;
				this.rare = 0;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4556:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 216;
				this.rare = 0;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4557:
				this.width = 18;
				this.height = 18;
				this.legSlot = 190;
				this.rare = 0;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4558:
				this.width = 18;
				this.height = 18;
				this.headSlot = 228;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.buyPrice(0, 2, 0, 0);
				return;
			case 4559:
				this.width = 18;
				this.height = 18;
				this.headSlot = 229;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.buyPrice(0, 2, 0, 0);
				return;
			case 4560:
				this.width = 18;
				this.height = 18;
				this.headSlot = 224;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 3, 0, 0);
				return;
			case 4561:
				this.width = 18;
				this.height = 18;
				this.headSlot = 225;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4562:
				this.width = 18;
				this.height = 18;
				this.headSlot = 226;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4563:
				this.DefaultToAccessory(18, 18);
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				this.hasVanityEffects = true;
				return;
			case 4564:
				this.DefaultToPlaceableTile(562, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 1, 0));
				return;
			case 4565:
				this.DefaultToPlaceableWall(312);
				return;
			case 4566:
				this.DefaultToPlaceableTile(90, 39);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4567:
				this.DefaultToPlaceableTile(79, 39);
				this.SetShopValues(ItemRarityColor.White0, 2000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 20;
				return;
			case 4568:
				this.DefaultToPlaceableTile(101, 40);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4569:
				this.DefaultToPlaceableTile(88, 39);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4570:
				this.DefaultToPlaceableTile(100, 39);
				this.SetShopValues(ItemRarityColor.White0, 1500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4571:
				this.DefaultToPlaceableTile(33, 38);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.noWet = true;
				return;
			case 4572:
				this.DefaultToPlaceableTile(15, 44);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 30;
				return;
			case 4573:
				this.DefaultToPlaceableTile(34, 45);
				this.SetShopValues(ItemRarityColor.White0, 3000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 4574:
				this.DefaultToPlaceableTile(467, 11);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4575:
				this.DefaultToPlaceableTile(104, 40);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4576:
				this.DefaultToPlaceableTile(10, 45);
				this.SetShopValues(ItemRarityColor.White0, 200);
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 4577:
				this.DefaultToPlaceableTile(93, 39);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 10;
				this.height = 24;
				return;
			case 4578:
				this.DefaultToPlaceableTile(42, 45);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 28;
				return;
			case 4579:
				this.DefaultToPlaceableTile(87, 39);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4580:
				this.DefaultToPlaceableTile(19, 44);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 4581:
				this.DefaultToPlaceableTile(172, 40);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4582:
				this.DefaultToPlaceableTile(89, 42);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4583:
				this.DefaultToPlaceableTile(469, 8);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 20;
				return;
			case 4584:
				this.DefaultToPlaceableTile(18, 40);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 14;
				return;
			case 4585:
				this.DefaultToPlaceableTile(468, 11);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4586:
				this.DefaultToPlaceableTile(497, 38);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 4587:
			case 4588:
			case 4589:
			case 4590:
				this.DefaultToGolfClub(20, 20);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 10, 0));
				return;
			case 4591:
			case 4592:
			case 4593:
			case 4594:
				this.DefaultToGolfClub(20, 20);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4595:
			case 4596:
			case 4597:
			case 4598:
				this.DefaultToGolfClub(20, 20);
				this.SetShopValues(ItemRarityColor.LightRed4, Item.buyPrice(0, 25, 0, 0));
				return;
			case 4599:
			case 4600:
			case 4601:
				this.DefaultToPlaceableTile(560, type - 4599);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 1, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4602:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 294;
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				this.rare = 1;
				return;
			case 4603:
				this.DefaultToVanitypet(815, 258);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(1, 0, 0, 0));
				return;
			case 4604:
				this.DefaultToVanitypet(816, 259);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(1, 0, 0, 0));
				return;
			case 4605:
				this.DefaultToVanitypet(817, 260);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(1, 0, 0, 0));
				return;
			case 4606:
				this.DefaultToMusicBox(51);
				return;
			case 4607:
				this.mana = 10;
				this.damage = 41;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 831;
				this.buffType = 263;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item44);
				this.useAnimation = 36;
				this.useTime = 36;
				this.rare = 8;
				this.noMelee = true;
				this.knockBack = 4f;
				this.value = Item.sellPrice(0, 20, 0, 0);
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			case 4608:
				this.useStyle = 1;
				this.shootSpeed = 7f;
				this.shoot = 820;
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 19;
				this.useTime = 19;
				this.noMelee = true;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 5, 0));
				return;
			case 4609:
				this.DefaultToPlaceableTile(567, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4610:
				this.DefaultTokite(822);
				return;
			case 4611:
				this.DefaultTokite(823);
				return;
			case 4612:
				this.DefaultTokite(824);
				return;
			case 4613:
				this.DefaultTokite(826);
				return;
			case 4626:
			case 4627:
			case 4628:
			case 4629:
			case 4630:
			case 4631:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 63 + (type - 4626);
				return;
			case 4632:
			case 4633:
			case 4634:
			case 4635:
			case 4636:
			case 4637:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 37 + (type - 4632);
				return;
			case 4638:
			case 4639:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 245;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 7 + (type - 4638);
				return;
			case 4640:
				this.DefaultToPlaceableTile(67, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 1, 0));
				return;
			case 4641:
				this.DefaultToPlaceableTile(66, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 1, 0));
				return;
			case 4642:
				this.DefaultToPlaceableTile(63, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 1, 0));
				return;
			case 4643:
				this.DefaultToPlaceableTile(65, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 1, 0));
				return;
			case 4644:
				this.DefaultToPlaceableTile(64, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 1, 0));
				return;
			case 4645:
				this.DefaultToPlaceableTile(68, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 1, 0));
				return;
			case 4646:
				this.DefaultToPlaceableTile(566, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 1, 0));
				return;
			case 4647:
				this.DefaultToPlaceableWall(314);
				return;
			case 4648:
			case 4649:
			case 4650:
			case 4651:
				this.DefaultTokite(827 + (type - 4648));
				return;
			case 4652:
				this.width = 18;
				this.height = 18;
				this.headSlot = 230;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4653:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 217;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4654:
				this.width = 18;
				this.height = 18;
				this.legSlot = 191;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4655:
				this.DefaultToPlaceableTile(568, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4656:
				this.DefaultToPlaceableTile(569, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4657:
				this.DefaultToPlaceableTile(570, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 4658:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 43;
				return;
			case 4659:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 245;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 9;
				return;
			case 4660:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 69;
				return;
			case 4661:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 246;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 19;
				return;
			case 4662:
			case 4663:
			case 4778:
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.sellPrice(0, 1, 50, 0);
				this.rare = 3;
				return;
			case 4664:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 218;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.buyPrice(0, 20, 0, 0);
				return;
			case 4665:
				this.width = 18;
				this.height = 18;
				this.legSlot = 193;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.buyPrice(0, 20, 0, 0);
				return;
			case 4666:
				this.width = 18;
				this.height = 18;
				this.headSlot = 232;
				this.rare = 3;
				this.vanity = true;
				this.value = Item.buyPrice(0, 15, 0, 0);
				return;
			case 4667:
				this.DefaultToPlaceableWall(315);
				return;
			case 4668:
				this.paintCoating = 1;
				this.width = 24;
				this.height = 24;
				this.value = Item.buyPrice(0, 0, 2, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4669:
				this.DefaultTokite(838);
				return;
			case 4670:
				this.DefaultTokite(839);
				return;
			case 4671:
				this.DefaultTokite(840);
				return;
			case 4672:
				this.DefaultToWhip(841, 14, 1f, 4f, 30);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4673:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 12;
				this.useTime = 12;
				this.width = 16;
				this.height = 16;
				this.scale = 1f;
				this.value = Item.buyPrice(0, 0, 50, 0);
				return;
			case 4674:
				this.DefaultTokite(843);
				return;
			case 4675:
				this.DefaultTokite(844);
				return;
			case 4676:
				this.DefaultTokite(845);
				this.value = Item.buyPrice(0, 2, 0, 0);
				return;
			case 4677:
				this.DefaultTokite(846);
				return;
			case 4678:
				this.DefaultToWhip(847, 55, 2f, 4f, 28);
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 4, 60, 0));
				return;
			case 4679:
				this.DefaultToWhip(848, 165, 11f, 4f, 35);
				this.SetShopValues(ItemRarityColor.Yellow8, Item.sellPrice(0, 6, 0, 0));
				this.crit = 10;
				return;
			case 4680:
				this.DefaultToWhip(849, 100, 3f, 4f, 27);
				this.SetShopValues(ItemRarityColor.Yellow8, Item.sellPrice(0, 10, 0, 0));
				return;
			case 4681:
				this.DefaultTokite(850);
				this.value = Item.buyPrice(0, 2, 0, 0);
				return;
			case 4682:
				this.width = 20;
				this.height = 24;
				this.DefaultToThrownWeapon(851, 25, 4f, false);
				this.value = Item.buyPrice(0, 0, 1, 0);
				this.ranged = false;
				this.noUseGraphic = true;
				return;
			case 4683:
				this.DefaultTokite(852);
				return;
			case 4684:
				this.DefaultTokite(853);
				return;
			case 4685:
				this.width = 18;
				this.height = 18;
				this.headSlot = 231;
				this.vanity = true;
				this.value = Item.buyPrice(0, 10, 0, 0);
				return;
			case 4686:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 219;
				this.vanity = true;
				this.value = Item.buyPrice(0, 10, 0, 0);
				return;
			case 4687:
			case 4688:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 295 + (type - 4687);
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				this.rare = 1;
				return;
			case 4689:
			case 4690:
			case 4691:
			case 4692:
			case 4693:
			case 4694:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 215;
				this.placeStyle = 8 + type - 4689;
				this.width = 12;
				this.height = 12;
				return;
			case 4695:
			case 4696:
			case 4697:
			case 4698:
			case 4699:
			case 4700:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 572;
				this.placeStyle = type - 4695;
				this.width = 12;
				this.height = 28;
				if (type >= 4695 && type <= 4697)
				{
					this.value = 1000;
					return;
				}
				this.value = 40000;
				return;
			case 4701:
				this.DefaultToVanitypet(854, 264);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 50, 0, 0));
				return;
			case 4702:
				this.width = 20;
				this.height = 24;
				this.DefaultToThrownWeapon(855, 25, 4f, false);
				this.value = Item.buyPrice(0, 0, 1, 0);
				this.ranged = false;
				this.noUseGraphic = true;
				return;
			case 4703:
				this.DefaultToRangedWeapon(14, AmmoID.Bullet, 55, 7f, false);
				this.knockBack = 6.5f;
				this.width = 50;
				this.height = 14;
				this.UseSound = new SoundStyle?(SoundID.Item36);
				this.damage = 14;
				this.value = Item.buyPrice(0, 35, 0, 0);
				this.rare = 3;
				return;
			case 4704:
				this.width = 18;
				this.height = 18;
				this.headSlot = 233;
				this.vanity = true;
				this.value = Item.buyPrice(0, 10, 0, 0);
				return;
			case 4705:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 220;
				this.vanity = true;
				this.value = Item.buyPrice(0, 10, 0, 0);
				return;
			case 4706:
				this.width = 18;
				this.height = 18;
				this.legSlot = 197;
				this.vanity = true;
				this.value = Item.buyPrice(0, 10, 0, 0);
				return;
			case 4707:
				this.width = 44;
				this.height = 44;
				this.rare = 2;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.holdStyle = 2;
				this.useStyle = 3;
				this.useAnimation = 22;
				this.useTime = 22;
				this.damage = 15;
				this.knockBack = 5f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.melee = true;
				return;
			case 4708:
				this.width = 18;
				this.height = 18;
				this.headSlot = 234;
				this.vanity = true;
				this.value = Item.buyPrice(0, 10, 0, 0);
				return;
			case 4709:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 221;
				this.vanity = true;
				this.value = Item.buyPrice(0, 10, 0, 0);
				return;
			case 4710:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 573;
				this.width = 28;
				this.height = 28;
				return;
			case 4711:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 22;
				this.useTime = 14;
				this.autoReuse = true;
				this.width = 24;
				this.height = 28;
				this.damage = 12;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.knockBack = 3.5f;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.melee = true;
				return;
			case 4712:
				this.DefaultToPlaceableTile(467, 12);
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 25, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4713:
				this.DefaultToPlaceableTile(468, 12);
				this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 5, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 4714:
				this.width = 14;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 8;
				return;
			case 4715:
				this.SetShopValues(ItemRarityColor.Pink5, Item.buyPrice(0, 50, 0, 0));
				this.DefaultToGuitar(24, 24);
				this.useAnimation = (this.useTime = 12);
				this.useTime /= 2;
				this.shoot = 856;
				this.damage = 85;
				this.magic = true;
				this.shootSpeed = 1f;
				this.crit = 20;
				this.knockBack = 1.5f;
				this.mana = 12;
				this.noMelee = true;
				return;
			case 4716:
				this.useStyle = 4;
				this.channel = true;
				this.width = 34;
				this.height = 34;
				this.UseSound = new SoundStyle?(SoundID.Item43);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 8;
				this.noMelee = true;
				this.mountType = 37;
				this.value = Item.buyPrice(0, 20, 0, 0);
				return;
			case 4717:
			case 4718:
			case 4719:
			case 4720:
			case 4721:
				this.DefaultToPlaceableTile(574 + type - 4717, 0);
				return;
			case 4722:
				this.useStyle = 5;
				this.width = 24;
				this.height = 24;
				this.noUseGraphic = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.autoReuse = true;
				this.melee = true;
				this.channel = true;
				this.noMelee = true;
				this.shoot = 857;
				this.useAnimation = 35;
				this.useTime = this.useAnimation / 5;
				this.shootSpeed = 16f;
				this.damage = 190;
				this.knockBack = 6.5f;
				this.value = Item.sellPrice(0, 20, 0, 0);
				this.crit = 10;
				this.rare = 10;
				this.glowMask = 271;
				return;
			case 4723:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 70;
				return;
			case 4724:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 71;
				return;
			case 4725:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 44;
				return;
			case 4726:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 245;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 10;
				return;
			case 4727:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 245;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 11;
				return;
			case 4728:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 245;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 12;
				return;
			case 4729:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 246;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 20;
				return;
			case 4730:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.rare = 9;
				this.wingSlot = 40;
				this.value = 400000;
				return;
			case 4731:
				this.DefaultToPlaceableTile(497, 39);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				this.rare = 8;
				return;
			case 4732:
				this.width = 18;
				this.height = 18;
				this.headSlot = 235;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4733:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 222;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4734:
				this.width = 18;
				this.height = 18;
				this.legSlot = 203;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4735:
				this.DefaultToVanitypet(858, 266);
				this.value = Item.buyPrice(0, 50, 0, 0);
				return;
			case 4736:
				this.DefaultToVanitypet(859, 267);
				this.value = Item.buyPrice(0, 30, 0, 0);
				return;
			case 4737:
				this.DefaultToVanitypet(860, 268);
				return;
			case 4738:
				this.width = 18;
				this.height = 18;
				this.headSlot = 236;
				this.rare = 2;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4739:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 223;
				this.rare = 2;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4740:
				this.width = 18;
				this.height = 18;
				this.headSlot = 237;
				this.rare = 2;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4741:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 224;
				this.rare = 2;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4742:
				this.width = 18;
				this.height = 18;
				this.legSlot = 205;
				this.rare = 2;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4743:
				this.useStyle = 1;
				this.shootSpeed = 11f;
				this.shoot = 861;
				this.damage = 0;
				this.width = 10;
				this.height = 10;
				this.maxStack = 1;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.useTime = 15;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = 20;
				return;
			case 4744:
				this.DefaultToAccessory(26, 36);
				this.backSlot = 24;
				this.frontSlot = 8;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 3, 0, 0));
				this.vanity = true;
				return;
			case 4745:
				this.DefaultToMount(38);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 20, 0));
				return;
			case 4746:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.rare = 9;
				this.wingSlot = 41;
				this.value = 400000;
				return;
			case 4747:
				this.width = 18;
				this.height = 18;
				this.headSlot = 238;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4748:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 225;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4749:
				this.width = 18;
				this.height = 18;
				this.legSlot = 208;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4750:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.rare = 9;
				this.wingSlot = 42;
				this.value = 400000;
				return;
			case 4751:
				this.width = 18;
				this.height = 18;
				this.headSlot = 239;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4752:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 226;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4753:
				this.width = 18;
				this.height = 18;
				this.legSlot = 209;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4754:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.rare = 9;
				this.wingSlot = 43;
				this.value = 400000;
				return;
			case 4755:
				this.width = 18;
				this.height = 18;
				this.headSlot = 240;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4756:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 227;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4757:
				this.width = 18;
				this.height = 18;
				this.legSlot = 210;
				this.rare = 9;
				this.vanity = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4758:
				this.mana = 10;
				this.damage = 6;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 864;
				this.buffType = 271;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item44);
				this.useAnimation = 36;
				this.useTime = 36;
				this.rare = 5;
				this.noMelee = true;
				this.knockBack = 0f;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			case 4759:
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 11.5f;
				this.shoot = 865;
				this.width = 18;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 1;
				this.noMelee = true;
				this.value = 20000;
				return;
			case 4760:
				this.damage = 80;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 866;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 36;
				this.useTime = 36;
				this.rare = 5;
				this.noMelee = true;
				this.knockBack = 2f;
				this.value = Item.buyPrice(0, 35, 0, 0);
				this.melee = true;
				this.noUseGraphic = true;
				return;
			case 4761:
				this.width = 12;
				this.height = 12;
				this.headSlot = 241;
				this.rare = 3;
				this.vanity = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 579;
				return;
			case 4762:
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.vanity = true;
				this.rare = 1;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.hasVanityEffects = true;
				return;
			case 4763:
				this.DefaultToMount(39);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 50, 0, 0));
				return;
			case 4764:
				this.noMelee = true;
				this.useStyle = 1;
				this.shootSpeed = 10.5f;
				this.shoot = 867;
				this.damage = 23;
				this.knockBack = 7f;
				this.width = 14;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.noUseGraphic = true;
				this.rare = 1;
				this.value = 30000;
				this.melee = true;
				return;
			case 4765:
			case 4766:
				this.DefaultToThrownWeapon(type - 4765 + 868, 20, 8f, false);
				this.UseSound = new SoundStyle?(SoundID.Item106);
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 3, 0, 0));
				this.width = 18;
				this.height = 18;
				return;
			case 4767:
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
				this.width = 30;
				this.height = 30;
				return;
			case 4768:
				this.width = 18;
				this.height = 18;
				this.headSlot = 242;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 3, 0, 0);
				return;
			case 4769:
				this.DefaultToAccessory(18, 18);
				this.backSlot = 25;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 3, 0, 0);
				return;
			case 4770:
				this.width = 18;
				this.height = 18;
				this.headSlot = 243;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 3, 0, 0);
				return;
			case 4771:
				this.DefaultToAccessory(18, 18);
				this.backSlot = 26;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 3, 0, 0);
				return;
			case 4772:
				this.width = 18;
				this.height = 18;
				this.headSlot = 244;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 3, 0, 0);
				return;
			case 4773:
				this.DefaultToAccessory(18, 18);
				this.backSlot = 27;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 3, 0, 0);
				return;
			case 4774:
				this.width = 18;
				this.height = 18;
				this.headSlot = 245;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 4775:
				this.DefaultToAccessory(18, 18);
				this.backSlot = 28;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.buyPrice(0, 3, 0, 0);
				return;
			case 4776:
				this.color = new Color(255, 255, 255, 0);
				this.useStyle = 1;
				this.shootSpeed = 6f;
				this.shoot = 870;
				this.width = 12;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.useTime = 15;
				this.noMelee = true;
				this.rare = 1;
				this.value = Item.buyPrice(0, 0, 0, 75);
				this.holdStyle = 1;
				return;
			case 4777:
				this.DefaultToVanitypet(875, 274);
				this.value = Item.buyPrice(0, 50, 0, 0);
				return;
			case 4779:
				this.width = 18;
				this.height = 18;
				this.headSlot = 250;
				this.rare = 1;
				this.vanity = true;
				return;
			case 4780:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 228;
				this.rare = 1;
				this.vanity = true;
				return;
			case 4781:
				this.width = 18;
				this.height = 18;
				this.legSlot = 211;
				this.rare = 1;
				this.vanity = true;
				return;
			case 4782:
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 24;
				this.height = 24;
				this.rare = 6;
				this.expert = true;
				return;
			case 4783:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.rare = 1;
				this.placeStyle = 72;
				return;
			case 4784:
				this.width = 18;
				this.height = 18;
				this.headSlot = 251;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 75, 0);
				this.vanity = true;
				return;
			case 4785:
			case 4786:
			case 4787:
				this.useStyle = 4;
				this.channel = true;
				this.width = 34;
				this.height = 34;
				this.UseSound = new SoundStyle?(SoundID.Item76);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 8;
				this.noMelee = true;
				this.mountType = 40 + (type - 4785);
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4788:
				this.DefaultToSpear(877, 3.5f, 24);
				this.SetWeaponValues(60, 12f, 0);
				this.SetShopValues(ItemRarityColor.LightRed4, Item.buyPrice(0, 6, 0, 0));
				this.channel = true;
				return;
			case 4789:
				this.DefaultToSpear(878, 3.5f, 24);
				this.SetWeaponValues(130, 14f, 0);
				this.SetShopValues(ItemRarityColor.Yellow8, Item.sellPrice(0, 10, 0, 0));
				this.channel = true;
				return;
			case 4790:
				this.DefaultToSpear(879, 3.5f, 24);
				this.SetWeaponValues(90, 13f, 0);
				this.SetShopValues(ItemRarityColor.Pink5, 230000);
				this.channel = true;
				return;
			case 4791:
				this.useStyle = 4;
				this.channel = true;
				this.width = 10;
				this.height = 32;
				this.UseSound = new SoundStyle?(SoundID.Item25);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 8;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.mountType = 43;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4792:
			case 4793:
			case 4794:
			case 4795:
			case 4796:
				this.useStyle = 4;
				this.channel = true;
				this.width = 10;
				this.height = 32;
				this.UseSound = new SoundStyle?(SoundID.Item25);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = -13;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.mountType = 44 + type - 4792;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4797:
			case 4798:
			case 4799:
			case 4800:
			case 4801:
			case 4802:
			case 4803:
			case 4804:
			case 4805:
			case 4806:
			case 4807:
			case 4808:
			case 4809:
			case 4810:
			case 4811:
			case 4812:
			case 4813:
			case 4814:
			case 4815:
			case 4816:
			case 4817:
				this.DefaultToVanitypet(881 + type - 4797, 284 + type - 4797);
				this.value = Item.buyPrice(0, 25, 0, 0);
				this.rare = -13;
				return;
			case 4818:
				this.noMelee = true;
				this.useStyle = 1;
				this.shootSpeed = 8.5f;
				this.shoot = 902;
				this.damage = 25;
				this.knockBack = 3.5f;
				this.width = 14;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.useTime = 15;
				this.noUseGraphic = true;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 50, 0);
				this.melee = true;
				return;
			case 4819:
				this.useTurn = true;
				this.width = 20;
				this.height = 20;
				this.useStyle = 4;
				this.useTime = 90;
				this.UseSound = new SoundStyle?(SoundID.Item6);
				this.useAnimation = 90;
				this.SetShopValues(ItemRarityColor.LightRed4, Item.buyPrice(0, 5, 0, 0));
				return;
			case 4820:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 12;
				this.useTime = 5;
				this.width = 20;
				this.height = 20;
				this.autoReuse = true;
				this.rare = 7;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.tileBoost += 2;
				return;
			case 4821:
				this.useTurn = true;
				this.useStyle = 1;
				this.useTime = 21;
				this.useAnimation = 21;
				this.width = 24;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.autoReuse = true;
				this.rare = 3;
				this.scale = 0.85f;
				return;
			case 4822:
				this.DefaultToAccessory(34, 30);
				this.shoeSlot = 22;
				this.SetShopValues(ItemRarityColor.Orange3, Item.sellPrice(0, 2, 0, 0));
				this.vanity = true;
				return;
			case 4823:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.rare = 9;
				this.wingSlot = 44;
				this.value = Item.buyPrice(0, 40, 0, 0);
				return;
			case 4824:
			case 4825:
			case 4826:
			case 4827:
				this.useStyle = 1;
				this.shootSpeed = 5f;
				this.shoot = 903 + (type - 4824);
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.consumable = true;
				this.useAnimation = 25;
				this.noUseGraphic = true;
				this.useTime = 25;
				this.value = Item.sellPrice(0, 0, 5, 0);
				this.rare = 1;
				return;
			case 4828:
				this.useStyle = 4;
				this.channel = true;
				this.width = 10;
				this.height = 32;
				this.UseSound = new SoundStyle?(SoundID.Item25);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 8;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.mountType = 49;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4829:
			case 4830:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = new SoundStyle?(SoundID.Item92);
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 5, 0, 0));
				return;
			case 4831:
			case 4832:
			case 4833:
			case 4834:
			case 4835:
			case 4836:
			case 4837:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.noUseGraphic = true;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.makeNPC = (int)((short)(639 + (type - 4831)));
				return;
			case 4838:
			case 4839:
			case 4840:
			case 4841:
			case 4842:
			case 4843:
			case 4844:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.noUseGraphic = true;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.makeNPC = (int)((short)(646 + (type - 4838)));
				return;
			case 4845:
				this.DefaultToCapturedCritter(653);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 20, 0));
				this.width = 12;
				this.height = 12;
				this.bait = 15;
				return;
			case 4846:
				this.DefaultToPlaceableTile(580, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4847:
				this.DefaultToCapturedCritter(654);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 20, 0));
				this.width = 12;
				this.height = 12;
				this.bait = 25;
				return;
			case 4848:
				this.DefaultToPlaceableTile(581, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4849:
				this.DefaultToCapturedCritter(655);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				this.width = 12;
				this.height = 12;
				this.bait = 35;
				return;
			case 4850:
				this.DefaultToPlaceableTile(582, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4851:
				this.DefaultToPlaceableTile(590, 0);
				this.value = Item.sellPrice(0, 0, 7, 50);
				return;
			case 4852:
				this.DefaultToPlaceableTile(590, 1);
				this.value = Item.sellPrice(0, 0, 3, 75);
				return;
			case 4853:
				this.DefaultToPlaceableTile(590, 2);
				this.value = Item.sellPrice(0, 0, 11, 25);
				return;
			case 4854:
				this.DefaultToPlaceableTile(590, 3);
				this.value = Item.sellPrice(0, 0, 15, 0);
				return;
			case 4855:
				this.DefaultToPlaceableTile(590, 4);
				this.value = Item.sellPrice(0, 0, 22, 50);
				return;
			case 4856:
				this.DefaultToPlaceableTile(590, 5);
				this.value = Item.sellPrice(0, 0, 30, 0);
				return;
			case 4857:
				this.DefaultToPlaceableTile(590, 6);
				this.value = Item.sellPrice(0, 0, 30, 0);
				return;
			case 4858:
			case 4859:
			case 4860:
			case 4861:
			case 4862:
			case 4863:
			case 4864:
			case 4865:
			case 4866:
				this.DefaultToPlaceableTile(591, type - 4858);
				this.value = Item.sellPrice(0, 0, 25, 0);
				return;
			case 4867:
				this.DefaultToPlaceableTile(592, 0);
				this.value = Item.sellPrice(0, 0, 25, 0);
				return;
			case 4868:
			case 4869:
				this.DefaultToPlaceableTile(593 + (type - 4868), 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
				return;
			case 4870:
				this.UseSound = new SoundStyle?(SoundID.Item6);
				this.useStyle = 6;
				this.useTurn = true;
				this.useTime = (this.useAnimation = 30);
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.value = 1000;
				this.rare = 1;
				return;
			case 4871:
				this.DefaultToPlaceableTile(595, 0);
				this.value = Item.buyPrice(0, 1, 0, 0);
				return;
			case 4872:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 12;
				this.useTime = 5;
				this.width = 20;
				this.height = 20;
				this.autoReuse = true;
				this.rare = 7;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.tileBoost += 2;
				return;
			case 4873:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.headSlot = 254;
				this.rare = 5;
				this.value = 250000;
				return;
			case 4874:
				this.DefaultToAccessory(34, 30);
				this.shoeSlot = 23;
				this.SetShopValues(ItemRarityColor.Lime7, Item.sellPrice(0, 4, 0, 0));
				this.hasVanityEffects = true;
				return;
			case 4875:
				this.DefaultToPlaceableTile(597, 1);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4876:
				this.DefaultToPlaceableTile(597, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4877:
			case 4878:
				this.DefaultToPlaceableTile(376, 22 + type - 4877);
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 1, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4879:
				this.width = 12;
				this.height = 12;
				this.rare = 2;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.buyPrice(0, 2, 0, 0);
				return;
			case 4880:
				this.DefaultToPlaceableTile(598, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				this.value = Item.sellPrice(0, 0, 20, 0);
				return;
			case 4881:
				this.DefaultToAccessory(34, 30);
				this.SetShopValues(ItemRarityColor.Lime7, Item.sellPrice(0, 2, 0, 0));
				return;
			case 4882:
			case 4883:
			case 4884:
			case 4885:
			case 4886:
			case 4887:
			case 4888:
			case 4889:
			case 4890:
			case 4891:
			case 4892:
			case 4893:
			case 4894:
			case 4895:
				this.DefaultToPlaceableTile(599 + (type - 4882), 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4896:
				this.width = 18;
				this.height = 18;
				this.defense = 24;
				this.headSlot = 255;
				this.rare = 5;
				this.value = 250000;
				return;
			case 4897:
				this.width = 18;
				this.height = 18;
				this.defense = 9;
				this.headSlot = 256;
				this.rare = 5;
				this.value = 250000;
				return;
			case 4898:
				this.width = 18;
				this.height = 18;
				this.defense = 5;
				this.headSlot = 257;
				this.rare = 5;
				this.value = 250000;
				return;
			case 4899:
				this.width = 18;
				this.height = 18;
				this.defense = 1;
				this.headSlot = 258;
				this.rare = 5;
				this.value = 250000;
				return;
			case 4900:
				this.width = 18;
				this.height = 18;
				this.defense = 15;
				this.bodySlot = 229;
				this.rare = 5;
				this.value = 200000;
				return;
			case 4901:
				this.width = 18;
				this.height = 18;
				this.defense = 11;
				this.legSlot = 212;
				this.rare = 5;
				this.value = 150000;
				return;
			case 4902:
				this.DefaultToPlaceableTile(548, 7);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4903:
				this.DefaultToPlaceableTile(548, 8);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4904:
				this.DefaultToPlaceableTile(613, 0);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4905:
				this.DefaultToPlaceableTile(613, 1);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4906:
				this.DefaultToPlaceableTile(614, 0);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 3, 0, 0));
				return;
			case 4907:
				this.DefaultToPlaceableTile(615, 0);
				this.value = Item.buyPrice(0, 1, 0, 0);
				return;
			case 4908:
			case 4909:
				this.useStyle = 1;
				this.shootSpeed = 5f;
				this.shoot = 910 + (type - 4908);
				this.width = 20;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.consumable = true;
				this.useAnimation = 25;
				this.noUseGraphic = true;
				this.useTime = 25;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.rare = 1;
				return;
			case 4910:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = new SoundStyle?(SoundID.Item92);
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 5, 0, 0));
				return;
			case 4911:
				this.DefaultToWhip(912, 45, 1.5f, 4f, 30);
				this.SetShopValues(ItemRarityColor.LightRed4, Item.sellPrice(0, 4, 0, 0));
				return;
			case 4912:
				this.DefaultToWhip(913, 37, 2f, 4f, 30);
				this.SetShopValues(ItemRarityColor.LightRed4, Item.sellPrice(0, 3, 0, 0));
				return;
			case 4913:
				this.DefaultToWhip(914, 18, 1.5f, 4f, 30);
				this.SetShopValues(ItemRarityColor.Orange3, Item.sellPrice(0, 1, 0, 0));
				return;
			case 4914:
				this.DefaultToWhip(915, 180, 4f, 4f, 30);
				this.SetShopValues(ItemRarityColor.Yellow8, Item.sellPrice(0, 5, 0, 0));
				return;
			case 4915:
				this.shootSpeed = 4.5f;
				this.shoot = 14;
				this.damage = 9;
				this.width = 8;
				this.height = 8;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Bullet;
				this.knockBack = 4f;
				this.value = 18;
				this.ranged = true;
				return;
			case 4916:
				this.DefaultToPlaceableTile(597, 2);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4917:
				this.DefaultToPlaceableTile(597, 3);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4918:
				this.DefaultToPlaceableTile(597, 4);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4919:
				this.DefaultToPlaceableTile(597, 5);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4920:
				this.DefaultToPlaceableTile(597, 6);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4921:
				this.DefaultToPlaceableTile(597, 7);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 10, 0, 0));
				return;
			case 4922:
				this.DefaultToPlaceableTile(207, 8);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 4, 0, 0));
				this.width = 8;
				this.height = 10;
				return;
			case 4923:
				this.width = 14;
				this.height = 38;
				this.rare = 8;
				this.noUseGraphic = true;
				this.channel = true;
				this.noMelee = true;
				this.damage = 80;
				this.crit = 10;
				this.knockBack = 4f;
				this.autoReuse = false;
				this.noMelee = true;
				this.melee = true;
				this.shoot = 927;
				this.shootSpeed = 15f;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.useStyle = 13;
				this.useAnimation = 18;
				this.useTime = 6;
				return;
			case 4924:
			case 4925:
			case 4926:
			case 4927:
			case 4928:
			case 4929:
			case 4930:
			case 4931:
			case 4932:
			case 4933:
			case 4934:
			case 4935:
			case 4936:
			case 4937:
			case 4938:
			case 4939:
			case 4940:
			case 4941:
			case 4942:
			case 4943:
			case 4944:
			case 4945:
			case 4946:
			case 4947:
			case 4948:
			case 4949:
			case 4950:
				this.DefaultToPlaceableTile(617, type - 4924);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
				this.rare = -13;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4951:
				this.DefaultToPlaceableTile(597, 8);
				this.SetShopValues(ItemRarityColor.Cyan9, Item.buyPrice(1, 0, 0, 0));
				return;
			case 4952:
				this.useLimitPerAnimation = new int?(4);
				this.autoReuse = true;
				this.useStyle = 14;
				this.holdStyle = 6;
				this.scale = 0.7f;
				this.useAnimation = 36;
				this.useTime = 2;
				this.width = 36;
				this.height = 22;
				this.shoot = 931;
				this.mana = 23;
				this.UseSound = new SoundStyle?(SoundID.Item82);
				this.knockBack = 2.5f;
				this.damage = 50;
				this.shootSpeed = 17f;
				this.noMelee = true;
				this.rare = 8;
				this.magic = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.flame = true;
				return;
			case 4953:
				this.useLimitPerAnimation = new int?(5);
				this.consumeAmmoOnLastShotOnly = true;
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 30;
				this.useTime = 2;
				this.width = 50;
				this.height = 18;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 50;
				this.shootSpeed = 10f;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.ranged = true;
				this.rare = 8;
				this.knockBack = 2f;
				return;
			case 4954:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.rare = 9;
				this.wingSlot = 45;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.expert = true;
				return;
			case 4955:
				this.width = 18;
				this.height = 18;
				this.headSlot = 259;
				this.value = Item.buyPrice(0, 15, 0, 0);
				this.rare = 5;
				this.vanity = true;
				return;
			case 4956:
				this.useStyle = 1;
				this.width = 24;
				this.height = 24;
				this.UseSound = null;
				this.autoReuse = true;
				this.melee = true;
				this.melee = true;
				this.shoot = 933;
				this.useAnimation = 30;
				this.useTime = this.useAnimation / 3;
				this.shootSpeed = 16f;
				this.damage = 190;
				this.knockBack = 6.5f;
				this.value = Item.sellPrice(0, 20, 0, 0);
				this.crit = 10;
				this.rare = 10;
				this.noUseGraphic = true;
				this.noMelee = true;
				return;
			case 4957:
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 24;
				this.height = 24;
				this.rare = 6;
				this.expert = true;
				return;
			case 4958:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.rare = 1;
				this.placeStyle = 73;
				return;
			case 4959:
				this.width = 18;
				this.height = 18;
				this.headSlot = 260;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 75, 0);
				this.vanity = true;
				return;
			case 4960:
				this.DefaultToVanitypet(934, 317);
				this.value = Item.buyPrice(0, 25, 0, 0);
				this.rare = -13;
				return;
			case 4961:
				this.DefaultToCapturedCritter(661);
				this.SetShopValues(ItemRarityColor.Orange3, Item.sellPrice(0, 5, 0, 0));
				this.width = 12;
				this.height = 12;
				return;
			case 4962:
				this.DefaultToPlaceableTile(618, 0);
				return;
			case 4963:
				this.DefaultToPlaceableTile(619, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4964:
				this.DefaultToPlaceableTile(620, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 4965:
			case 4966:
			case 4967:
			case 4968:
			case 4969:
			case 4970:
			case 4971:
			case 4972:
			case 4973:
			case 4974:
			case 4975:
			case 4976:
			case 4977:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 297 + (type - 4965);
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				this.rare = 1;
				return;
			case 4978:
				this.width = 24;
				this.height = 8;
				this.accessory = true;
				this.rare = 0;
				this.wingSlot = 46;
				this.value = 2000;
				return;
			case 4979:
				this.DefaultToMusicBox(52);
				return;
			case 4980:
				this.noUseGraphic = true;
				this.damage = 0;
				this.knockBack = 7f;
				this.useStyle = 5;
				this.shootSpeed = 4f;
				this.shoot = 935;
				this.width = 18;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 5;
				this.noMelee = true;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4981:
				this.useStyle = 4;
				this.channel = true;
				this.width = 10;
				this.height = 32;
				this.UseSound = new SoundStyle?(SoundID.Item25);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 8;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.mountType = 50;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 4982:
				this.width = 18;
				this.height = 18;
				this.defense = 12;
				this.headSlot = 261;
				this.rare = 5;
				this.value = Item.sellPrice(0, 2, 0, 0);
				return;
			case 4983:
				this.width = 18;
				this.height = 18;
				this.defense = 14;
				this.bodySlot = 230;
				this.rare = 5;
				this.value = Item.sellPrice(0, 2, 0, 0);
				return;
			case 4984:
				this.width = 18;
				this.height = 18;
				this.defense = 10;
				this.legSlot = 213;
				this.rare = 5;
				this.value = Item.sellPrice(0, 2, 0, 0);
				return;
			case 4985:
				this.DefaultToMusicBox(53);
				return;
			case 4986:
				this.useStyle = 1;
				this.shootSpeed = 9f;
				this.shoot = 936;
				this.width = 18;
				this.height = 20;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.useTime = 15;
				this.noUseGraphic = true;
				this.noMelee = true;
				this.value = 200;
				return;
			case 4987:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 6;
				this.value = Item.sellPrice(0, 5, 0, 0);
				this.expert = true;
				return;
			case 4988:
				this.useStyle = 4;
				this.width = 20;
				this.height = 20;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.maxStack = Item.CommonMaxStack;
				this.rare = 6;
				this.value = Item.sellPrice(0, 1, 0, 0);
				return;
			case 4989:
				this.width = 22;
				this.height = 22;
				this.accessory = true;
				this.rare = 1;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.expert = true;
				return;
			case 4990:
				this.DefaultToMusicBox(54);
				return;
			case 4991:
				this.DefaultToMusicBox(55);
				return;
			case 4992:
				this.DefaultToMusicBox(56);
				return;
			case 4993:
				this.DefaultToPlaceableTile(89, 43);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				this.rare = 9;
				return;
			case 4994:
				this.width = 18;
				this.height = 14;
				this.headSlot = 262;
				this.rare = 2;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.vanity = true;
				return;
			case 4995:
				this.width = 18;
				this.height = 14;
				this.headSlot = 263;
				this.rare = 2;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.vanity = true;
				return;
			case 4996:
				this.width = 18;
				this.height = 14;
				this.headSlot = 264;
				this.rare = 2;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.vanity = true;
				return;
			case 4997:
				this.width = 18;
				this.height = 14;
				this.vanity = true;
				this.bodySlot = 231;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.rare = 2;
				return;
			case 4998:
				this.width = 18;
				this.height = 14;
				this.vanity = true;
				this.bodySlot = 232;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.rare = 2;
				return;
			case 4999:
				this.width = 18;
				this.height = 14;
				this.vanity = true;
				this.bodySlot = 233;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.rare = 2;
				return;
			case 5000:
				this.DefaultToAccessory(34, 30);
				this.shoeSlot = 24;
				this.SetShopValues(ItemRarityColor.Lime7, Item.sellPrice(0, 15, 0, 0));
				this.hasVanityEffects = true;
				return;
			case 5001:
				this.width = 18;
				this.height = 14;
				this.defense = 3;
				this.legSlot = 217;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.rare = 2;
				return;
			case 5002:
			case 5003:
				this.DefaultToPlaceableTile(376, 24 + type - 5002);
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 1, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5004:
				this.width = 18;
				this.height = 14;
				this.headSlot = 265;
				this.rare = 9;
				this.value = Item.sellPrice(0, 0, 30, 0);
				this.vanity = true;
				return;
			case 5005:
				this.mana = 10;
				this.damage = 90;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 946;
				this.buffType = 322;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item82);
				this.useAnimation = 36;
				this.useTime = 36;
				this.rare = 5;
				this.noMelee = true;
				this.knockBack = 4f;
				this.value = Item.sellPrice(0, 20, 0, 0);
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			case 5006:
				this.DefaultToMusicBox(57);
				return;
			case 5007:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 234;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.vanity = true;
				return;
			case 5008:
				this.DefaultToPlaceableTile(622, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 2, 0));
				return;
			case 5010:
				this.DefaultToAccessory(34, 30);
				this.waistSlot = 16;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 3, 0, 0));
				return;
			case 5011:
			case 5012:
				this.noMelee = true;
				this.useStyle = 5;
				this.useAnimation = 45;
				this.useTime = 45;
				this.knockBack = 4.6f;
				this.width = 28;
				this.height = 28;
				this.damage = 9;
				this.scale = 1f;
				this.noUseGraphic = true;
				this.shoot = 947;
				if (type == 5012)
				{
					this.shoot = 948;
				}
				this.shootSpeed = 11f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.rare = 1;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.melee = true;
				this.channel = true;
				return;
			case 5014:
				this.DefaultToMusicBox(58);
				return;
			case 5015:
				this.DefaultToMusicBox(59);
				return;
			case 5016:
				this.DefaultToMusicBox(60);
				return;
			case 5017:
				this.DefaultToMusicBox(61);
				return;
			case 5018:
				this.DefaultToMusicBox(62);
				return;
			case 5019:
				this.DefaultToMusicBox(63);
				return;
			case 5020:
				this.DefaultToMusicBox(64);
				return;
			case 5021:
				this.DefaultToMusicBox(65);
				return;
			case 5022:
				this.DefaultToMusicBox(66);
				return;
			case 5023:
				this.DefaultToMusicBox(67);
				return;
			case 5024:
				this.DefaultToMusicBox(68);
				return;
			case 5025:
				this.DefaultToMusicBox(69);
				return;
			case 5026:
				this.DefaultToMusicBox(70);
				return;
			case 5027:
				this.DefaultToMusicBox(71);
				return;
			case 5028:
				this.DefaultToMusicBox(72);
				return;
			case 5029:
				this.DefaultToMusicBox(73);
				return;
			case 5030:
				this.DefaultToMusicBox(74);
				return;
			case 5031:
				this.DefaultToMusicBox(75);
				return;
			case 5032:
				this.DefaultToMusicBox(76);
				return;
			case 5033:
				this.DefaultToMusicBox(77);
				return;
			case 5034:
				this.DefaultToMusicBox(78);
				return;
			case 5035:
				this.DefaultToMusicBox(79);
				return;
			case 5036:
				this.DefaultToMusicBox(80);
				return;
			case 5037:
				this.DefaultToMusicBox(81);
				return;
			case 5038:
				this.DefaultToMusicBox(82);
				return;
			case 5039:
				this.DefaultToMusicBox(83);
				return;
			case 5040:
				this.DefaultToMusicBox(84);
				return;
			case 5043:
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 18;
				this.height = 18;
				this.useStyle = 4;
				this.useTime = 30;
				this.UseSound = new SoundStyle?(SoundID.Item4);
				this.useAnimation = 30;
				this.rare = 4;
				this.value = Item.sellPrice(0, 2, 0, 0);
				return;
			case 5044:
				this.DefaultToMusicBox(85);
				return;
			case 5045:
				this.width = 18;
				this.height = 14;
				this.headSlot = 266;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5046:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 235;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5047:
				this.width = 18;
				this.height = 14;
				this.legSlot = 218;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5048:
				this.width = 18;
				this.height = 14;
				this.headSlot = 267;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5049:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 236;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5050:
				this.width = 18;
				this.height = 14;
				this.legSlot = 219;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5051:
				this.width = 18;
				this.height = 14;
				this.headSlot = 268;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5052:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 237;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5053:
				this.width = 18;
				this.height = 14;
				this.legSlot = 222;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5054:
				this.width = 18;
				this.height = 14;
				this.headSlot = 269;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5055:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 238;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5056:
				this.width = 18;
				this.height = 14;
				this.legSlot = 224;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5057:
				this.width = 18;
				this.height = 14;
				this.headSlot = 270;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5058:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 239;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5059:
				this.width = 18;
				this.height = 14;
				this.legSlot = 225;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5060:
				this.width = 18;
				this.height = 14;
				this.legSlot = 226;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5061:
				this.width = 18;
				this.height = 14;
				this.headSlot = 271;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5062:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 240;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5063:
				this.width = 18;
				this.height = 14;
				this.legSlot = 227;
				this.rare = 2;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.vanity = true;
				return;
			case 5064:
				this.width = 26;
				this.height = 30;
				this.maxStack = 1;
				this.value = Item.sellPrice(0, 4, 0, 0);
				this.rare = 8;
				this.accessory = true;
				this.backSlot = 33;
				return;
			case 5065:
				this.DefaultToStaff(950, 10f, 25, 18);
				this.SetWeaponValues(70, 5f, 0);
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				return;
			case 5066:
				this.DefaultToPlaceableTile(444, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 50));
				return;
			case 5067:
				this.DefaultToPlaceableTile(485, 0);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 50));
				return;
			case 5068:
				this.width = 18;
				this.height = 18;
				this.bodySlot = 241;
				this.defense = 1;
				this.rare = 2;
				this.value = Item.sellPrice(0, 2, 50, 0);
				return;
			case 5069:
				this.mana = 5;
				this.damage = 8;
				this.useStyle = 1;
				this.shootSpeed = 10f;
				this.shoot = 951;
				this.buffType = 325;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item44);
				this.useAnimation = 36;
				this.useTime = 36;
				this.rare = 3;
				this.noMelee = true;
				this.knockBack = 2f;
				this.value = Item.sellPrice(0, 0, 50, 0);
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			case 5070:
				this.width = 16;
				this.height = 16;
				this.maxStack = Item.CommonMaxStack;
				this.value = Item.buyPrice(0, 0, 5, 0);
				this.rare = 1;
				return;
			case 5071:
				this.width = 18;
				this.height = 14;
				this.headSlot = 272;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				this.vanity = true;
				return;
			case 5072:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 242;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				this.vanity = true;
				return;
			case 5073:
				this.width = 18;
				this.height = 14;
				this.legSlot = 228;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				this.vanity = true;
				return;
			case 5074:
				this.DefaultToWhip(952, 27, 2f, 5f, 30);
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 1, 50, 0));
				return;
			case 5075:
				this.width = 24;
				this.height = 24;
				this.accessory = true;
				this.vanity = true;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 1, 0, 0));
				this.hasVanityEffects = true;
				return;
			case 5076:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.vanity = true;
				this.balloonSlot = 18;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 20, 0, 0));
				this.hasVanityEffects = true;
				return;
			case 5077:
				this.width = 16;
				this.height = 16;
				this.accessory = true;
				this.vanity = true;
				this.shoeSlot = 25;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 20, 0, 0));
				return;
			case 5078:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 243;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				this.vanity = true;
				return;
			case 5079:
				this.width = 18;
				this.height = 14;
				this.legSlot = 230;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				this.vanity = true;
				return;
			case 5080:
				this.width = 16;
				this.height = 16;
				this.accessory = true;
				this.vanity = true;
				this.frontSlot = 11;
				this.backSlot = 34;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 10, 0, 0));
				return;
			case 5081:
				this.DefaultToPlaceableTile(623, 0);
				this.SetShopValues(ItemRarityColor.Pink5, Item.buyPrice(0, 10, 0, 0));
				return;
			case 5082:
				this.DefaultToPlaceableTile(623, 1);
				this.SetShopValues(ItemRarityColor.Pink5, Item.buyPrice(0, 10, 0, 0));
				return;
			case 5083:
				this.DefaultToPlaceableTile(623, 2);
				this.SetShopValues(ItemRarityColor.Pink5, Item.buyPrice(0, 10, 0, 0));
				return;
			case 5084:
				this.DefaultToPlaceableTile(623, 3);
				this.SetShopValues(ItemRarityColor.Pink5, Item.buyPrice(0, 10, 0, 0));
				return;
			case 5085:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.placeStyle = 45;
				return;
			case 5086:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 245;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.placeStyle = 13;
				return;
			case 5087:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.placeStyle = 74;
				return;
			case 5088:
				this.DefaultToVanitypet(956, 327);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 25, 0, 0));
				this.value = Item.buyPrice(0, 25, 0, 0);
				return;
			case 5089:
				this.DefaultToVanitypet(957, 328);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 25, 0, 0));
				this.value = Item.buyPrice(0, 25, 0, 0);
				return;
			case 5090:
				this.DefaultToVanitypet(958, 329);
				this.value = Item.buyPrice(0, 25, 0, 0);
				this.rare = -13;
				return;
			case 5091:
				this.DefaultToVanitypet(959, 330);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 5, 0, 0));
				return;
			case 5094:
				this.useStyle = 1;
				this.useTurn = false;
				this.useAnimation = 21;
				this.useTime = 21;
				this.width = 24;
				this.height = 28;
				this.damage = 20;
				this.knockBack = 5.5f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.scale = 1.2f;
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 0, 50, 0));
				this.melee = true;
				return;
			case 5095:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useAnimation = 15;
				this.useTime = 15;
				this.width = 24;
				this.height = 28;
				this.damage = 27;
				this.knockBack = 5f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.scale = 1.2f;
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 1, 50, 0));
				this.melee = true;
				this.axe = 30;
				this.crit = 10;
				return;
			case 5096:
				this.useStyle = 1;
				this.useTurn = true;
				this.autoReuse = true;
				this.useAnimation = 20;
				this.useTime = 20;
				this.width = 24;
				this.height = 28;
				this.damage = 57;
				this.knockBack = 6.5f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.scale = 1.2f;
				this.SetShopValues(ItemRarityColor.LightRed4, Item.sellPrice(0, 1, 0, 0));
				this.melee = true;
				return;
			case 5097:
				this.useStyle = 1;
				this.useTurn = false;
				this.useAnimation = 45;
				this.useTime = 45;
				this.width = 24;
				this.height = 28;
				this.damage = 36;
				this.knockBack = 5.5f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.scale = 1.15f;
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 0, 25, 0));
				this.melee = true;
				return;
			case 5098:
				this.DefaultToVanitypet(960, 331);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 10, 0, 0));
				return;
			case 5099:
				this.width = 18;
				this.height = 14;
				this.headSlot = 273;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 1, 0));
				this.vanity = true;
				return;
			case 5100:
				this.width = 18;
				this.height = 14;
				this.faceSlot = 19;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 2, 0, 0));
				this.accessory = true;
				this.expert = true;
				return;
			case 5101:
				this.width = 28;
				this.height = 20;
				this.headSlot = 275;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				this.vanity = true;
				return;
			case 5102:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 244;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 40, 0));
				this.vanity = true;
				return;
			case 5103:
				this.width = 18;
				this.height = 14;
				this.legSlot = 231;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 40, 0));
				this.vanity = true;
				return;
			case 5104:
			case 5105:
			case 5106:
				this.width = 18;
				this.height = 14;
				this.maxStack = 1;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				this.beardSlot = (int)((sbyte)(2 + (type - 5104)));
				this.color = Main.player[Main.myPlayer].hairColor;
				this.accessory = true;
				this.vanity = true;
				return;
			case 5107:
				this.DefaultToAccessory(26, 30);
				this.neckSlot = 11;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				return;
			case 5108:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.rare = 1;
				this.placeStyle = 75;
				return;
			case 5109:
				this.width = 18;
				this.height = 18;
				this.headSlot = 276;
				this.rare = 1;
				this.value = Item.sellPrice(0, 0, 75, 0);
				this.vanity = true;
				return;
			case 5110:
				this.DefaultToPlaceableTile(617, 27);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
				this.rare = -13;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5111:
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 24;
				this.height = 24;
				this.rare = 3;
				this.expert = true;
				return;
			case 5112:
				this.DefaultToMusicBox(86);
				return;
			case 5113:
				this.DefaultToAccessory(26, 30);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				this.vanity = true;
				this.hasVanityEffects = true;
				return;
			case 5114:
				this.mana = 10;
				this.damage = 6;
				this.useStyle = 4;
				this.shootSpeed = 10f;
				this.shoot = 970;
				this.buffType = 335;
				this.width = 26;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.AbigailSummon);
				this.useAnimation = 36;
				this.useTime = 36;
				this.rare = 3;
				this.noMelee = true;
				this.knockBack = 2f;
				this.value = Item.sellPrice(0, 0, 50, 0);
				this.summon = true;
				this.autoReuse = true;
				this.reuseDelay = 2;
				return;
			case 5115:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 245;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 40, 0));
				this.vanity = true;
				return;
			case 5116:
				this.width = 18;
				this.height = 14;
				this.legSlot = 232;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 40, 0));
				this.vanity = true;
				return;
			case 5117:
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 1, 50, 0));
				this.autoReuse = true;
				this.useStyle = 5;
				this.useAnimation = 15;
				this.useTime = 15;
				this.width = 24;
				this.height = 24;
				this.shoot = 968;
				this.UseSound = new SoundStyle?(SoundID.Item61);
				this.useAmmo = AmmoID.Bullet;
				this.damage = 20;
				this.shootSpeed = 14f;
				this.knockBack = 1f;
				this.ranged = true;
				this.noMelee = true;
				return;
			case 5118:
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 1, 50, 0));
				this.useStyle = 5;
				this.useAnimation = 45;
				this.useTime = 45;
				this.width = 24;
				this.height = 24;
				this.shoot = 969;
				this.UseSound = new SoundStyle?(SoundID.Item66);
				this.damage = 13;
				this.shootSpeed = 1f;
				this.knockBack = 1f;
				this.magic = true;
				this.noMelee = true;
				this.mana = 30;
				return;
			case 5119:
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 1, 50, 0));
				this.useStyle = 1;
				this.shootSpeed = 14f;
				this.shoot = 966;
				this.damage = 24;
				this.width = 18;
				this.height = 20;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 30;
				this.useTime = 30;
				this.noMelee = true;
				this.knockBack = 7.5f;
				this.summon = true;
				this.mana = 20;
				this.sentry = true;
				return;
			case 5120:
				this.SetShopValues(ItemRarityColor.Blue1, 0);
				this.useStyle = 4;
				this.width = 22;
				this.height = 14;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5121:
			case 5122:
			case 5123:
			case 5124:
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 20, 0));
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.placeStyle = 46 + (type - 5121);
				return;
			case 5125:
				this.DefaultToMount(51);
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 0, 50, 0));
				return;
			case 5126:
				this.DefaultToAccessory(26, 30);
				this.SetShopValues(ItemRarityColor.LightPurple6, Item.sellPrice(0, 8, 0, 0));
				this.backSlot = 35;
				this.handOnSlot = 23;
				this.handOffSlot = 15;
				return;
			case 5127:
				this.DefaultToPlaceableTile(625, 0);
				this.SetShopValues(ItemRarityColor.Blue1, 0);
				return;
			case 5128:
				this.DefaultToPlaceableTile(627, 0);
				this.SetShopValues(ItemRarityColor.Blue1, 0);
				return;
			case 5129:
				this.SetWeaponValues(15, 5f, 0);
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 0, 35, 0));
				this.useStyle = 1;
				this.useTurn = false;
				this.useAnimation = 17;
				this.useTime = 17;
				this.width = 24;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.scale = 1f;
				this.melee = true;
				return;
			case 5130:
				this.useStyle = 4;
				this.channel = true;
				this.width = 10;
				this.height = 32;
				this.UseSound = new SoundStyle?(SoundID.Item25);
				this.useAnimation = 20;
				this.useTime = 20;
				this.rare = 8;
				this.noMelee = true;
				this.noUseGraphic = true;
				this.mountType = 52;
				this.value = Item.sellPrice(0, 5, 0, 0);
				return;
			case 5131:
				this.DefaultToVanitypet(881, 341);
				this.value = Item.buyPrice(0, 25, 0, 0);
				this.rare = -13;
				return;
			case 5132:
				this.DefaultToCapturedCritter(669);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 10, 0));
				this.width = 20;
				this.height = 20;
				this.bait = 10;
				return;
			case 5133:
				this.DefaultToPlaceableTile(629, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5134:
				this.consumeAmmoOnLastShotOnly = true;
				this.useStyle = 5;
				this.autoReuse = true;
				this.useAnimation = 30;
				this.useTime = 5;
				this.width = 50;
				this.height = 18;
				this.shoot = 145;
				this.useAmmo = AmmoID.Solution;
				this.UseSound = new SoundStyle?(SoundID.Item34);
				this.knockBack = 0.3f;
				this.shootSpeed = 11f;
				this.noMelee = true;
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(2, 0, 0, 0));
				this.rare = 10;
				return;
			case 5135:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 137;
				this.placeStyle = 5;
				this.width = 12;
				this.height = 12;
				this.mech = true;
				this.SetShopValues(ItemRarityColor.LightRed4, Item.sellPrice(0, 0, 60, 0));
				return;
			case 5136:
				this.width = 18;
				this.height = 18;
				this.headSlot = 274;
				this.color = Main.player[Main.myPlayer].skinColor;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 5137:
				this.DefaultToPlaceableTile(630, 0);
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 0, 10, 0));
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5138:
				this.DefaultToPlaceableTile(631, 0);
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 0, 10, 0));
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5139:
				this.DefaultToAccessory(14, 30);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				return;
			case 5140:
			case 5141:
			case 5142:
			case 5143:
			case 5144:
			case 5145:
			case 5146:
				this.DefaultToAccessory(14, 30);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 1, 0, 0));
				switch (type)
				{
				case 5140:
					this.glowMask = 318;
					return;
				case 5141:
					this.glowMask = 319;
					return;
				case 5142:
					this.glowMask = 320;
					return;
				case 5143:
					this.glowMask = 321;
					return;
				case 5144:
					this.glowMask = 322;
					return;
				case 5145:
					this.glowMask = 323;
					return;
				case 5146:
					this.glowMask = 324;
					return;
				default:
					return;
				}
				break;
			case 5147:
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 15, 0));
				this.useStyle = 1;
				this.useAnimation = 26;
				this.useTime = 26;
				this.width = 26;
				this.height = 28;
				this.shoot = 979;
				this.UseSound = new SoundStyle?(SoundID.Item8);
				this.damage = 15;
				this.shootSpeed = 7f;
				this.magic = true;
				this.noMelee = true;
				this.mana = 2;
				this.crit = 10;
				if (this.Variant == ItemVariants.StrongerVariant)
				{
					this.value = Item.sellPrice(0, 5, 5, 0);
					this.rare = 4;
					this.damage = 42;
					this.useAnimation = 10;
					this.useTime = 10;
					this.mana = 6;
					this.shootSpeed = 12f;
					this.autoReuse = true;
					return;
				}
				break;
			case 5148:
				this.DefaultToPlaceableTile(90, 40);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5149:
				this.DefaultToPlaceableTile(79, 40);
				this.SetShopValues(ItemRarityColor.White0, 2000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 20;
				return;
			case 5150:
				this.DefaultToPlaceableTile(101, 41);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5151:
				this.DefaultToPlaceableTile(88, 40);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5152:
				this.DefaultToPlaceableTile(100, 40);
				this.SetShopValues(ItemRarityColor.White0, 1500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5153:
				this.DefaultToPlaceableTile(33, 39);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.noWet = true;
				return;
			case 5154:
				this.DefaultToPlaceableTile(15, 45);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 30;
				return;
			case 5155:
				this.DefaultToPlaceableTile(34, 46);
				this.SetShopValues(ItemRarityColor.White0, 3000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 5156:
				this.DefaultToPlaceableTile(467, 14);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 5157:
				this.DefaultToPlaceableTile(104, 41);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5158:
				this.DefaultToPlaceableTile(10, 46);
				this.SetShopValues(ItemRarityColor.White0, 200);
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 5159:
				this.DefaultToPlaceableTile(93, 40);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 10;
				this.height = 24;
				return;
			case 5160:
				this.DefaultToPlaceableTile(42, 46);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 28;
				return;
			case 5161:
				this.DefaultToPlaceableTile(87, 40);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5162:
				this.DefaultToPlaceableTile(19, 45);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 5163:
				this.DefaultToPlaceableTile(172, 41);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5164:
				this.DefaultToPlaceableTile(89, 44);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5165:
				this.DefaultToPlaceableTile(469, 9);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 20;
				return;
			case 5166:
				this.DefaultToPlaceableTile(18, 41);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 14;
				return;
			case 5167:
				this.DefaultToPlaceableTile(468, 14);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 5168:
				this.DefaultToPlaceableTile(497, 40);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 5169:
				this.DefaultToPlaceableTile(90, 41);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5170:
				this.DefaultToPlaceableTile(79, 41);
				this.SetShopValues(ItemRarityColor.White0, 2000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 20;
				return;
			case 5171:
				this.DefaultToPlaceableTile(101, 42);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5172:
				this.DefaultToPlaceableTile(88, 41);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5173:
				this.DefaultToPlaceableTile(100, 41);
				this.SetShopValues(ItemRarityColor.White0, 1500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5174:
				this.DefaultToPlaceableTile(33, 40);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.noWet = true;
				return;
			case 5175:
				this.DefaultToPlaceableTile(15, 46);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 30;
				return;
			case 5176:
				this.DefaultToPlaceableTile(34, 47);
				this.SetShopValues(ItemRarityColor.White0, 3000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 5177:
				this.DefaultToPlaceableTile(467, 15);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 5178:
				this.DefaultToPlaceableTile(104, 42);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5179:
				this.DefaultToPlaceableTile(10, 47);
				this.SetShopValues(ItemRarityColor.White0, 200);
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 5180:
				this.DefaultToPlaceableTile(93, 41);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 10;
				this.height = 24;
				return;
			case 5181:
				this.DefaultToPlaceableTile(42, 47);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 28;
				return;
			case 5182:
				this.DefaultToPlaceableTile(87, 41);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5183:
				this.DefaultToPlaceableTile(19, 46);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 5184:
				this.DefaultToPlaceableTile(172, 42);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5185:
				this.DefaultToPlaceableTile(89, 45);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5186:
				this.DefaultToPlaceableTile(469, 10);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 20;
				return;
			case 5187:
				this.DefaultToPlaceableTile(18, 42);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 14;
				return;
			case 5188:
				this.DefaultToPlaceableTile(468, 15);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 5189:
				this.DefaultToPlaceableTile(497, 41);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 5190:
				this.DefaultToPlaceableTile(90, 42);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5191:
				this.DefaultToPlaceableTile(79, 42);
				this.SetShopValues(ItemRarityColor.White0, 2000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 20;
				return;
			case 5192:
				this.DefaultToPlaceableTile(101, 43);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5193:
				this.DefaultToPlaceableTile(88, 42);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5194:
				this.DefaultToPlaceableTile(100, 42);
				this.SetShopValues(ItemRarityColor.White0, 1500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5195:
				this.DefaultToPlaceableTile(33, 41);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 0, 60);
				this.noWet = true;
				return;
			case 5196:
				this.DefaultToPlaceableTile(15, 47);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 30;
				return;
			case 5197:
				this.DefaultToPlaceableTile(34, 48);
				this.SetShopValues(ItemRarityColor.White0, 3000);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 26;
				return;
			case 5198:
				this.DefaultToPlaceableTile(467, 16);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 5199:
				this.DefaultToPlaceableTile(104, 43);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5200:
				this.DefaultToPlaceableTile(10, 48);
				this.SetShopValues(ItemRarityColor.White0, 200);
				this.maxStack = Item.CommonMaxStack;
				this.width = 14;
				this.height = 28;
				return;
			case 5201:
				this.DefaultToPlaceableTile(93, 42);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 10;
				this.height = 24;
				return;
			case 5202:
				this.DefaultToPlaceableTile(42, 48);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 12;
				this.height = 28;
				return;
			case 5203:
				this.DefaultToPlaceableTile(87, 42);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5204:
				this.DefaultToPlaceableTile(19, 47);
				this.SetShopValues(ItemRarityColor.White0, 0);
				this.width = 8;
				this.height = 10;
				return;
			case 5205:
				this.DefaultToPlaceableTile(172, 43);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5206:
				this.DefaultToPlaceableTile(89, 46);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5207:
				this.DefaultToPlaceableTile(469, 11);
				this.SetShopValues(ItemRarityColor.White0, 300);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 20;
				return;
			case 5208:
				this.DefaultToPlaceableTile(18, 43);
				this.SetShopValues(ItemRarityColor.White0, 150);
				this.maxStack = Item.CommonMaxStack;
				this.width = 28;
				this.height = 14;
				return;
			case 5209:
				this.DefaultToPlaceableTile(468, 16);
				this.SetShopValues(ItemRarityColor.White0, 500);
				this.maxStack = Item.CommonMaxStack;
				this.width = 26;
				this.height = 22;
				return;
			case 5210:
				this.DefaultToPlaceableTile(497, 42);
				this.maxStack = Item.CommonMaxStack;
				this.value = 150;
				return;
			case 5211:
				this.UseSound = new SoundStyle?(SoundID.Item3);
				this.useStyle = 9;
				this.useTurn = true;
				this.useAnimation = 17;
				this.useTime = 17;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 14;
				this.height = 24;
				this.buffType = 343;
				this.buffTime = 18000;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 0, 2, 0));
				return;
			case 5212:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.noUseGraphic = true;
				this.makeNPC = 671;
				return;
			case 5213:
				this.DefaultToPlaceableTile(632, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5214:
				this.autoReuse = true;
				this.useTurn = true;
				this.useStyle = 1;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 633;
				this.width = 14;
				this.height = 14;
				this.value = 150;
				return;
			case 5215:
				this.DefaultToPlaceableTile(635, 0);
				return;
			case 5216:
				this.DefaultToPlaceableWall(316);
				return;
			case 5217:
				this.DefaultToPlaceableWall(317);
				return;
			case 5218:
			case 5219:
			case 5220:
			case 5221:
			case 5222:
			case 5223:
			case 5224:
			case 5225:
			case 5226:
			case 5227:
			case 5228:
			case 5229:
			case 5230:
			case 5231:
			case 5232:
			case 5233:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 76 + (type - 5218);
				if (type == 5231)
				{
					this.value = Item.sellPrice(0, 0, 20, 0);
				}
				if (type == 5228)
				{
					this.value = Item.sellPrice(0, 2, 0, 0);
				}
				if (type == 5222)
				{
					this.value = Item.sellPrice(0, 2, 0, 0);
					return;
				}
				break;
			case 5234:
			case 5235:
			case 5236:
			case 5237:
			case 5238:
			case 5239:
			case 5240:
			case 5241:
			case 5242:
			case 5243:
			case 5244:
			case 5245:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 50 + (type - 5234);
				if (type == 5243)
				{
					this.value = Item.sellPrice(0, 0, 60, 0);
				}
				if (type == 5245)
				{
					this.value = Item.sellPrice(0, 0, 20, 0);
				}
				if (type == 5235)
				{
					this.value = Item.sellPrice(0, 0, 50, 0);
					return;
				}
				break;
			case 5246:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 245;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 14;
				return;
			case 5247:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 245;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 15;
				return;
			case 5248:
			case 5249:
			case 5250:
			case 5251:
			case 5252:
			case 5253:
			case 5254:
			case 5255:
			case 5256:
			case 5257:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 245;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 19 + (type - 5248);
				if (type == 5251)
				{
					this.value = Item.sellPrice(0, 0, 20, 0);
				}
				if (type == 5253)
				{
					this.value = Item.sellPrice(0, 0, 20, 0);
				}
				if (type == 5257)
				{
					this.value = Item.sellPrice(0, 0, 20, 0);
				}
				if (type == 5252)
				{
					this.value = Item.sellPrice(0, 0, 50, 0);
				}
				if (type == 5256)
				{
					this.value = Item.sellPrice(0, 0, 50, 0);
					return;
				}
				break;
			case 5258:
			case 5259:
			case 5260:
			case 5261:
			case 5262:
			case 5263:
			case 5264:
			case 5265:
			case 5266:
			case 5267:
			case 5268:
			case 5269:
			case 5270:
			case 5271:
			case 5272:
			case 5273:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 246;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 21 + (type - 5258);
				if (type == 5266)
				{
					this.value = Item.sellPrice(0, 2, 0, 0);
				}
				if (type == 5259)
				{
					this.value = Item.sellPrice(0, 0, 50, 0);
				}
				if (type == 5265)
				{
					this.value = Item.sellPrice(0, 0, 50, 0);
				}
				if (type == 5264)
				{
					this.value = Item.sellPrice(0, 0, 50, 0);
				}
				if (type == 5263)
				{
					this.value = Item.sellPrice(0, 0, 50, 0);
					return;
				}
				break;
			case 5274:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 62;
				return;
			case 5276:
				this.DefaultToVanitypet(994, 345);
				this.width = 32;
				this.height = 32;
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 1, 0, 0));
				return;
			case 5279:
				this.width = 18;
				this.height = 18;
				this.defense = 2;
				this.headSlot = 278;
				if (this.Variant == ItemVariants.WeakerVariant)
				{
					this.defense = 1;
					return;
				}
				break;
			case 5280:
				this.width = 18;
				this.height = 18;
				this.defense = 3;
				this.bodySlot = 246;
				if (this.Variant == ItemVariants.WeakerVariant)
				{
					this.defense = 1;
					return;
				}
				break;
			case 5281:
				this.width = 18;
				this.height = 18;
				this.defense = 2;
				this.legSlot = 234;
				if (this.Variant == ItemVariants.WeakerVariant)
				{
					this.defense = 1;
					return;
				}
				break;
			case 5282:
				this.useStyle = 5;
				this.useAnimation = 25;
				this.useTime = 25;
				this.width = 12;
				this.height = 28;
				this.shoot = 1;
				this.useAmmo = AmmoID.Arrow;
				this.UseSound = new SoundStyle?(SoundID.Item5);
				this.damage = 10;
				this.shootSpeed = 6.6f;
				this.noMelee = true;
				this.value = 100;
				this.ranged = true;
				if (this.Variant == ItemVariants.WeakerVariant)
				{
					this.damage = 6;
					this.useAnimation = 29;
					this.useTime = 29;
					return;
				}
				break;
			case 5283:
				this.autoReuse = true;
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 30;
				this.useTime = 20;
				this.hammer = 45;
				this.width = 24;
				this.height = 28;
				this.damage = 9;
				this.knockBack = 5.5f;
				this.scale = 1f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.value = 50;
				this.melee = true;
				if (this.Variant == ItemVariants.WeakerVariant)
				{
					this.damage = 4;
					this.hammer = 35;
					return;
				}
				break;
			case 5284:
				this.useStyle = 1;
				this.useTurn = false;
				this.useAnimation = 17;
				this.useTime = 17;
				this.width = 24;
				this.height = 28;
				this.damage = 13;
				this.knockBack = 5f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.scale = 1f;
				this.value = Item.sellPrice(0, 0, 0, 20);
				this.melee = true;
				if (this.Variant == ItemVariants.WeakerVariant)
				{
					this.damage = 8;
					this.useAnimation = 23;
					this.useTime = 23;
					return;
				}
				break;
			case 5285:
				this.DefaultToThrownWeapon(996, 20, 8f, false);
				this.UseSound = new SoundStyle?(SoundID.Item106);
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 3, 0, 0));
				this.width = 18;
				this.height = 18;
				return;
			case 5286:
				this.DefaultToPlaceableTile(12, 0);
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 7, 50, 0));
				return;
			case 5287:
				this.DefaultToPlaceableTile(639, 0);
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 0, 25, 0));
				return;
			case 5288:
				this.DefaultToMount(53);
				this.SetShopValues(ItemRarityColor.Yellow8, Item.buyPrice(0, 5, 0, 0));
				return;
			case 5289:
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 2, 0, 0));
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 18;
				this.height = 18;
				this.useStyle = 4;
				this.useTime = 30;
				this.UseSound = new SoundStyle?(SoundID.Item4);
				this.useAnimation = 30;
				this.expert = true;
				return;
			case 5290:
				this.width = 28;
				this.height = 20;
				this.headSlot = 279;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				this.vanity = true;
				return;
			case 5291:
				this.DefaultToPlaceableWall(318);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 0, 50));
				return;
			case 5292:
				this.DefaultToPlaceableTile(19, 48);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 1, 0));
				this.width = 8;
				this.height = 10;
				return;
			case 5293:
				this.DefaultToTorch(22, false);
				return;
			case 5294:
				this.useStyle = 5;
				this.width = 24;
				this.height = 24;
				this.noUseGraphic = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.melee = true;
				this.channel = true;
				this.noMelee = true;
				this.shoot = 999;
				this.useAnimation = 25;
				this.useTime = 25;
				this.shootSpeed = 10f;
				this.knockBack = 3.75f;
				this.damage = 24;
				this.value = Item.sellPrice(0, 0, 70, 0);
				this.rare = 3;
				return;
			case 5295:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useAnimation = 24;
				this.useTime = 12;
				this.width = 24;
				this.height = 28;
				this.damage = 20;
				this.knockBack = 5f;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.scale = 1f;
				this.SetShopValues(ItemRarityColor.LightRed4, Item.sellPrice(0, 1, 50, 0));
				this.melee = true;
				this.axe = 30;
				this.createTile = 2;
				return;
			case 5296:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 642;
				this.width = 26;
				this.height = 20;
				this.rare = 7;
				this.value = 100000;
				return;
			case 5297:
				this.DefaultToVanitypet(998, 349);
				this.width = 32;
				this.height = 32;
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 25, 0, 0));
				return;
			case 5298:
				this.noMelee = true;
				this.useStyle = 1;
				this.shootSpeed = 11.5f;
				this.shoot = 1000;
				this.damage = 21;
				this.knockBack = 4.5f;
				this.width = 14;
				this.height = 28;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 20;
				this.useTime = 20;
				this.noUseGraphic = true;
				this.SetShopValues(ItemRarityColor.Orange3, Item.sellPrice(0, 2, 0, 0));
				this.melee = true;
				this.autoReuse = true;
				return;
			case 5299:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 215;
				this.placeStyle = 14;
				this.width = 12;
				this.height = 12;
				return;
			case 5300:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.noUseGraphic = true;
				this.makeNPC = 672;
				return;
			case 5301:
				this.DefaultToPlaceableTile(640, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5302:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 12;
				this.useTime = 5;
				this.width = 20;
				this.height = 20;
				this.autoReuse = true;
				this.rare = 7;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.tileBoost += 2;
				return;
			case 5303:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 12;
				this.useTime = 5;
				this.width = 20;
				this.height = 20;
				this.autoReuse = true;
				this.rare = 7;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.tileBoost += 2;
				return;
			case 5304:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 8;
				this.useTime = 3;
				this.width = 20;
				this.height = 20;
				this.autoReuse = true;
				this.rare = 8;
				this.value = Item.sellPrice(0, 30, 0, 0);
				this.tileBoost += 3;
				return;
			case 5305:
				this.width = 18;
				this.height = 18;
				this.headSlot = 277;
				this.color = Main.player[Main.myPlayer].skinColor;
				this.rare = 1;
				this.vanity = true;
				this.value = Item.sellPrice(0, 0, 50, 0);
				return;
			case 5306:
				this.DefaultToPlaceableTile(641, 0);
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 0, 20));
				return;
			case 5307:
				this.DefaultToPlaceableWall(319);
				return;
			case 5308:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 20, 0);
				this.placeStyle = 63;
				return;
			case 5309:
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
				this.width = 30;
				this.height = 30;
				return;
			case 5310:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 2, 0, 0);
				this.placeStyle = 64;
				return;
			case 5311:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.noUseGraphic = true;
				this.makeNPC = 673;
				return;
			case 5312:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.noUseGraphic = true;
				this.makeNPC = 674;
				return;
			case 5313:
				this.useStyle = 1;
				this.autoReuse = true;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				this.noUseGraphic = true;
				this.makeNPC = 675;
				return;
			case 5314:
				this.DefaultToPlaceableTile(643, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5315:
				this.DefaultToPlaceableTile(644, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5316:
				this.DefaultToPlaceableTile(645, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5317:
				this.DefaultToPlaceableTile(105, 80);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 60));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5318:
				this.DefaultToPlaceableTile(105, 81);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 60));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5319:
				this.DefaultToPlaceableTile(105, 82);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 60));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5320:
				this.DefaultToPlaceableTile(13, 1);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 60));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5321:
				this.DefaultToPlaceableTile(13, 2);
				this.SetShopValues(ItemRarityColor.White0, Item.sellPrice(0, 0, 0, 20));
				this.maxStack = Item.CommonMaxStack;
				this.width = 20;
				this.height = 20;
				return;
			case 5322:
				this.DefaultToPlaceableTile(646, 0);
				this.SetShopValues(ItemRarityColor.Blue1, 0);
				this.maxStack = Item.CommonMaxStack;
				this.width = 8;
				this.height = 18;
				this.value = Item.sellPrice(0, 0, 1, 0);
				this.holdStyle = 1;
				this.noWet = true;
				this.flame = true;
				return;
			case 5323:
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 10, 0, 0));
				this.width = 30;
				this.height = 30;
				return;
			case 5324:
			case 5329:
			case 5330:
				this.DefaultToPlaceableTile(647, 0);
				this.maxStack = 1;
				this.SetShopValues(ItemRarityColor.StrongRed10, Item.sellPrice(0, 5, 0, 0));
				this.consumable = false;
				this.tileBoost = 3;
				return;
			case 5326:
				this.DefaultToFood(22, 22, 0, 0, false, 17);
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 10, 0, 0));
				this.maxStack = 1;
				return;
			case 5327:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 654;
				this.width = 28;
				this.height = 14;
				return;
			case 5328:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 8;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.width = 12;
				this.height = 12;
				return;
			case 5331:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.balloonSlot = 19;
				this.SetShopValues(ItemRarityColor.Yellow8, Item.sellPrice(0, 4, 0, 0));
				this.hasVanityEffects = true;
				return;
			case 5332:
				this.DefaultToVanitypet(1003, 351);
				this.width = 32;
				this.height = 32;
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 10, 0, 0));
				return;
			case 5333:
				this.DefaultToVanitypet(1004, 352);
				this.width = 32;
				this.height = 32;
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 10, 0, 0));
				return;
			case 5334:
				this.width = 22;
				this.height = 14;
				if (this.Variant == ItemVariants.EnabledVariant)
				{
					this.useStyle = 4;
					this.consumable = true;
					this.useAnimation = 45;
					this.useTime = 45;
				}
				this.maxStack = Item.CommonMaxStack;
				this.rare = 3;
				return;
			case 5335:
				this.autoReuse = false;
				this.useStyle = 1;
				this.useAnimation = 20;
				this.useTime = 20;
				this.width = 20;
				this.height = 20;
				this.UseSound = new SoundStyle?(SoundID.Item8);
				this.SetShopValues(ItemRarityColor.StrongRed10, Item.sellPrice(0, 10, 0, 0));
				return;
			case 5336:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = new SoundStyle?(SoundID.Item92);
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.LightPurple6, 0);
				return;
			case 5337:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = new SoundStyle?(SoundID.Item92);
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.LightPurple6, Item.sellPrice(0, 1, 50, 0));
				return;
			case 5338:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = new SoundStyle?(SoundID.Item92);
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.LightPurple6, Item.sellPrice(0, 2, 0, 0));
				return;
			case 5339:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = new SoundStyle?(SoundID.Item92);
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.LightPurple6, Item.sellPrice(0, 0, 25, 0));
				return;
			case 5340:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = new SoundStyle?(SoundID.Item92);
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.LightPurple6, Item.sellPrice(0, 15, 0, 0));
				return;
			case 5341:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = new SoundStyle?(SoundID.Item92);
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.LightPurple6, Item.sellPrice(0, 10, 0, 0));
				return;
			case 5342:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = new SoundStyle?(SoundID.Item92);
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.LightPurple6, Item.sellPrice(0, 0, 50, 0));
				return;
			case 5343:
				this.useStyle = 4;
				this.consumable = true;
				this.useAnimation = 45;
				this.useTime = 45;
				this.UseSound = new SoundStyle?(SoundID.Item92);
				this.width = 28;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.SetShopValues(ItemRarityColor.LightPurple6, Item.sellPrice(0, 0, 25, 0));
				return;
			case 5344:
				this.paintCoating = 2;
				this.width = 24;
				this.height = 24;
				this.value = Item.buyPrice(0, 0, 2, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5345:
				this.DefaultToPlaceableTile(657, 0);
				this.width = 22;
				this.height = 32;
				this.rare = 9;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.accessory = true;
				this.vanity = true;
				return;
			case 5346:
				this.width = 18;
				this.height = 18;
				this.SetShopValues(ItemRarityColor.Green2, Item.sellPrice(0, 0, 30, 0));
				return;
			case 5347:
				this.DefaultToPlaceableTile(658, 0);
				this.width = 22;
				this.height = 32;
				this.rare = 9;
				this.value = Item.sellPrice(0, 1, 0, 0);
				this.accessory = true;
				this.vanity = true;
				return;
			case 5348:
				this.shootSpeed = 3f;
				this.shoot = 1006;
				this.damage = 12;
				this.width = 10;
				this.height = 28;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Arrow;
				this.knockBack = 2f;
				this.ranged = true;
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 0, 0, 10));
				return;
			case 5349:
				this.DefaultToPlaceableTile(659, 0);
				this.rare = 1;
				return;
			case 5350:
				this.DefaultToCapturedCritter(677);
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 0, 2, 50));
				this.width = 12;
				this.height = 12;
				return;
			case 5351:
				this.DefaultToPlaceableTile(660, 0);
				this.maxStack = Item.CommonMaxStack;
				return;
			case 5352:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 91;
				this.placeStyle = 310;
				this.width = 10;
				this.height = 24;
				this.value = 1000;
				this.rare = 1;
				return;
			case 5353:
				this.DefaultToTorch(23, false);
				return;
			case 5354:
				this.DefaultToAccessory(28, 32);
				this.faceSlot = 20;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 2, 0, 0));
				return;
			case 5355:
				this.DefaultToAccessory(26, 36);
				this.backSlot = 36;
				this.frontSlot = 12;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 2, 0, 0));
				return;
			case 5356:
				this.width = 18;
				this.height = 18;
				this.SetShopValues(ItemRarityColor.TrashMinus1, 0);
				return;
			case 5357:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 215;
				this.placeStyle = 15;
				this.width = 12;
				this.height = 12;
				return;
			case 5358:
			case 5437:
				this.useTurn = true;
				this.width = 20;
				this.height = 20;
				this.useStyle = 4;
				this.useTime = 90;
				this.UseSound = new SoundStyle?(SoundID.Item6);
				this.useAnimation = 90;
				this.SetShopValues(ItemRarityColor.Yellow8, Item.sellPrice(0, 10, 0, 0));
				return;
			case 5359:
				this.useTurn = true;
				this.width = 20;
				this.height = 20;
				this.useStyle = 4;
				this.useTime = 90;
				this.UseSound = new SoundStyle?(SoundID.Item6);
				this.useAnimation = 90;
				this.SetShopValues(ItemRarityColor.Yellow8, Item.sellPrice(0, 10, 0, 0));
				return;
			case 5360:
				this.useTurn = true;
				this.width = 20;
				this.height = 20;
				this.useStyle = 4;
				this.useTime = 90;
				this.UseSound = new SoundStyle?(SoundID.Item6);
				this.useAnimation = 90;
				this.SetShopValues(ItemRarityColor.Yellow8, Item.sellPrice(0, 10, 0, 0));
				return;
			case 5361:
				this.useTurn = true;
				this.width = 20;
				this.height = 20;
				this.useStyle = 4;
				this.useTime = 90;
				this.UseSound = new SoundStyle?(SoundID.Item6);
				this.useAnimation = 90;
				this.SetShopValues(ItemRarityColor.Yellow8, Item.sellPrice(0, 10, 0, 0));
				return;
			case 5362:
				this.DefaultToMusicBox(87);
				return;
			case 5363:
				this.DefaultToPlaceableWall(62);
				return;
			case 5364:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 12;
				this.useTime = 5;
				this.width = 20;
				this.height = 20;
				this.autoReuse = true;
				this.rare = 10;
				this.value = Item.sellPrice(0, 10, 0, 0);
				this.tileBoost += 2;
				return;
			case 5365:
				this.DefaultToPlaceableWall(7);
				return;
			case 5366:
				this.DefaultToPlaceableWall(94);
				return;
			case 5367:
				this.DefaultToPlaceableWall(95);
				return;
			case 5368:
				this.DefaultToPlaceableWall(9);
				return;
			case 5369:
				this.DefaultToPlaceableWall(96);
				return;
			case 5370:
				this.DefaultToPlaceableWall(97);
				return;
			case 5371:
				this.DefaultToPlaceableWall(8);
				return;
			case 5372:
				this.DefaultToPlaceableWall(98);
				return;
			case 5373:
				this.DefaultToPlaceableWall(99);
				return;
			case 5374:
				this.DefaultToPlaceableWall(187);
				return;
			case 5375:
				this.DefaultToPlaceableWall(216);
				return;
			case 5376:
				this.DefaultToPlaceableWall(87);
				return;
			case 5377:
				this.shootSpeed = 6f;
				this.shoot = 1008;
				this.damage = 1;
				this.width = 12;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Flare;
				this.knockBack = 1.5f;
				this.rare = 1;
				this.value = Item.buyPrice(0, 0, 1, 50);
				this.ranged = true;
				return;
			case 5378:
				this.shootSpeed = 6f;
				this.shoot = 1009;
				this.damage = 1;
				this.width = 12;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Flare;
				this.knockBack = 1.5f;
				this.value = 7;
				this.ranged = true;
				return;
			case 5379:
				this.shootSpeed = 6f;
				this.shoot = 1010;
				this.damage = 1;
				this.width = 12;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Flare;
				this.knockBack = 1.5f;
				this.value = 7;
				this.ranged = true;
				return;
			case 5380:
				this.shootSpeed = 6f;
				this.shoot = 1011;
				this.damage = 1;
				this.width = 12;
				this.height = 12;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.ammo = AmmoID.Flare;
				this.knockBack = 1.5f;
				this.value = 7;
				this.ranged = true;
				return;
			case 5381:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 663;
				this.width = 18;
				this.height = 34;
				this.SetShopValues(ItemRarityColor.Lime7, Item.sellPrice(0, 3, 0, 0));
				return;
			case 5382:
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 3, 0, 0));
				this.autoReuse = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useStyle = 1;
				this.damage = 50;
				this.useAnimation = 23;
				this.useTime = 23;
				this.width = 30;
				this.height = 30;
				this.shoot = 1012;
				this.shootSpeed = 11f;
				this.knockBack = 4.75f;
				this.melee = true;
				this.shootsEveryUse = true;
				return;
			case 5383:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 664;
				this.width = 18;
				this.height = 18;
				this.SetShopValues(ItemRarityColor.Pink5, Item.sellPrice(0, 0, 0, 15));
				return;
			case 5384:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 665;
				this.width = 18;
				this.height = 18;
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 7, 50, 0));
				return;
			case 5385:
				this.width = 28;
				this.height = 20;
				this.headSlot = 280;
				this.SetShopValues(ItemRarityColor.Blue1, Item.sellPrice(0, 0, 50, 0));
				this.vanity = true;
				return;
			case 5386:
				this.width = 18;
				this.height = 14;
				this.bodySlot = 247;
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 1, 0, 0));
				this.vanity = true;
				return;
			case 5387:
				this.width = 18;
				this.height = 14;
				this.legSlot = 235;
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 1, 0, 0));
				this.vanity = true;
				return;
			case 5388:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 240;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 92;
				return;
			case 5389:
				this.useStyle = 1;
				this.useTurn = true;
				this.useAnimation = 15;
				this.useTime = 10;
				this.autoReuse = true;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.createTile = 242;
				this.width = 30;
				this.height = 30;
				this.value = Item.sellPrice(0, 0, 10, 0);
				this.placeStyle = 65;
				return;
			case 5390:
				this.width = 28;
				this.height = 20;
				this.headSlot = 281;
				this.SetShopValues(ItemRarityColor.Orange3, Item.buyPrice(0, 1, 0, 0));
				this.vanity = true;
				return;
			case 5391:
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
				this.width = 30;
				this.height = 30;
				return;
			case 5392:
				this.DefaultToSolution(1015);
				return;
			case 5393:
				this.DefaultToSolution(1016);
				return;
			case 5394:
				this.DefaultToSolution(1017);
				return;
			case 5395:
				this.DefaultToPlaceableTile(666, 0);
				return;
			case 5396:
				this.DefaultToPlaceableWall(320);
				return;
			case 5397:
				this.DefaultToPlaceableWall(321);
				return;
			case 5398:
				this.DefaultToPlaceableTile(667, 0);
				this.rare = 1;
				return;
			case 5399:
				this.DefaultToPlaceableWall(322);
				return;
			case 5400:
				this.DefaultToVanitypet(1018, 354);
				this.width = 16;
				this.height = 16;
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 10, 0));
				return;
			case 5401:
				this.DefaultToPlaceableTile(669, 0);
				this.rare = 9;
				return;
			case 5402:
				this.DefaultToPlaceableTile(670, 0);
				this.rare = 9;
				return;
			case 5403:
				this.DefaultToPlaceableTile(671, 0);
				this.rare = 9;
				return;
			case 5404:
				this.DefaultToPlaceableTile(672, 0);
				this.rare = 9;
				return;
			case 5405:
				this.DefaultToPlaceableTile(673, 0);
				this.rare = 9;
				return;
			case 5406:
				this.DefaultToPlaceableTile(674, 0);
				this.rare = 9;
				return;
			case 5407:
				this.DefaultToPlaceableTile(675, 0);
				this.rare = 9;
				return;
			case 5408:
				this.DefaultToPlaceableTile(676, 0);
				this.rare = 9;
				return;
			case 5409:
				this.DefaultToPlaceableWall(323);
				this.rare = 9;
				return;
			case 5410:
				this.DefaultToPlaceableWall(324);
				this.rare = 9;
				return;
			case 5411:
				this.DefaultToPlaceableWall(325);
				this.rare = 9;
				return;
			case 5412:
				this.DefaultToPlaceableWall(326);
				this.rare = 9;
				return;
			case 5413:
				this.DefaultToPlaceableWall(327);
				this.rare = 9;
				return;
			case 5414:
				this.DefaultToPlaceableWall(328);
				this.rare = 9;
				return;
			case 5415:
				this.DefaultToPlaceableWall(329);
				this.rare = 9;
				return;
			case 5416:
				this.DefaultToPlaceableWall(330);
				this.rare = 9;
				return;
			case 5417:
				this.DefaultToPlaceableTile(677, 0);
				return;
			case 5418:
				this.DefaultToPlaceableWall(331);
				return;
			case 5419:
				this.DefaultToPlaceableTile(678, 0);
				return;
			case 5420:
				this.DefaultToPlaceableWall(332);
				return;
			case 5421:
				this.DefaultToPlaceableTile(679, 0);
				return;
			case 5422:
				this.DefaultToPlaceableWall(333);
				return;
			case 5423:
				this.DefaultToPlaceableTile(680, 0);
				return;
			case 5424:
				this.DefaultToPlaceableWall(334);
				return;
			case 5425:
				this.DefaultToPlaceableTile(681, 0);
				return;
			case 5426:
				this.DefaultToPlaceableWall(335);
				return;
			case 5427:
				this.DefaultToPlaceableTile(682, 0);
				return;
			case 5428:
				this.DefaultToPlaceableWall(336);
				return;
			case 5429:
				this.DefaultToPlaceableTile(685, 0);
				return;
			case 5430:
				this.DefaultToPlaceableWall(339);
				return;
			case 5431:
				this.DefaultToPlaceableTile(686, 0);
				return;
			case 5432:
				this.DefaultToPlaceableWall(340);
				return;
			case 5433:
				this.DefaultToPlaceableTile(683, 0);
				return;
			case 5434:
				this.DefaultToPlaceableWall(337);
				return;
			case 5435:
				this.DefaultToPlaceableTile(684, 0);
				return;
			case 5436:
				this.DefaultToPlaceableWall(338);
				return;
			case 5438:
				this.useStyle = 1;
				this.shootSpeed = 3f;
				this.shoot = 1019;
				this.width = 16;
				this.height = 24;
				this.maxStack = Item.CommonMaxStack;
				this.consumable = true;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.useAnimation = 15;
				this.value = Item.sellPrice(0, 0, 0, 10);
				this.useTime = 15;
				this.noMelee = true;
				return;
			case 5439:
				this.DefaultToPlaceableTile(687, 0);
				return;
			case 5440:
				this.DefaultToPlaceableTile(688, 0);
				return;
			case 5441:
				this.DefaultToPlaceableTile(689, 0);
				return;
			case 5442:
				this.DefaultToPlaceableTile(690, 0);
				return;
			case 5443:
				this.DefaultToPlaceableTile(691, 0);
				return;
			case 5444:
				this.DefaultToPlaceableTile(692, 0);
				return;
			case 5445:
				this.DefaultToPlaceableWall(341);
				return;
			case 5446:
				this.DefaultToPlaceableWall(342);
				return;
			case 5447:
				this.DefaultToPlaceableWall(343);
				return;
			case 5448:
				this.DefaultToPlaceableWall(344);
				return;
			case 5449:
				this.DefaultToPlaceableWall(345);
				return;
			case 5450:
				this.DefaultToPlaceableWall(346);
				return;
			case 5451:
				this.useStyle = 1;
				this.autoReuse = false;
				this.useAnimation = 32;
				this.holdStyle = 7;
				this.useTime = 32;
				this.width = 32;
				this.height = 20;
				this.noUseGraphic = true;
				this.shoot = 1020;
				this.UseSound = new SoundStyle?(SoundID.Item1);
				this.shootSpeed = 9f;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.rare = 3;
				return;
			case 5452:
				this.width = 16;
				this.height = 24;
				this.accessory = true;
				this.rare = 3;
				this.value = Item.buyPrice(0, 10, 0, 0);
				this.faceSlot = 21;
				return;
			case 5453:
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
				this.width = 30;
				this.height = 30;
				return;
			case 5454:
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
				this.width = 30;
				this.height = 30;
				return;
			case 5455:
				this.SetShopValues(ItemRarityColor.Green2, Item.buyPrice(0, 10, 0, 0));
				this.width = 30;
				this.height = 30;
				break;
			default:
				return;
			}
		}

		/// <summary>
		/// This method sets a variety of Item values common to Clentaminator ammo solution items.<br />
		/// Specifically:<code>
		/// shoot = projectileId - 145;
		/// ammo = AmmoID.Solution;
		/// width = 10;
		/// height = 12;
		/// value = buyPrice(0, 0, 15);
		/// rare = 3;
		/// maxStack = <see cref="F:Terraria.Item.CommonMaxStack" />;
		/// consumable = true;
		/// </code>
		/// </summary>
		/// <param name="projectileId"></param>
		// Token: 0x06000281 RID: 641 RVA: 0x0007F810 File Offset: 0x0007DA10
		public void DefaultToSolution(int projectileId)
		{
			this.shoot = projectileId - 145;
			this.ammo = AmmoID.Solution;
			this.width = 10;
			this.height = 12;
			this.value = Item.buyPrice(0, 0, 15, 0);
			this.rare = 3;
			this.maxStack = Item.CommonMaxStack;
			this.consumable = true;
		}

		/// <summary>
		/// This method sets a variety of Item values common to whip weapons.<br />
		/// Specifically:<code>
		/// autoReuse = false;
		/// useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Swing" />;
		/// useAnimation = animationTotalTime;
		/// useTime = animationTotalTime;
		/// width = 18;
		/// height = 18;
		/// shoot = projectileId;
		/// UseSound = <see cref="F:Terraria.ID.SoundID.Item152" />;
		/// noMelee = true;
		/// DamageType = <see cref="P:Terraria.ModLoader.DamageClass.SummonMeleeSpeed" />;
		/// noUseGraphic = true;
		/// damage = dmg;
		/// knockBack = kb;
		/// shootSpeed = <paramref name="shootspeed" />;
		/// </code>
		/// </summary>
		/// <param name="projectileId"></param>
		/// <param name="dmg"></param>
		/// <param name="kb"></param>
		/// <param name="shootspeed"></param>
		/// <param name="animationTotalTime"></param>
		// Token: 0x06000282 RID: 642 RVA: 0x0007F870 File Offset: 0x0007DA70
		public void DefaultToWhip(int projectileId, int dmg, float kb, float shootspeed, int animationTotalTime = 30)
		{
			this.autoReuse = false;
			this.useStyle = 1;
			this.useAnimation = animationTotalTime;
			this.useTime = animationTotalTime;
			this.width = 18;
			this.height = 18;
			this.shoot = projectileId;
			this.UseSound = new SoundStyle?(SoundID.Item152);
			this.noMelee = true;
			this.DamageType = DamageClass.SummonMeleeSpeed;
			this.noUseGraphic = true;
			this.damage = dmg;
			this.knockBack = kb;
			this.shootSpeed = shootspeed;
		}

		// Token: 0x06000283 RID: 643 RVA: 0x0007F8F4 File Offset: 0x0007DAF4
		public void DefaultTokite(int projId)
		{
			this.width = 20;
			this.height = 28;
			this.DefaultToThrownWeapon(projId, 30, 2f, false);
			this.consumable = false;
			this.ranged = false;
			this.noUseGraphic = true;
			this.maxStack = 1;
			this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
		}

		/// <summary>
		/// Calls <see cref="M:Terraria.Item.SetDefaults(System.Int32)" /> to change this item to another item type while preserving <see cref="F:Terraria.Item.favorited" />. Used by right click code of items that transform into other items, such as how <see cref="F:Terraria.ID.ItemID.Shellphone" /> cycles between different items for different destinations. Does not preserve modded data.
		/// </summary>
		/// <param name="to"></param>
		// Token: 0x06000284 RID: 644 RVA: 0x0007F94C File Offset: 0x0007DB4C
		public void ChangeItemType(int to)
		{
			bool flag = this.favorited;
			this.SetDefaults(to);
			this.favorited = flag;
		}

		// Token: 0x06000285 RID: 645 RVA: 0x0007F970 File Offset: 0x0007DB70
		public void DefaultToVanitypet(int projId, int buffID)
		{
			this.damage = 0;
			this.useStyle = 1;
			this.width = 16;
			this.height = 30;
			this.UseSound = new SoundStyle?(SoundID.Item2);
			this.useAnimation = 20;
			this.useTime = 20;
			this.rare = 3;
			this.noMelee = true;
			this.value = Item.sellPrice(0, 2, 0, 0);
			this.buffType = buffID;
			this.shoot = projId;
		}

		// Token: 0x06000286 RID: 646 RVA: 0x0007F9E8 File Offset: 0x0007DBE8
		public static bool IsAGolfingItem(Item item)
		{
			if (ProjectileID.Sets.IsAGolfBall[item.shoot])
			{
				return true;
			}
			int num = item.type;
			return num == 4039 || num - 4092 <= 3 || num - 4587 <= 11;
		}

		// Token: 0x06000287 RID: 647 RVA: 0x0007FA2C File Offset: 0x0007DC2C
		public void DefaultToSeaShell()
		{
			this.useStyle = 1;
			this.autoReuse = true;
			this.useAnimation = 15;
			this.useTime = 10;
			this.maxStack = Item.CommonMaxStack;
			this.consumable = true;
			this.createTile = 324;
			this.width = 22;
			this.height = 22;
			int num = this.type;
			if (num == 2626)
			{
				this.placeStyle = 1;
				this.value = Item.sellPrice(0, 0, 10, 0);
				return;
			}
			switch (num)
			{
			case 4071:
				this.placeStyle = 4;
				this.value = Item.sellPrice(0, 1, 0, 0);
				return;
			case 4072:
				this.placeStyle = 2;
				this.value = Item.sellPrice(0, 0, 20, 0);
				return;
			case 4073:
				this.placeStyle = 3;
				this.value = Item.sellPrice(0, 0, 20, 0);
				return;
			default:
				this.value = Item.sellPrice(0, 0, 5, 0);
				return;
			}
		}

		// Token: 0x06000288 RID: 648 RVA: 0x0007FB1C File Offset: 0x0007DD1C
		public void DefaultToCapturedCritter(int npcIdToSpawnOnUse)
		{
			this.useStyle = 1;
			this.autoReuse = true;
			this.useTurn = true;
			this.useAnimation = 15;
			this.useTime = 10;
			this.maxStack = Item.CommonMaxStack;
			this.consumable = true;
			this.width = 12;
			this.height = 12;
			this.noUseGraphic = true;
			this.makeNPC = npcIdToSpawnOnUse;
		}

		/// <summary>
		/// This method sets a variety of Item values common to staff magic weapons.<br />
		/// Specifically:<code>
		/// DefaultToMagicWeapon(projType, singleShotTime, pushForwardSpeed, hasAutoReuse: true);
		/// mana = manaPerShot;
		/// width = 40;
		/// height = 40;
		/// UseSound = <see cref="F:Terraria.ID.SoundID.Item43" />;
		/// </code>
		/// Additionally: <br /><inheritdoc cref="M:Terraria.Item.DefaultToMagicWeapon(System.Int32,System.Int32,System.Single,System.Boolean)" />
		/// </summary>
		/// <param name="projType"></param>
		/// <param name="pushForwardSpeed">Passed into DefaultToMagicWeapon as the shotVelocity parameter</param>
		/// <param name="singleShotTime"></param>
		/// <param name="manaPerShot"></param>
		// Token: 0x06000289 RID: 649 RVA: 0x0007FB7E File Offset: 0x0007DD7E
		public void DefaultToStaff(int projType, float pushForwardSpeed, int singleShotTime, int manaPerShot)
		{
			this.DefaultToMagicWeapon(projType, singleShotTime, pushForwardSpeed, true);
			this.mana = manaPerShot;
			this.width = 40;
			this.height = 40;
			this.UseSound = new SoundStyle?(SoundID.Item43);
		}

		/// <summary>
		/// This method sets a variety of Item values common to spear weapons.<br />
		/// Specifically:<code>
		/// useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Shoot" />;
		/// useAnimation = animationTime;
		/// useTime = animationTime;
		/// shootSpeed = pushForwardSpeed;
		/// width = 32;
		/// height = 32;
		/// UseSound = SoundID.Item1;
		/// shoot = projType;
		/// noMelee = true;
		/// noUseGraphic = true;
		/// DamageType = DamageClass.Melee;
		/// </code>
		/// </summary>
		/// <param name="projType"></param>
		/// <param name="pushForwardSpeed"></param>
		/// <param name="animationTime"></param>
		// Token: 0x0600028A RID: 650 RVA: 0x0007FBB4 File Offset: 0x0007DDB4
		public void DefaultToSpear(int projType, float pushForwardSpeed, int animationTime)
		{
			this.useStyle = 5;
			this.useAnimation = 31;
			this.useTime = 31;
			this.shootSpeed = pushForwardSpeed;
			this.width = 32;
			this.height = 32;
			this.UseSound = new SoundStyle?(SoundID.Item1);
			this.shoot = projType;
			this.noMelee = true;
			this.noUseGraphic = true;
			this.melee = true;
			this.useTime = animationTime;
			this.useAnimation = animationTime;
		}

		// Token: 0x0600028B RID: 651 RVA: 0x0007FC2C File Offset: 0x0007DE2C
		private void SetFoodDefaults(int type)
		{
			if (type <= 3195)
			{
				if (type <= 1911)
				{
					if (type <= 967)
					{
						if (type != 353)
						{
							if (type != 357)
							{
								if (type == 967)
								{
									this.DefaultToFood(12, 12, 26, 3600, false, 17);
									this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 1, 0));
									this.useStyle = 9;
								}
							}
							else
							{
								this.DefaultToFood(22, 22, 206, 28800, true, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							}
						}
						else
						{
							this.DefaultToFood(22, 22, 25, 7200, true, 17);
							this.SetShopValues(ItemRarityColor.White0, 100);
							this.maxStack = Item.CommonMaxStack;
							this.holdStyle = 1;
							this.ammo = 353;
							this.notAmmo = true;
						}
					}
					else if (type != 969)
					{
						if (type != 1787)
						{
							if (type == 1911)
							{
								this.DefaultToFood(22, 22, 207, 14400, true, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 10, 0));
							}
						}
						else
						{
							this.DefaultToFood(22, 22, 206, 28800, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 10, 0));
						}
					}
					else
					{
						this.DefaultToFood(12, 12, 26, 36000, false, 17);
						this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 2, 0));
						this.useStyle = 9;
					}
				}
				else if (type <= 1920)
				{
					if (type != 1912)
					{
						if (type != 1919)
						{
							if (type == 1920)
							{
								this.DefaultToFood(22, 22, 207, 14400, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 25, 0));
							}
						}
						else
						{
							this.DefaultToFood(22, 22, 207, 14400, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 25, 0));
						}
					}
					else
					{
						this.DefaultToHealingPotion(22, 22, 80, 17);
						this.SetShopValues(ItemRarityColor.Blue1, 40);
					}
				}
				else
				{
					switch (type)
					{
					case 2266:
						this.DefaultToFood(22, 22, 25, 14400, true, 17);
						this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 5, 0));
						break;
					case 2267:
						this.DefaultToFood(22, 22, 206, 28800, false, 17);
						this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 55, 0));
						break;
					case 2268:
						this.DefaultToFood(22, 22, 206, 36000, true, 17);
						this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 75, 0));
						break;
					default:
						switch (type)
						{
						case 2425:
							this.DefaultToFood(22, 22, 26, 28800, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 25, 0));
							break;
						case 2426:
							this.DefaultToFood(22, 22, 206, 36000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 75, 0));
							break;
						case 2427:
							this.DefaultToFood(22, 22, 206, 28800, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 25, 0));
							break;
						default:
							if (type == 3195)
							{
								this.DefaultToFood(22, 22, 206, 50400, true, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							}
							break;
						}
						break;
					}
				}
			}
			else if (type <= 4625)
			{
				if (type <= 4297)
				{
					if (type != 3532)
					{
						switch (type)
						{
						case 4009:
							this.DefaultToFood(22, 22, 26, 18000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4010:
							break;
						case 4011:
							this.DefaultToFood(22, 22, 207, 57600, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
							break;
						case 4012:
							this.DefaultToFood(22, 22, 206, 36000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4013:
							this.DefaultToFood(22, 22, 207, 86400, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
							break;
						case 4014:
							this.DefaultToFood(22, 22, 26, 36000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4015:
							this.DefaultToFood(22, 22, 207, 28800, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4016:
							this.DefaultToFood(22, 22, 206, 50400, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4017:
							this.DefaultToFood(22, 22, 206, 72000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
							break;
						case 4018:
							this.DefaultToFood(22, 22, 206, 57600, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4019:
							this.DefaultToFood(22, 22, 206, 36000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4020:
							this.DefaultToFood(22, 22, 206, 50400, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4021:
							this.DefaultToFood(22, 22, 206, 36000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4022:
							this.DefaultToFood(22, 22, 207, 172800, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 50, 0, 0));
							break;
						case 4023:
							this.DefaultToFood(22, 22, 206, 57600, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4024:
							this.DefaultToFood(22, 22, 26, 36000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4025:
							this.DefaultToFood(22, 22, 207, 43200, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
							break;
						case 4026:
							this.DefaultToFood(22, 22, 206, 50400, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4027:
							this.DefaultToFood(22, 22, 207, 57600, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
							break;
						case 4028:
							this.DefaultToFood(22, 22, 206, 57600, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4029:
							this.DefaultToFood(22, 22, 207, 28800, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4030:
							this.DefaultToFood(22, 22, 26, 90000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 50, 0));
							break;
						case 4031:
							this.DefaultToFood(22, 22, 26, 36000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4032:
							this.DefaultToFood(22, 22, 206, 36000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4033:
							this.DefaultToFood(22, 22, 26, 36000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 50, 0));
							break;
						case 4034:
							this.DefaultToFood(22, 22, 206, 50400, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 50, 0));
							break;
						case 4035:
							this.DefaultToFood(22, 22, 206, 64800, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 50, 0));
							break;
						case 4036:
							this.DefaultToFood(22, 22, 207, 28800, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4037:
							this.DefaultToFood(22, 22, 207, 57600, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
							break;
						default:
							switch (type)
							{
							case 4282:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4283:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4284:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4285:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4286:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4287:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4288:
								this.DefaultToFood(22, 22, 206, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4289:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4290:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4291:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4292:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4293:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4294:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4295:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4296:
								this.DefaultToFood(22, 22, 26, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							case 4297:
								this.DefaultToFood(22, 22, 206, 18000, false, 17);
								this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
								break;
							}
							break;
						}
					}
					else
					{
						this.DefaultToFood(22, 22, 207, 86400, false, 17);
						this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 5, 0, 0));
					}
				}
				else if (type != 4403)
				{
					if (type != 4411)
					{
						switch (type)
						{
						case 4614:
							this.DefaultToFood(22, 22, 26, 36000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4615:
							this.DefaultToFood(22, 22, 207, 57600, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 4, 0, 0));
							break;
						case 4616:
							this.DefaultToFood(22, 22, 26, 36000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4617:
							this.DefaultToFood(22, 22, 26, 54000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4618:
							this.DefaultToFood(22, 22, 26, 36000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
							break;
						case 4619:
							this.DefaultToFood(22, 22, 26, 72000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4620:
							this.DefaultToFood(22, 22, 26, 72000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4621:
							this.DefaultToFood(22, 22, 26, 72000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4622:
							this.DefaultToFood(22, 22, 26, 72000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4623:
							this.DefaultToFood(22, 22, 206, 72000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4624:
							this.DefaultToFood(22, 22, 26, 54000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 2, 0, 0));
							break;
						case 4625:
							this.DefaultToFood(22, 22, 26, 90000, false, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 3, 0, 0));
							break;
						}
					}
					else
					{
						this.DefaultToFood(22, 22, 26, 36000, false, 17);
						this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
					}
				}
				else
				{
					this.DefaultToFood(22, 22, 206, 36000, false, 17);
					this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
				}
			}
			else if (type <= 5042)
			{
				if (type != 5009)
				{
					if (type != 5041)
					{
						if (type == 5042)
						{
							this.DefaultToFood(22, 22, 206, 36000, true, 17);
							this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
						}
					}
					else
					{
						this.DefaultToFood(22, 22, 26, 72000, true, 17);
						this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
					}
				}
				else
				{
					this.DefaultToFood(22, 22, 26, 18000, true, 17);
					this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 0, 20));
				}
			}
			else if (type != 5092)
			{
				if (type != 5093)
				{
					switch (type)
					{
					case 5275:
						this.DefaultToFood(22, 22, 26, 7200, true, 17);
						this.SetShopValues(ItemRarityColor.White0, Item.buyPrice(0, 0, 1, 25));
						break;
					case 5277:
						this.DefaultToFood(22, 22, 26, 18000, false, 17);
						this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
						break;
					case 5278:
						this.DefaultToFood(22, 22, 26, 18000, false, 17);
						this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
						break;
					}
				}
				else
				{
					this.DefaultToFood(22, 22, 206, 21600, false, 17);
					this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 1, 0, 0));
				}
			}
			else
			{
				this.DefaultToFood(22, 22, 206, 28800, false, 17);
				this.SetShopValues(ItemRarityColor.Blue1, Item.buyPrice(0, 0, 50, 0));
			}
			float num = 0f;
			num = ((this.buffType == 207) ? (num + 12f) : ((this.buffType != 206) ? (num + 3f) : (num + 8f)));
			num += (float)(this.buffTime / 14400);
			this.rare = (int)(num / 4f);
		}

		// Token: 0x0600028C RID: 652 RVA: 0x00080D00 File Offset: 0x0007EF00
		public void DefaultToMount(int mount)
		{
			this.width = 36;
			this.height = 26;
			this.mountType = mount;
		}

		/// <summary>
		/// This method sets a variety of Item values common to placeable walls.<br />
		/// Specifically:<code>
		/// useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Swing" />;
		/// useTurn = true;
		/// useAnimation = 15;
		/// useTime = 7;
		/// autoReuse = true;
		/// maxStack = <see cref="F:Terraria.Item.CommonMaxStack" />;
		/// consumable = true;
		/// createWall = wallToPlace;
		/// width = 12;
		/// height = 12;
		/// </code>
		/// </summary>
		/// <param name="wallToPlace"></param>
		// Token: 0x0600028D RID: 653 RVA: 0x00080D1C File Offset: 0x0007EF1C
		public void DefaultToPlaceableWall(int wallToPlace)
		{
			this.useStyle = 1;
			this.useTurn = true;
			this.useAnimation = 15;
			this.useTime = 7;
			this.autoReuse = true;
			this.maxStack = Item.CommonMaxStack;
			this.consumable = true;
			this.createWall = wallToPlace;
			this.width = 12;
			this.height = 12;
		}

		/// <summary>
		/// This method conveniently sets <see cref="F:Terraria.Item.damage" />, <see cref="F:Terraria.Item.knockBack" />, and <see cref="F:Terraria.Item.crit" />.
		/// </summary>
		/// <param name="dmg"></param>
		/// <param name="knockback"></param>
		/// <param name="bonusCritChance"></param>
		// Token: 0x0600028E RID: 654 RVA: 0x00080D76 File Offset: 0x0007EF76
		public void SetWeaponValues(int dmg, float knockback, int bonusCritChance = 0)
		{
			this.damage = dmg;
			this.knockBack = knockback;
			this.crit = bonusCritChance;
		}

		/// <summary>
		/// This method sets a variety of Item values common to bow weapons.<br />
		/// Specifically: <code>width = 14;<br />height = 30;<br />UseSound = SoundID.Item5;</code><br />
		/// Additionally: <br /><inheritdoc cref="M:Terraria.Item.DefaultToRangedWeapon(System.Int32,System.Int32,System.Int32,System.Single,System.Boolean)" />
		/// </summary>
		/// <param name="singleShotTime"></param>
		/// <param name="shotVelocity"></param>
		/// <param name="hasAutoReuse"></param>
		// Token: 0x0600028F RID: 655 RVA: 0x00080D8D File Offset: 0x0007EF8D
		public void DefaultToBow(int singleShotTime, float shotVelocity, bool hasAutoReuse = false)
		{
			this.DefaultToRangedWeapon(1, AmmoID.Arrow, singleShotTime, shotVelocity, hasAutoReuse);
			this.width = 14;
			this.height = 30;
			this.UseSound = new SoundStyle?(SoundID.Item5);
		}

		/// <summary>
		/// This method sets a variety of Item values common to magic weapons.<br />
		/// Specifically:<code>
		/// autoReuse = hasAutoReuse;
		/// useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Shoot" />;
		/// useAnimation = singleShotTime;
		/// useTime = singleShotTime;
		/// shoot = projType;
		/// shootSpeed = shotVelocity;
		/// noMelee = true;
		/// DamageType = DamageClass.Magic;
		/// </code>
		/// </summary>
		/// <param name="projType"></param>
		/// <param name="singleShotTime"></param>
		/// <param name="shotVelocity"></param>
		/// <param name="hasAutoReuse"></param>
		// Token: 0x06000290 RID: 656 RVA: 0x00080DBE File Offset: 0x0007EFBE
		public void DefaultToMagicWeapon(int projType, int singleShotTime, float shotVelocity, bool hasAutoReuse = false)
		{
			this.autoReuse = hasAutoReuse;
			this.useStyle = 5;
			this.useAnimation = singleShotTime;
			this.useTime = singleShotTime;
			this.shoot = projType;
			this.shootSpeed = shotVelocity;
			this.noMelee = true;
			this.magic = true;
		}

		/// <summary>
		/// This method sets a variety of Item values common to ranged weapons.<br />
		/// Specifically:<code>
		/// autoReuse = hasAutoReuse;
		/// useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Shoot" />;
		/// useAnimation = singleShotTime;
		/// useTime = singleShotTime;
		/// shoot = baseProjType;
		/// useAmmo = ammoID;
		/// shootSpeed = shotVelocity;
		/// noMelee = true;
		/// DamageType = DamageClass.Ranged;
		/// </code>
		/// </summary>
		/// <param name="baseProjType"></param>
		/// <param name="ammoID">The Ammo ID this weapon will consume. See the <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Ammo">Ammo Guide</see> for more information</param>
		/// <param name="singleShotTime"></param>
		/// <param name="shotVelocity"></param>
		/// <param name="hasAutoReuse"></param>
		// Token: 0x06000291 RID: 657 RVA: 0x00080DFC File Offset: 0x0007EFFC
		public void DefaultToRangedWeapon(int baseProjType, int ammoID, int singleShotTime, float shotVelocity, bool hasAutoReuse = false)
		{
			this.autoReuse = hasAutoReuse;
			this.useStyle = 5;
			this.useAnimation = singleShotTime;
			this.useTime = singleShotTime;
			this.shoot = baseProjType;
			this.useAmmo = ammoID;
			this.shootSpeed = shotVelocity;
			this.noMelee = true;
			this.ranged = true;
		}

		/// <summary>
		/// This method sets a variety of Item values common to thrown weapons.<br />
		/// Specifically:<code>
		/// autoReuse = hasAutoReuse;
		/// useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Swing" />;
		/// useAnimation = singleShotTime;
		/// useTime = singleShotTime;
		/// shoot = baseProjType;
		/// shootSpeed = shotVelocity;
		/// noMelee = true;
		/// DamageType = DamageClass.Ranged;
		/// consumable = true;
		/// maxStack = <see cref="F:Terraria.Item.CommonMaxStack" />;
		/// </code>
		/// </summary>
		/// <param name="baseProjType"></param>
		/// <param name="singleShotTime"></param>
		/// <param name="shotVelocity"></param>
		/// <param name="hasAutoReuse"></param>
		// Token: 0x06000292 RID: 658 RVA: 0x00080E4C File Offset: 0x0007F04C
		public void DefaultToThrownWeapon(int baseProjType, int singleShotTime, float shotVelocity, bool hasAutoReuse = false)
		{
			this.autoReuse = hasAutoReuse;
			this.useStyle = 1;
			this.useAnimation = singleShotTime;
			this.useTime = singleShotTime;
			this.shoot = baseProjType;
			this.shootSpeed = shotVelocity;
			this.noMelee = true;
			this.ranged = true;
			this.consumable = true;
			this.maxStack = Item.CommonMaxStack;
		}

		/// <summary>
		/// This method sets a variety of Item values common to items that place music boxes.<br />
		/// Specifically:<code>
		/// flame = true;
		/// noWet = !allowWaterPlacement;
		/// holdStyle = <see cref="F:Terraria.ID.ItemHoldStyleID.HoldFront" />;
		/// autoReuse = true;
		/// maxStack = <see cref="F:Terraria.Item.CommonMaxStack" />;
		/// consumable = true;
		/// createTile = tileIDToPlace;
		/// placeStyle = tileStyleToPlace;
		/// width = 10;
		/// height = 12;
		/// value = 60;
		/// useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Swing" />;
		/// useTurn = true;
		/// useAnimation = 15;
		/// useTime = 10;
		/// </code>
		/// </summary>
		/// <param name="tileIDToPlace"></param>
		/// <param name="tileStyleToPlace"></param>
		/// <param name="allowWaterPlacement"></param>
		// Token: 0x06000293 RID: 659 RVA: 0x00080EA4 File Offset: 0x0007F0A4
		public void DefaultToTorch(int tileIDToPlace, int tileStyleToPlace, bool allowWaterPlacement = false)
		{
			this.DefaultToTorch(tileStyleToPlace, allowWaterPlacement);
			this.createTile = tileIDToPlace;
		}

		// Token: 0x06000294 RID: 660 RVA: 0x00080EB8 File Offset: 0x0007F0B8
		internal void DefaultToTorch(int tileStyleToPlace, bool allowWaterPlacement = false)
		{
			this.flame = true;
			this.noWet = !allowWaterPlacement;
			this.holdStyle = 1;
			this.autoReuse = true;
			this.maxStack = Item.CommonMaxStack;
			this.consumable = true;
			this.createTile = 4;
			this.placeStyle = tileStyleToPlace;
			this.width = 10;
			this.height = 12;
			this.value = 60;
			this.useStyle = 1;
			this.useTurn = true;
			this.useAnimation = 15;
			this.useTime = 10;
		}

		/// <inheritdoc cref="M:Terraria.Item.DefaultToPlaceableTile(System.UInt16,System.Int32)" />
		// Token: 0x06000295 RID: 661 RVA: 0x00080F3A File Offset: 0x0007F13A
		public void DefaultToPlaceableTile(int tileIDToPlace, int tileStyleToPlace = 0)
		{
			this.DefaultToPlaceableTile((ushort)tileIDToPlace, tileStyleToPlace);
		}

		/// <summary>
		/// This method sets a variety of Item values common to items that place tiles.<br />
		/// Specifically:<code>
		/// createTile = tileIDToPlace;
		/// placeStyle = tileStyleToPlace;
		/// width = 14;
		/// height = 14;
		/// useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Swing" />;
		/// useAnimation = 15;
		/// useTime = 10;
		/// maxStack = <see cref="F:Terraria.Item.CommonMaxStack" />;
		/// useTurn = true;
		/// autoReuse = true;
		/// consumable = true;
		/// </code>
		/// </summary>
		/// <param name="tileIDToPlace"></param>
		/// <param name="tileStyleToPlace"></param>
		// Token: 0x06000296 RID: 662 RVA: 0x00080F48 File Offset: 0x0007F148
		public void DefaultToPlaceableTile(ushort tileIDToPlace, int tileStyleToPlace = 0)
		{
			this.createTile = (int)tileIDToPlace;
			this.placeStyle = tileStyleToPlace;
			this.width = 14;
			this.height = 14;
			this.useStyle = 1;
			this.useAnimation = 15;
			this.useTime = 10;
			this.maxStack = Item.CommonMaxStack;
			this.useTurn = true;
			this.autoReuse = true;
			this.consumable = true;
		}

		/// <summary>
		/// Assigns properties common to extractinator-only items, ensuring a typical use animation when clicking on an Extractinator tile and no animation otherwise. Use this method for items that don't do anything when used but should be useable in an Extractinator. Most notably this sets <see cref="F:Terraria.Item.chlorophyteExtractinatorConsumable" /> to true.
		/// </summary>
		// Token: 0x06000297 RID: 663 RVA: 0x00080FAA File Offset: 0x0007F1AA
		public void MakeUsableWithChlorophyteExtractinator()
		{
			this.useStyle = 1;
			this.useAnimation = 15;
			this.useTime = 10;
			this.chlorophyteExtractinatorConsumable = true;
			this.autoReuse = true;
			this.consumable = true;
		}

		// Token: 0x06000298 RID: 664 RVA: 0x00080FD8 File Offset: 0x0007F1D8
		public void DefaultToGolfClub(int newwidth, int newheight)
		{
			this.width = newwidth;
			this.height = newheight;
			this.channel = true;
			this.useStyle = 8;
			this.holdStyle = 4;
			this.shootSpeed = 6f;
			this.shoot = 722;
			this.UseSound = null;
			this.useAnimation = (this.useTime = 12);
			this.noMelee = true;
		}

		// Token: 0x06000299 RID: 665 RVA: 0x00081044 File Offset: 0x0007F244
		public void DefaultToLawnMower(int newwidth, int newheight)
		{
			this.width = newwidth;
			this.height = newheight;
			this.holdStyle = 1;
			this.useStyle = 11;
			this.useAnimation = 30;
			this.useTime = 10;
			this.UseSound = new SoundStyle?(SoundID.Item23);
			this.autoReuse = true;
		}

		/// <summary>
		/// This method sets a variety of Item values common to food items.<br />
		/// Specifically: <code>
		/// UseSound = useGulpSound ? Item3 : Item2;
		/// useStyle = useGulpSound ? <see cref="F:Terraria.ID.ItemUseStyleID.DrinkLiquid" /> : <see cref="F:Terraria.ID.ItemUseStyleID.EatFood" />;
		/// useTurn = true;
		/// useAnimation = useTime = animationTime;
		/// maxStack = <see cref="F:Terraria.Item.CommonMaxStack" />;
		/// consumable = true;
		/// buffType = <paramref name="foodbuff" />;
		/// buffTime = <paramref name="foodbuffduration" />;
		/// rare = <see cref="F:Terraria.ID.ItemRarityID.Blue" />;
		/// value = 20 silver;
		/// </code>
		/// </summary>
		/// <param name="newwidth"></param>
		/// <param name="newheight"></param>
		/// <param name="foodbuff"></param>
		/// <param name="foodbuffduration"></param>
		/// <param name="useGulpSound">If true, the gulp sound is set, otherwise the crunch sound is set</param>
		/// <param name="animationTime"></param>
		// Token: 0x0600029A RID: 666 RVA: 0x00081098 File Offset: 0x0007F298
		public void DefaultToFood(int newwidth, int newheight, int foodbuff, int foodbuffduration, bool useGulpSound = false, int animationTime = 17)
		{
			if (useGulpSound)
			{
				this.UseSound = new SoundStyle?(SoundID.Item3);
			}
			else
			{
				this.UseSound = new SoundStyle?(SoundID.Item2);
			}
			if (useGulpSound)
			{
				this.useStyle = 9;
			}
			else
			{
				this.useStyle = 2;
			}
			this.useTurn = true;
			this.useTime = animationTime;
			this.useAnimation = animationTime;
			this.maxStack = Item.CommonMaxStack;
			this.consumable = true;
			this.width = newwidth;
			this.height = newheight;
			this.buffType = foodbuff;
			this.buffTime = foodbuffduration;
			this.rare = 1;
			this.value = Item.buyPrice(0, 0, 20, 0);
		}

		// Token: 0x0600029B RID: 667 RVA: 0x00081140 File Offset: 0x0007F340
		public void DefaultToHealingPotion(int newwidth, int newheight, int healingAmount, int animationTime = 17)
		{
			this.UseSound = new SoundStyle?(SoundID.Item3);
			this.useStyle = 9;
			this.useTurn = true;
			this.useTime = animationTime;
			this.useAnimation = animationTime;
			this.maxStack = Item.CommonMaxStack;
			this.consumable = true;
			this.width = newwidth;
			this.height = newheight;
			this.rare = 1;
			this.value = Item.buyPrice(0, 0, 20, 0);
			this.potion = true;
			this.healLife = healingAmount;
		}

		/// <summary>
		/// A helper method that sets item rarity (<see cref="F:Terraria.Item.rare" />) and item value (<see cref="F:Terraria.Item.value" />). 
		/// </summary>
		/// <param name="rarity"></param>
		/// <param name="coinValue"></param>
		// Token: 0x0600029C RID: 668 RVA: 0x000811C2 File Offset: 0x0007F3C2
		public void SetShopValues(ItemRarityColor rarity, int coinValue)
		{
			this.rare = (int)rarity;
			this.value = coinValue;
		}

		/// <summary>Modders should not use this.</summary>
		// Token: 0x0600029D RID: 669 RVA: 0x000811D2 File Offset: 0x0007F3D2
		public void DefaultToHeadgear(int newwidth, int newheight, int helmetArtID)
		{
			this.width = newwidth;
			this.height = newheight;
			this.headSlot = helmetArtID;
		}

		// Token: 0x0600029E RID: 670 RVA: 0x000811E9 File Offset: 0x0007F3E9
		public void DefaultToAccessory(int newwidth = 24, int newheight = 24)
		{
			this.width = newwidth;
			this.height = newheight;
			this.accessory = true;
		}

		// Token: 0x0600029F RID: 671 RVA: 0x00081200 File Offset: 0x0007F400
		public void DefaultToGuitar(int newwidth = 24, int newheight = 24)
		{
			this.width = newwidth;
			this.height = newheight;
			this.autoReuse = true;
			this.holdStyle = 5;
			this.useStyle = 12;
			this.useAnimation = (this.useTime = 12);
		}

		/// <summary>
		/// This method sets a variety of Item values common to items that place music boxes.<br />
		/// Specifically:<code>
		/// useStyle = <see cref="F:Terraria.ID.ItemUseStyleID.Swing" />;
		/// useTurn = true;
		/// useAnimation = 15;
		/// useTime = 10;
		/// autoReuse = true;
		/// consumable = true;
		/// createTile = tileIDToPlace;
		/// placeStyle = style;
		/// width = 24;
		/// height = 24;
		/// rare = <see cref="F:Terraria.ID.ItemRarityID.LightRed" />;
		/// value = 100000;
		/// accessory = true;
		/// hasVanityEffects = true;
		/// </code>
		/// </summary>
		/// <param name="tileIDToPlace"></param>
		/// <param name="style"></param>
		// Token: 0x060002A0 RID: 672 RVA: 0x00081242 File Offset: 0x0007F442
		public void DefaultToMusicBox(int tileIDToPlace, int style = 0)
		{
			this.DefaultToMusicBox(style);
			this.createTile = tileIDToPlace;
		}

		// Token: 0x060002A1 RID: 673 RVA: 0x00081254 File Offset: 0x0007F454
		internal void DefaultToMusicBox(int style)
		{
			this.useStyle = 1;
			this.useTurn = true;
			this.useAnimation = 15;
			this.useTime = 10;
			this.autoReuse = true;
			this.consumable = true;
			this.createTile = 139;
			this.placeStyle = style;
			this.width = 24;
			this.height = 24;
			this.rare = 4;
			this.value = 100000;
			this.accessory = true;
			this.hasVanityEffects = true;
		}

		// Token: 0x060002A2 RID: 674 RVA: 0x000812CF File Offset: 0x0007F4CF
		public void SetDefaults(int Type = 0)
		{
			this.SetDefaults(Type, false, null);
		}

		/// <summary>
		/// Call in <see cref="M:Terraria.ModLoader.ModItem.SetDefaults" /> to clone all the default item property values of an existing item. This is useful for prototyping or making a variant of an existing item. Note that other changes made to the cloned item, such as if another mod changes a weapon's damage, will be applied when using this approach. This may or may not be desired. 
		/// <para /> When using this method make sure that any additional changes to item properties are on lines after this method is called, otherwise they will be overwritten. Some values cloned by this method might be undesired, such as equipment slot values like shoeSlot. <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Content/Items/Accessories/WaspNest.cs#L51">WaspNest.cs</see> shows how to cache and restore those values.
		/// <para /> This will only clone the values, any additional logic such as shoot accuracy, recipes, accessory effects, use item logic, etc. will not be copied. The <see href="https://github.com/tModLoader/tModLoader/wiki/Advanced-Vanilla-Code-Adaption">Vanilla Code Adaption wiki page</see> teaches how to make a complete clone of an existing item.
		/// </summary>
		/// <param name="TypeToClone"></param>
		// Token: 0x060002A3 RID: 675 RVA: 0x000812DC File Offset: 0x0007F4DC
		public void CloneDefaults(int TypeToClone)
		{
			int originalType = this.type;
			int originalNetID = this.netID;
			ModItem originalModItem = this.ModItem;
			GlobalItem[] originalGlobals = this._globals;
			this.SetDefaults(TypeToClone);
			this.type = originalType;
			this.netID = originalNetID;
			this.ModItem = originalModItem;
			this._globals = originalGlobals;
		}

		// Token: 0x060002A4 RID: 676 RVA: 0x00081328 File Offset: 0x0007F528
		public void SetDefaults(int Type, bool noMatCheck = false, ItemVariant variant = null)
		{
			if (Type < 0)
			{
				this.netDefaults(Type);
				return;
			}
			if (Main.netMode == 1 || Main.netMode == 2)
			{
				this.playerIndexTheItemIsReservedFor = 255;
			}
			else
			{
				this.playerIndexTheItemIsReservedFor = Main.myPlayer;
			}
			this.ResetStats(Type);
			if (variant == null)
			{
				variant = ItemVariants.SelectVariant(Type);
			}
			else if (!ItemVariants.HasVariant(Type, variant))
			{
				variant = null;
			}
			this.Variant = variant;
			if (this.type == 0)
			{
				this.netID = 0;
				this.stack = 0;
			}
			else if (ItemID.Sets.IsFood[this.type])
			{
				this.SetFoodDefaults(this.type);
			}
			else if (this.type <= 1000)
			{
				this.SetDefaults1(this.type);
			}
			else if (this.type <= 2001)
			{
				this.SetDefaults2(this.type);
			}
			else if (this.type <= 3000)
			{
				this.SetDefaults3(this.type);
			}
			else if (this.type <= 3989)
			{
				this.SetDefaults4(this.type);
			}
			else
			{
				this.SetDefaults5(this.type);
			}
			this.ApplyItemAnimationCompensationsToVanillaItems();
			this.RestoreMeleeSpeedBehaviorOnVanillaItems();
			if (this.type < (int)ItemID.Count && this.rare == -13)
			{
				this.master = true;
			}
			this.dye = GameShaders.Armor.GetShaderIdFromItemId(this.type);
			if (this.hairDye != 0)
			{
				this.hairDye = GameShaders.Hair.GetShaderIdFromItemId(this.type);
			}
			if (this.type == 2015)
			{
				this.value = Item.sellPrice(0, 0, 5, 0);
			}
			if (this.type == 2016)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 2017)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 5212)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 5300)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 5311)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 5312)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 5313)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 2019)
			{
				this.value = Item.sellPrice(0, 0, 5, 0);
			}
			if (this.type == 2018)
			{
				this.value = Item.sellPrice(0, 0, 5, 0);
			}
			if (this.type == 3563)
			{
				this.value = Item.sellPrice(0, 0, 5, 0);
			}
			if (this.type == 261)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 2205)
			{
				this.value = Item.sellPrice(0, 0, 12, 50);
			}
			if (this.type == 2123)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 2122)
			{
				this.value = Item.sellPrice(0, 0, 7, 50);
			}
			if (this.type == 2003)
			{
				this.value = Item.sellPrice(0, 0, 10, 0);
			}
			if (this.type == 2156)
			{
				this.value = Item.sellPrice(0, 0, 15, 0);
			}
			if (this.type == 2157)
			{
				this.value = Item.sellPrice(0, 0, 15, 0);
			}
			if (this.type == 2121)
			{
				this.value = Item.sellPrice(0, 0, 10, 0);
			}
			if (this.type == 1992)
			{
				this.value = Item.sellPrice(0, 0, 3, 0);
			}
			if (this.type == 2004)
			{
				this.value = Item.sellPrice(0, 0, 5, 0);
			}
			if (this.type == 2002)
			{
				this.value = Item.sellPrice(0, 0, 5, 0);
			}
			if (this.type == 2740)
			{
				this.value = Item.sellPrice(0, 0, 2, 50);
			}
			if (this.type == 2006)
			{
				this.value = Item.sellPrice(0, 0, 10, 0);
			}
			if (this.type == 3191)
			{
				this.value = Item.sellPrice(0, 0, 20, 0);
			}
			if (this.type == 3192)
			{
				this.value = Item.sellPrice(0, 0, 2, 50);
			}
			if (this.type == 3193)
			{
				this.value = Item.sellPrice(0, 0, 5, 0);
			}
			if (this.type == 3194)
			{
				this.value = Item.sellPrice(0, 0, 10, 0);
			}
			if (this.type == 2007)
			{
				this.value = Item.sellPrice(0, 0, 50, 0);
			}
			if (this.type == 2673)
			{
				this.value = Item.sellPrice(0, 10, 0, 0);
			}
			if (this.bait > 0)
			{
				if (this.bait >= 50)
				{
					this.rare = 3;
				}
				else if (this.bait >= 30)
				{
					this.rare = 2;
				}
				else if (this.bait >= 15)
				{
					this.rare = 1;
				}
			}
			if (this.type >= 1994 && this.type <= 2001)
			{
				int num = this.type - 1994;
				if (num == 0)
				{
					this.value = Item.sellPrice(0, 0, 5, 0);
				}
				if (num == 4)
				{
					this.value = Item.sellPrice(0, 0, 10, 0);
				}
				if (num == 6)
				{
					this.value = Item.sellPrice(0, 0, 15, 0);
				}
				if (num == 3)
				{
					this.value = Item.sellPrice(0, 0, 20, 0);
				}
				if (num == 7)
				{
					this.value = Item.sellPrice(0, 0, 30, 0);
				}
				if (num == 2)
				{
					this.value = Item.sellPrice(0, 0, 40, 0);
				}
				if (num == 1)
				{
					this.value = Item.sellPrice(0, 0, 75, 0);
				}
				if (num == 5)
				{
					this.value = Item.sellPrice(0, 1, 0, 0);
				}
			}
			if (this.type == 2663 || this.type == 1720 || this.type == 2137 || this.type == 2155 || this.type == 2151 || this.type == 1704 || this.type == 2143 || this.type == 1710 || this.type == 2238 || this.type == 2133 || this.type == 2147 || this.type == 2405 || this.type == 1716 || this.type == 1705)
			{
				this.value = Item.sellPrice(0, 2, 0, 0);
			}
			if (Main.projHook[this.shoot])
			{
				this.useStyle = 0;
				this.useTime = 0;
				this.useAnimation = 0;
			}
			if (ItemID.Sets.IsDrill[this.type] || ItemID.Sets.IsChainsaw[this.type] || this.type == 1262)
			{
				this.useTime = (int)((double)this.useTime * 0.6);
				if (this.useTime < 1)
				{
					this.useTime = 1;
				}
				this.useAnimation = (int)((double)this.useAnimation * 0.6);
				if (this.useAnimation < 1)
				{
					this.useAnimation = 1;
				}
				this.tileBoost--;
			}
			if (ItemID.Sets.IsFood[this.type])
			{
				this.holdStyle = 1;
			}
			if (this.type >= 1803 && this.type <= 1807)
			{
				this.SetDefaults(1533 + this.type - 1803);
			}
			if (this.dye > 0)
			{
				this.maxStack = Item.CommonMaxStack;
			}
			if (this.createTile == 19)
			{
				this.maxStack = Item.CommonMaxStack;
			}
			this.netID = this.type;
			ItemLoader.SetDefaults(this, true);
			if (!noMatCheck)
			{
				this.material = ItemID.Sets.IsAMaterial[this.type];
			}
			this.RebuildTooltip();
			if (this.type > 0 && ItemID.Sets.Deprecated[this.type])
			{
				this.TurnToAir(false);
			}
		}

		// Token: 0x060002A5 RID: 677 RVA: 0x00081B3B File Offset: 0x0007FD3B
		public void OnCreated(ItemCreationContext context)
		{
			ItemLoader.OnCreated(this, context);
			if (this.type == 5437)
			{
				this.SetDefaults(5358);
			}
		}

		// Token: 0x060002A6 RID: 678 RVA: 0x00081B5C File Offset: 0x0007FD5C
		public void ResetStats(int Type)
		{
			this.tooltipContext = -1;
			this.BestiaryNotes = null;
			this.ModItem = null;
			this._globals = null;
			this.StatsModifiedBy = new List<Mod>();
			this.AllowReforgeForStackableItem = false;
			this.useTurnOnAnimationStart = false;
			this.attackSpeedOnlyAffectsWeaponAnimation = false;
			this.useLimitPerAnimation = null;
			this.consumeAmmoOnFirstShotOnly = false;
			this.consumeAmmoOnLastShotOnly = false;
			this.InterruptChannelOnHurt = false;
			this.StopAnimationOnHurt = false;
			this.DamageType = DamageClass.Default;
			this.ChangePlayerDirectionOnShoot = true;
			this.ArmorPenetration = 0;
			this._nameOverride = null;
			this.sentry = false;
			this.hasVanityEffects = false;
			this.DD2Summon = false;
			this.shopSpecialCurrency = -1;
			this.shopCustomPrice = null;
			this.expert = false;
			this.master = false;
			this.isAShopItem = false;
			this.expertOnly = false;
			this.masterOnly = false;
			this.instanced = false;
			this.questItem = false;
			this.fishingPole = 0;
			this.bait = 0;
			this.hairDye = -1;
			this.makeNPC = 0;
			this.dye = 0;
			this.paint = 0;
			this.paintCoating = 0;
			this.tileWand = -1;
			this.notAmmo = false;
			this.netID = 0;
			this.prefix = 0;
			this.crit = 0;
			this.mech = false;
			this.flame = false;
			this.reuseDelay = 0;
			this.placeStyle = 0;
			this.buffTime = 0;
			this.buffType = 0;
			this.mountType = -1;
			this.cartTrack = false;
			this.material = false;
			this.noWet = false;
			this.vanity = false;
			this.mana = 0;
			this.wet = false;
			this.wetCount = 0;
			this.lavaWet = false;
			this.channel = false;
			this.manaIncrease = 0;
			this.timeSinceTheItemHasBeenReservedForSomeone = 0;
			this.noMelee = false;
			this.noUseGraphic = false;
			this.lifeRegen = 0;
			this.shootSpeed = 0f;
			this.active = (Type != 0);
			this.alpha = 0;
			this.ammo = AmmoID.None;
			this.useAmmo = AmmoID.None;
			this.autoReuse = false;
			this.accessory = false;
			this.axe = 0;
			this.healMana = 0;
			this.bodySlot = -1;
			this.legSlot = -1;
			this.headSlot = -1;
			this.potion = false;
			this.color = default(Color);
			this.glowMask = -1;
			this.consumable = false;
			this.chlorophyteExtractinatorConsumable = false;
			this.createTile = -1;
			this.createWall = -1;
			this.damage = -1;
			this.defense = 0;
			this.hammer = 0;
			this.healLife = 0;
			this.holdStyle = 0;
			this.knockBack = 0f;
			this.maxStack = 1;
			this.pick = 0;
			this.rare = 0;
			this.scale = 1f;
			this.shoot = 0;
			this.stack = 1;
			this.ToolTip = null;
			this.tileBoost = 0;
			this.useStyle = 0;
			this.UseSound = null;
			this.useTime = 100;
			this.useAnimation = 100;
			this.value = 0;
			this.useTurn = false;
			this.buy = false;
			this.handOnSlot = -1;
			this.handOffSlot = -1;
			this.backSlot = -1;
			this.frontSlot = -1;
			this.shoeSlot = -1;
			this.waistSlot = -1;
			this.wingSlot = -1;
			this.shieldSlot = -1;
			this.neckSlot = -1;
			this.faceSlot = -1;
			this.balloonSlot = -1;
			this.beardSlot = -1;
			this.uniqueStack = false;
			this.favorited = false;
			this.shootsEveryUse = false;
			this.Variant = null;
			this.type = Type;
		}

		// Token: 0x060002A7 RID: 679 RVA: 0x00081EE4 File Offset: 0x000800E4
		public Color GetAlpha(Color newColor)
		{
			Color? color2 = ItemLoader.GetAlpha(this, newColor);
			if (color2 != null)
			{
				return color2.GetValueOrDefault();
			}
			if (ItemID.Sets.BossBag[this.type])
			{
				return Color.Lerp(newColor, Color.White, 0.4f);
			}
			int num3 = this.type;
			if (num3 > 1572)
			{
				if (num3 <= 3580)
				{
					if (num3 <= 2786)
					{
						if (num3 <= 1826)
						{
							if (num3 - 1734 <= 1)
							{
								goto IL_3E7;
							}
							if (num3 != 1826)
							{
								goto IL_6BB;
							}
							return new Color(255, 255, 255, 200);
						}
						else
						{
							if (num3 - 1867 <= 1)
							{
								goto IL_3E7;
							}
							if (num3 - 2763 > 2 && num3 - 2782 > 4)
							{
								goto IL_6BB;
							}
						}
					}
					else if (num3 <= 3455)
					{
						if (num3 == 3065)
						{
							goto IL_348;
						}
						if (num3 == 3191)
						{
							return new Color(250, 250, 250, 200);
						}
						if (num3 - 3453 > 2)
						{
							goto IL_6BB;
						}
						goto IL_3D0;
					}
					else
					{
						if (num3 - 3456 <= 3)
						{
							goto IL_3B6;
						}
						if (num3 != 3522)
						{
							if (num3 != 3580)
							{
								goto IL_6BB;
							}
							goto IL_3D0;
						}
					}
					return new Color(250, 250, 250, 255 - this.alpha);
				}
				if (num3 <= 4354)
				{
					if (num3 <= 3858)
					{
						if (num3 - 3764 <= 5)
						{
							goto IL_4CC;
						}
						if (num3 == 3822)
						{
							return Color.Lerp(Color.White, newColor, 0.5f) * ((255f - (float)this.alpha) / 255f);
						}
						if (num3 != 3858)
						{
							goto IL_6BB;
						}
						goto IL_36B;
					}
					else
					{
						if (num3 == 4143)
						{
							return Color.Lerp(Color.White, newColor, 0f) * ((255f - (float)this.alpha) / 255f);
						}
						if (num3 - 4258 <= 1)
						{
							goto IL_4CC;
						}
						if (num3 != 4354)
						{
							goto IL_6BB;
						}
					}
				}
				else if (num3 <= 4956)
				{
					if (num3 - 4377 > 1 && num3 != 4389)
					{
						if (num3 != 4956)
						{
							goto IL_6BB;
						}
						goto IL_348;
					}
				}
				else
				{
					if (num3 == 5043)
					{
						return new Color(255, 255, 255, (int)newColor.A - this.alpha);
					}
					if (num3 - 5127 > 1)
					{
						if (num3 == 5335)
						{
							goto IL_314;
						}
						goto IL_6BB;
					}
				}
				Color color = default(Color);
				int num4 = this.type;
				if (num4 <= 4378)
				{
					if (num4 == 4377)
					{
						color..ctor(50, 255, 50, 200);
						goto IL_641;
					}
					if (num4 == 4378)
					{
						color..ctor(50, 200, 255, 255);
						goto IL_641;
					}
				}
				else
				{
					if (num4 == 4389)
					{
						color..ctor(255, 50, 125, 200);
						goto IL_641;
					}
					if (num4 == 5127)
					{
						color..ctor(150, 50, 250, 200);
						goto IL_641;
					}
					if (num4 == 5128)
					{
						color..ctor(Main.DiscoR, Main.DiscoG, Main.DiscoB, 200);
						goto IL_641;
					}
				}
				color..ctor(255, 150, 150, 200);
				IL_641:
				if (newColor.R > color.R)
				{
					color.R = newColor.R;
				}
				if (newColor.G > color.G)
				{
					color.G = newColor.G;
				}
				if (newColor.B > color.B)
				{
					color.B = newColor.B;
				}
				if (newColor.A > color.A)
				{
					color.A = newColor.A;
				}
				return color;
				IL_348:
				return new Color(255, 255, 255, (int)newColor.A - this.alpha);
			}
			if (num3 <= 549)
			{
				if (num3 <= 184)
				{
					if (num3 <= 58)
					{
						if (num3 == 51)
						{
							return new Color(255, 255, 255, 0);
						}
						if (num3 != 58)
						{
							goto IL_6BB;
						}
						goto IL_3E7;
					}
					else
					{
						if (num3 == 75)
						{
							goto IL_36B;
						}
						if (num3 - 119 > 3)
						{
							if (num3 != 184)
							{
								goto IL_6BB;
							}
							goto IL_3E7;
						}
					}
				}
				else if (num3 <= 501)
				{
					if (num3 - 198 <= 5)
					{
						goto IL_4CC;
					}
					if (num3 - 217 > 3)
					{
						if (num3 != 501)
						{
							goto IL_6BB;
						}
						return new Color(200, 200, 200, 50);
					}
				}
				else
				{
					if (num3 == 502)
					{
						return new Color(255, 255, 255, 150);
					}
					if (num3 - 520 > 2 && num3 - 547 > 2)
					{
						goto IL_6BB;
					}
					goto IL_3D0;
				}
				return new Color(255, 255, 255, 255);
			}
			if (num3 > 1326)
			{
				if (num3 <= 1507)
				{
					if (num3 == 1332)
					{
						goto IL_3D0;
					}
					if (num3 != 1446 && num3 - 1506 > 1)
					{
						goto IL_6BB;
					}
				}
				else
				{
					if (num3 == 1508)
					{
						return new Color(200, 200, 200, 0);
					}
					if (num3 - 1543 > 2)
					{
						if (num3 != 1572)
						{
							goto IL_6BB;
						}
						return new Color(200, 200, 255, 125);
					}
				}
				return new Color((int)newColor.R, (int)newColor.G, (int)newColor.B, (int)Main.gFade);
			}
			if (num3 <= 787)
			{
				if (num3 == 575)
				{
					goto IL_3D0;
				}
				if (num3 == 757)
				{
					goto IL_3B6;
				}
				if (num3 != 787)
				{
					goto IL_6BB;
				}
				return new Color(255, 255, 255, 175);
			}
			else
			{
				if (num3 == 1260)
				{
					return new Color(255, 255, 255, 175);
				}
				if (num3 == 1306)
				{
					goto IL_3B6;
				}
				if (num3 != 1326)
				{
					goto IL_6BB;
				}
			}
			IL_314:
			return Color.Lerp(newColor, Color.White, 0.75f);
			IL_36B:
			return new Color(255, 255, 255, 255);
			IL_3B6:
			return new Color(255, 255, 255, 200);
			IL_3D0:
			return new Color(255, 255, 255, 50);
			IL_3E7:
			return new Color(200, 200, 200, 200);
			IL_4CC:
			return Color.White;
			IL_6BB:
			float num = (float)(255 - this.alpha) / 255f;
			int num5 = (int)((float)newColor.R * num);
			int g = (int)((float)newColor.G * num);
			int b = (int)((float)newColor.B * num);
			int num2 = (int)newColor.A - this.alpha;
			if (num2 < 0)
			{
				num2 = 0;
			}
			if (num2 > 255)
			{
				num2 = 255;
			}
			return new Color(num5, g, b, num2);
		}

		// Token: 0x060002A8 RID: 680 RVA: 0x0008261C File Offset: 0x0008081C
		public Color GetColor(Color newColor)
		{
			int num = (int)(this.color.R - (byte.MaxValue - newColor.R));
			int num2 = (int)(this.color.G - (byte.MaxValue - newColor.G));
			int num3 = (int)(this.color.B - (byte.MaxValue - newColor.B));
			int num4 = (int)(this.color.A - (byte.MaxValue - newColor.A));
			if (num < 0)
			{
				num = 0;
			}
			if (num > 255)
			{
				num = 255;
			}
			if (num2 < 0)
			{
				num2 = 0;
			}
			if (num2 > 255)
			{
				num2 = 255;
			}
			if (num3 < 0)
			{
				num3 = 0;
			}
			if (num3 > 255)
			{
				num3 = 255;
			}
			if (num4 < 0)
			{
				num4 = 0;
			}
			if (num4 > 255)
			{
				num4 = 255;
			}
			return new Color(num, num2, num3, num4);
		}

		/// <summary>
		/// Use to check if a mechanism is allowed to spawn an Item of the provided type at the provided world coordinates. Checks nearby area to see if the <see href="https://terraria.wiki.gg/wiki/Statues#Spawn_limits">Spawn Limits</see> have been reached.
		/// </summary>
		// Token: 0x060002A9 RID: 681 RVA: 0x000826EC File Offset: 0x000808EC
		public static bool MechSpawn(float x, float y, int type)
		{
			int num = 0;
			int num2 = 0;
			int num3 = 0;
			for (int i = 0; i < 200; i++)
			{
				if (Main.item[i].active && Main.item[i].type == type)
				{
					num++;
					Vector2 vector;
					vector..ctor(x, y);
					float num5 = Main.item[i].position.X - vector.X;
					float num4 = Main.item[i].position.Y - vector.Y;
					float num6 = (float)Math.Sqrt((double)(num5 * num5 + num4 * num4));
					if (num6 < 300f)
					{
						num2++;
					}
					if (num6 < 800f)
					{
						num3++;
					}
				}
			}
			return num2 < 3 && num3 < 6 && num < 10;
		}

		/// <summary>
		/// Converts the provided buy price into copper coins.
		/// <br /> If assigned to <see cref="F:Terraria.Item.value" />, that item will be bought for the provided value.
		/// </summary>
		/// <returns>The converted value.</returns>
		// Token: 0x060002AA RID: 682 RVA: 0x000827A9 File Offset: 0x000809A9
		public static int buyPrice(int platinum = 0, int gold = 0, int silver = 0, int copper = 0)
		{
			return copper + silver * 100 + gold * 100 * 100 + platinum * 100 * 100 * 100;
		}

		/// <summary>
		/// Converts the provided sell value into copper coins. This value is five times larger than <see cref="M:Terraria.Item.buyPrice(System.Int32,System.Int32,System.Int32,System.Int32)" />.
		/// <br /> If assigned to <see cref="F:Terraria.Item.value" />, that item will be sold for the provided value.
		/// </summary>
		/// <returns>The converted value.</returns>
		// Token: 0x060002AB RID: 683 RVA: 0x000827C4 File Offset: 0x000809C4
		public static int sellPrice(int platinum = 0, int gold = 0, int silver = 0, int copper = 0)
		{
			return (copper + silver * 100 + gold * 100 * 100 + platinum * 100 * 100 * 100) * 5;
		}

		// Token: 0x060002AC RID: 684 RVA: 0x000827E4 File Offset: 0x000809E4
		public bool CanShimmer()
		{
			int shimmerEquivalentType = this.GetShimmerEquivalentType();
			if (ShimmerTransforms.IsItemTransformLocked(shimmerEquivalentType))
			{
				return false;
			}
			bool flag = false;
			if ((this.type == 1326 || this.type == 779 || this.type == 3031 || this.type == 5364) && NPC.downedMoonlord)
			{
				flag = true;
			}
			if (this.type == 4986 && !NPC.unlockedSlimeRainbowSpawn)
			{
				flag = true;
			}
			if (this.type == 3461 || this.createTile == 139)
			{
				flag = true;
			}
			return flag || ItemID.Sets.ShimmerTransformToItem[shimmerEquivalentType] > 0 || this.FindDecraftAmount() > 0 || ItemID.Sets.CoinLuckValue[this.type] > 0 || this.makeNPC > 0;
		}

		// Token: 0x060002AD RID: 685 RVA: 0x000828A4 File Offset: 0x00080AA4
		private unsafe void Shimmering()
		{
			if (this.CanShimmer())
			{
				int num = (int)(base.Center.X / 16f);
				int num2 = (int)(this.position.Y / 16f - 1f);
				if (!WorldGen.InWorld(num, num2, 0) || Main.tile[num, num2] == null || *Main.tile[num, num2].liquid <= 0 || !Main.tile[num, num2].shimmer())
				{
					return;
				}
				if (this.playerIndexTheItemIsReservedFor == Main.myPlayer && Main.netMode != 1)
				{
					this.shimmerTime += 0.01f;
					if (this.shimmerTime > 0.9f)
					{
						this.shimmerTime = 0.9f;
						this.GetShimmered();
						return;
					}
				}
				else
				{
					this.shimmerTime += 0.01f;
					if (this.shimmerTime > 1f)
					{
						this.shimmerTime = 1f;
						return;
					}
				}
			}
			else if (this.shimmerTime > 0f)
			{
				this.shimmerTime -= 0.01f;
				if (this.shimmerTime < 0f)
				{
					this.shimmerTime = 0f;
				}
			}
		}

		// Token: 0x060002AE RID: 686 RVA: 0x000829E0 File Offset: 0x00080BE0
		private int FindDecraftAmount()
		{
			int decraftingRecipeIndex = ShimmerTransforms.GetDecraftingRecipeIndex(this.GetShimmerEquivalentType());
			if (decraftingRecipeIndex < 0)
			{
				return -1;
			}
			return this.stack / Main.recipe[decraftingRecipeIndex].createItem.stack;
		}

		// Token: 0x060002AF RID: 687 RVA: 0x00082A17 File Offset: 0x00080C17
		private int GetShimmerEquivalentType()
		{
			if (ItemID.Sets.ShimmerCountsAsItem[this.type] != -1)
			{
				return ItemID.Sets.ShimmerCountsAsItem[this.type];
			}
			return this.type;
		}

		// Token: 0x060002B0 RID: 688 RVA: 0x00082A3C File Offset: 0x00080C3C
		private void GetShimmered()
		{
			int shimmerEquivalentType = this.GetShimmerEquivalentType();
			int decraftingRecipeIndex = ShimmerTransforms.GetDecraftingRecipeIndex(shimmerEquivalentType);
			if (ItemID.Sets.CoinLuckValue[shimmerEquivalentType] > 0)
			{
				this.stack *= ItemID.Sets.CoinLuckValue[shimmerEquivalentType];
				Main.player[Main.myPlayer].AddCoinLuck(base.Center, this.stack);
				NetMessage.SendData(146, -1, -1, null, 1, (float)((int)base.Center.X), (float)((int)base.Center.Y), (float)this.stack, 0, 0, 0);
				this.type = 0;
				this.stack = 0;
			}
			else if (shimmerEquivalentType == 1326 && NPC.downedMoonlord)
			{
				int num = this.stack;
				this.SetDefaults(5335);
				this.stack = num;
				this.shimmered = true;
			}
			else if (shimmerEquivalentType == 779 && NPC.downedMoonlord)
			{
				int num2 = this.stack;
				this.SetDefaults(5134);
				this.stack = num2;
				this.shimmered = true;
			}
			else if (shimmerEquivalentType == 3031 && NPC.downedMoonlord)
			{
				int num3 = this.stack;
				this.SetDefaults(5364);
				this.stack = num3;
				this.shimmered = true;
			}
			else if (shimmerEquivalentType == 5364 && NPC.downedMoonlord)
			{
				int num4 = this.stack;
				this.SetDefaults(3031);
				this.stack = num4;
				this.shimmered = true;
			}
			else if (shimmerEquivalentType == 3461)
			{
				short num5;
				switch (Main.GetMoonPhase())
				{
				case MoonPhase.Full:
					num5 = 5408;
					break;
				case MoonPhase.ThreeQuartersAtLeft:
					num5 = 5401;
					break;
				case MoonPhase.HalfAtLeft:
					num5 = 5403;
					break;
				case MoonPhase.QuarterAtLeft:
					num5 = 5402;
					break;
				default:
					num5 = 5406;
					break;
				case MoonPhase.QuarterAtRight:
					num5 = 5407;
					break;
				case MoonPhase.HalfAtRight:
					num5 = 5405;
					break;
				case MoonPhase.ThreeQuartersAtRight:
					num5 = 5404;
					break;
				}
				int num6 = this.stack;
				this.SetDefaults((int)num5);
				this.stack = num6;
				this.shimmered = true;
			}
			else if (this.createTile == 139)
			{
				int num7 = this.stack;
				this.SetDefaults(576);
				this.stack = num7;
				this.shimmered = true;
			}
			else if (ItemID.Sets.ShimmerTransformToItem[shimmerEquivalentType] > 0)
			{
				int stackSize = this.stack;
				this.SetDefaults(ItemID.Sets.ShimmerTransformToItem[shimmerEquivalentType]);
				this.stack = stackSize;
				if (this.stack > this.maxStack)
				{
					this.stack = this.maxStack;
				}
				stackSize -= this.stack;
				this.shimmered = true;
				int spawnCount = 0;
				while (stackSize > 0)
				{
					spawnCount++;
					int newItemIndex = Item.NewItem(this.GetItemSource_Misc(8), (int)this.position.X, (int)this.position.Y, this.width, this.height, this.type, 1, false, 0, false, false);
					Item item = Main.item[newItemIndex];
					item.stack = stackSize;
					if (item.stack > this.maxStack)
					{
						item.stack = this.maxStack;
					}
					stackSize -= item.stack;
					item.shimmerTime = 1f;
					item.shimmered = true;
					item.shimmerWet = true;
					item.wet = true;
					item.velocity *= 0.1f;
					item.playerIndexTheItemIsReservedFor = Main.myPlayer;
					NetMessage.SendData(145, -1, -1, null, newItemIndex, 1f, 0f, 0f, 0, 0, 0);
				}
			}
			else if (this.type == 4986)
			{
				if (NPC.unlockedSlimeRainbowSpawn)
				{
					return;
				}
				NPC.unlockedSlimeRainbowSpawn = true;
				NetMessage.SendData(7, -1, -1, null, 0, 0f, 0f, 0f, 0, 0, 0);
				int num8 = NPC.NewNPC(this.GetNPCSource_FromThis(), (int)base.Center.X + 4, (int)base.Center.Y, 681, 0, 0f, 0f, 0f, 0f, 255);
				if (num8 >= 0)
				{
					NPC npc = Main.npc[num8];
					npc.velocity = this.velocity;
					npc.netUpdate = true;
					npc.shimmerTransparency = 1f;
					NetMessage.SendData(146, -1, -1, null, 2, (float)num8, 0f, 0f, 0, 0, 0);
				}
				WorldGen.CheckAchievement_RealEstateAndTownSlimes();
				this.stack--;
				if (this.stack <= 0)
				{
					this.type = 0;
				}
			}
			else if (this.makeNPC > 0)
			{
				int num9 = 50;
				int highestNPCSlotIndexWeWillPick = 200;
				int num10 = NPC.GetAvailableAmountOfNPCsToSpawnUpToSlot(this.stack, highestNPCSlotIndexWeWillPick);
				while (num9 > 0 && num10 > 0 && this.stack > 0)
				{
					num9--;
					num10--;
					this.stack--;
					int num11 = (NPCID.Sets.ShimmerTransformToNPC[this.makeNPC] < 0) ? NPC.ReleaseNPC((int)base.Center.X, (int)base.Bottom.Y, this.makeNPC, this.placeStyle, Main.myPlayer) : NPC.ReleaseNPC((int)base.Center.X, (int)base.Bottom.Y, NPCID.Sets.ShimmerTransformToNPC[this.makeNPC], 0, Main.myPlayer);
					if (num11 >= 0)
					{
						Main.npc[num11].shimmerTransparency = 1f;
						NetMessage.SendData(146, -1, -1, null, 2, (float)num11, 0f, 0f, 0, 0, 0);
					}
				}
				this.shimmered = true;
				if (this.stack <= 0)
				{
					this.type = 0;
				}
			}
			else if (decraftingRecipeIndex >= 0)
			{
				int num12 = this.FindDecraftAmount();
				Recipe recipe = Main.recipe[decraftingRecipeIndex];
				int num13 = 0;
				bool flag = recipe.requiredItem.Count > 1;
				IEnumerable<Item> enumerable = recipe.requiredItem;
				if (recipe.customShimmerResults != null)
				{
					enumerable = recipe.customShimmerResults;
				}
				int num14 = 0;
				foreach (Item item2 in enumerable)
				{
					if (item2.type <= 0)
					{
						break;
					}
					num14++;
					int num15 = num12 * item2.stack;
					RecipeLoader.ConsumeIngredient(recipe, item2.type, ref num15, true);
					while (num15 > 0)
					{
						int num16 = num15;
						if (num16 > item2.maxStack)
						{
							num16 = item2.maxStack;
						}
						num15 -= num16;
						int num17 = Item.NewItem(this.GetItemSource_Misc(8), (int)this.position.X, (int)this.position.Y, this.width, this.height, item2.type, 1, false, 0, false, false);
						Item item3 = Main.item[num17];
						item3.stack = num16;
						item3.shimmerTime = 1f;
						item3.shimmered = true;
						item3.shimmerWet = true;
						item3.wet = true;
						item3.velocity *= 0.1f;
						item3.playerIndexTheItemIsReservedFor = Main.myPlayer;
						if (flag)
						{
							item3.velocity.X = 1f * (float)num14;
							Item item4 = item3;
							item4.velocity.X = item4.velocity.X * (1f + (float)num14 * 0.05f);
							if (num13 % 2 == 0)
							{
								Item item5 = item3;
								item5.velocity.X = item5.velocity.X * -1f;
							}
						}
						NetMessage.SendData(145, -1, -1, null, num17, 1f, 0f, 0f, 0, 0, 0);
					}
				}
				this.stack -= num12 * recipe.createItem.stack;
				if (this.stack <= 0)
				{
					this.stack = 0;
					this.type = 0;
				}
			}
			if (this.stack > 0)
			{
				this.shimmerTime = 1f;
			}
			else
			{
				this.shimmerTime = 0f;
			}
			this.shimmerWet = true;
			this.wet = true;
			this.velocity *= 0.1f;
			if (Main.netMode == 0)
			{
				Item.ShimmerEffect(base.Center);
			}
			else
			{
				NetMessage.SendData(146, -1, -1, null, 0, (float)((int)base.Center.X), (float)((int)base.Center.Y), 0f, 0, 0, 0);
				NetMessage.SendData(145, -1, -1, null, this.whoAmI, 1f, 0f, 0f, 0, 0, 0);
			}
			AchievementsHelper.NotifyProgressionEvent(27);
			if (this.stack == 0)
			{
				this.makeNPC = -1;
				this.active = false;
			}
		}

		// Token: 0x060002B1 RID: 689 RVA: 0x000832F0 File Offset: 0x000814F0
		public static void ShimmerEffect(Vector2 shimmerPositon)
		{
			SoundEngine.PlaySound(new SoundStyle?(SoundID.Item176), (int)shimmerPositon.X, (int)shimmerPositon.Y);
			for (int i = 0; i < 20; i++)
			{
				int num = Dust.NewDust(shimmerPositon, 1, 1, 309, 0f, 0f, 0, default(Color), 1f);
				Main.dust[num].scale *= 1.2f;
				switch (Main.rand.Next(6))
				{
				case 0:
					Main.dust[num].color = new Color(255, 255, 210);
					break;
				case 1:
					Main.dust[num].color = new Color(190, 245, 255);
					break;
				case 2:
					Main.dust[num].color = new Color(255, 150, 255);
					break;
				default:
					Main.dust[num].color = new Color(190, 175, 255);
					break;
				}
			}
		}

		// Token: 0x060002B2 RID: 690 RVA: 0x00083414 File Offset: 0x00081614
		public void FixAgainstExploit()
		{
			if (ItemID.Sets.ItemsThatShouldNotBeInInventory[this.type])
			{
				this.SetDefaults(0);
				return;
			}
			if (this.stack > this.maxStack)
			{
				this.stack = this.maxStack;
			}
			if (this.prefix != 0 && !this.CanRollPrefix(this.prefix))
			{
				this.ResetPrefix();
			}
		}

		// Token: 0x060002B3 RID: 691 RVA: 0x00083470 File Offset: 0x00081670
		public unsafe void UpdateItem(int i)
		{
			this.whoAmI = i;
			if (Main.timeItemSlotCannotBeReusedFor[i] > 0)
			{
				if (Main.netMode == 2)
				{
					Main.timeItemSlotCannotBeReusedFor[i]--;
					return;
				}
				Main.timeItemSlotCannotBeReusedFor[i] = 0;
			}
			if (!this.active)
			{
				return;
			}
			if (this.instanced)
			{
				if (Main.netMode == 2)
				{
					this.active = false;
					return;
				}
				this.keepTime = 6000;
				this.ownTime = 0;
				this.noGrabDelay = 0;
				this.playerIndexTheItemIsReservedFor = Main.myPlayer;
			}
			if (Main.netMode == 0)
			{
				this.playerIndexTheItemIsReservedFor = Main.myPlayer;
			}
			float gravity = 0.1f;
			float maxFallSpeed = 7f;
			if (Main.netMode == 1)
			{
				int num = (int)(this.position.X + (float)(this.width / 2)) / 16;
				int num2 = (int)(this.position.Y + (float)(this.height / 2)) / 16;
				if (num >= 0 && num2 >= 0 && num < Main.maxTilesX && num2 < Main.maxTilesY && !Main.sectionManager.TileLoaded(num, num2))
				{
					gravity = 0f;
					this.velocity.X = 0f;
					this.velocity.Y = 0f;
				}
			}
			Vector2 wetVelocity = this.velocity * 0.5f;
			if (this.shimmerWet)
			{
				gravity = 0.065f;
				maxFallSpeed = 4f;
				wetVelocity = this.velocity * 0.375f;
			}
			else if (this.honeyWet)
			{
				gravity = 0.05f;
				maxFallSpeed = 3f;
				wetVelocity = this.velocity * 0.25f;
			}
			else if (this.wet)
			{
				gravity = 0.08f;
				maxFallSpeed = 5f;
			}
			if (this.ownTime > 0)
			{
				this.ownTime--;
			}
			else
			{
				this.ownIgnore = -1;
			}
			if (this.keepTime > 0)
			{
				this.keepTime--;
			}
			if (!this.beingGrabbed)
			{
				if (this.shimmered)
				{
					if (Main.rand.Next(30) == 0)
					{
						int num3 = Dust.NewDust(this.position, this.width, this.height, 309, 0f, 0f, 0, default(Color), 1f);
						Dust dust = Main.dust[num3];
						dust.position.X = dust.position.X + (float)Main.rand.Next(-8, 5);
						Dust dust2 = Main.dust[num3];
						dust2.position.Y = dust2.position.Y + (float)Main.rand.Next(-8, 5);
						Main.dust[num3].scale *= 1.1f;
						Main.dust[num3].velocity *= 0.3f;
						switch (Main.rand.Next(6))
						{
						case 0:
							Main.dust[num3].color = new Color(255, 255, 210);
							break;
						case 1:
							Main.dust[num3].color = new Color(190, 245, 255);
							break;
						case 2:
							Main.dust[num3].color = new Color(255, 150, 255);
							break;
						default:
							Main.dust[num3].color = new Color(190, 175, 255);
							break;
						}
					}
					Lighting.AddLight(base.Center, (1f - this.shimmerTime) * 0.8f, (1f - this.shimmerTime) * 0.8f, (1f - this.shimmerTime) * 0.8f);
					gravity = 0f;
					if (this.shimmerWet)
					{
						if (this.velocity.Y > -4f)
						{
							this.velocity.Y = this.velocity.Y - 0.05f;
						}
					}
					else
					{
						int num4 = 2;
						int num5 = (int)(base.Center.X / 16f);
						int num6 = (int)(base.Center.Y / 16f);
						bool flag = false;
						for (int j = num6; j < num6 + num4; j++)
						{
							if (WorldGen.InWorld(num5, j, 0) && Main.tile[num5, j] != null && Main.tile[num5, j].shimmer() && *Main.tile[num5, j].liquid > 0)
							{
								flag = true;
								break;
							}
						}
						if (flag)
						{
							if (this.velocity.Y > -4f)
							{
								this.velocity.Y = this.velocity.Y - 0.05f;
							}
						}
						else
						{
							this.velocity.Y = this.velocity.Y * 0.9f;
						}
					}
				}
				if (this.shimmerWet && !this.shimmered)
				{
					this.Shimmering();
				}
				else if (this.shimmerTime > 0f)
				{
					this.shimmerTime -= 0.01f;
					if (this.shimmerTime < 0f)
					{
						this.shimmerTime = 0f;
					}
				}
				if (this.shimmerTime == 0f)
				{
					this.TryCombiningIntoNearbyItems(i);
				}
				if (this.timeLeftInWhichTheItemCannotBeTakenByEnemies > 0)
				{
					this.timeLeftInWhichTheItemCannotBeTakenByEnemies--;
				}
				if (this.timeLeftInWhichTheItemCannotBeTakenByEnemies == 0 && Main.netMode != 2 && this.playerIndexTheItemIsReservedFor == Main.myPlayer)
				{
					this.GetPickedUpByMonsters_Special(i);
					if (Main.expertMode && this.IsACoin)
					{
						this.GetPickedUpByMonsters_Money(i);
					}
				}
				this.MoveInWorld(gravity, maxFallSpeed, ref wetVelocity, i);
				if (this.lavaWet)
				{
					this.CheckLavaDeath(i);
				}
				this.DespawnIfMeetingConditions(i);
			}
			else
			{
				this.beingGrabbed = false;
			}
			this.UpdateItem_VisualEffects();
			if (this.timeSinceItemSpawned < 2147483547)
			{
				int num7 = ItemID.Sets.ItemSpawnDecaySpeed[this.type];
				this.timeSinceItemSpawned += num7;
			}
			ItemLoader.PostUpdate(this);
			if (Main.netMode == 2 && this.playerIndexTheItemIsReservedFor != Main.myPlayer)
			{
				this.timeSinceTheItemHasBeenReservedForSomeone++;
				if (this.timeSinceTheItemHasBeenReservedForSomeone >= 300)
				{
					this.timeSinceTheItemHasBeenReservedForSomeone = 0;
					NetMessage.SendData(39, this.playerIndexTheItemIsReservedFor, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
					this.playerIndexTheItemIsReservedFor = 255;
				}
			}
			if (this.wet)
			{
				this.position += wetVelocity;
			}
			else
			{
				this.position += this.velocity;
			}
			if (this.noGrabDelay > 0)
			{
				this.noGrabDelay--;
			}
		}

		// Token: 0x060002B4 RID: 692 RVA: 0x00083AF4 File Offset: 0x00081CF4
		private void DespawnIfMeetingConditions(int i)
		{
			if (this.type == 75 && Main.dayTime && !Main.remixWorld && !this.shimmered && !this.beingGrabbed)
			{
				for (int j = 0; j < 10; j++)
				{
					Dust.NewDust(this.position, this.width, this.height, 15, this.velocity.X, this.velocity.Y, 150, default(Color), 1.2f);
				}
				for (int k = 0; k < 3; k++)
				{
					Gore.NewGore(this.position, new Vector2(this.velocity.X, this.velocity.Y), Main.rand.Next(16, 18), 1f);
				}
				this.active = false;
				this.type = 0;
				this.stack = 0;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(21, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			if (this.type == 4143 && this.timeSinceItemSpawned > 300)
			{
				for (int l = 0; l < 20; l++)
				{
					Dust.NewDust(this.position, this.width, this.height, 15, this.velocity.X, this.velocity.Y, 150, Color.Lerp(Color.CornflowerBlue, Color.Indigo, Main.rand.NextFloat()), 1.2f);
				}
				this.active = false;
				this.type = 0;
				this.stack = 0;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(21, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
				}
			}
			if (this.type == 3822 && !DD2Event.Ongoing)
			{
				int num = Main.rand.Next(18, 24);
				for (int m = 0; m < num; m++)
				{
					int num2 = Dust.NewDust(base.Center, 0, 0, 61, 0f, 0f, 0, default(Color), 1.7f);
					Main.dust[num2].velocity *= 8f;
					Dust dust = Main.dust[num2];
					dust.velocity.Y = dust.velocity.Y - 1f;
					Main.dust[num2].position = Vector2.Lerp(Main.dust[num2].position, base.Center, 0.5f);
					Main.dust[num2].noGravity = true;
					Main.dust[num2].noLight = true;
				}
				this.active = false;
				this.type = 0;
				this.stack = 0;
				if (Main.netMode == 2)
				{
					NetMessage.SendData(21, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
				}
			}
		}

		// Token: 0x060002B5 RID: 693 RVA: 0x00083DE8 File Offset: 0x00081FE8
		public void TryCombiningIntoNearbyItems(int i)
		{
			bool flag = true;
			if (this.type - 71 <= 3)
			{
				flag = false;
			}
			if (ItemID.Sets.NebulaPickup[this.type])
			{
				flag = false;
			}
			if (this.playerIndexTheItemIsReservedFor == Main.myPlayer && flag)
			{
				this.CombineWithNearbyItems(i);
			}
		}

		// Token: 0x060002B6 RID: 694 RVA: 0x00083E30 File Offset: 0x00082030
		public FlexibleTileWand GetFlexibleTileWand()
		{
			int num = this.type;
			if (num == 5324)
			{
				return FlexibleTileWand.RubblePlacementSmall;
			}
			if (num == 5329)
			{
				return FlexibleTileWand.RubblePlacementMedium;
			}
			if (num != 5330)
			{
				return null;
			}
			return FlexibleTileWand.RubblePlacementLarge;
		}

		// Token: 0x060002B7 RID: 695 RVA: 0x00083E70 File Offset: 0x00082070
		private void CheckLavaDeath(int i)
		{
			if (this.type != 267)
			{
				if (this.playerIndexTheItemIsReservedFor == Main.myPlayer && this.rare == 0 && this.type >= 0 && !ItemID.Sets.IsLavaImmuneRegardlessOfRarity[this.type])
				{
					this.active = false;
					this.type = 0;
					this.stack = 0;
					if (Main.netMode != 0)
					{
						NetMessage.SendData(21, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
					}
				}
				return;
			}
			if (Main.netMode == 1)
			{
				return;
			}
			int num = this.stack;
			this.active = false;
			this.type = 0;
			this.stack = 0;
			bool flag = false;
			for (int j = 0; j < 200; j++)
			{
				if (Main.npc[j].active && Main.npc[j].type == 22)
				{
					int num2 = -Main.npc[j].direction;
					if (Main.npc[j].IsNPCValidForBestiaryKillCredit())
					{
						Main.BestiaryTracker.Kills.RegisterKill(Main.npc[j]);
					}
					Main.npc[j].StrikeNPCNoInteraction(9999, 10f, -num2);
					num--;
					flag = true;
					if (Main.netMode == 2)
					{
						NetMessage.SendData(28, -1, -1, null, j, 9999f, 10f, (float)(-(float)num2), 0, 0, 0);
					}
					NPC.SpawnWOF(this.position);
				}
			}
			if (flag)
			{
				List<int> list = new List<int>();
				for (int k = 0; k < 200; k++)
				{
					if (num <= 0)
					{
						IL_1E0:
						while (num > 0 && list.Count > 0)
						{
							int index = Main.rand.Next(list.Count);
							int num3 = list[index];
							list.RemoveAt(index);
							int num4 = -Main.npc[num3].direction;
							if (Main.npc[num3].IsNPCValidForBestiaryKillCredit())
							{
								Main.BestiaryTracker.Kills.RegisterKill(Main.npc[num3]);
							}
							Main.npc[num3].StrikeNPCNoInteraction(9999, 10f, -num4);
							num--;
							if (Main.netMode == 2)
							{
								NetMessage.SendData(28, -1, -1, null, num3, 9999f, 10f, (float)(-(float)num4), 0, 0, 0);
							}
						}
						goto IL_1F1;
					}
					NPC nPC = Main.npc[k];
					if (nPC.active && nPC.isLikeATownNPC)
					{
						list.Add(k);
					}
				}
				goto IL_1E0;
			}
			IL_1F1:
			NetMessage.SendData(21, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
		}

		// Token: 0x060002B8 RID: 696 RVA: 0x000840F4 File Offset: 0x000822F4
		private void MoveInWorld(float gravity, float maxFallSpeed, ref Vector2 wetVelocity, int i)
		{
			ItemLoader.Update(this, ref gravity, ref maxFallSpeed);
			if (!this.shimmered && ItemID.Sets.ItemNoGravity[this.type])
			{
				this.velocity.X = this.velocity.X * 0.95f;
				if ((double)this.velocity.X < 0.1 && (double)this.velocity.X > -0.1)
				{
					this.velocity.X = 0f;
				}
				this.velocity.Y = this.velocity.Y * 0.95f;
				if ((double)this.velocity.Y < 0.1 && (double)this.velocity.Y > -0.1)
				{
					this.velocity.Y = 0f;
				}
			}
			else
			{
				bool flag = false;
				if (this.shimmered && this.active)
				{
					int num = 50;
					for (int j = 0; j < 400; j++)
					{
						if (i != j && Main.item[j].active && Main.item[j].shimmered)
						{
							if (num-- <= 0)
							{
								break;
							}
							float num2 = (float)((this.width + Main.item[j].width) / 2);
							if (Math.Abs(base.Center.X - Main.item[j].Center.X) <= num2 && Math.Abs(base.Center.Y - Main.item[j].Center.Y) <= num2)
							{
								flag = true;
								float num3 = Vector2.Distance(base.Center, Main.item[j].Center);
								num2 /= num3;
								if (num2 > 10f)
								{
									num2 = 10f;
								}
								if (base.Center.X < Main.item[j].Center.X)
								{
									if (this.velocity.X > -3f * num2)
									{
										this.velocity.X = this.velocity.X - 0.1f * num2;
									}
									if (Main.item[j].velocity.X < 3f)
									{
										Item item = Main.item[j];
										item.velocity.X = item.velocity.X + 0.1f * num2;
									}
								}
								else if (base.Center.X > Main.item[j].Center.X)
								{
									if (this.velocity.X < 3f * num2)
									{
										this.velocity.X = this.velocity.X + 0.1f * num2;
									}
									if (Main.item[j].velocity.X > -3f)
									{
										Item item2 = Main.item[j];
										item2.velocity.X = item2.velocity.X - 0.1f * num2;
									}
								}
								else if (i < j)
								{
									if (this.velocity.X > -3f * num2)
									{
										this.velocity.X = this.velocity.X - 0.1f * num2;
									}
									if (Main.item[j].velocity.X < 3f * num2)
									{
										Item item3 = Main.item[j];
										item3.velocity.X = item3.velocity.X + 0.1f * num2;
									}
								}
							}
						}
					}
				}
				this.velocity.Y = this.velocity.Y + gravity;
				if (this.velocity.Y > maxFallSpeed)
				{
					this.velocity.Y = maxFallSpeed;
				}
				this.velocity.X = this.velocity.X * 0.95f;
				if ((double)this.velocity.X < 0.1 && (double)this.velocity.X > -0.1)
				{
					this.velocity.X = 0f;
				}
				if (flag)
				{
					this.velocity.X = this.velocity.X * 0.8f;
				}
			}
			bool flag2 = Collision.LavaCollision(this.position, this.width, this.height);
			if (flag2)
			{
				this.lavaWet = true;
			}
			bool flag3 = Collision.WetCollision(this.position, this.width, this.height);
			if (Collision.honey)
			{
				this.honeyWet = true;
			}
			if (Collision.shimmer)
			{
				this.shimmerWet = true;
			}
			if (flag3)
			{
				if (!this.wet)
				{
					if (this.wetCount == 0)
					{
						this.wetCount = 20;
						if (!flag2)
						{
							if (this.shimmerWet)
							{
								for (int k = 0; k < 10; k++)
								{
									int num4 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 308, 0f, 0f, 0, default(Color), 1f);
									Dust dust = Main.dust[num4];
									dust.velocity.Y = dust.velocity.Y - 4f;
									Dust dust2 = Main.dust[num4];
									dust2.velocity.X = dust2.velocity.X * 2.5f;
									Main.dust[num4].scale = 0.8f;
									Main.dust[num4].noGravity = true;
									switch (Main.rand.Next(6))
									{
									case 0:
										Main.dust[num4].color = new Color(255, 255, 210);
										break;
									case 1:
										Main.dust[num4].color = new Color(190, 245, 255);
										break;
									case 2:
										Main.dust[num4].color = new Color(255, 150, 255);
										break;
									default:
										Main.dust[num4].color = new Color(190, 175, 255);
										break;
									}
								}
								SoundEngine.PlaySound(19, (int)this.position.X, (int)this.position.Y, 4, 1f, 0f);
							}
							else if (this.honeyWet)
							{
								for (int l = 0; l < 5; l++)
								{
									int num5 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 152, 0f, 0f, 0, default(Color), 1f);
									Dust dust3 = Main.dust[num5];
									dust3.velocity.Y = dust3.velocity.Y - 1f;
									Dust dust4 = Main.dust[num5];
									dust4.velocity.X = dust4.velocity.X * 2.5f;
									Main.dust[num5].scale = 1.3f;
									Main.dust[num5].alpha = 100;
									Main.dust[num5].noGravity = true;
								}
								SoundEngine.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
							}
							else
							{
								for (int m = 0; m < 10; m++)
								{
									int num6 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
									Dust dust5 = Main.dust[num6];
									dust5.velocity.Y = dust5.velocity.Y - 4f;
									Dust dust6 = Main.dust[num6];
									dust6.velocity.X = dust6.velocity.X * 2.5f;
									Main.dust[num6].scale *= 0.8f;
									Main.dust[num6].alpha = 100;
									Main.dust[num6].noGravity = true;
								}
								SoundEngine.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
							}
						}
						else
						{
							for (int n = 0; n < 5; n++)
							{
								int num7 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 35, 0f, 0f, 0, default(Color), 1f);
								Dust dust7 = Main.dust[num7];
								dust7.velocity.Y = dust7.velocity.Y - 1.5f;
								Dust dust8 = Main.dust[num7];
								dust8.velocity.X = dust8.velocity.X * 2.5f;
								Main.dust[num7].scale = 1.3f;
								Main.dust[num7].alpha = 100;
								Main.dust[num7].noGravity = true;
							}
							SoundEngine.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
						}
					}
					this.wet = true;
				}
			}
			else if (this.wet)
			{
				this.wet = false;
				if (this.wetCount == 0)
				{
					this.wetCount = 20;
					if (!this.lavaWet)
					{
						if (this.shimmerWet)
						{
							for (int num8 = 0; num8 < 10; num8++)
							{
								int num9 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 308, 0f, 0f, 0, default(Color), 1f);
								Dust dust9 = Main.dust[num9];
								dust9.velocity.Y = dust9.velocity.Y - 4f;
								Dust dust10 = Main.dust[num9];
								dust10.velocity.X = dust10.velocity.X * 2.5f;
								Main.dust[num9].scale = 0.8f;
								Main.dust[num9].noGravity = true;
								switch (Main.rand.Next(6))
								{
								case 0:
									Main.dust[num9].color = new Color(255, 255, 210);
									break;
								case 1:
									Main.dust[num9].color = new Color(190, 245, 255);
									break;
								case 2:
									Main.dust[num9].color = new Color(255, 150, 255);
									break;
								default:
									Main.dust[num9].color = new Color(190, 175, 255);
									break;
								}
							}
							SoundEngine.PlaySound(19, (int)this.position.X, (int)this.position.Y, 5, 1f, 0f);
						}
						else if (this.honeyWet)
						{
							for (int num10 = 0; num10 < 5; num10++)
							{
								int num11 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 152, 0f, 0f, 0, default(Color), 1f);
								Dust dust11 = Main.dust[num11];
								dust11.velocity.Y = dust11.velocity.Y - 1f;
								Dust dust12 = Main.dust[num11];
								dust12.velocity.X = dust12.velocity.X * 2.5f;
								Main.dust[num11].scale = 1.3f;
								Main.dust[num11].alpha = 100;
								Main.dust[num11].noGravity = true;
							}
							SoundEngine.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
						}
						else
						{
							for (int num12 = 0; num12 < 10; num12++)
							{
								int num13 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2)), this.width + 12, 24, Dust.dustWater(), 0f, 0f, 0, default(Color), 1f);
								Dust dust13 = Main.dust[num13];
								dust13.velocity.Y = dust13.velocity.Y - 4f;
								Dust dust14 = Main.dust[num13];
								dust14.velocity.X = dust14.velocity.X * 2.5f;
								Main.dust[num13].scale *= 0.8f;
								Main.dust[num13].alpha = 100;
								Main.dust[num13].noGravity = true;
							}
							SoundEngine.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
						}
					}
					else
					{
						for (int num14 = 0; num14 < 5; num14++)
						{
							int num15 = Dust.NewDust(new Vector2(this.position.X - 6f, this.position.Y + (float)(this.height / 2) - 8f), this.width + 12, 24, 35, 0f, 0f, 0, default(Color), 1f);
							Dust dust15 = Main.dust[num15];
							dust15.velocity.Y = dust15.velocity.Y - 1.5f;
							Dust dust16 = Main.dust[num15];
							dust16.velocity.X = dust16.velocity.X * 2.5f;
							Main.dust[num15].scale = 1.3f;
							Main.dust[num15].alpha = 100;
							Main.dust[num15].noGravity = true;
						}
						SoundEngine.PlaySound(19, (int)this.position.X, (int)this.position.Y, 1, 1f, 0f);
					}
				}
			}
			if (!this.wet)
			{
				this.lavaWet = false;
				this.honeyWet = false;
				this.shimmerWet = false;
			}
			if (this.wetCount > 0)
			{
				this.wetCount -= 1;
			}
			if (this.wet)
			{
				if (this.wet)
				{
					Vector2 vector = this.velocity;
					this.velocity = Collision.TileCollision(this.position, this.velocity, this.width, this.height, false, false, 1);
					if (this.velocity.X != vector.X)
					{
						wetVelocity.X = this.velocity.X;
					}
					if (this.velocity.Y != vector.Y)
					{
						wetVelocity.Y = this.velocity.Y;
					}
				}
			}
			else
			{
				this.velocity = Collision.TileCollision(this.position, this.velocity, this.width, this.height, false, false, 1);
			}
			Vector4 vector2 = Collision.SlopeCollision(this.position, this.velocity, this.width, this.height, gravity, false);
			this.position.X = vector2.X;
			this.position.Y = vector2.Y;
			this.velocity.X = vector2.Z;
			this.velocity.Y = vector2.W;
			Collision.StepConveyorBelt(this, 1f);
		}

		// Token: 0x060002B9 RID: 697 RVA: 0x000850D4 File Offset: 0x000832D4
		private void GetPickedUpByMonsters_Special(int i)
		{
			bool flag = false;
			bool flag2 = false;
			int num = this.type;
			if ((num == 89 || num == 3507) && !NPC.unlockedSlimeCopperSpawn)
			{
				flag = true;
				flag2 = true;
			}
			if (!flag2)
			{
				return;
			}
			bool flag3 = false;
			Rectangle hitbox = base.Hitbox;
			for (int j = 0; j < 200; j++)
			{
				NPC nPC = Main.npc[j];
				if (nPC.active && flag && nPC.type >= 0 && NPCID.Sets.CanConvertIntoCopperSlimeTownNPC[nPC.type] && hitbox.Intersects(nPC.Hitbox))
				{
					flag3 = true;
					NPC.TransformCopperSlime(j);
					break;
				}
			}
			if (flag3)
			{
				this.SetDefaults(0);
				this.active = false;
				NetMessage.SendData(21, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
			}
		}

		// Token: 0x060002BA RID: 698 RVA: 0x000851A0 File Offset: 0x000833A0
		private void GetPickedUpByMonsters_Money(int i)
		{
			Rectangle rectangle;
			rectangle..ctor((int)this.position.X, (int)this.position.Y, this.width, this.height);
			for (int j = 0; j < 200; j++)
			{
				NPC nPC = Main.npc[j];
				if (nPC.active && nPC.lifeMax > 5 && !nPC.friendly && !nPC.immortal && !nPC.dontTakeDamage && !NPCID.Sets.CantTakeLunchMoney[nPC.type])
				{
					float num = (float)this.stack;
					float num2 = 1f;
					if (this.type == 72)
					{
						num2 = 100f;
					}
					if (this.type == 73)
					{
						num2 = 10000f;
					}
					if (this.type == 74)
					{
						num2 = 1000000f;
					}
					num *= num2;
					float num3 = (float)nPC.extraValue;
					int num4 = nPC.realLife;
					if (num4 >= 0 && Main.npc[num4].active)
					{
						num3 = (float)Main.npc[num4].extraValue;
					}
					else
					{
						num4 = -1;
					}
					if (num3 < num && num3 + num < 999000000f)
					{
						Rectangle rectangle2;
						rectangle2..ctor((int)nPC.position.X, (int)nPC.position.Y, nPC.width, nPC.height);
						if (rectangle.Intersects(rectangle2))
						{
							float num5 = (float)Main.rand.Next(50, 76) * 0.01f;
							if (this.type == 71)
							{
								num5 += (float)Main.rand.Next(51) * 0.01f;
							}
							if (this.type == 72)
							{
								num5 += (float)Main.rand.Next(26) * 0.01f;
							}
							if (num5 > 1f)
							{
								num5 = 1f;
							}
							int num6 = (int)((float)this.stack * num5);
							if (num6 < 1)
							{
								num6 = 1;
							}
							if (num6 > this.stack)
							{
								num6 = this.stack;
							}
							this.stack -= num6;
							int num7 = (int)((float)num6 * num2);
							int number = j;
							if (num4 >= 0)
							{
								number = num4;
							}
							nPC.extraValue += num7;
							if (Main.netMode == 0)
							{
								nPC.moneyPing(this.position);
							}
							else
							{
								NetMessage.SendData(92, -1, -1, null, number, (float)num7, this.position.X, this.position.Y, 0, 0, 0);
							}
							if (this.stack <= 0)
							{
								this.SetDefaults(0);
								this.active = false;
							}
							NetMessage.SendData(21, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
						}
					}
				}
			}
		}

		// Token: 0x060002BB RID: 699 RVA: 0x00085448 File Offset: 0x00083648
		private void CombineWithNearbyItems(int myItemIndex)
		{
			if (!this.CanCombineStackInWorld() || this.stack >= this.maxStack)
			{
				return;
			}
			for (int i = myItemIndex + 1; i < 400; i++)
			{
				Item item = Main.item[i];
				if (item.active && item.type == this.type && item.shimmered == this.shimmered && item.stack > 0 && item.playerIndexTheItemIsReservedFor == this.playerIndexTheItemIsReservedFor)
				{
					float num3 = Math.Abs(this.position.X + (float)(this.width / 2) - (item.position.X + (float)(item.width / 2))) + Math.Abs(this.position.Y + (float)(this.height / 2) - (item.position.Y + (float)(item.height / 2)));
					int num2 = 30;
					if ((double)Item.numberOfNewItems > 40.0)
					{
						num2 *= 2;
					}
					if ((double)Item.numberOfNewItems > 80.0)
					{
						num2 *= 2;
					}
					if ((double)Item.numberOfNewItems > 120.0)
					{
						num2 *= 2;
					}
					if ((double)Item.numberOfNewItems > 160.0)
					{
						num2 *= 2;
					}
					if ((double)Item.numberOfNewItems > 200.0)
					{
						num2 *= 2;
					}
					if ((double)Item.numberOfNewItems > 240.0)
					{
						num2 *= 2;
					}
					if (num3 < (float)num2 && ItemLoader.CanStack(this, item) && ItemLoader.CanStackInWorld(this, item))
					{
						this.position = (this.position + item.position) / 2f;
						this.velocity = (this.velocity + item.velocity) / 2f;
						int num4;
						ItemLoader.StackItems(this, item, out num4, false, null);
						if (item.stack <= 0)
						{
							item.SetDefaults(0);
							item.active = false;
						}
						if (Main.netMode != 0 && this.playerIndexTheItemIsReservedFor == Main.myPlayer)
						{
							NetMessage.SendData(21, -1, -1, null, myItemIndex, 0f, 0f, 0f, 0, 0, 0);
							NetMessage.SendData(21, -1, -1, null, i, 0f, 0f, 0f, 0, 0, 0);
						}
					}
				}
			}
		}

		// Token: 0x060002BC RID: 700 RVA: 0x00085694 File Offset: 0x00083894
		public bool CanCombineStackInWorld()
		{
			return this.type != 75 && (this.createTile >= 0 || this.createWall > 0 || (this.ammo > 0 && !this.notAmmo) || this.consumable || (this.type >= 205 && this.type <= 207) || this.type == 1128 || this.type == 530 || this.dye > 0 || this.PaintOrCoating || this.material);
		}

		// Token: 0x060002BD RID: 701 RVA: 0x00085728 File Offset: 0x00083928
		private void UpdateItem_VisualEffects()
		{
			if (this.type == 5043)
			{
				float num = (float)Main.rand.Next(90, 111) * 0.01f;
				num *= (Main.essScale + 0.5f) / 2f;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.25f * num, 0.25f * num, 0.25f * num);
				return;
			}
			if (this.type == 3191)
			{
				float num2 = (float)Main.rand.Next(90, 111) * 0.01f;
				num2 *= (Main.essScale + 0.5f) / 2f;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.3f * num2, 0.1f * num2, 0.25f * num2);
				return;
			}
			if (this.type == 520 || this.type == 3454)
			{
				float num3 = (float)Main.rand.Next(90, 111) * 0.01f;
				num3 *= Main.essScale;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.5f * num3, 0.1f * num3, 0.25f * num3);
				return;
			}
			if (this.type == 521 || this.type == 3455)
			{
				float num4 = (float)Main.rand.Next(90, 111) * 0.01f;
				num4 *= Main.essScale;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.25f * num4, 0.1f * num4, 0.5f * num4);
				return;
			}
			if (this.type == 547 || this.type == 3453)
			{
				float num5 = (float)Main.rand.Next(90, 111) * 0.01f;
				num5 *= Main.essScale;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.5f * num5, 0.3f * num5, 0.05f * num5);
				return;
			}
			if (this.type == 548)
			{
				float num6 = (float)Main.rand.Next(90, 111) * 0.01f;
				num6 *= Main.essScale;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.1f * num6, 0.1f * num6, 0.6f * num6);
				return;
			}
			if (this.type == 575)
			{
				float num7 = (float)Main.rand.Next(90, 111) * 0.01f;
				num7 *= Main.essScale;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.1f * num7, 0.3f * num7, 0.5f * num7);
				return;
			}
			if (this.type == 549)
			{
				float num8 = (float)Main.rand.Next(90, 111) * 0.01f;
				num8 *= Main.essScale;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.1f * num8, 0.5f * num8, 0.2f * num8);
				return;
			}
			if (this.type == 58 || this.type == 1734 || this.type == 1867)
			{
				float num9 = (float)Main.rand.Next(90, 111) * 0.01f;
				num9 *= Main.essScale * 0.5f;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.5f * num9, 0.1f * num9, 0.1f * num9);
				return;
			}
			if (this.type == 184 || this.type == 1735 || this.type == 1868 || this.type == 4143)
			{
				float num10 = (float)Main.rand.Next(90, 111) * 0.01f;
				num10 *= Main.essScale * 0.5f;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.1f * num10, 0.1f * num10, 0.5f * num10);
				return;
			}
			if (this.type == 522)
			{
				float num11 = (float)Main.rand.Next(90, 111) * 0.01f;
				num11 *= Main.essScale * 0.2f;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.5f * num11, 1f * num11, 0.1f * num11);
				return;
			}
			if (this.type == 1332)
			{
				float num12 = (float)Main.rand.Next(90, 111) * 0.01f;
				num12 *= Main.essScale * 0.2f;
				Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1f * num12, 1f * num12, 0.1f * num12);
				return;
			}
			if (this.type == 3456)
			{
				Lighting.AddLight(base.Center, new Vector3(0.2f, 0.4f, 0.5f) * Main.essScale);
				return;
			}
			if (this.type == 3457)
			{
				Lighting.AddLight(base.Center, new Vector3(0.4f, 0.2f, 0.5f) * Main.essScale);
				return;
			}
			if (this.type == 3458)
			{
				Lighting.AddLight(base.Center, new Vector3(0.5f, 0.4f, 0.2f) * Main.essScale);
				return;
			}
			if (this.type == 3459)
			{
				Lighting.AddLight(base.Center, new Vector3(0.2f, 0.2f, 0.5f) * Main.essScale);
				return;
			}
			if (this.type == 501)
			{
				if (Main.rand.Next(6) == 0)
				{
					int num13 = Dust.NewDust(this.position, this.width, this.height, 55, 0f, 0f, 200, this.color, 1f);
					Main.dust[num13].velocity *= 0.3f;
					Main.dust[num13].scale *= 0.5f;
					return;
				}
			}
			else
			{
				if (this.type == 3822)
				{
					Lighting.AddLight(base.Center, 0.1f, 0.3f, 0.1f);
					return;
				}
				if (this.type == 1970)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.75f, 0f, 0.75f);
					return;
				}
				if (this.type == 1972)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0f, 0f, 0.75f);
					return;
				}
				if (this.type == 1971)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.75f, 0.75f, 0f);
					return;
				}
				if (this.type == 1973)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0f, 0.75f, 0f);
					return;
				}
				if (this.type == 1974)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.75f, 0f, 0f);
					return;
				}
				if (this.type == 1975)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.75f, 0.75f, 0.75f);
					return;
				}
				if (this.type == 1976)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.75f, 0.375f, 0f);
					return;
				}
				if (this.type == 2679)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.6f, 0f, 0.6f);
					return;
				}
				if (this.type == 2687)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0f, 0f, 0.6f);
					return;
				}
				if (this.type == 2689)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.6f, 0.6f, 0f);
					return;
				}
				if (this.type == 2683)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0f, 0.6f, 0f);
					return;
				}
				if (this.type == 2685)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.6f, 0f, 0f);
					return;
				}
				if (this.type == 2681)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.6f, 0.6f, 0.6f);
					return;
				}
				if (this.type == 2677)
				{
					Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.6f, 0.375f, 0f);
					return;
				}
				if (this.type == 105)
				{
					if (!this.wet)
					{
						Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1f, 0.95f, 0.8f);
						return;
					}
				}
				else
				{
					if (this.type == 2701)
					{
						Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.7f, 0.65f, 0.55f);
						return;
					}
					if (this.createTile == 4)
					{
						int torchID = this.placeStyle;
						if ((!this.wet && ItemID.Sets.Torches[this.type]) || ItemID.Sets.WaterTorches[this.type])
						{
							Lighting.AddLight(base.Center, torchID);
							return;
						}
					}
					else if (this.type == 3114)
					{
						if (!this.wet)
						{
							Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1f, 0f, 1f);
							return;
						}
					}
					else if (this.type == 1245)
					{
						if (!this.wet)
						{
							Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1f, 0.5f, 0f);
							return;
						}
					}
					else if (this.type == 433)
					{
						if (!this.wet)
						{
							Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.5f * Main.demonTorch + 1f * (1f - Main.demonTorch), 0.3f, 1f * Main.demonTorch + 0.5f * (1f - Main.demonTorch));
							return;
						}
					}
					else
					{
						if (this.type == 523)
						{
							Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.85f, 1.2f, 0.7f);
							return;
						}
						if (this.type == 974)
						{
							if (!this.wet)
							{
								Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.75f, 0.85f, 1.4f);
								return;
							}
						}
						else
						{
							if (this.type == 1333)
							{
								Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1.25f, 1.25f, 0.7f);
								return;
							}
							if (this.type == 4383)
							{
								if (!this.wet)
								{
									Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1.4f, 0.85f, 0.55f);
									return;
								}
							}
							else if (this.type == 5293)
							{
								if (!this.wet)
								{
									Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.25f, 0.65f, 1f);
									return;
								}
							}
							else if (this.type == 5353)
							{
								if (!this.wet)
								{
									Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.81f, 0.72f, 1f);
									return;
								}
							}
							else
							{
								if (this.type == 4384)
								{
									Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.25f, 1.3f, 0.8f);
									return;
								}
								if (this.type == 3045)
								{
									Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), (float)Main.DiscoR / 255f, (float)Main.DiscoG / 255f, (float)Main.DiscoB / 255f);
									return;
								}
								if (this.type == 3004)
								{
									Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.95f, 0.65f, 1.3f);
									return;
								}
								if (this.type == 2274)
								{
									float r = 0.75f;
									float g = 1.3499999f;
									float b = 1.5f;
									if (!this.wet)
									{
										Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), r, g, b);
										return;
									}
								}
								else if (this.type >= 427 && this.type <= 432)
								{
									if (!this.wet)
									{
										float r2 = 0f;
										float g2 = 0f;
										float b2 = 0f;
										int num17 = this.type - 426;
										if (num17 == 1)
										{
											r2 = 0.1f;
											g2 = 0.2f;
											b2 = 1.1f;
										}
										if (num17 == 2)
										{
											r2 = 1f;
											g2 = 0.1f;
											b2 = 0.1f;
										}
										if (num17 == 3)
										{
											r2 = 0f;
											g2 = 1f;
											b2 = 0.1f;
										}
										if (num17 == 4)
										{
											r2 = 0.9f;
											g2 = 0f;
											b2 = 0.9f;
										}
										if (num17 == 5)
										{
											r2 = 1.3f;
											g2 = 1.3f;
											b2 = 1.3f;
										}
										if (num17 == 6)
										{
											r2 = 0.9f;
											g2 = 0.9f;
											b2 = 0f;
										}
										Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), r2, g2, b2);
										return;
									}
								}
								else
								{
									if (this.type == 2777 || this.type == 2778 || this.type == 2779 || this.type == 2780 || this.type == 2781 || this.type == 2760 || this.type == 2761 || this.type == 2762 || this.type == 3524)
									{
										Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.4f, 0.16f, 0.36f);
										return;
									}
									if (this.type == 2772 || this.type == 2773 || this.type == 2774 || this.type == 2775 || this.type == 2776 || this.type == 2757 || this.type == 2758 || this.type == 2759 || this.type == 3523)
									{
										Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0f, 0.36f, 0.4f);
										return;
									}
									if (this.type == 2782 || this.type == 2783 || this.type == 2784 || this.type == 2785 || this.type == 2786 || this.type == 2763 || this.type == 2764 || this.type == 2765 || this.type == 3522)
									{
										Lighting.AddLight((int)((this.position.X + (float)(this.width / 2)) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.5f, 0.25f, 0.05f);
										return;
									}
									if (this.type == 3462 || this.type == 3463 || this.type == 3464 || this.type == 3465 || this.type == 3466 || this.type == 3381 || this.type == 3382 || this.type == 3383 || this.type == 3525)
									{
										Lighting.AddLight(base.Center, 0.3f, 0.3f, 0.2f);
										return;
									}
									if (this.type == 41)
									{
										if (!this.wet)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1f, 0.75f, 0.55f);
											return;
										}
									}
									else if (this.type == 988)
									{
										if (!this.wet)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.35f, 0.65f, 1f);
											return;
										}
									}
									else
									{
										if (this.type == 1326)
										{
											Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 1f, 0.1f, 0.8f);
											return;
										}
										if (this.type == 5335)
										{
											Lighting.AddLight((int)base.Center.X / 16, (int)base.Center.Y / 16, 0.85f, 0.1f, 0.8f);
											return;
										}
										if (this.type >= 5140 && this.type <= 5146)
										{
											float num14 = 1f;
											float num15 = 1f;
											float num16 = 1f;
											switch (this.type)
											{
											case 5140:
												num14 *= 0.9f;
												num15 *= 0.8f;
												num16 *= 0.1f;
												break;
											case 5141:
												num14 *= 0.25f;
												num15 *= 0.1f;
												num16 *= 0f;
												break;
											case 5142:
												num14 *= 0f;
												num15 *= 0.25f;
												num16 *= 0f;
												break;
											case 5143:
												num14 *= 0f;
												num15 *= 0.16f;
												num16 *= 0.34f;
												break;
											case 5144:
												num14 *= 0.3f;
												num15 *= 0f;
												num16 *= 0.17f;
												break;
											case 5145:
												num14 *= 0.3f;
												num15 *= 0f;
												num16 *= 0.35f;
												break;
											case 5146:
												num14 *= (float)Main.DiscoR / 255f;
												num15 *= (float)Main.DiscoG / 255f;
												num16 *= (float)Main.DiscoB / 255f;
												break;
											}
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), num14, num15, num16);
											return;
										}
										if (this.type == 282)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.7f, 1f, 0.8f);
											return;
										}
										if (this.type == 286)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.7f, 0.8f, 1f);
											return;
										}
										if (this.type == 3112)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1f, 0.6f, 0.85f);
											return;
										}
										if (this.type == 4776)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.7f, 0f, 1f);
											return;
										}
										if (this.type == 3002)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 1.05f, 0.95f, 0.55f);
											return;
										}
										if (this.type == 331)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.55f, 0.75f, 0.6f);
											return;
										}
										if (this.type == 183)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.15f, 0.45f, 0.9f);
											return;
										}
										if (this.type == 75)
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.8f, 0.7f, 0.1f);
											if (this.timeSinceItemSpawned % 12 == 0)
											{
												Dust dust = Dust.NewDustPerfect(base.Center + new Vector2(0f, (float)this.height * 0.2f) + Main.rand.NextVector2CircularEdge((float)this.width, (float)this.height * 0.6f) * (0.3f + Main.rand.NextFloat() * 0.5f), 228, new Vector2?(new Vector2(0f, (0f - Main.rand.NextFloat()) * 0.3f - 1.5f)), 127, default(Color), 1f);
												dust.scale = 0.5f;
												dust.fadeIn = 1.1f;
												dust.noGravity = true;
												dust.noLight = true;
												return;
											}
										}
										else if (ItemID.Sets.BossBag[this.type])
										{
											Lighting.AddLight((int)((this.position.X + (float)this.width) / 16f), (int)((this.position.Y + (float)(this.height / 2)) / 16f), 0.4f, 0.4f, 0.4f);
											if (this.timeSinceItemSpawned % 12 == 0)
											{
												Dust dust2 = Dust.NewDustPerfect(base.Center + new Vector2(0f, (float)this.height * -0.1f) + Main.rand.NextVector2CircularEdge((float)this.width * 0.6f, (float)this.height * 0.6f) * (0.3f + Main.rand.NextFloat() * 0.5f), 279, new Vector2?(new Vector2(0f, (0f - Main.rand.NextFloat()) * 0.3f - 1.5f)), 127, default(Color), 1f);
												dust2.scale = 0.5f;
												dust2.fadeIn = 1.1f;
												dust2.noGravity = true;
												dust2.noLight = true;
												dust2.alpha = 0;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}

		// Token: 0x060002BE RID: 702 RVA: 0x00087658 File Offset: 0x00085858
		public static Rectangle GetDrawHitbox(int type, Player user)
		{
			if (Main.dedServ)
			{
				return Rectangle.Empty;
			}
			Main.instance.LoadItem(type);
			if (ItemID.Sets.IsFood[type])
			{
				return TextureAssets.Item[type].Frame(1, 3, 0, 1, 0, 0);
			}
			if (type <= 549)
			{
				if (type == 75)
				{
					return TextureAssets.Item[type].Frame(1, 8, 0, 0, 0, 0);
				}
				if (type - 520 > 1 && type - 547 > 2)
				{
					goto IL_AF;
				}
			}
			else if (type <= 3455)
			{
				if (type != 575 && type - 3453 > 2)
				{
					goto IL_AF;
				}
			}
			else if (type - 3580 > 1 && type - 4068 > 2)
			{
				goto IL_AF;
			}
			return TextureAssets.Item[type].Frame(1, 4, 0, 0, 0, 0);
			IL_AF:
			DrawAnimation drawAnimation = Main.itemAnimations[type];
			if (drawAnimation == null)
			{
				return TextureAssets.Item[type].Frame(1, 1, 0, 0, 0, 0);
			}
			return drawAnimation.GetFrame(TextureAssets.Item[type].Value, -1);
		}

		/// <summary>
		/// <inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)" />
		/// <br /><br /> This particular overload uses two Vector2 to determine the actual spawn position.
		/// </summary>
		/// <returns><inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)" /></returns>
		// Token: 0x060002BF RID: 703 RVA: 0x00087744 File Offset: 0x00085944
		public static int NewItem(IEntitySource source, Vector2 pos, Vector2 randomBox, int Type, int Stack = 1, bool noBroadcast = false, int prefixGiven = 0, bool noGrabDelay = false, bool reverseLookup = false)
		{
			return Item.NewItem(source, (int)pos.X, (int)pos.Y, (int)randomBox.X, (int)randomBox.Y, Type, Stack, noBroadcast, prefixGiven, noGrabDelay, reverseLookup);
		}

		/// <summary>
		/// <inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)" />
		/// <br /><br /> This particular overload uses a Vector2 instead of X and Y to determine the actual spawn position.
		/// </summary>
		/// <returns><inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)" /></returns>
		// Token: 0x060002C0 RID: 704 RVA: 0x00087780 File Offset: 0x00085980
		public static int NewItem(IEntitySource source, Vector2 pos, int Width, int Height, int Type, int Stack = 1, bool noBroadcast = false, int prefixGiven = 0, bool noGrabDelay = false, bool reverseLookup = false)
		{
			return Item.NewItem(source, (int)pos.X, (int)pos.Y, Width, Height, Type, Stack, noBroadcast, prefixGiven, noGrabDelay, reverseLookup);
		}

		/// <summary>
		/// Spawns an item into the game world with the given type and stack size. The X, Y, Width, and Height parameters dictate a rectangle, the item will be spawned centered within that rectangle. Other overloads support passing in a position directly, or just use 0 for Width and Height if the center is passed in a X and Y.
		/// <br /><br /> This method should not be called on multiplayer clients. If you need to spawn items from client code, use <see cref="M:Terraria.Player.QuickSpawnItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32)" /> instead, it handles the multiplayer syncing code needed.
		/// <br /><br /> See the <paramref name="noBroadcast" /> documentation if you need to customize attached ModItem or GlobalItem data prior to syncing.
		/// <br /><br /> The source represents the entity causing this item to spawn. The return value is the index of the spawned Item within the <see cref="F:Terraria.Main.item" /> array. 
		/// </summary>
		/// <param name="source"></param>
		/// <param name="X"></param>
		/// <param name="Y"></param>
		/// <param name="Width"></param>
		/// <param name="Height"></param>
		/// <param name="Type">Either an <see cref="T:Terraria.ID.ItemID" /> entry or <see cref="M:Terraria.ModLoader.ModContent.ItemType``1" />, for example <see cref="F:Terraria.ID.ItemID.IronskinPotion" /> or ModContent.ItemType&lt;MyModItem&gt;()</param>
		/// <param name="Stack">Item stack</param>
		/// <param name="noBroadcast">Controls whether an item spawned on a server is synced using <see cref="M:Terraria.NetMessage.SendData(System.Int32,System.Int32,System.Int32,Terraria.Localization.NetworkText,System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Int32)" /> and <see cref="F:Terraria.ID.MessageID.SyncItem" />. If false, the item will be synced. If true, the calling code can modify the item instance and then sync the item with <see cref="F:Terraria.ID.MessageID.SyncItem" />. Has no effect except on server. NewItem running on multiplayer clients always needs to manually sync, see <see cref="M:Terraria.Player.QuickSpawnItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32)" /> source code for an example.</param>
		/// <param name="pfix"></param>
		/// <param name="noGrabDelay"></param>
		/// <param name="reverseLookup"></param>
		/// <returns>The index of the item within <see cref="F:Terraria.Main.item" /></returns>
		// Token: 0x060002C1 RID: 705 RVA: 0x000877B0 File Offset: 0x000859B0
		public static int NewItem(IEntitySource source, int X, int Y, int Width, int Height, int Type, int Stack = 1, bool noBroadcast = false, int pfix = 0, bool noGrabDelay = false, bool reverseLookup = false)
		{
			return Item.NewItem_Inner(source, X, Y, Width, Height, null, Type, Stack, noBroadcast, pfix, noGrabDelay, reverseLookup);
		}

		// Token: 0x060002C2 RID: 706 RVA: 0x000877D8 File Offset: 0x000859D8
		private static int NewItem_Inner(IEntitySource source, int X, int Y, int Width, int Height, Item itemToClone, int Type, int Stack = 1, bool noBroadcast = false, int pfix = 0, bool noGrabDelay = false, bool reverseLookup = false)
		{
			if (WorldGen.gen)
			{
				return 0;
			}
			if (Main.rand == null)
			{
				Main.rand = new UnifiedRandom();
			}
			if (NPCLoader.blockLoot.Contains(Type) || Item.newItemDisabled)
			{
				return Main.maxItems;
			}
			if (Main.tenthAnniversaryWorld)
			{
				if (Type == 58)
				{
					Type = (int)Main.rand.NextFromList(new short[]
					{
						1734,
						1867,
						58
					});
				}
				if (Type == 184)
				{
					Type = (int)Main.rand.NextFromList(new short[]
					{
						1735,
						1868,
						184
					});
				}
			}
			if (Main.halloween)
			{
				if (Type == 58)
				{
					Type = 1734;
				}
				if (Type == 184)
				{
					Type = 1735;
				}
			}
			if (Main.xMas)
			{
				if (Type == 58)
				{
					Type = 1867;
				}
				if (Type == 184)
				{
					Type = 1868;
				}
			}
			if (itemToClone == null && Type > 0 && Item.cachedItemSpawnsByType[Type] != -1)
			{
				Item.cachedItemSpawnsByType[Type] += Stack;
				return 400;
			}
			Main.item[400] = new Item();
			int num = 400;
			if (Main.netMode != 1)
			{
				num = Item.PickAnItemSlotToSpawnItemOn(reverseLookup, num);
			}
			Main.timeItemSlotCannotBeReusedFor[num] = 0;
			Main.item[num] = new Item();
			Item item = Main.item[num];
			if (itemToClone != null)
			{
				Main.item[num] = itemToClone.Clone();
				item = Main.item[num];
				Type = itemToClone.type;
			}
			else
			{
				item.SetDefaults(Type);
				item.Prefix(pfix);
				item.stack = Stack;
			}
			item.position.X = (float)(X + Width / 2 - item.width / 2);
			item.position.Y = (float)(Y + Height / 2 - item.height / 2);
			item.wet = Collision.WetCollision(item.position, item.width, item.height);
			item.velocity.X = (float)Main.rand.Next(-30, 31) * 0.1f;
			item.velocity.Y = (float)Main.rand.Next(-40, -15) * 0.1f;
			if (Type == 859 || Type == 4743)
			{
				item.velocity *= 0f;
			}
			if (Type == 520 || Type == 521 || (item.type >= 0 && ItemID.Sets.NebulaPickup[item.type]))
			{
				item.velocity.X = (float)Main.rand.Next(-30, 31) * 0.1f;
				item.velocity.Y = (float)Main.rand.Next(-30, 31) * 0.1f;
			}
			item.active = true;
			item.timeSinceItemSpawned = ItemID.Sets.OverflowProtectionTimeOffset[item.type];
			Item.numberOfNewItems++;
			if (ItemSlot.Options.HighlightNewItems && item.type >= 0 && !ItemID.Sets.NeverAppearsAsNewInInventory[item.type])
			{
				item.newAndShiny = true;
			}
			ItemLoader.OnSpawn(item, source);
			if (Main.netMode == 2 && !noBroadcast)
			{
				NetMessage.SendData(21, -1, -1, null, num, (float)noGrabDelay.ToInt(), 0f, 0f, 0, 0, 0);
			}
			else if (Main.netMode == 0)
			{
				item.playerIndexTheItemIsReservedFor = Main.myPlayer;
			}
			return num;
		}

		// Token: 0x060002C3 RID: 707 RVA: 0x00087B18 File Offset: 0x00085D18
		private static int PickAnItemSlotToSpawnItemOn(bool reverseLookup, int nextItem)
		{
			int num = 0;
			int num2 = 400;
			int num3 = 1;
			if (reverseLookup)
			{
				num = 399;
				num2 = -1;
				num3 = -1;
			}
			bool flag = false;
			for (int i = num; i != num2; i += num3)
			{
				if (!Main.item[i].active && Main.timeItemSlotCannotBeReusedFor[i] == 0)
				{
					nextItem = i;
					flag = true;
					break;
				}
			}
			if (!flag)
			{
				int num4 = 0;
				for (int j = 0; j < 400; j++)
				{
					if (Main.timeItemSlotCannotBeReusedFor[j] == 0 && !Main.item[j].instanced && Main.item[j].timeSinceItemSpawned > num4)
					{
						num4 = Main.item[j].timeSinceItemSpawned;
						nextItem = j;
						flag = true;
					}
				}
				if (!flag)
				{
					for (int k = 0; k < 400; k++)
					{
						if (Main.item[k].timeSinceItemSpawned - Main.timeItemSlotCannotBeReusedFor[k] > num4)
						{
							num4 = Main.item[k].timeSinceItemSpawned - Main.timeItemSlotCannotBeReusedFor[k];
							nextItem = k;
						}
					}
				}
			}
			return nextItem;
		}

		// Token: 0x060002C4 RID: 708 RVA: 0x00087C1C File Offset: 0x00085E1C
		public void FindOwner(int whoAmI)
		{
			if (Main.netMode == 1 && this.shimmerTime > 0f)
			{
				this.keepTime = 0;
			}
			if (this.keepTime > 0)
			{
				return;
			}
			int num = this.playerIndexTheItemIsReservedFor;
			this.playerIndexTheItemIsReservedFor = 255;
			bool flag = true;
			if (this.type == 267 && this.ownIgnore != -1)
			{
				flag = false;
			}
			if (this.shimmerTime > 0f)
			{
				this.playerIndexTheItemIsReservedFor = 255;
			}
			else if (flag)
			{
				float num2 = (float)NPC.sWidth;
				for (int i = 0; i < 255; i++)
				{
					if (this.ownIgnore != i)
					{
						Player player = Main.player[i];
						if (player.active)
						{
							Player.ItemSpaceStatus status = player.ItemSpace(Main.item[whoAmI]);
							if (ItemLoader.CanPickup(Main.item[whoAmI], player) && player.CanPullItem(Main.item[whoAmI], status))
							{
								float num3 = Math.Abs(player.position.X + (float)(player.width / 2) - this.position.X - (float)(this.width / 2)) + Math.Abs(player.position.Y + (float)(player.height / 2) - this.position.Y - (float)this.height);
								num3 -= (float)player.GetItemGrabRange(Main.item[whoAmI]);
								if (num2 > num3)
								{
									num2 = num3;
									this.playerIndexTheItemIsReservedFor = i;
								}
							}
						}
					}
				}
			}
			if (this.playerIndexTheItemIsReservedFor != num && ((num == Main.myPlayer && Main.netMode == 1) || (num == 255 && Main.netMode == 2) || (num != 255 && !Main.player[num].active)))
			{
				NetMessage.SendData(21, -1, -1, null, whoAmI, 0f, 0f, 0f, 0, 0, 0);
				if (this.active)
				{
					NetMessage.SendData(22, -1, -1, null, whoAmI, 0f, 0f, 0f, 0, 0, 0);
				}
			}
		}

		// Token: 0x060002C5 RID: 709 RVA: 0x00087E20 File Offset: 0x00086020
		public Item Clone()
		{
			if (Item.cloningDisabled != null)
			{
				throw new Exception(Item.cloningDisabled);
			}
			Item newItem = (Item)base.MemberwiseClone();
			Item newItem3 = newItem;
			ModItem modItem = this.ModItem;
			newItem3.ModItem = ((modItem != null) ? modItem.Clone(newItem) : null);
			Item newItem2 = newItem;
			GlobalItem[] globals = this._globals;
			newItem2._globals = ((globals != null) ? globals.Select(delegate(GlobalItem g)
			{
				if (g == null)
				{
					return null;
				}
				return g.Clone(this, newItem);
			}).ToArray<GlobalItem>() : null);
			return newItem;
		}

		// Token: 0x060002C6 RID: 710 RVA: 0x00087EB4 File Offset: 0x000860B4
		internal Item DeepClone()
		{
			return this.Clone();
		}

		// Token: 0x060002C7 RID: 711 RVA: 0x00087EBC File Offset: 0x000860BC
		internal bool IsTheSameAs(Item compareItem)
		{
			return this.netID == compareItem.netID && this.type == compareItem.type;
		}

		// Token: 0x060002C8 RID: 712 RVA: 0x00087EDC File Offset: 0x000860DC
		internal bool IsNotTheSameAs(Item compareItem)
		{
			return this.netID != compareItem.netID || this.stack != compareItem.stack || this.prefix != compareItem.prefix;
		}

		/// <summary>
		/// Overrides the value of <see cref="P:Terraria.Item.Name" /> for this Item instance. This is used mainly to change the name shown on the item tooltip for recipe group ingredients to "Any RecipeGroupItemNameHere".
		/// <para /> This does not change the actual name of this item when shown elsewhere as text, for example, so it is not a suitable way to permanently change an item name. To do that a <see href="https://github.com/tModLoader/tModLoader/wiki/Localization#overwriting-existing-terraria-keys">localization file entry</see> should be used instead.
		/// </summary>
		/// <param name="name">The new name of this <see cref="T:Terraria.Item" />.</param>
		// Token: 0x060002C9 RID: 713 RVA: 0x00087F0D File Offset: 0x0008610D
		public void SetNameOverride(string name)
		{
			this._nameOverride = name;
		}

		/// <summary>
		/// Clears the overridden value of <see cref="P:Terraria.Item.Name" />.
		/// </summary>
		// Token: 0x060002CA RID: 714 RVA: 0x00087F16 File Offset: 0x00086116
		public void ClearNameOverride()
		{
			this._nameOverride = null;
		}

		// Token: 0x060002CB RID: 715 RVA: 0x00087F20 File Offset: 0x00086120
		public void TurnToAir(bool fullReset = false)
		{
			if (fullReset)
			{
				this.SetDefaults(0);
				return;
			}
			this.type = 0;
			this.stack = 0;
			this.prefix = 0;
			this.netID = 0;
			this.dye = 0;
			this.shoot = 0;
			this.mountType = -1;
			this.active = false;
			this.ModItem = null;
			this._globals = null;
		}

		// Token: 0x060002CC RID: 716 RVA: 0x00087F7E File Offset: 0x0008617E
		public void OnPurchase(Item item)
		{
			if (item.shopCustomPrice != null)
			{
				item.shopSpecialCurrency = -1;
				item.shopCustomPrice = null;
			}
		}

		// Token: 0x060002CD RID: 717 RVA: 0x00087FA0 File Offset: 0x000861A0
		public int GetStoreValue()
		{
			if (this.shopCustomPrice != null)
			{
				return this.shopCustomPrice.Value;
			}
			return this.value;
		}

		// Token: 0x060002CE RID: 718 RVA: 0x00087FC1 File Offset: 0x000861C1
		public void Serialize(BinaryWriter writer, ItemSerializationContext context)
		{
			if (context == ItemSerializationContext.SavingAndLoading)
			{
				writer.Write((this.netID >= (int)ItemID.Count) ? 0 : this.netID);
				writer.Write(this.stack);
				ItemIO.WriteByteVanillaPrefix(this, writer);
			}
		}

		// Token: 0x060002CF RID: 719 RVA: 0x00087FF5 File Offset: 0x000861F5
		public void DeserializeFrom(BinaryReader reader, ItemSerializationContext context)
		{
			if (context == ItemSerializationContext.SavingAndLoading)
			{
				this.netDefaults(reader.ReadInt32());
				this.stack = reader.ReadInt32();
				this.Prefix((int)reader.ReadByte());
			}
			if (this.type >= ItemLoader.ItemCount)
			{
				this.TurnToAir(false);
			}
		}

		// Token: 0x060002D0 RID: 720 RVA: 0x00088033 File Offset: 0x00086233
		public void ResetPrefix()
		{
			if (this.prefix != 0)
			{
				this.prefix = 0;
				this.Refresh(false);
			}
		}

		/// <summary>
		/// Resets the stats of this item while preserving modded data, prefix, stack, and favorited. Used to update the stats of this item to facilitate <see cref="T:Terraria.GameContent.Items.ItemVariants" />. This is called on most items when a player enters a world to ensure that their stats match the variant expected for the world seed.
		/// <para /> If <paramref name="onlyIfVariantChanged" /> is true (it usually is), then the item is only refreshed if <see cref="P:Terraria.Item.Variant" /> and <see cref="M:Terraria.GameContent.Items.ItemVariants.SelectVariant(System.Int32)" /> differ.
		/// </summary>
		/// <param name="onlyIfVariantChanged"></param>
		// Token: 0x060002D1 RID: 721 RVA: 0x0008804C File Offset: 0x0008624C
		public void Refresh(bool onlyIfVariantChanged = true)
		{
			if (!this.IsAir && (!onlyIfVariantChanged || ItemVariants.SelectVariant(this.type) != this.Variant))
			{
				using (MemoryStream ms = new MemoryStream(64))
				{
					ItemIO.Send(this, new BinaryWriter(ms), true, true);
					ms.Position = 0L;
					ItemIO.Receive(this, new BinaryReader(ms), true, true);
				}
			}
		}

		/// <summary>
		/// The ModItem instance attached to this Item. All modded items will have an appropriate instance of the ModItem-inheriting class assigned to this field. Will be null for vanilla items. Can be used to check if an Item is a modded item or not.
		/// <para /> If you need to access members of a specific ModItem class from code outside of the ModItem, you can cast to your class:
		/// <code>
		/// if (item.ModItem is MyItem myItem)
		/// {
		///     myItem.myField = 5;
		/// }
		/// </code>
		/// </summary>
		// Token: 0x1700008E RID: 142
		// (get) Token: 0x060002D2 RID: 722 RVA: 0x000880C0 File Offset: 0x000862C0
		// (set) Token: 0x060002D3 RID: 723 RVA: 0x000880C8 File Offset: 0x000862C8
		public ModItem ModItem { get; internal set; }

		// Token: 0x1700008F RID: 143
		// (get) Token: 0x060002D4 RID: 724 RVA: 0x000880D1 File Offset: 0x000862D1
		int IEntityWithGlobals<GlobalItem>.Type
		{
			get
			{
				return this.type;
			}
		}

		// Token: 0x17000090 RID: 144
		// (get) Token: 0x060002D5 RID: 725 RVA: 0x000880D9 File Offset: 0x000862D9
		public RefReadOnlyArray<GlobalItem> EntityGlobals
		{
			get
			{
				return this._globals;
			}
		}

		// Token: 0x17000091 RID: 145
		// (get) Token: 0x060002D6 RID: 726 RVA: 0x000880E6 File Offset: 0x000862E6
		public EntityGlobalsEnumerator<GlobalItem> Globals
		{
			get
			{
				return new EntityGlobalsEnumerator<GlobalItem>(this);
			}
		}

		/// <summary> Gets the instance of the specified GlobalItem type. This will throw exceptions on failure. </summary>
		/// <exception cref="T:System.Collections.Generic.KeyNotFoundException" />
		/// <exception cref="T:System.IndexOutOfRangeException" />
		// Token: 0x060002D7 RID: 727 RVA: 0x000880EE File Offset: 0x000862EE
		public T GetGlobalItem<T>() where T : GlobalItem
		{
			return GlobalType<GlobalItem>.GetGlobal<T>(this.type, this.EntityGlobals);
		}

		/// <summary> Gets the local instance of the type of the specified GlobalItem instance. This will throw exceptions on failure. </summary>
		/// <exception cref="T:System.Collections.Generic.KeyNotFoundException" />
		/// <exception cref="T:System.NullReferenceException" />
		// Token: 0x060002D8 RID: 728 RVA: 0x00088106 File Offset: 0x00086306
		public T GetGlobalItem<T>(T baseInstance) where T : GlobalItem
		{
			return GlobalType<GlobalItem>.GetGlobal<T>(this.type, this.EntityGlobals, baseInstance);
		}

		/// <summary> Gets the instance of the specified GlobalItem type. </summary>
		// Token: 0x060002D9 RID: 729 RVA: 0x0008811F File Offset: 0x0008631F
		public bool TryGetGlobalItem<T>(out T result) where T : GlobalItem
		{
			return GlobalType<GlobalItem>.TryGetGlobal<T>(this.type, this.EntityGlobals, out result);
		}

		/// <summary> Safely attempts to get the local instance of the type of the specified GlobalItem instance. </summary>
		/// <returns> Whether or not the requested instance has been found. </returns>
		// Token: 0x060002DA RID: 730 RVA: 0x00088138 File Offset: 0x00086338
		public bool TryGetGlobalItem<T>(T baseInstance, out T result) where T : GlobalItem
		{
			return GlobalType<GlobalItem>.TryGetGlobal<T>(this.type, this.EntityGlobals, baseInstance, out result);
		}

		// Token: 0x17000092 RID: 146
		// (get) Token: 0x060002DB RID: 731 RVA: 0x00088152 File Offset: 0x00086352
		// (set) Token: 0x060002DC RID: 732 RVA: 0x0008815A File Offset: 0x0008635A
		public List<Mod> StatsModifiedBy { get; private set; } = new List<Mod>();

		/// <summary>
		/// An additional identifier 
		/// </summary>
		// Token: 0x17000093 RID: 147
		// (get) Token: 0x060002DD RID: 733 RVA: 0x00088163 File Offset: 0x00086363
		// (set) Token: 0x060002DE RID: 734 RVA: 0x0008816B File Offset: 0x0008636B
		public int NetStateVersion { get; private set; }

		/// <summary>
		/// Call this to trigger a re-sync of this item in a player's inventory or equipment in multiplayer.<br />
		/// The item will be sent to the server and other players at the end of the frame (not immediately).<br />
		///             <br />
		/// Has no effect on server-side items or items in remote player's inventories<br />
		/// </summary>
		// Token: 0x060002DF RID: 735 RVA: 0x00088174 File Offset: 0x00086374
		public void NetStateChanged()
		{
			int netStateVersion = this.NetStateVersion;
			this.NetStateVersion = netStateVersion + 1;
		}

		/// <summary>
		/// Dictates whether or not attack speed modifiers on this weapon will actually affect its use time.<br />
		/// Defaults to false, which allows attack speed modifiers to affect use time. Set this to true to prevent this from happening.<br />
		/// Used in vanilla by all melee weapons which shoot a projectile and have <see cref="F:Terraria.Item.noMelee" /> set to false.<para />
		/// Tools should typically set this to true to prevent the tool from mining quicker when the player has attack speed modifiers. By convention tool speed should not be affected by attack speed. They will still attack quicker, but their use time (mine/hammer/axe speed) should not be affected.
		/// </summary>
		// Token: 0x17000094 RID: 148
		// (get) Token: 0x060002E0 RID: 736 RVA: 0x00088191 File Offset: 0x00086391
		// (set) Token: 0x060002E1 RID: 737 RVA: 0x00088199 File Offset: 0x00086399
		public bool attackSpeedOnlyAffectsWeaponAnimation { get; set; }

		/// <summary>
		/// Set to true in SetDefaults to allow this item to receive a prefix on reforge even if maxStack is not 1.
		/// <br>This prevents it from receiving a prefix on craft.</br>
		/// </summary>
		// Token: 0x17000095 RID: 149
		// (get) Token: 0x060002E2 RID: 738 RVA: 0x000881A2 File Offset: 0x000863A2
		// (set) Token: 0x060002E3 RID: 739 RVA: 0x000881AA File Offset: 0x000863AA
		public bool AllowReforgeForStackableItem { get; set; }

		/// <summary>
		/// Similar to useTurn, but only allows turning when an animation starts (eg between swings). Many early-game vanilla swords use this as it makes them clunky and hard to kite with.
		/// <br /> Defaults to <see langword="false" />.
		/// </summary>
		// Token: 0x17000096 RID: 150
		// (get) Token: 0x060002E4 RID: 740 RVA: 0x000881B3 File Offset: 0x000863B3
		// (set) Token: 0x060002E5 RID: 741 RVA: 0x000881BB File Offset: 0x000863BB
		public bool useTurnOnAnimationStart { get; set; }

		/// <summary>
		/// Dictates the amount of times a weapon can be used (shot, etc) each time it animates (is swung, clicked, etc).<br />
		/// Defaults to null.<br />
		/// Used in vanilla by the following:<br />
		/// - BookStaff<br />
		/// - FairyQueenMagicItem<br />
		/// - FairyQueenRangedItem<br />
		/// </summary>
		// Token: 0x17000097 RID: 151
		// (get) Token: 0x060002E6 RID: 742 RVA: 0x000881C4 File Offset: 0x000863C4
		// (set) Token: 0x060002E7 RID: 743 RVA: 0x000881CC File Offset: 0x000863CC
		public int? useLimitPerAnimation { get; set; }

		/// <summary>
		/// Dictates whether or not this item should only consume ammo on its first shot of each use.<br />
		/// Defaults to false.<br />
		/// Used in vanilla by the following:<br />
		/// - Flamethrower<br />
		/// - Elf Melter<br />
		/// </summary>
		// Token: 0x17000098 RID: 152
		// (get) Token: 0x060002E8 RID: 744 RVA: 0x000881D5 File Offset: 0x000863D5
		// (set) Token: 0x060002E9 RID: 745 RVA: 0x000881DD File Offset: 0x000863DD
		public bool consumeAmmoOnFirstShotOnly { get; set; }

		/// <summary>
		/// Dictates whether or not this item should only consume ammo on its last shot of each use.<br />
		/// Defaults to false. <br />
		/// Used in vanilla by the following:<br />
		/// - ClockworkAssaultRifle<br />
		/// - Clentaminator<br />
		/// - FairyQueenRangedItem<br />
		/// </summary>
		// Token: 0x17000099 RID: 153
		// (get) Token: 0x060002EA RID: 746 RVA: 0x000881E6 File Offset: 0x000863E6
		// (set) Token: 0x060002EB RID: 747 RVA: 0x000881EE File Offset: 0x000863EE
		public bool consumeAmmoOnLastShotOnly { get; set; }

		/// <summary>
		/// When enabled and the player is hurt, <see cref="F:Terraria.Player.channel" /> will be set to false
		/// </summary>
		// Token: 0x1700009A RID: 154
		// (get) Token: 0x060002EC RID: 748 RVA: 0x000881F7 File Offset: 0x000863F7
		// (set) Token: 0x060002ED RID: 749 RVA: 0x000881FF File Offset: 0x000863FF
		public bool InterruptChannelOnHurt { get; set; }

		/// <summary>
		/// When enabled and the player is hurt, <see cref="F:Terraria.Player.channel" /> will be set to false, and the item animation will stop immediately
		/// </summary>
		// Token: 0x1700009B RID: 155
		// (get) Token: 0x060002EE RID: 750 RVA: 0x00088208 File Offset: 0x00086408
		// (set) Token: 0x060002EF RID: 751 RVA: 0x00088210 File Offset: 0x00086410
		public bool StopAnimationOnHurt { get; set; }

		/// <summary>
		/// When true, shooting any projectile from this item will make the owner face the projectile. Defaults to true.<br />
		/// The only 2 vanilla items that change this from true to false are the Grand Design and Beam Sword<br />
		/// This is different to <see cref="F:Terraria.Item.useTurn" />. Item.useTurn will prevent the player from changing their direction while the animation is playing if it is set to true.<br />
		/// </summary>
		// Token: 0x1700009C RID: 156
		// (get) Token: 0x060002F0 RID: 752 RVA: 0x00088219 File Offset: 0x00086419
		// (set) Token: 0x060002F1 RID: 753 RVA: 0x00088221 File Offset: 0x00086421
		public bool ChangePlayerDirectionOnShoot { get; set; } = true;

		/// <summary>
		/// The damage type of this Item. Assign to DamageClass.Melee/Ranged/Magic/Summon/Throwing for vanilla classes, or <see cref="M:Terraria.ModLoader.ModContent.GetInstance``1" /> for custom damage types.
		/// </summary>
		// Token: 0x1700009D RID: 157
		// (get) Token: 0x060002F2 RID: 754 RVA: 0x0008822A File Offset: 0x0008642A
		// (set) Token: 0x060002F3 RID: 755 RVA: 0x00088232 File Offset: 0x00086432
		public DamageClass DamageType
		{
			get
			{
				return this._damageClass;
			}
			set
			{
				if (value == null)
				{
					throw new ArgumentException("An item's DamageType cannot be null.");
				}
				this._damageClass = value;
			}
		}

		/// <summary>
		/// The number of defense points that this item can ignore on its own. Cannot be set to negative values. Defaults to 0.
		/// </summary>
		// Token: 0x1700009E RID: 158
		// (get) Token: 0x060002F4 RID: 756 RVA: 0x0008824A File Offset: 0x0008644A
		// (set) Token: 0x060002F5 RID: 757 RVA: 0x00088252 File Offset: 0x00086452
		public int ArmorPenetration
		{
			get
			{
				return this._armorPenetration;
			}
			set
			{
				this._armorPenetration = Math.Max(0, value);
			}
		}

		// Token: 0x060002F6 RID: 758 RVA: 0x00088261 File Offset: 0x00086461
		public TagCompound SerializeData()
		{
			return ItemIO.Save(this);
		}

		/// <inheritdoc cref="M:Terraria.Item.CountsAsClass(Terraria.ModLoader.DamageClass)" />
		// Token: 0x060002F7 RID: 759 RVA: 0x00088269 File Offset: 0x00086469
		public bool CountsAsClass<T>() where T : DamageClass
		{
			return this.CountsAsClass(ModContent.GetInstance<T>());
		}

		/// <summary>
		/// This is used to check if this item benefits from the specified <see cref="T:Terraria.ModLoader.DamageClass" />.
		/// </summary>
		/// <param name="damageClass">The DamageClass to check for in this item.</param>
		/// <returns><see langword="true" /> if this item's <see cref="T:Terraria.ModLoader.DamageClass" /> matches <paramref name="damageClass" />, <see langword="false" /> otherwise</returns>
		// Token: 0x060002F8 RID: 760 RVA: 0x0008827B File Offset: 0x0008647B
		public bool CountsAsClass(DamageClass damageClass)
		{
			return DamageClassLoader.effectInheritanceCache[this.DamageType.Type, damageClass.Type];
		}

		/// <summary>
		/// returns false if and only if type, stack and prefix match<br />
		/// <seealso cref="M:Terraria.Item.IsNetStateDifferent(Terraria.Item)" />
		/// </summary>
		// Token: 0x060002F9 RID: 761 RVA: 0x00088298 File Offset: 0x00086498
		public bool IsNotSameTypePrefixAndStack(Item compareItem)
		{
			return this.type != compareItem.type || this.stack != compareItem.stack || this.prefix != compareItem.prefix;
		}

		/// <summary>
		/// Returns true if these items are different and there is a need to re-sync them
		/// </summary>
		// Token: 0x060002FA RID: 762 RVA: 0x000882C9 File Offset: 0x000864C9
		public bool IsNetStateDifferent(Item compareItem)
		{
			return this.type != compareItem.type || this.stack != compareItem.stack || this.prefix != compareItem.prefix || this.NetStateVersion != compareItem.NetStateVersion;
		}

		/// <summary>
		/// Use this instead of <see cref="M:Terraria.Item.Clone" /> for much faster state snapshotting and change sync detection.<br />
		/// Note!! <see cref="M:Terraria.Item.SetDefaults(System.Int32)" /> will NOT be called. The target item will remain as it was (most likely air), except for type, stack, prefix and netStateVersion
		/// </summary>
		// Token: 0x060002FB RID: 763 RVA: 0x00088308 File Offset: 0x00086508
		public void CopyNetStateTo(Item target)
		{
			target.type = this.type;
			target.stack = this.stack;
			target.prefix = this.prefix;
			target.NetStateVersion = this.NetStateVersion;
		}

		/// <summary>
		/// <inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)" />
		/// <br /><br />This particular overload uses a Rectangle instead of X, Y, Width, and Height to determine the actual spawn position.
		/// </summary>
		/// <returns><inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)" /></returns>
		// Token: 0x060002FC RID: 764 RVA: 0x0008833C File Offset: 0x0008653C
		public static int NewItem(IEntitySource source, Rectangle rectangle, int Type, int Stack = 1, bool noBroadcast = false, int prefixGiven = 0, bool noGrabDelay = false, bool reverseLookup = false)
		{
			return Item.NewItem(source, rectangle.X, rectangle.Y, rectangle.Width, rectangle.Height, Type, Stack, noBroadcast, prefixGiven, noGrabDelay, reverseLookup);
		}

		/// <summary>
		/// <inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)" />
		/// <br /><br />This particular overload uses a Vector2 instead of X, Y, Width, and Height to determine the actual spawn position.
		/// </summary>
		/// <returns><inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)" /></returns>
		// Token: 0x060002FD RID: 765 RVA: 0x00088374 File Offset: 0x00086574
		public static int NewItem(IEntitySource source, Vector2 position, int Type, int Stack = 1, bool noBroadcast = false, int prefixGiven = 0, bool noGrabDelay = false, bool reverseLookup = false)
		{
			return Item.NewItem(source, (int)position.X, (int)position.Y, 0, 0, Type, Stack, noBroadcast, prefixGiven, noGrabDelay, reverseLookup);
		}

		/// <summary>
		/// <inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)" />
		/// <br /><br />This particular overload uses an Item instead of just the item type. All modded data will be preserved.
		/// </summary>
		/// <returns><inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)" /></returns>
		// Token: 0x060002FE RID: 766 RVA: 0x000883A4 File Offset: 0x000865A4
		public static int NewItem(IEntitySource source, int X, int Y, int Width, int Height, Item item, bool noBroadcast = false, bool noGrabDelay = false, bool reverseLookup = false)
		{
			return Item.NewItem_Inner(source, X, Y, Width, Height, item, item.type, item.stack, noBroadcast, item.prefix, noGrabDelay, reverseLookup);
		}

		/// <summary>
		/// <inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)" />
		/// <br /><br />This particular overload uses an Item instead of just the item type. All modded data will be preserved.
		/// <br /><br />This particular overload uses a Vector2 instead of X and Y to determine the actual spawn position.
		/// </summary>
		/// <returns><inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)" /></returns>
		// Token: 0x060002FF RID: 767 RVA: 0x000883DC File Offset: 0x000865DC
		public static int NewItem(IEntitySource source, Vector2 pos, Vector2 randomBox, Item item, bool noBroadcast = false, bool noGrabDelay = false, bool reverseLookup = false)
		{
			return Item.NewItem(source, (int)pos.X, (int)pos.Y, (int)randomBox.X, (int)randomBox.Y, item, noBroadcast, noGrabDelay, reverseLookup);
		}

		/// <summary>
		/// <inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)" />
		/// <br /><br />This particular overload uses an Item instead of just the item type. All modded data will be preserved.
		/// <br /><br />This particular overload uses a Vector2 instead of X and Y to determine the actual spawn position.
		/// </summary>
		/// <returns><inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)" /></returns>
		// Token: 0x06000300 RID: 768 RVA: 0x00088414 File Offset: 0x00086614
		public static int NewItem(IEntitySource source, Vector2 pos, int Width, int Height, Item item, bool noBroadcast = false, bool noGrabDelay = false, bool reverseLookup = false)
		{
			return Item.NewItem(source, (int)pos.X, (int)pos.Y, Width, Height, item, noBroadcast, noGrabDelay, reverseLookup);
		}

		/// <summary>
		/// <inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)" />
		/// <br /><br />This particular overload uses an Item instead of just the item type. All modded data will be preserved.
		/// <br /><br />This particular overload uses a Vector2 instead of X, Y, Width, and Height to determine the actual spawn position.
		/// </summary>
		/// <returns><inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)" /></returns>
		// Token: 0x06000301 RID: 769 RVA: 0x00088440 File Offset: 0x00086640
		public static int NewItem(IEntitySource source, Vector2 position, Item item, bool noBroadcast = false, bool noGrabDelay = false, bool reverseLookup = false)
		{
			return Item.NewItem(source, (int)position.X, (int)position.Y, 0, 0, item, noBroadcast, noGrabDelay, reverseLookup);
		}

		/// <summary>
		/// <inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)" />
		/// <br /><br />This particular overload uses an Item instead of just the item type. All modded data will be preserved.
		/// <br /><br />This particular overload uses a Rectangle instead of X, Y, Width, and Height to determine the actual spawn position.
		/// </summary>
		/// <returns><inheritdoc cref="M:Terraria.Item.NewItem(Terraria.DataStructures.IEntitySource,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)" /></returns>
		// Token: 0x06000302 RID: 770 RVA: 0x0008846C File Offset: 0x0008666C
		public static int NewItem(IEntitySource source, Rectangle rectangle, Item item, bool noBroadcast = false, bool noGrabDelay = false, bool reverseLookup = false)
		{
			return Item.NewItem(source, rectangle.X, rectangle.Y, rectangle.Width, rectangle.Height, item, noBroadcast, noGrabDelay, reverseLookup);
		}

		// Token: 0x06000303 RID: 771 RVA: 0x000884A0 File Offset: 0x000866A0
		private void ApplyItemAnimationCompensationsToVanillaItems()
		{
			this.currentUseAnimationCompensation = 0;
			if (this.type < (int)ItemID.Count && this.autoReuse && !this.noMelee)
			{
				this.useAnimation--;
				this.currentUseAnimationCompensation--;
			}
			if (this.type < (int)ItemID.Count && this.useStyle != 0 && !this.autoReuse && !this.useTurn && this.shoot == 0 && this.damage > 0)
			{
				this.useTurnOnAnimationStart = true;
			}
		}

		// Token: 0x06000304 RID: 772 RVA: 0x0008852A File Offset: 0x0008672A
		private void UndoItemAnimationCompensations()
		{
			this.useAnimation -= this.currentUseAnimationCompensation;
			this.currentUseAnimationCompensation = 0;
		}

		// Token: 0x06000305 RID: 773 RVA: 0x00088548 File Offset: 0x00086748
		private void RestoreMeleeSpeedBehaviorOnVanillaItems()
		{
			bool isTool = this.pick > 0 || this.axe > 0 || this.hammer > 0 || this.type == 4711;
			if (this.type < (int)ItemID.Count && this.melee && ((this.shoot > 0 && !ItemID.Sets.Spears[this.type] && !this.shootsEveryUse) || isTool))
			{
				if (this.noMelee)
				{
					this.DamageType = DamageClass.MeleeNoSpeed;
					return;
				}
				this.attackSpeedOnlyAffectsWeaponAnimation = true;
			}
		}

		/// <summary>
		/// Determines the <see cref="T:Terraria.ModLoader.PrefixCategory">prefix categories</see> of this <see cref="T:Terraria.Item" />.
		/// </summary>
		/// <returns>A <see cref="T:System.Collections.Generic.List`1" /> of every category this <see cref="T:Terraria.Item" /> matches, the <see cref="T:System.Collections.Generic.List`1" /> will be empty if this <see cref="T:Terraria.Item" /> doesn't have any categories.</returns>
		// Token: 0x06000306 RID: 774 RVA: 0x000885D8 File Offset: 0x000867D8
		public List<PrefixCategory> GetPrefixCategories()
		{
			ref List<PrefixCategory> categories = ref PrefixLoader.itemPrefixesByType[this.type];
			if (categories != null)
			{
				return categories;
			}
			categories = new List<PrefixCategory>();
			if (PrefixLegacy.ItemSets.SwordsHammersAxesPicks[this.type] || ItemLoader.MeleePrefix(this))
			{
				categories.Add(PrefixCategory.Melee);
			}
			if (PrefixLegacy.ItemSets.GunsBows[this.type] || ItemLoader.RangedPrefix(this))
			{
				categories.Add(PrefixCategory.Ranged);
			}
			if (PrefixLegacy.ItemSets.MagicAndSummon[this.type] || ItemLoader.MagicPrefix(this))
			{
				categories.Add(PrefixCategory.Magic);
			}
			if (PrefixLegacy.ItemSets.SpearsMacesChainsawsDrillsPunchCannon[this.type] || PrefixLegacy.ItemSets.BoomerangsChakrams[this.type] || PrefixLegacy.ItemSets.ItemsThatCanHaveLegendary2[this.type] || ItemLoader.WeaponPrefix(this) || categories.Count != 0)
			{
				categories.Add(PrefixCategory.AnyWeapon);
			}
			if (this.IsAPrefixableAccessory())
			{
				categories.Add(PrefixCategory.Accessory);
			}
			return categories;
		}

		/// <summary>
		/// A utility property for easily getting or setting the amount of items required for this item's current type to be researched.
		/// <br /> By default, all modded items will have this set to 1. Set to 0 for un-researchable items, such as items that disappear on pickup. The <see href="https://terraria.wiki.gg/wiki/Journey_Mode#Research">Journey Mode Research wiki page</see> lists values for various types of items, use it as a guide for consistency.
		/// <br /> <b>NOTE:</b> The accessed values are stored per item type, not per item instance. You're recommended to only use the setter in load-time hooks, like <see cref="M:Terraria.ModLoader.ModType.SetStaticDefaults" />.
		/// </summary>
		// Token: 0x1700009F RID: 159
		// (get) Token: 0x06000307 RID: 775 RVA: 0x000886B4 File Offset: 0x000868B4
		// (set) Token: 0x06000308 RID: 776 RVA: 0x000886DD File Offset: 0x000868DD
		public int ResearchUnlockCount
		{
			get
			{
				int result;
				if (!CreativeItemSacrificesCatalog.Instance.SacrificeCountNeededByItemId.TryGetValue(this.type, out result))
				{
					return 0;
				}
				return result;
			}
			set
			{
				if (value < 1)
				{
					CreativeItemSacrificesCatalog.Instance.SacrificeCountNeededByItemId.Remove(this.type);
					return;
				}
				CreativeItemSacrificesCatalog.Instance.SacrificeCountNeededByItemId[this.type] = value;
			}
		}

		// Token: 0x04000215 RID: 533
		private string _nameOverride;

		// Token: 0x04000216 RID: 534
		public const int luckPotionDuration1 = 18000;

		// Token: 0x04000217 RID: 535
		public const int luckPotionDuration2 = 36000;

		// Token: 0x04000218 RID: 536
		public const int luckPotionDuration3 = 54000;

		// Token: 0x04000219 RID: 537
		public const int flaskTime = 72000;

		// Token: 0x0400021A RID: 538
		public const int copper = 1;

		// Token: 0x0400021B RID: 539
		public const int silver = 100;

		// Token: 0x0400021C RID: 540
		public const int gold = 10000;

		// Token: 0x0400021D RID: 541
		public const int platinum = 1000000;

		// Token: 0x0400021E RID: 542
		public const int goldCritterRarityColor = 3;

		// Token: 0x0400021F RID: 543
		private readonly int shadowOrbPrice = Item.sellPrice(0, 1, 50, 0);

		// Token: 0x04000220 RID: 544
		private readonly int dungeonPrice = Item.sellPrice(0, 1, 75, 0);

		// Token: 0x04000221 RID: 545
		private readonly int queenBeePrice = Item.sellPrice(0, 2, 0, 0);

		// Token: 0x04000222 RID: 546
		private readonly int hellPrice = Item.sellPrice(0, 2, 50, 0);

		// Token: 0x04000223 RID: 547
		private readonly int eclipsePrice = Item.sellPrice(0, 7, 50, 0);

		// Token: 0x04000224 RID: 548
		private readonly int eclipsePostPlanteraPrice = Item.sellPrice(0, 10, 0, 0);

		// Token: 0x04000225 RID: 549
		private readonly int eclipseMothronPrice = Item.sellPrice(0, 12, 50, 0);

		/// <summary>
		/// The default stack size for stackable items: 9999
		/// </summary>
		// Token: 0x04000226 RID: 550
		public static int CommonMaxStack = 9999;

		/// <summary>
		/// The number of cached item spawns by type.<br />
		/// A value of -1 means that an item type is not being cached.<br />
		/// See <see cref="M:Terraria.Item.StartCachingType(System.Int32)" /> and <see cref="M:Terraria.Item.DropCache(Terraria.DataStructures.IEntitySource,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Boolean)" /> for more info.<br />
		/// Indexed by <see cref="F:Terraria.Item.type" />.Defaults to -1.<br />
		/// </summary>
		// Token: 0x04000227 RID: 551
		public static int[] cachedItemSpawnsByType = ItemID.Sets.Factory.CreateIntSet(-1, Array.Empty<int>());

		/// <summary>
		/// The default cooldown, in ticks, of most healing items.<br />
		/// This value is never changed. For creating a Philosopher's Stone-like item, see <see cref="F:Terraria.Player.pStone" /> or <see cref="F:Terraria.Player.potionDelayTime" />.<br />
		/// </summary>
		// Token: 0x04000228 RID: 552
		public static int potionDelay = 3600;

		/// <summary>
		/// The default cooldown, in ticks, of Restoration Potions.<br />
		/// This value is never changed. For creating a Philosopher's Stone-like item, see <see cref="F:Terraria.Player.pStone" /> or <see cref="F:Terraria.Player.restorationDelayTime" />.<br />
		/// </summary>
		// Token: 0x04000229 RID: 553
		public static int restorationDelay = 2700;

		/// <summary>
		/// The default cooldown, in ticks, of Mushrooms.<br />
		/// This value is never changed. For creating a Philosopher's Stone-like item, see <see cref="F:Terraria.Player.pStone" /> or <see cref="F:Terraria.Player.mushroomDelayTime" />.<br />
		/// </summary>
		// Token: 0x0400022A RID: 554
		public static int mushroomDelay = 1800;

		/// <summary>
		/// If true, categorizes the given item as a quest fish.<br />
		/// Quest fish get a special tooltip, their own category in the Research Menu, and cannot be auto-moved to the Void Vault when picked up.<br />
		/// If you'd like to make a quest fish, see <see cref="M:Terraria.Item.DefaultToQuestFish" />.<br />
		/// If you'd just like to emulate the one-per-inventory behavior of quest fish, see <see cref="F:Terraria.Item.uniqueStack" />.<br />
		/// Defaults to <see langword="false" />.<br />
		/// </summary>
		// Token: 0x0400022B RID: 555
		public bool questItem;

		/// <summary>
		/// An array for converting an <see cref="F:Terraria.Item.headSlot" /> value into a <see cref="F:Terraria.Item.type" /> value.<br />
		/// Indexed by <see cref="F:Terraria.Item.headSlot" />. Defaults to 0.<br />
		/// </summary>
		// Token: 0x0400022C RID: 556
		public static int[] headType = new int[ArmorIDs.Head.Count];

		/// <summary>
		/// An array for converting an <see cref="F:Terraria.Item.bodySlot" /> value into a <see cref="F:Terraria.Item.type" /> value.<br />
		/// Indexed by <see cref="F:Terraria.Item.bodySlot" />. Defaults to 0.<br />
		/// </summary>
		// Token: 0x0400022D RID: 557
		public static int[] bodyType = new int[ArmorIDs.Body.Count];

		/// <summary>
		/// An array for converting an <see cref="F:Terraria.Item.legSlot" /> value into a <see cref="F:Terraria.Item.type" /> value.<br />
		/// Indexed by <see cref="F:Terraria.Item.legSlot" />. Defaults to 0.<br />
		/// </summary>
		// Token: 0x0400022E RID: 558
		public static int[] legType = new int[ArmorIDs.Legs.Count];

		/// <summary>
		/// If true, categorizes the given item type as a staff.<br />
		/// Staffs are held differently when their <see cref="F:Terraria.Item.useStyle" /> is <see cref="F:Terraria.ID.ItemUseStyleID.Shoot" />, but are otherwise no different than any other item.<br />
		/// Indexed by <see cref="F:Terraria.Item.type" />. Defaults to <see langword="false" />.<br />
		/// </summary>
		// Token: 0x0400022F RID: 559
		public static bool[] staff = new bool[(int)ItemID.Count];

		/// <summary>
		/// If true, categorizes the given item type as a claw.<br />
		/// Claws are held differently when their <see cref="F:Terraria.Item.useStyle" /> is <see cref="F:Terraria.ID.ItemUseStyleID.Swing" />, but are otherwise no different than any other item.<br />
		/// Used exclusively by the Bladed Glove in vanilla.<br />
		/// Indexed by <see cref="F:Terraria.Item.type" />. Defaults to <see langword="false" />.<br />
		/// </summary>
		// Token: 0x04000230 RID: 560
		public static bool[] claw = new bool[(int)ItemID.Count];

		/// <summary>
		/// If true, will cause the corresponding flame texture to be drawn while this item is held. Used for torches, candles, .
		/// <br /> Modded items should make a texture file postfixed by "_Flame" to autoload the flame texture. For example, ExampleTorch in ExampleMod has both ExampleTorch.png and ExampleTorch_Flame.png.
		/// <br /> Defaults to <see langword="false" />.
		/// </summary>
		// Token: 0x04000231 RID: 561
		public bool flame;

		/// <summary>
		/// If true, then the given item will show all placed wires and actuators when held.<br />
		/// This item will also be grouped with other items with <c>mech</c> set to <see langword="true" /> when the inventory is sorted.<br />
		/// Defaults to <see langword="false" />.<br />
		/// </summary>
		// Token: 0x04000232 RID: 562
		public bool mech;

		/// <summary>
		/// The delay, in ticks, before players can pick up this item.<br />
		/// Usually set to 100 (approximately 1.666... seconds) whenever an item is dropped.<br />
		/// Set to 0 whenever an item drops from a projectile.<br />
		/// </summary>
		// Token: 0x04000233 RID: 563
		public int noGrabDelay;

		/// <summary>
		/// If true, then this item is currently being grabbed by a player.<br />
		/// Items being grabbed by the player cannot combine with nearby items, be picked up by enemies, burn in lava, or despawn.<br />
		/// </summary>
		// Token: 0x04000234 RID: 564
		public bool beingGrabbed;

		/// <summary>
		/// A value that increases every tick an item is in the world.<br />
		/// Defaults to the value in <see cref="F:Terraria.ID.ItemID.Sets.OverflowProtectionTimeOffset" /> when an item is created, and increases by <see cref="F:Terraria.ID.ItemID.Sets.ItemSpawnDecaySpeed" /> every tick.<br />
		/// When creating new items, items with a high <c>timeSinceItemSpawned</c> value will be replaced if no empty item slots are available.<br />
		/// </summary>
		// Token: 0x04000235 RID: 565
		public int timeSinceItemSpawned;

		/// <summary>
		/// The numerical ID of the item this item consumes when used.<br />
		/// If greater than 0, this item cannot be used unless the player has the item type <c>tileWand</c> is set to. The item also gains a counter for said item type.<br />
		/// Defaults to -1.<br />
		/// </summary>
		// Token: 0x04000236 RID: 566
		public int tileWand = -1;

		/// <summary>
		/// If true, then this item is in the local player's armor slots.<br />
		/// This causes the item to gain the set bonus tooltip if <see cref="F:Terraria.Player.setBonus" /> isn't an empty string.<br />
		/// Defaults to <see langword="false" />.<br />
		/// </summary>
		// Token: 0x04000237 RID: 567
		public bool wornArmor;

		/// <summary>
		/// The context in which this item's tooltip is being drawn.<br />
		/// See <see cref="T:Terraria.UI.ItemSlot.Context" /> for more details.<br />
		/// Defaults to -1.<br />
		/// </summary>
		// Token: 0x04000238 RID: 568
		public int tooltipContext = -1;

		/// <summary>
		/// The numerical ID of the armor shader in <see cref="F:Terraria.Graphics.Shaders.GameShaders.Armor" /> this item activates when worn in a dye slot.<br />
		/// If greater than 0, then this item can be equipped into dye slots.<br />
		/// Defaults to 0.<br />
		/// </summary>
		// Token: 0x04000239 RID: 569
		public int dye;

		/// <summary>
		/// The numerical value this item adds to a player's fishing skill when held.<br />
		/// If greater than 0, categorizes this item as a fishing pole.<br />
		/// Fishing poles can be placed into weapon racks, have a counter for the bait the player is carrying, and are held out when a bobber is active.<br />
		/// Defaults to 0.<br />
		/// </summary>
		// Token: 0x0400023A RID: 570
		public int fishingPole = 1;

		/// <summary>
		/// The numerical value this item adds to a player's fishing skill when used as bait.<br />
		/// If greater than 0, categorizes this item as bait.<br />
		/// Bait can be put into ammo slots and is consumed when fishing.<br />
		/// The higher the value of <c>bait</c>, the lower the chance the bait is consumed.<br />
		/// Defaults to 0.<br />
		/// </summary>
		// Token: 0x0400023B RID: 571
		public int bait;

		/// <summary>
		/// The additional distance, in pixels, that coins may be grabbed from if the player has the Gold Ring or its upgrades (<see cref="F:Terraria.Player.goldRing" />).<br />
		/// Applies to <see cref="F:Terraria.ID.ItemID.CopperCoin" />, <see cref="F:Terraria.ID.ItemID.SilverCoin" />, <see cref="F:Terraria.ID.ItemID.GoldCoin" />, and <see cref="F:Terraria.ID.ItemID.PlatinumCoin" />.<br />
		/// </summary>
		// Token: 0x0400023C RID: 572
		public static int coinGrabRange = 350;

		/// <summary>
		/// The additional distance, in pixels, that mana stars may be grabbed from if the player has the Celestial Magnet or its upgrades (<see cref="F:Terraria.Player.manaMagnet" />).<br />
		/// Applies to <see cref="F:Terraria.ID.ItemID.Star" />, <see cref="F:Terraria.ID.ItemID.SoulCake" />, and <see cref="F:Terraria.ID.ItemID.SugarPlum" />.<br />
		/// </summary>
		// Token: 0x0400023D RID: 573
		public static int manaGrabRange = 300;

		/// <summary>
		/// The additional distance, in pixels, that mana stars may be grabbed from if the player has consumed a Heartreach Potion (<see cref="F:Terraria.Player.lifeMagnet" />).<br />
		/// Applies to <see cref="F:Terraria.ID.ItemID.Heart" />, <see cref="F:Terraria.ID.ItemID.CandyApple" />, and <see cref="F:Terraria.ID.ItemID.CandyCane" />.<br />
		/// </summary>
		// Token: 0x0400023E RID: 574
		public static int lifeGrabRange = 250;

		/// <summary>
		/// The additional distance, in pixels, that items may be grabbed from if the player has equipped a Treasure Magnet (<see cref="F:Terraria.Player.treasureMagnet" />).<br />
		/// </summary>
		// Token: 0x0400023F RID: 575
		public static int treasureGrabRange = 150;

		/// <summary>
		/// The numerical ID of the NPC that this item creates when used.<br />
		/// Mainly used for caught critters as items so that they can be released into the world.
		/// </summary>
		// Token: 0x04000240 RID: 576
		public int makeNPC;

		/// <summary>
		/// If true, then the given item's effects only function in Expert Mode or higher (<see cref="P:Terraria.Main.expertMode" />).<br />
		/// Specifically, any equipped, Expert-only accessory will not update, any Expert-only minecart will not be used when riding minecart tracks, and an 'X' will be drawn over the item when equipped.<br />
		/// Unused in vanilla.<br />
		/// </summary>
		// Token: 0x04000241 RID: 577
		public bool expertOnly;

		/// <summary>
		/// If true, then the given item is automatically given the Expert rarity, causing its name to be drawn in rainbow text.<br />
		/// It also adds the "Expert" tooltip. To use the Expert rarity without adding this tooltip, see <see cref="F:Terraria.ID.ItemRarityID.Expert" />.<br />
		/// </summary>
		// Token: 0x04000242 RID: 578
		public bool expert;

		/// <summary>
		/// If true, then the given item's effects only function in Master Mode or higher (<see cref="P:Terraria.Main.masterMode" />).<br />
		/// Specifically, any equipped, Master-only accessory will not update, any Master-only minecart will not be used when riding minecart tracks, and an 'X' will be drawn over the item when equipped.<br />
		/// Unused in vanilla.<br />
		/// </summary>
		// Token: 0x04000243 RID: 579
		public bool masterOnly;

		/// <summary>
		/// If true, then the given item is automatically given the Master rarity, causing its name to be drawn in red-orange text.<br />
		/// It also adds the "Master" tooltip. To use the Master rarity without adding this tooltip, see <see cref="F:Terraria.ID.ItemRarityID.Master" />.<br />
		/// </summary>
		// Token: 0x04000244 RID: 580
		public bool master;

		/// <summary>
		/// If true, then the given item is being sold in a shop.<br />
		/// Shop items display their price. See <see cref="F:Terraria.Item.value" />.<br />
		/// </summary>
		// Token: 0x04000245 RID: 581
		public bool isAShopItem;

		/// <summary>
		/// The numerical ID of the hair shader in <see cref="F:Terraria.Graphics.Shaders.GameShaders.Hair" /> this item will apply to the player when used.<br />
		/// If greater than -1, then this item is a hair dye.<br />
		/// Defaults to -1.<br />
		/// </summary>
		// Token: 0x04000246 RID: 582
		public int hairDye = -1;

		/// <summary>
		/// The numerical ID of the paint applied by this item when used with a paint brush or paint roller.<br />
		/// For conversion into a shader index, see <see cref="M:Terraria.Main.ConvertPaintIdToTileShaderIndex(System.Int32,System.Boolean,System.Boolean)" />.<br />
		/// For more details regarding paint, see <see cref="P:Terraria.Tile.TileColor" /> and <see cref="P:Terraria.Tile.WallColor" />.<br />
		/// Defaults to 0.<br />
		/// </summary>
		// Token: 0x04000247 RID: 583
		public byte paint;

		// Token: 0x04000248 RID: 584
		public byte paintCoating;

		/// <summary>
		/// If true, then the given item is instanced per-client.<br />
		/// Instanced items only appear on the client they were spawned on and are less likely to be replaced if a new item is spawned.<br />
		/// Instanced items do not exist on servers.<br />
		/// Vanilla uses this field for treasure bags and Defender Medals. tModLoader automatically handles this for modded treasure bags.<br />
		/// If you would like to make an instanced item, see any one of the following for examples:<br />
		/// - <see cref="M:Terraria.NPC.DropItemInstanced(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Boolean)" /><br />
		/// - <see cref="M:Terraria.GameContent.ItemDropRules.CommonCode.DropItemLocalPerClientAndSetNPCMoneyTo0(Terraria.NPC,System.Int32,System.Int32,System.Boolean)" /><br />
		/// - <see cref="F:Terraria.ID.MessageID.InstancedItem" /><br />
		/// Defaults to <see langword="false" />.<br />
		/// </summary>
		// Token: 0x04000249 RID: 585
		public bool instanced;

		// Token: 0x0400024A RID: 586
		public int ownIgnore = -1;

		// Token: 0x0400024B RID: 587
		public int ownTime;

		// Token: 0x0400024C RID: 588
		public int keepTime;

		// Token: 0x0400024D RID: 589
		public int timeLeftInWhichTheItemCannotBeTakenByEnemies;

		/// <summary>
		/// The Item ID of this item. The Item ID is a unique number assigned to each Item loaded into the game. This will be equal to either an <see cref="T:Terraria.ID.ItemID" /> entry or <see cref="M:Terraria.ModLoader.ModContent.ItemType``1" />, for example <see cref="F:Terraria.ID.ItemID.IronskinPotion" /> or ModContent.ItemType&lt;MyModItem&gt;(). To check if an Item instance is a specific Item, check <c>Item.type == ItemID.VanillaItemHere</c> or <c>Item.type == ModContent.ItemType&lt;ModdedItemHere&gt;()</c> in an <see langword="if" /> statement. 
		/// </summary>
		// Token: 0x0400024E RID: 590
		public int type;

		/// <summary>
		/// If true, then the given item is favorited.<br />
		/// Favorited items cannot be dropped, automatically moved into chests, placed in any kind of item rack, sold, trashed, or sorted.<br />
		/// Favorited items can still be dropped if the player has no inventory space and will still drop on death on Mediumcore or higher difficulties.<br />
		/// An item becomes unfavorited if removed from the player's inventory, including if the item is move to any equipment slot.<br />
		/// Defaults to <see langword="false" />.<br />
		/// </summary>
		// Token: 0x0400024F RID: 591
		public bool favorited;

		/// <summary>
		/// Assign to an <see cref="T:Terraria.ID.ItemHoldStyleID" /> value to give this item a specific animation while the player is not using the item, but the item is currently selected. Leave as 0 and use <see cref="M:Terraria.ModLoader.ModItem.HoldStyle(Terraria.Player,Microsoft.Xna.Framework.Rectangle)" /> hook to implement a custom animation.
		/// <br /> Defaults to <see cref="F:Terraria.ID.ItemHoldStyleID.None" />.
		/// </summary>
		// Token: 0x04000250 RID: 592
		public int holdStyle;

		/// <summary>
		/// Assign to an <see cref="T:Terraria.ID.ItemUseStyleID" /> value to give this item a specific animation while in use. Leave as 0 and use <see cref="M:Terraria.ModLoader.ModItem.UseStyle(Terraria.Player,Microsoft.Xna.Framework.Rectangle)" /> hook to implement a custom animation.
		/// <br /> Defaults to <see cref="F:Terraria.ID.ItemUseStyleID.None" />.
		/// </summary>
		// Token: 0x04000251 RID: 593
		public int useStyle;

		/// <summary>
		/// Used for items that have special behavior when the attack button is held.
		/// <br /> Defaults to <see langword="false" />.
		/// </summary>
		// Token: 0x04000252 RID: 594
		public bool channel;

		/// <summary>
		/// Whether the item is an accessory.
		/// <br /> Defaults to <see langword="false" />.
		/// </summary>
		// Token: 0x04000253 RID: 595
		public bool accessory;

		/// <summary>
		/// The time span of the using animation for the item in ticks. This is independent of the time it takes for the item to actually be used and potentially autoReused again. For weapons it is recommended to be the same as <see cref="F:Terraria.Item.useTime" /> as this is only the animation.
		/// <br /> Blocks use 15. Default value is 100. Terraria runs at 60 frames per second, so 15 is 1/4th of a second.
		/// </summary>
		// Token: 0x04000254 RID: 596
		public int useAnimation;

		/// <summary>
		/// The time span of using the item in ticks. This is independent of the time it takes for the item animation to finish. 
		/// <br /> Blocks use 10. Default value is 100.
		/// <br /> Weapons usually have equal <see cref="F:Terraria.Item.useAnimation" /> and useTime, unequal values for these two results in multiple attacks per click. See <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Content/Items/Weapons/ExampleGun.cs#L105">ExampleGun.cs's Clockwork Assault Rifle example</see> for an example of that.
		/// </summary>
		// Token: 0x04000255 RID: 597
		public int useTime;

		/// <summary>
		/// The current stack of the item. <see cref="F:Terraria.Item.maxStack" /> indicates the max possible stack.
		/// </summary>
		// Token: 0x04000256 RID: 598
		public int stack;

		/// <summary>
		/// The maximum number of items that can be contained within a single stack. <see cref="F:Terraria.Item.stack" /> indicates the current stack size.
		/// <br /> Defaults to 1.
		/// </summary>
		// Token: 0x04000257 RID: 599
		public int maxStack;

		/// <summary>
		/// The Pickaxe power of this item. For example, <c>Item.pick = 50;</c> will appear as 50% Pickaxe Power in the tooltip.
		/// <br /> The <see href="https://terraria.wiki.gg/wiki/Pickaxes">Pickaxes wiki page</see> is a good resource for finding a suitable value.
		/// <br /> Defaults to 0.
		/// </summary>
		// Token: 0x04000258 RID: 600
		public int pick;

		/// <summary>
		/// The Axe power of this item. The Axe power percentage shown to the user is five times this value, so adjust accordingly. For example, <c>Item.axe = 9;</c> will appear as 45% Axe Power in the tooltip.
		/// <br /> The <see href="https://terraria.wiki.gg/wiki/Axes">Axes wiki page</see> is a good resource for finding a suitable value.
		/// <br /> Defaults to 0.
		/// </summary>
		// Token: 0x04000259 RID: 601
		public int axe;

		/// <summary>
		/// The Hammer power of this item. For example, <c>Item.hammer = 70;</c> will appear as 70% Hammer Power in the tooltip.
		/// <br /> The <see href="https://terraria.wiki.gg/wiki/Hammers">Hammers wiki page</see> is a good resource for finding a suitable value.
		/// <br /> Defaults to 0.
		/// </summary>
		// Token: 0x0400025A RID: 602
		public int hammer;

		/// <summary>
		/// Additional tile range provided by this tool or tile. Copper Pickaxe has a value of -1, reducing the range. Chain uses 3 to allow the tile to be placed from farther away than normal tiles.
		/// <br /> Defaults to 0.
		/// </summary>
		// Token: 0x0400025B RID: 603
		public int tileBoost;

		/// <summary>
		/// The ID of the tile this item places on use. Either a <see cref="T:Terraria.ID.TileID" /> entry or <see cref="M:Terraria.ModLoader.ModContent.TileType``1" />, for example <see cref="F:Terraria.ID.TileID.WorkBenches" /> or ModContent.ItemType&lt;ExampleWorkbench&gt;()
		/// <br /> Defaults to -1.
		/// </summary>
		// Token: 0x0400025C RID: 604
		public int createTile = -1;

		/// <summary>
		/// The ID of the wall this item places on use. Either a <see cref="T:Terraria.ID.WallID" /> entry or <see cref="M:Terraria.ModLoader.ModContent.WallType``1" />, for example <see cref="F:Terraria.ID.WallID.TopazGemspark" /> or ModContent.ItemType&lt;ExampleWall&gt;()
		/// <br /> Defaults to -1.
		/// </summary>
		// Token: 0x0400025D RID: 605
		public int createWall = -1;

		/// <summary>
		/// The style of the tile being placed. Used for tiles that have a different look depending on the item used to place them.
		/// <br /> The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Tile#multiple-styles">Basic Tile guide</see> explains more about this concept.
		/// <br /> Defaults to 0.
		/// </summary>
		// Token: 0x0400025E RID: 606
		public int placeStyle;

		/// <summary>
		/// The base damage inflicted by this item. The <see href="https://terraria.wiki.gg/wiki/List_of_weapons">List of weapons wiki page</see> can be a useful guide for deciding on a value.
		/// <br /> Use <see cref="M:Terraria.ModLoader.ModItem.ModifyWeaponDamage(Terraria.Player,Terraria.ModLoader.StatModifier@)" /> for dynamic damage values.
		/// <br /> Defaults to -1.
		/// </summary>
		// Token: 0x0400025F RID: 607
		public int damage;

		/// <summary>
		/// The force of the knock back. Max value is 20. The <see href="https://terraria.wiki.gg/wiki/Knockback">Knockback wiki page</see> has info on existing values. The <see href="https://terraria.wiki.gg/wiki/List_of_weapons">List of weapons wiki page</see> can also be a useful guide for deciding on a value.
		/// <br /> Use <see cref="M:Terraria.ModLoader.ModItem.ModifyWeaponKnockback(Terraria.Player,Terraria.ModLoader.StatModifier@)" /> for dynamic knockback values.
		/// <br /> Defaults to 0f.
		/// </summary>
		// Token: 0x04000260 RID: 608
		public float knockBack;

		/// <summary>
		/// The amount of health this item restores on use.
		/// <br /> Use <see cref="M:Terraria.ModLoader.ModItem.GetHealLife(Terraria.Player,System.Boolean,System.Int32@)" /> for dynamic health restoring values.
		/// <br /> Defaults to 0.
		/// </summary>
		// Token: 0x04000261 RID: 609
		public int healLife;

		/// <summary>
		/// The amount of mana this item restores on use.
		/// <br /> Use <see cref="M:Terraria.ModLoader.ModItem.GetHealMana(Terraria.Player,System.Boolean,System.Int32@)" /> for dynamic mana restoring values.
		/// <br /> Defaults to 0.
		/// </summary>
		// Token: 0x04000262 RID: 610
		public int healMana;

		/// <summary>
		/// If true, this item will inflict potion sickness on use. Also determines whether the item cannot be used when the player has potion sickness, and if the item can be used with the Quick Heal key.
		/// <br /> Defaults to <see langword="false" />.
		/// </summary>
		// Token: 0x04000263 RID: 611
		public bool potion;

		/// <summary>
		/// Whether the item is consumed after use. If consumed, the item stack will decrease by 1. Modders can use the <see cref="M:Terraria.ModLoader.ModItem.ConsumeItem(Terraria.Player)" /> hook to dynamically decide if the item should be consumed. Modders can use <see cref="M:Terraria.ModLoader.ModItem.OnConsumeItem(Terraria.Player)" /> to act on an item being consumed.
		/// <br /> Defaults to <see langword="false" />.
		/// </summary>
		// Token: 0x04000264 RID: 612
		public bool consumable;

		/// <summary>
		/// Whether the item is in continuous use while the mouse button is held down.
		/// <br /> Defaults to <see langword="false" />.
		/// </summary>
		// Token: 0x04000265 RID: 613
		public bool autoReuse;

		/// <summary>
		/// Whether the player can turn around while the using animation of this item is happening.
		/// <br /> Defaults to <see langword="false" />.
		/// </summary>
		// Token: 0x04000266 RID: 614
		public bool useTurn;

		/// <summary>
		/// Draws the item sprite with a colored tint. Gel and Sharkfin use this to spawn different colored items from the same ItemID. <c>NetMessage.SendData(88, ...)</c> needs to be used to sync this if not done in SetDefaults.
		/// <br /> Defaults to <see cref="P:Microsoft.Xna.Framework.Color.Transparent" />
		/// </summary>
		// Token: 0x04000267 RID: 615
		public Color color;

		/// <summary>
		/// Set to a value from 0 to 255 to control how transparent the item will appear when drawn. Gel uses 175, gemstone items use 50. 0 is opaque, and 255 is transparent. Note that this is the opposite of how alpha is typically expressed in computer graphics. Use <see cref="M:Terraria.ModLoader.ModItem.GetAlpha(Microsoft.Xna.Framework.Color)" /> for more control over the resulting color.
		/// <br /> Defaults to 0.
		/// </summary>
		// Token: 0x04000268 RID: 616
		public int alpha;

		/// <summary>
		/// The index in <see cref="F:Terraria.GameContent.TextureAssets.GlowMask" /> of this item's glow mask, or <c>-1</c> if this item doesn't have a glow mask.
		/// <br /> Currently does not support modded content.
		/// <br /> Defaults to <c>-1</c>.
		/// </summary>
		// Token: 0x04000269 RID: 617
		public short glowMask;

		/// <summary>
		/// The size multiplier of the item's sprite while the item is being used. Also increases range for melee weapons.
		/// <br /> Use <see cref="M:Terraria.ModLoader.ModItem.ModifyItemScale(Terraria.Player,System.Single@)" /> for dynamic scale values.
		/// <br /> Defaults to 1f.
		/// </summary>
		// Token: 0x0400026A RID: 618
		public float scale = 1f;

		/// <summary>
		/// The sound this item makes when used. Set this to an existing <see cref="T:Terraria.ID.SoundID" /> entry or assign to a new <see cref="T:Terraria.Audio.SoundStyle" /> for a custom sound.
		/// <br /> The <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Sounds">Basic Sounds Guide</see> teaches how to find existing sounds to use, how to use custom sounds, and how to customize the playback properties of the sounds. 
		/// <br /> For example <c>Item.UseSound = SoundID.Item1;</c> can be used for the sword swing sound.
		/// <br /> Defaults to null.
		/// </summary>
		// Token: 0x0400026B RID: 619
		public SoundStyle? UseSound;

		/// <summary>
		/// The amount of defense this item provides when equipped, either as an accessory or armor.
		/// <br /> Defaults to 0.
		/// </summary>
		// Token: 0x0400026C RID: 620
		public int defense;

		// Token: 0x0400026D RID: 621
		public int headSlot = -1;

		// Token: 0x0400026E RID: 622
		public int bodySlot = -1;

		// Token: 0x0400026F RID: 623
		public int legSlot = -1;

		// Token: 0x04000270 RID: 624
		public int handOnSlot = -1;

		// Token: 0x04000271 RID: 625
		public int handOffSlot = -1;

		// Token: 0x04000272 RID: 626
		public int backSlot = -1;

		// Token: 0x04000273 RID: 627
		public int frontSlot = -1;

		// Token: 0x04000274 RID: 628
		public int shoeSlot = -1;

		// Token: 0x04000275 RID: 629
		public int waistSlot = -1;

		// Token: 0x04000276 RID: 630
		public int wingSlot = -1;

		// Token: 0x04000277 RID: 631
		public int shieldSlot = -1;

		// Token: 0x04000278 RID: 632
		public int neckSlot = -1;

		// Token: 0x04000279 RID: 633
		public int faceSlot = -1;

		// Token: 0x0400027A RID: 634
		public int balloonSlot = -1;

		// Token: 0x0400027B RID: 635
		public int beardSlot = -1;

		// Token: 0x0400027C RID: 636
		public int stringColor;

		// Token: 0x0400027D RID: 637
		public ItemTooltip ToolTip;

		// Token: 0x0400027E RID: 638
		public string BestiaryNotes;

		// Token: 0x0400027F RID: 639
		public int playerIndexTheItemIsReservedFor = 255;

		/// <summary>
		/// Indicates the rarity of an item. Assign to a <see cref="T:Terraria.ID.ItemRarityID" /> value. Vanilla values range from -1 to 13.
		/// <br /> Items with <see cref="F:Terraria.ID.ItemRarityID.White" /> rarity will burn in lava unless <see cref="F:Terraria.ID.ItemID.Sets.IsLavaImmuneRegardlessOfRarity" /> is used.
		/// <br /> Modded rarities can be assigned by: <c>Item.rare = ModContent.RarityType&lt;ExampleModRarity&gt;();</c>
		/// <br /> The <see href="https://terraria.wiki.gg/wiki/Rarity">Rarity wiki page</see> has guidelines for deciding on a suitable rarity.
		/// <br /> Defaults to <see cref="F:Terraria.ID.ItemRarityID.White" />
		/// </summary>
		// Token: 0x04000280 RID: 640
		public int rare;

		/// <summary>
		/// The ID of the projectile that is fired by this item on use. Either a <see cref="T:Terraria.ID.ProjectileID" /> entry or <see cref="M:Terraria.ModLoader.ModContent.ProjectileType``1" />, for example <see cref="F:Terraria.ID.ProjectileID.FireArrow" /> or ModContent.ProjectileType&lt;MyModProjectile&gt;()
		/// <br /> If this weapon uses <see cref="F:Terraria.Item.useAmmo" />, then this value is ignored as the projectile will be decided by the ammo item, but shoot should still be 10 by convention.
		/// <br /> Defaults to 0.
		/// </summary>
		// Token: 0x04000281 RID: 641
		public int shoot;

		/// <summary>
		/// The velocity in pixels the projectile fired by this item will have. If your weapon is shooting projectiles and they are stationary, change this to something like 10f and adjust as needed. Throwing Knife uses 10f.
		/// <para /> Actual velocity depends on the projectile being fired, most notably the <see cref="F:Terraria.Projectile.extraUpdates" /> value of that projectile. For example, <see cref="F:Terraria.ID.ItemID.LaserRifle" /> has <c>shootSpeed = 17f;</c> and shoots <see cref="F:Terraria.ID.ProjectileID.PurpleLaser" />, which has <c>extraUpdates = 4;</c>, meaning 5 total updates per game tick. This projectile will have an effective velocity of 85 (because <c>17 * (1 + 4) == 85</c>). The <see href="https://terraria.wiki.gg/wiki/Velocity">Shoot Speed wiki page</see> has more information and examples of how these values work together in practice.
		/// <para /> For weapons using ammo, the weapon's shootSpeed is added to the ammo's shootSpeed, so adjust ammo and weapon shootSpeed values accordingly. Consult the <see href="https://terraria.wiki.gg/wiki/Ammunition_items">Ammunition items wiki page</see> and wiki pages for the weapons that shoot various ammo for suitable values to use.
		/// <para /> Held projectiles like Vortex Beater use shootSpeed to determine how far away from the player to hold the projectile.
		/// <para /> Defaults to 0f.
		/// </summary>
		// Token: 0x04000282 RID: 642
		public float shootSpeed;

		/// <summary>
		/// The Ammo ID this item belongs to. Weapons with <see cref="F:Terraria.Item.useAmmo" /> set to the same AmmoID will consume this item as ammo. See the <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Ammo">Ammo Guide</see> for more information.
		/// <br /> Defaults to <see cref="F:Terraria.ID.AmmoID.None" />.
		/// </summary>
		// Token: 0x04000283 RID: 643
		public int ammo = AmmoID.None;

		/// <summary>
		/// If true and the item is ammo (sets <see cref="F:Terraria.Item.ammo" /> to something), the item will not count as ammo for certain ammo-specific behavior, such as the tooltip mentioning the item is ammo, or ammo items going into ammo slots first when picked up. Used for the Coin items, Ale, and Sand Blocks.
		/// <br /> Defaults to <see langword="false" />.
		/// </summary>
		// Token: 0x04000284 RID: 644
		public bool notAmmo;

		/// <summary>
		/// The Ammo ID this weapon will consume. Ammo items with <see cref="F:Terraria.Item.ammo" /> set to this same AmmoID will be consumed as ammo for this weapon to be used. See the <see href="https://github.com/tModLoader/tModLoader/wiki/Basic-Ammo">Ammo Guide</see> for more information.
		/// <br /> Defaults to <see cref="F:Terraria.ID.AmmoID.None" />.
		/// </summary>
		// Token: 0x04000285 RID: 645
		public int useAmmo = AmmoID.None;

		/// <summary>
		/// The value to add to <see cref="F:Terraria.Player.lifeRegen" /> of the equipping player.
		/// <br /> Defaults to <c>0</c>.
		/// </summary>
		// Token: 0x04000286 RID: 646
		public int lifeRegen;

		/// <summary> <strong>Unused.</strong> </summary>
		// Token: 0x04000287 RID: 647
		public int manaIncrease;

		/// <summary>
		/// Indicates that an item in a shop can only be bought once, meaning it is an item that has been sold to the NPC shop by the player.
		/// </summary>
		// Token: 0x04000288 RID: 648
		public bool buyOnce;

		/// <summary>
		/// The amount of mana this item consumes on use.
		/// <br /> Use <see cref="M:Terraria.ModLoader.ModItem.ModifyManaCost(Terraria.Player,System.Single@,System.Single@)" /> for dynamic mana costs.
		/// <br /> Defaults to 0.
		/// </summary>
		// Token: 0x04000289 RID: 649
		public int mana;

		/// <summary>
		/// If true, the item's sprite will not be visible while the item is in use.
		/// <br /> Defaults to <see langword="false" />.
		/// </summary>
		// Token: 0x0400028A RID: 650
		public bool noUseGraphic;

		/// <summary>
		/// If true, the item's using animation will not deal damage. Set to true on most weapons that aren't swords.
		/// <br /> Defaults to <see langword="false" />.
		/// </summary>
		// Token: 0x0400028B RID: 651
		public bool noMelee;

		// Token: 0x0400028C RID: 652
		public int timeSinceTheItemHasBeenReservedForSomeone;

		/// <summary>
		/// The number of copper coins this item is worth (aka, cost to buy from a merchant). Setting it to <c>10462</c> would mean the item cost 1 gold, 4 silver, and 62 copper. The sell price of an item is one fifth of its value. Value also influences reforge costs with the goblin tinkerer.
		/// <br /> For convenience, you can also use the <see cref="M:Terraria.Item.buyPrice(System.Int32,System.Int32,System.Int32,System.Int32)" /> method for setting values: <c>Item.value = Item.buyPrice(0, 1, 4, 62);</c> You can also use the <see cref="M:Terraria.Item.sellPrice(System.Int32,System.Int32,System.Int32,System.Int32)" /> method if you would rather think about an item's value the other way. Both <c>Item.buyPrice(0, 0, 10, 55)</c> and <c>Item.sellPrice(0, 0, 2, 11)</c> would set the value to <c>1055</c>.
		/// <para /> If custom purchase prices disconnected from the item value are needed, <see cref="F:Terraria.Item.shopCustomPrice" /> should be set for the item instance added to a shop entry.
		/// </summary>
		// Token: 0x0400028D RID: 653
		public int value;

		// Token: 0x0400028E RID: 654
		public bool buy;

		// Token: 0x0400028F RID: 655
		public bool social;

		/// <summary>
		/// If <see langword="true" />, this item is a vanity item.
		/// <br /> Vanity items can't receive prefixes and have a special vanity tooltip.
		/// </summary>
		// Token: 0x04000290 RID: 656
		public bool vanity;

		/// <summary>
		/// Indicates that an item should show the material tooltip. Typically this means that the item is used in at least 1 recipe. Automatically assigned.
		/// </summary>
		// Token: 0x04000291 RID: 657
		public bool material;

		/// <summary>
		/// If true, the item won't be drawn while the holding player is wet. The player will also not be in the animation frame corresponding to the item's holdStyle
		/// <br /> Defaults to <see langword="false" />.
		/// </summary>
		// Token: 0x04000292 RID: 658
		public bool noWet;

		/// <summary>
		/// The Buff ID of the buff given by this item on use. To have a potion give multiple buffs, assign one buff here and in <see cref="M:Terraria.ModLoader.ModItem.UseItem(Terraria.Player)" />, call <see cref="M:Terraria.Player.AddBuff(System.Int32,System.Int32,System.Boolean,System.Boolean)" /> for the remaining buffs you wish to give.
		/// <br /> Make sure to set <see cref="F:Terraria.Item.buffTime" /> as well or the buff will instantly disappear.
		/// <br /> Defaults to 0.
		/// </summary>
		// Token: 0x04000293 RID: 659
		public int buffType;

		/// <summary>
		/// The duration in ticks of the buff given by this item on use. There are 60 ticks per second, multiply the number of seconds by 60. For example, a buff lasting 8 minutes would use a value of either <c>28800</c> or <c>8*60*60</c>. 
		/// <br /> Make sure to set <see cref="F:Terraria.Item.buffType" /> as well. 
		/// <br /> Defaults to 0.
		/// </summary>
		// Token: 0x04000294 RID: 660
		public int buffTime;

		/// <summary>
		/// Specifies which mount to equip when the item is used. Assign to <c>ModContent.MountType&lt;ModdedMountHere&gt;()</c>. See <see href="https://github.com/tModLoader/tModLoader/blob/1.4.4/ExampleMod/Content/Items/ExampleMountItem.cs">ExampleMountItem.cs</see> for an example.
		/// <br /> Defaults to -1.
		/// </summary>
		// Token: 0x04000295 RID: 661
		public int mountType = -1;

		// Token: 0x04000296 RID: 662
		public bool cartTrack;

		/// <summary>
		/// Players cannot pick up a <c>uniqueStack</c> item if they have an item with the same <see cref="F:Terraria.Item.type" /> in their inventory.<br />
		/// This does not apply to equipped items, nor does it apply to items held with the mouse (<see cref="F:Terraria.Main.mouseItem" />).<br />
		/// This field only prevents picking items up: Multiple <c>uniqueStack</c> items may still be transferred into the player's inventory from chests.<br />
		/// Defaults to <see langword="false" />.<br />
		/// </summary>
		// Token: 0x04000297 RID: 663
		public bool uniqueStack;

		/// <summary>
		/// The numerical ID of the special currency this item is bought using.<br />
		/// To make an item bought using Defender Medals, set this to <see cref="F:Terraria.ID.CustomCurrencyID.DefenderMedals" />.<br />
		/// See <see href="https://github.com/tModLoader/tModLoader/search?q=ExampleCustomCurrencyId">ExampleCustomCurrencyId</see> for an example of creating and using a custom currency.<br />
		/// Must be used with <see cref="F:Terraria.Item.shopCustomPrice" /> assigning the price in terms of this custom currency.<br />
		/// Defaults to -1, which means an item is bought using coins.<br />
		/// </summary>
		// Token: 0x04000298 RID: 664
		public int shopSpecialCurrency = -1;

		/// <summary>
		/// If not <see langword="null" />, the custom value of the given item when being bought from a shop.<br />
		/// Used for assigning a non-default price to an item in shops.<br />
		/// Can be used with <see cref="F:Terraria.Item.shopSpecialCurrency" /> to assign a price in terms of a custom currency instead of coins.<br />
		/// To get the raw price of an item, use <see cref="M:Terraria.Item.GetStoreValue" />.<br />
		/// To get the price of an item after discounts, use <see cref="M:Terraria.Player.GetItemExpectedPrice(Terraria.Item,System.Int64@,System.Int64@)" />.
		/// <para /> Be careful of setting a custom price far below the normal <see cref="F:Terraria.Item.value" />, it could result in an infinite money exploit. For example, with maximum happiness and a discount card, a custom price 0.44 times the regular value would allow the user to sell the item for just barely more than it was bought for after leaving and reentering the world.
		/// <para /> Defaults to <see langword="null" />.
		/// </summary>
		// Token: 0x04000299 RID: 665
		public int? shopCustomPrice;

		// Token: 0x0400029A RID: 666
		public bool shootsEveryUse;

		/// <summary>
		/// If true, then the player won't swing the arm and item while attempting to use this item unless hovering over an Extractinator tile. This helps avoid misleading the player into thinking an item should do something when used. This and other properties common to extractinator-only items can be set using <see cref="M:Terraria.Item.MakeUsableWithChlorophyteExtractinator" />.
		/// </summary>
		// Token: 0x0400029B RID: 667
		public bool chlorophyteExtractinatorConsumable;

		/// <summary>
		/// If true, the given item is categorized as a Dungeon Defenders 2 summon item.<br />
		/// DD2 summon items get a counter for how much Etherian Mana is in the player's inventory.<br />
		/// <b>This field being set does not make the item consume Etherian Mana.</b> Etherian Mana consumption is handled manually per-type.<br />
		/// Defaults to <see langword="false" />.<br />
		/// </summary>
		// Token: 0x0400029C RID: 668
		public bool DD2Summon;

		// Token: 0x0400029D RID: 669
		public int netID;

		/// <summary>
		/// The base critical chance for this item. Remember that the player has a base crit chance of 4.
		/// <br /> Use <see cref="M:Terraria.ModLoader.ModItem.ModifyWeaponCrit(Terraria.Player,System.Single@)" /> for dynamic crit values.
		/// <br /> Defaults to 0
		/// </summary>
		// Token: 0x0400029E RID: 670
		public int crit;

		/// <summary>
		/// The current prefix applied to this item. Either a <see cref="T:Terraria.ID.PrefixID" /> entry or <see cref="M:Terraria.ModLoader.ModContent.PrefixType``1" />. Prefixes are assigned by calling the <see cref="M:Terraria.Item.Prefix(System.Int32)" /> method.
		/// <br /> Defaults to 0.
		/// </summary>
		// Token: 0x0400029F RID: 671
		public int prefix;

		// Token: 0x040002A0 RID: 672
		public bool sentry;

		/// <summary>
		/// A delay in frames added at the end of the using animation for the item, during which the player wont be able to use any items.
		/// <para /> One notable example usage is the <see cref="F:Terraria.ID.ItemID.ClockworkAssaultRifle" /> with a value of 14, but most other usages are smaller values like 2.
		/// <para /> Defaults to 0.
		/// </summary>
		// Token: 0x040002A1 RID: 673
		public int reuseDelay;

		// Token: 0x040002A2 RID: 674
		public bool newAndShiny;

		/// <summary>
		/// If <see langword="true" />, this item has vanity effects even though it doesn't use equipment slots.
		/// <br /> Unused in vanilla, as the system it was used for was removed in 1.4.4.
		/// </summary>
		// Token: 0x040002A3 RID: 675
		[Old("This is used to allow items to be discerned as vanity even if they didn't have visual slots to poll against")]
		public bool hasVanityEffects;

		// Token: 0x040002A4 RID: 676
		private const int foodWidth = 22;

		// Token: 0x040002A5 RID: 677
		private const int foodHeight = 22;

		// Token: 0x040002A6 RID: 678
		public const int WALL_PLACEMENT_USETIME = 7;

		// Token: 0x040002A7 RID: 679
		public static int numberOfNewItems = 0;

		// Token: 0x040002A8 RID: 680
		public bool shimmered;

		// Token: 0x040002A9 RID: 681
		public float shimmerTime;

		// Token: 0x040002AB RID: 683
		public static readonly Func<TagCompound, Item> DESERIALIZER = new Func<TagCompound, Item>(ItemIO.Load);

		// Token: 0x040002AC RID: 684
		private int currentUseAnimationCompensation;

		// Token: 0x040002AE RID: 686
		internal GlobalItem[] _globals;

		// Token: 0x040002BA RID: 698
		private DamageClass _damageClass = DamageClass.Default;

		// Token: 0x040002BB RID: 699
		private int _armorPenetration;

		// Token: 0x040002BC RID: 700
		[ThreadStatic]
		private static string cloningDisabled = null;

		// Token: 0x040002BD RID: 701
		[ThreadStatic]
		private static bool newItemDisabled = false;

		// Token: 0x02000795 RID: 1941
		[CompilerFeatureRequired("RefStructs")]
		public ref struct DisableCloneMethod
		{
			// Token: 0x06004E90 RID: 20112 RVA: 0x0067519F File Offset: 0x0067339F
			public DisableCloneMethod(string msg)
			{
				Item.cloningDisabled = msg;
			}

			// Token: 0x06004E91 RID: 20113 RVA: 0x006751A7 File Offset: 0x006733A7
			public void Dispose()
			{
				Item.cloningDisabled = null;
			}
		}

		// Token: 0x02000796 RID: 1942
		[CompilerFeatureRequired("RefStructs")]
		internal ref struct DisableNewItemMethod
		{
			// Token: 0x06004E92 RID: 20114 RVA: 0x006751AF File Offset: 0x006733AF
			internal DisableNewItemMethod(bool disabled)
			{
				Item.newItemDisabled = disabled;
			}

			// Token: 0x06004E93 RID: 20115 RVA: 0x006751B7 File Offset: 0x006733B7
			internal void Dispose()
			{
				Item.newItemDisabled = false;
			}
		}
	}
}
